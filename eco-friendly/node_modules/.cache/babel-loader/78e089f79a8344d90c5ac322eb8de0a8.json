{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport Polyline from './Polyline.js';\nimport EffectLine from './EffectLine.js';\nimport * as vec2 from 'zrender/lib/core/vector.js';\n\nvar EffectPolyline =\n/** @class */\nfunction (_super) {\n  __extends(EffectPolyline, _super);\n\n  function EffectPolyline() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._lastFrame = 0;\n    _this._lastFramePercent = 0;\n    return _this;\n  } // Override\n\n\n  EffectPolyline.prototype.createLine = function (lineData, idx, seriesScope) {\n    return new Polyline(lineData, idx, seriesScope);\n  };\n\n  ; // Override\n\n  EffectPolyline.prototype._updateAnimationPoints = function (symbol, points) {\n    this._points = points;\n    var accLenArr = [0];\n    var len = 0;\n\n    for (var i = 1; i < points.length; i++) {\n      var p1 = points[i - 1];\n      var p2 = points[i];\n      len += vec2.dist(p1, p2);\n      accLenArr.push(len);\n    }\n\n    if (len === 0) {\n      this._length = 0;\n      return;\n    }\n\n    for (var i = 0; i < accLenArr.length; i++) {\n      accLenArr[i] /= len;\n    }\n\n    this._offsets = accLenArr;\n    this._length = len;\n  };\n\n  ; // Override\n\n  EffectPolyline.prototype._getLineLength = function () {\n    return this._length;\n  };\n\n  ; // Override\n\n  EffectPolyline.prototype._updateSymbolPosition = function (symbol) {\n    var t = symbol.__t;\n    var points = this._points;\n    var offsets = this._offsets;\n    var len = points.length;\n\n    if (!offsets) {\n      // Has length 0\n      return;\n    }\n\n    var lastFrame = this._lastFrame;\n    var frame;\n\n    if (t < this._lastFramePercent) {\n      // Start from the next frame\n      // PENDING start from lastFrame ?\n      var start = Math.min(lastFrame + 1, len - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (offsets[frame] <= t) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, len - 2);\n    } else {\n      for (frame = lastFrame; frame < len; frame++) {\n        if (offsets[frame] > t) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, len - 2);\n    }\n\n    var p = (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]);\n    var p0 = points[frame];\n    var p1 = points[frame + 1];\n    symbol.x = p0[0] * (1 - p) + p * p1[0];\n    symbol.y = p0[1] * (1 - p) + p * p1[1];\n    var tx = p1[0] - p0[0];\n    var ty = p1[1] - p0[1];\n    symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n    this._lastFrame = frame;\n    this._lastFramePercent = t;\n    symbol.ignore = false;\n  };\n\n  ;\n  return EffectPolyline;\n}(EffectLine);\n\nexport default EffectPolyline;","map":{"version":3,"names":["__extends","Polyline","EffectLine","vec2","EffectPolyline","_super","_this","apply","arguments","_lastFrame","_lastFramePercent","prototype","createLine","lineData","idx","seriesScope","_updateAnimationPoints","symbol","points","_points","accLenArr","len","i","length","p1","p2","dist","push","_length","_offsets","_getLineLength","_updateSymbolPosition","t","__t","offsets","lastFrame","frame","start","Math","min","p","p0","x","y","tx","ty","rotation","atan2","PI","ignore"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/echarts/lib/chart/helper/EffectPolyline.js"],"sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Polyline from './Polyline.js';\r\nimport EffectLine from './EffectLine.js';\r\nimport * as vec2 from 'zrender/lib/core/vector.js';\r\n\r\nvar EffectPolyline =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(EffectPolyline, _super);\r\n\r\n  function EffectPolyline() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this._lastFrame = 0;\r\n    _this._lastFramePercent = 0;\r\n    return _this;\r\n  } // Override\r\n\r\n\r\n  EffectPolyline.prototype.createLine = function (lineData, idx, seriesScope) {\r\n    return new Polyline(lineData, idx, seriesScope);\r\n  };\r\n\r\n  ; // Override\r\n\r\n  EffectPolyline.prototype._updateAnimationPoints = function (symbol, points) {\r\n    this._points = points;\r\n    var accLenArr = [0];\r\n    var len = 0;\r\n\r\n    for (var i = 1; i < points.length; i++) {\r\n      var p1 = points[i - 1];\r\n      var p2 = points[i];\r\n      len += vec2.dist(p1, p2);\r\n      accLenArr.push(len);\r\n    }\r\n\r\n    if (len === 0) {\r\n      this._length = 0;\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < accLenArr.length; i++) {\r\n      accLenArr[i] /= len;\r\n    }\r\n\r\n    this._offsets = accLenArr;\r\n    this._length = len;\r\n  };\r\n\r\n  ; // Override\r\n\r\n  EffectPolyline.prototype._getLineLength = function () {\r\n    return this._length;\r\n  };\r\n\r\n  ; // Override\r\n\r\n  EffectPolyline.prototype._updateSymbolPosition = function (symbol) {\r\n    var t = symbol.__t;\r\n    var points = this._points;\r\n    var offsets = this._offsets;\r\n    var len = points.length;\r\n\r\n    if (!offsets) {\r\n      // Has length 0\r\n      return;\r\n    }\r\n\r\n    var lastFrame = this._lastFrame;\r\n    var frame;\r\n\r\n    if (t < this._lastFramePercent) {\r\n      // Start from the next frame\r\n      // PENDING start from lastFrame ?\r\n      var start = Math.min(lastFrame + 1, len - 1);\r\n\r\n      for (frame = start; frame >= 0; frame--) {\r\n        if (offsets[frame] <= t) {\r\n          break;\r\n        }\r\n      } // PENDING really need to do this ?\r\n\r\n\r\n      frame = Math.min(frame, len - 2);\r\n    } else {\r\n      for (frame = lastFrame; frame < len; frame++) {\r\n        if (offsets[frame] > t) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      frame = Math.min(frame - 1, len - 2);\r\n    }\r\n\r\n    var p = (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]);\r\n    var p0 = points[frame];\r\n    var p1 = points[frame + 1];\r\n    symbol.x = p0[0] * (1 - p) + p * p1[0];\r\n    symbol.y = p0[1] * (1 - p) + p * p1[1];\r\n    var tx = p1[0] - p0[0];\r\n    var ty = p1[1] - p0[1];\r\n    symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\r\n    this._lastFrame = frame;\r\n    this._lastFramePercent = t;\r\n    symbol.ignore = false;\r\n  };\r\n\r\n  ;\r\n  return EffectPolyline;\r\n}(EffectLine);\r\n\r\nexport default EffectPolyline;"],"mappings":"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"},"metadata":{},"sourceType":"module"}