{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../core/maybe.js\";\nimport { I as r } from \"./mat4f64.js\";\nimport { ForwardLinearDepth as o } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { Offset as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";\nimport { ShaderOutput as i } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SliceDraw as l } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as s } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { InstancedDoublePrecision as t } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";\nimport { NormalAttribute as n, NormalAttributeType as d } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { PositionAttribute as c } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";\nimport { SymbolColor as m } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";\nimport { TextureCoordinateAttribute as g } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexColor as u } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";\nimport { VertexNormal as p } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";\nimport { VerticalOffset as v } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";\nimport { DefaultMaterialAuxiliaryPasses as h } from \"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";\nimport { ComputeNormalTexture as b } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";\nimport { EvaluateAmbientOcclusion as f } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as w, addAmbientBoostFactor as x, addLightingGlobalFactor as y } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { addMainLightIntensity as C } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";\nimport { multipassTerrainTest as T } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { Normals as j } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";\nimport { PhysicallyBasedRendering as L } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";\nimport { PhysicallyBasedRenderingParameters as M, PBRMode as O } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadShadowMapPass as P, ReadShadowMapDraw as $ } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { colorTextureUV as A, normalTextureUV as N, emissiveTextureUV as S, occlusionTextureUV as E, metallicRoughnessTextureUV as V } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";\nimport { VisualVariables as _ } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";\nimport { symbolAlphaCutoff as D } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { DiscardOrAdjustAlphaPass as F } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";\nimport { MixExternalColor as U } from \"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";\nimport { addProjViewLocalOrigin as B, addCameraPosition as I } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float3PassUniform as R } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as z } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as W } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as G } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4PassUniform as k } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as q } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as H } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { TransparencyPassType as J } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nimport { VertexAttribute as K } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\n\nfunction Q(Q) {\n  const X = new q(),\n        {\n    vertex: Y,\n    fragment: Z,\n    varyings: ee\n  } = X;\n  return B(Y, Q), X.include(c), ee.add(\"vpos\", \"vec3\"), X.include(_, Q), X.include(t, Q), X.include(v, Q), Q.hasColorTextureTransform && X.include(A), Q.output !== i.Color && Q.output !== i.Alpha || (Q.hasNormalTextureTransform && X.include(N), Q.hasEmissionTextureTransform && X.include(S), Q.hasOcclusionTextureTransform && X.include(E), Q.hasMetallicRoughnessTextureTransform && X.include(V), I(Y, Q), X.include(n, Q), X.include(s, Q), Q.normalType === d.Attribute && Q.offsetBackfaces && X.include(a), X.include(b, Q), X.include(p, Q), Q.instancedColor && X.attributes.add(K.INSTANCECOLOR, \"vec4\"), ee.add(\"localvpos\", \"vec3\"), X.include(g, Q), X.include(o, Q), X.include(m, Q), X.include(u, Q), Y.uniforms.add(new z(\"externalColor\", e => e.externalColor)), ee.add(\"vcolorExt\", \"vec4\"), Q.hasMultipassTerrain && ee.add(\"depth\", \"float\"), Q.hasModelTransformation && Y.uniforms.add(new k(\"model\", o => e(o.modelTransformation) ? o.modelTransformation : r)), Y.code.add(G`\n      void main(void) {\n        forwardNormalizedVertexColor();\n        vcolorExt = externalColor;\n        ${Q.instancedColor ? \"vcolorExt *= instanceColor;\" : \"\"}\n        vcolorExt *= vvColor();\n        vcolorExt *= getSymbolColor();\n        forwardColorMixMode();\n\n        if (vcolorExt.a < ${G.float(D)}) {\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        } else {\n          vpos = calculateVPos();\n          localvpos = vpos - view[3].xyz;\n          vpos = subtractOrigin(vpos);\n          ${Q.normalType === d.Attribute ? G`vNormalWorld = dpNormal(vvLocalNormal(normalModel()));` : \"\"}\n          vpos = addVerticalOffset(vpos, localOrigin);\n          ${Q.hasVertexTangents ? \"vTangent = dpTransformVertexTangent(tangent);\" : \"\"}\n          gl_Position = transformPosition(proj, view, ${Q.hasModelTransformation ? \"model,\" : \"\"} vpos);\n          ${Q.normalType === d.Attribute && Q.offsetBackfaces ? \"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\" : \"\"}\n        }\n\n        ${Q.hasMultipassTerrain ? \"depth = (view * vec4(vpos, 1.0)).z;\" : \"\"}\n        forwardLinearDepth();\n        forwardTextureCoordinates();\n        ${Q.hasColorTextureTransform ? G`forwardColorUV();` : \"\"}\n        ${Q.hasNormalTextureTransform ? G`forwardNormalUV();` : \"\"}\n        ${Q.hasEmissionTextureTransform ? G`forwardEmissiveUV();` : \"\"}\n        ${Q.hasOcclusionTextureTransform ? G`forwardOcclusionUV();` : \"\"}\n        ${Q.hasMetallicRoughnessTextureTransform ? G`forwardMetallicRoughnessUV();` : \"\"}\n      }\n    `)), Q.output === i.Alpha && (X.include(l, Q), X.include(F, Q), X.include(T, Q), Z.uniforms.add([new W(\"opacity\", e => e.opacity), new W(\"layerOpacity\", e => e.layerOpacity)]), Q.hasColorTexture && Z.uniforms.add(new H(\"tex\", e => e.texture)), Z.include(U), Z.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Q.hasMultipassTerrain ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\"}\n        ${Q.hasColorTexture ? G`\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform ? G`colorUV` : G`vuv0`});\n                ${Q.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\"}\n                discardOrAdjustAlpha(texColor);` : G`vec4 texColor = vec4(1.0);`}\n        ${Q.hasVertexColors ? G`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));` : G`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        gl_FragColor = vec4(opacity_);\n      }\n    `)), Q.output === i.Color && (X.include(l, Q), X.include(w, Q), X.include(f, Q), X.include(F, Q), X.include(Q.instancedDoublePrecision ? P : $, Q), X.include(T, Q), I(Z, Q), Z.uniforms.add([Y.uniforms.get(\"localOrigin\"), new R(\"ambient\", e => e.ambient), new R(\"diffuse\", e => e.diffuse), new W(\"opacity\", e => e.opacity), new W(\"layerOpacity\", e => e.layerOpacity)]), Q.hasColorTexture && Z.uniforms.add(new H(\"tex\", e => e.texture)), X.include(M, Q), X.include(L, Q), Z.include(U), X.include(j, Q), x(Z), y(Z), C(Z), Z.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Q.hasMultipassTerrain ? \"terrainDepthTest(gl_FragCoord, depth);\" : \"\"}\n        ${Q.hasColorTexture ? G`\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform ? G`colorUV` : G`vuv0`});\n                ${Q.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\"}\n                discardOrAdjustAlpha(texColor);` : G`vec4 texColor = vec4(1.0);`}\n        shadingParams.viewDirection = normalize(vpos - cameraPosition);\n        ${Q.normalType === d.ScreenDerivative ? G`\n                vec3 normal = screenDerivativeNormal(localvpos);` : G`\n                shadingParams.normalView = vNormalWorld;\n                vec3 normal = shadingNormal(shadingParams);`}\n        ${Q.pbrMode === O.Normal ? \"applyPBRFactors();\" : \"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        vec3 posWorld = vpos + localOrigin;\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\n        float shadow = ${Q.receiveShadows ? \"readShadowMap(vpos, linearDepth)\" : Q.spherical ? \"lightingGlobalFactor * (1.0 - additionalAmbientScale)\" : \"0.0\"};\n\n        vec3 matColor = max(ambient, diffuse);\n        ${Q.hasVertexColors ? G`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));` : G`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${Q.hasNormalTexture ? G`\n                mat3 tangentSpace = ${Q.hasVertexTangents ? \"computeTangentSpace(normal);\" : \"computeTangentSpace(normal, vpos, vuv0);\"}\n                vec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);` : G`vec3 shadingNormal = normal;`}\n        vec3 normalGround = ${Q.spherical ? G`normalize(posWorld);` : G`vec3(0.0, 0.0, 1.0);`}\n\n        ${Q.snowCover ? G`\n                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\n                albedo = mix(albedo, vec3(1), snow);\n                shadingNormal = mix(shadingNormal, normal, snow);\n                ssao = mix(ssao, 1.0, snow);` : \"\"}\n\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n\n        ${Q.pbrMode === O.Normal || Q.pbrMode === O.Schematic ? G`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${Q.snowCover ? G`\n                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\n                        emission = mix(emission, vec3(0.0), snow);` : \"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);` : G`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${Q.transparencyPassType === J.Color ? G`gl_FragColor = premultiplyAlpha(gl_FragColor);` : \"\"}\n      }\n    `)), X.include(h, Q), X;\n}\n\nconst X = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: Q\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { X as D, Q as b };","map":{"version":3,"names":["isSome","e","I","r","ForwardLinearDepth","o","Offset","a","ShaderOutput","i","SliceDraw","l","Transform","s","InstancedDoublePrecision","t","NormalAttribute","n","NormalAttributeType","d","PositionAttribute","c","SymbolColor","m","TextureCoordinateAttribute","g","VertexColor","u","VertexNormal","p","VerticalOffset","v","DefaultMaterialAuxiliaryPasses","h","ComputeNormalTexture","b","EvaluateAmbientOcclusion","f","EvaluateSceneLighting","w","addAmbientBoostFactor","x","addLightingGlobalFactor","y","addMainLightIntensity","C","multipassTerrainTest","T","Normals","j","PhysicallyBasedRendering","L","PhysicallyBasedRenderingParameters","M","PBRMode","O","ReadShadowMapPass","P","ReadShadowMapDraw","$","colorTextureUV","A","normalTextureUV","N","emissiveTextureUV","S","occlusionTextureUV","E","metallicRoughnessTextureUV","V","VisualVariables","_","symbolAlphaCutoff","D","DiscardOrAdjustAlphaPass","F","MixExternalColor","U","addProjViewLocalOrigin","B","addCameraPosition","Float3PassUniform","R","Float4PassUniform","z","FloatPassUniform","W","glsl","G","Matrix4PassUniform","k","ShaderBuilder","q","Texture2DPassUniform","H","TransparencyPassType","J","VertexAttribute","K","Q","X","vertex","Y","fragment","Z","varyings","ee","include","add","hasColorTextureTransform","output","Color","Alpha","hasNormalTextureTransform","hasEmissionTextureTransform","hasOcclusionTextureTransform","hasMetallicRoughnessTextureTransform","normalType","Attribute","offsetBackfaces","instancedColor","attributes","INSTANCECOLOR","uniforms","externalColor","hasMultipassTerrain","hasModelTransformation","modelTransformation","code","float","hasVertexTangents","opacity","layerOpacity","hasColorTexture","texture","textureAlphaPremultiplied","hasVertexColors","instancedDoublePrecision","get","ambient","diffuse","ScreenDerivative","pbrMode","Normal","receiveShadows","spherical","hasNormalTexture","snowCover","Schematic","transparencyPassType","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/chunks/DefaultMaterial.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../core/maybe.js\";import{I as r}from\"./mat4f64.js\";import{ForwardLinearDepth as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as i}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as l}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as s}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as n,NormalAttributeType as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as u}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as p}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as h}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as w,addAmbientBoostFactor as x,addLightingGlobalFactor as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as T}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Normals as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as M,PBRMode as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as P,ReadShadowMapDraw as $}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{colorTextureUV as A,normalTextureUV as N,emissiveTextureUV as S,occlusionTextureUV as E,metallicRoughnessTextureUV as V}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as _}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as D}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as F}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as U}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as B,addCameraPosition as I}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as R}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as W}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as G}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as k}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as q}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as H}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as J}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as K}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function Q(Q){const X=new q,{vertex:Y,fragment:Z,varyings:ee}=X;return B(Y,Q),X.include(c),ee.add(\"vpos\",\"vec3\"),X.include(_,Q),X.include(t,Q),X.include(v,Q),Q.hasColorTextureTransform&&X.include(A),Q.output!==i.Color&&Q.output!==i.Alpha||(Q.hasNormalTextureTransform&&X.include(N),Q.hasEmissionTextureTransform&&X.include(S),Q.hasOcclusionTextureTransform&&X.include(E),Q.hasMetallicRoughnessTextureTransform&&X.include(V),I(Y,Q),X.include(n,Q),X.include(s,Q),Q.normalType===d.Attribute&&Q.offsetBackfaces&&X.include(a),X.include(b,Q),X.include(p,Q),Q.instancedColor&&X.attributes.add(K.INSTANCECOLOR,\"vec4\"),ee.add(\"localvpos\",\"vec3\"),X.include(g,Q),X.include(o,Q),X.include(m,Q),X.include(u,Q),Y.uniforms.add(new z(\"externalColor\",(e=>e.externalColor))),ee.add(\"vcolorExt\",\"vec4\"),Q.hasMultipassTerrain&&ee.add(\"depth\",\"float\"),Q.hasModelTransformation&&Y.uniforms.add(new k(\"model\",(o=>e(o.modelTransformation)?o.modelTransformation:r))),Y.code.add(G`\n      void main(void) {\n        forwardNormalizedVertexColor();\n        vcolorExt = externalColor;\n        ${Q.instancedColor?\"vcolorExt *= instanceColor;\":\"\"}\n        vcolorExt *= vvColor();\n        vcolorExt *= getSymbolColor();\n        forwardColorMixMode();\n\n        if (vcolorExt.a < ${G.float(D)}) {\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        } else {\n          vpos = calculateVPos();\n          localvpos = vpos - view[3].xyz;\n          vpos = subtractOrigin(vpos);\n          ${Q.normalType===d.Attribute?G`vNormalWorld = dpNormal(vvLocalNormal(normalModel()));`:\"\"}\n          vpos = addVerticalOffset(vpos, localOrigin);\n          ${Q.hasVertexTangents?\"vTangent = dpTransformVertexTangent(tangent);\":\"\"}\n          gl_Position = transformPosition(proj, view, ${Q.hasModelTransformation?\"model,\":\"\"} vpos);\n          ${Q.normalType===d.Attribute&&Q.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n        }\n\n        ${Q.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n        forwardLinearDepth();\n        forwardTextureCoordinates();\n        ${Q.hasColorTextureTransform?G`forwardColorUV();`:\"\"}\n        ${Q.hasNormalTextureTransform?G`forwardNormalUV();`:\"\"}\n        ${Q.hasEmissionTextureTransform?G`forwardEmissiveUV();`:\"\"}\n        ${Q.hasOcclusionTextureTransform?G`forwardOcclusionUV();`:\"\"}\n        ${Q.hasMetallicRoughnessTextureTransform?G`forwardMetallicRoughnessUV();`:\"\"}\n      }\n    `)),Q.output===i.Alpha&&(X.include(l,Q),X.include(F,Q),X.include(T,Q),Z.uniforms.add([new W(\"opacity\",(e=>e.opacity)),new W(\"layerOpacity\",(e=>e.layerOpacity))]),Q.hasColorTexture&&Z.uniforms.add(new H(\"tex\",(e=>e.texture))),Z.include(U),Z.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Q.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        ${Q.hasColorTexture?G`\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform?G`colorUV`:G`vuv0`});\n                ${Q.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\n        ${Q.hasVertexColors?G`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        gl_FragColor = vec4(opacity_);\n      }\n    `)),Q.output===i.Color&&(X.include(l,Q),X.include(w,Q),X.include(f,Q),X.include(F,Q),X.include(Q.instancedDoublePrecision?P:$,Q),X.include(T,Q),I(Z,Q),Z.uniforms.add([Y.uniforms.get(\"localOrigin\"),new R(\"ambient\",(e=>e.ambient)),new R(\"diffuse\",(e=>e.diffuse)),new W(\"opacity\",(e=>e.opacity)),new W(\"layerOpacity\",(e=>e.layerOpacity))]),Q.hasColorTexture&&Z.uniforms.add(new H(\"tex\",(e=>e.texture))),X.include(M,Q),X.include(L,Q),Z.include(U),X.include(j,Q),x(Z),y(Z),C(Z),Z.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Q.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        ${Q.hasColorTexture?G`\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform?G`colorUV`:G`vuv0`});\n                ${Q.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\n        shadingParams.viewDirection = normalize(vpos - cameraPosition);\n        ${Q.normalType===d.ScreenDerivative?G`\n                vec3 normal = screenDerivativeNormal(localvpos);`:G`\n                shadingParams.normalView = vNormalWorld;\n                vec3 normal = shadingNormal(shadingParams);`}\n        ${Q.pbrMode===O.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        vec3 posWorld = vpos + localOrigin;\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\n        float shadow = ${Q.receiveShadows?\"readShadowMap(vpos, linearDepth)\":Q.spherical?\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\":\"0.0\"};\n\n        vec3 matColor = max(ambient, diffuse);\n        ${Q.hasVertexColors?G`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${Q.hasNormalTexture?G`\n                mat3 tangentSpace = ${Q.hasVertexTangents?\"computeTangentSpace(normal);\":\"computeTangentSpace(normal, vpos, vuv0);\"}\n                vec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);`:G`vec3 shadingNormal = normal;`}\n        vec3 normalGround = ${Q.spherical?G`normalize(posWorld);`:G`vec3(0.0, 0.0, 1.0);`}\n\n        ${Q.snowCover?G`\n                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\n                albedo = mix(albedo, vec3(1), snow);\n                shadingNormal = mix(shadingNormal, normal, snow);\n                ssao = mix(ssao, 1.0, snow);`:\"\"}\n\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n\n        ${Q.pbrMode===O.Normal||Q.pbrMode===O.Schematic?G`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${Q.snowCover?G`\n                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\n                        emission = mix(emission, vec3(0.0), snow);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:G`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${Q.transparencyPassType===J.Color?G`gl_FragColor = premultiplyAlpha(gl_FragColor);`:\"\"}\n      }\n    `)),X.include(h,Q),X}const X=Object.freeze(Object.defineProperty({__proto__:null,build:Q},Symbol.toStringTag,{value:\"Module\"}));export{X as D,Q as b};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,MAAM,IAAIC,CAAjB,QAAuB,kBAAvB;AAA0C,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,cAAlB;AAAiC,SAAOC,kBAAkB,IAAIC,CAA7B,QAAmC,wEAAnC;AAA4G,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,4DAAvB;AAAoF,SAAOC,YAAY,IAAIC,CAAvB,QAA6B,6DAA7B;AAA2F,SAAOC,SAAS,IAAIC,CAApB,QAA0B,2DAA1B;AAAsF,SAAOC,SAAS,IAAIC,CAApB,QAA0B,+DAA1B;AAA0F,SAAOC,wBAAwB,IAAIC,CAAnC,QAAyC,yFAAzC;AAAmI,SAAOC,eAAe,IAAIC,CAA1B,EAA4BC,mBAAmB,IAAIC,CAAnD,QAAyD,gFAAzD;AAA0I,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,kFAAlC;AAAqH,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,4EAA5B;AAAyG,SAAOC,0BAA0B,IAAIC,CAArC,QAA2C,2FAA3C;AAAuI,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,4EAA5B;AAAyG,SAAOC,YAAY,IAAIC,CAAvB,QAA6B,6EAA7B;AAA2G,SAAOC,cAAc,IAAIC,CAAzB,QAA+B,+EAA/B;AAA+G,SAAOC,8BAA8B,IAAIC,CAAzC,QAA+C,4FAA/C;AAA4I,SAAOC,oBAAoB,IAAIC,CAA/B,QAAqC,kFAArC;AAAwH,SAAOC,wBAAwB,IAAIC,CAAnC,QAAyC,sFAAzC;AAAgI,SAAOC,qBAAqB,IAAIC,CAAhC,EAAkCC,qBAAqB,IAAIC,CAA3D,EAA6DC,uBAAuB,IAAIC,CAAxF,QAA8F,mFAA9F;AAAkL,SAAOC,qBAAqB,IAAIC,CAAhC,QAAsC,0EAAtC;AAAiH,SAAOC,oBAAoB,IAAIC,CAA/B,QAAqC,kFAArC;AAAwH,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,qEAAxB;AAA8F,SAAOC,wBAAwB,IAAIC,CAAnC,QAAyC,sFAAzC;AAAgI,SAAOC,kCAAkC,IAAIC,CAA7C,EAA+CC,OAAO,IAAIC,CAA1D,QAAgE,gGAAhE;AAAiK,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,iBAAiB,IAAIC,CAAnD,QAAyD,2EAAzD;AAAqI,SAAOC,cAAc,IAAIC,CAAzB,EAA2BC,eAAe,IAAIC,CAA9C,EAAgDC,iBAAiB,IAAIC,CAArE,EAAuEC,kBAAkB,IAAIC,CAA7F,EAA+FC,0BAA0B,IAAIC,CAA7H,QAAmI,gFAAnI;AAAoN,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,6EAAhC;AAA8G,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,iEAAlC;AAAoG,SAAOC,wBAAwB,IAAIC,CAAnC,QAAyC,uEAAzC;AAAiH,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,2EAAjC;AAA6G,SAAOC,sBAAsB,IAAIC,CAAjC,EAAmCC,iBAAiB,IAAI9E,CAAxD,QAA8D,+DAA9D;AAA8H,SAAO+E,iBAAiB,IAAIC,CAA5B,QAAkC,kEAAlC;AAAqG,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,kEAAlC;AAAqG,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,iEAAjC;AAAmG,SAAOC,IAAI,IAAIC,CAAf,QAAqB,2DAArB;AAAiF,SAAOC,kBAAkB,IAAIC,CAA7B,QAAmC,mEAAnC;AAAuG,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,8DAA9B;AAA6F,SAAOC,oBAAoB,IAAIC,CAA/B,QAAqC,qEAArC;AAA2G,SAAOC,oBAAoB,IAAIC,CAA/B,QAAqC,sDAArC;AAA4F,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,iDAAhC;;AAAkF,SAASC,CAAT,CAAWA,CAAX,EAAa;EAAC,MAAMC,CAAC,GAAC,IAAIR,CAAJ,EAAR;EAAA,MAAc;IAACS,MAAM,EAACC,CAAR;IAAUC,QAAQ,EAACC,CAAnB;IAAqBC,QAAQ,EAACC;EAA9B,IAAkCN,CAAhD;EAAkD,OAAOrB,CAAC,CAACuB,CAAD,EAAGH,CAAH,CAAD,EAAOC,CAAC,CAACO,OAAF,CAAUtF,CAAV,CAAP,EAAoBqF,EAAE,CAACE,GAAH,CAAO,MAAP,EAAc,MAAd,CAApB,EAA0CR,CAAC,CAACO,OAAF,CAAUpC,CAAV,EAAY4B,CAAZ,CAA1C,EAAyDC,CAAC,CAACO,OAAF,CAAU5F,CAAV,EAAYoF,CAAZ,CAAzD,EAAwEC,CAAC,CAACO,OAAF,CAAU5E,CAAV,EAAYoE,CAAZ,CAAxE,EAAuFA,CAAC,CAACU,wBAAF,IAA4BT,CAAC,CAACO,OAAF,CAAU9C,CAAV,CAAnH,EAAgIsC,CAAC,CAACW,MAAF,KAAWrG,CAAC,CAACsG,KAAb,IAAoBZ,CAAC,CAACW,MAAF,KAAWrG,CAAC,CAACuG,KAAjC,KAAyCb,CAAC,CAACc,yBAAF,IAA6Bb,CAAC,CAACO,OAAF,CAAU5C,CAAV,CAA7B,EAA0CoC,CAAC,CAACe,2BAAF,IAA+Bd,CAAC,CAACO,OAAF,CAAU1C,CAAV,CAAzE,EAAsFkC,CAAC,CAACgB,4BAAF,IAAgCf,CAAC,CAACO,OAAF,CAAUxC,CAAV,CAAtH,EAAmIgC,CAAC,CAACiB,oCAAF,IAAwChB,CAAC,CAACO,OAAF,CAAUtC,CAAV,CAA3K,EAAwLnE,CAAC,CAACoG,CAAD,EAAGH,CAAH,CAAzL,EAA+LC,CAAC,CAACO,OAAF,CAAU1F,CAAV,EAAYkF,CAAZ,CAA/L,EAA8MC,CAAC,CAACO,OAAF,CAAU9F,CAAV,EAAYsF,CAAZ,CAA9M,EAA6NA,CAAC,CAACkB,UAAF,KAAelG,CAAC,CAACmG,SAAjB,IAA4BnB,CAAC,CAACoB,eAA9B,IAA+CnB,CAAC,CAACO,OAAF,CAAUpG,CAAV,CAA5Q,EAAyR6F,CAAC,CAACO,OAAF,CAAUxE,CAAV,EAAYgE,CAAZ,CAAzR,EAAwSC,CAAC,CAACO,OAAF,CAAU9E,CAAV,EAAYsE,CAAZ,CAAxS,EAAuTA,CAAC,CAACqB,cAAF,IAAkBpB,CAAC,CAACqB,UAAF,CAAab,GAAb,CAAiBV,CAAC,CAACwB,aAAnB,EAAiC,MAAjC,CAAzU,EAAkXhB,EAAE,CAACE,GAAH,CAAO,WAAP,EAAmB,MAAnB,CAAlX,EAA6YR,CAAC,CAACO,OAAF,CAAUlF,CAAV,EAAY0E,CAAZ,CAA7Y,EAA4ZC,CAAC,CAACO,OAAF,CAAUtG,CAAV,EAAY8F,CAAZ,CAA5Z,EAA2aC,CAAC,CAACO,OAAF,CAAUpF,CAAV,EAAY4E,CAAZ,CAA3a,EAA0bC,CAAC,CAACO,OAAF,CAAUhF,CAAV,EAAYwE,CAAZ,CAA1b,EAAycG,CAAC,CAACqB,QAAF,CAAWf,GAAX,CAAe,IAAIxB,CAAJ,CAAM,eAAN,EAAuBnF,CAAC,IAAEA,CAAC,CAAC2H,aAA5B,CAAf,CAAzc,EAAqgBlB,EAAE,CAACE,GAAH,CAAO,WAAP,EAAmB,MAAnB,CAArgB,EAAgiBT,CAAC,CAAC0B,mBAAF,IAAuBnB,EAAE,CAACE,GAAH,CAAO,OAAP,EAAe,OAAf,CAAvjB,EAA+kBT,CAAC,CAAC2B,sBAAF,IAA0BxB,CAAC,CAACqB,QAAF,CAAWf,GAAX,CAAe,IAAIlB,CAAJ,CAAM,OAAN,EAAerF,CAAC,IAAEJ,CAAC,CAACI,CAAC,CAAC0H,mBAAH,CAAD,GAAyB1H,CAAC,CAAC0H,mBAA3B,GAA+C5H,CAAjE,CAAf,CAAzmB,EAA8rBmG,CAAC,CAAC0B,IAAF,CAAOpB,GAAP,CAAWpB,CAAE;AACtwK;AACA;AACA;AACA,UAAUW,CAAC,CAACqB,cAAF,GAAiB,6BAAjB,GAA+C,EAAG;AAC5D;AACA;AACA;AACA;AACA,4BAA4BhC,CAAC,CAACyC,KAAF,CAAQxD,CAAR,CAAW;AACvC;AACA;AACA;AACA;AACA;AACA,YAAY0B,CAAC,CAACkB,UAAF,KAAelG,CAAC,CAACmG,SAAjB,GAA2B9B,CAAE,wDAA7B,GAAqF,EAAG;AACpG;AACA,YAAYW,CAAC,CAAC+B,iBAAF,GAAoB,+CAApB,GAAoE,EAAG;AACnF,wDAAwD/B,CAAC,CAAC2B,sBAAF,GAAyB,QAAzB,GAAkC,EAAG;AAC7F,YAAY3B,CAAC,CAACkB,UAAF,KAAelG,CAAC,CAACmG,SAAjB,IAA4BnB,CAAC,CAACoB,eAA9B,GAA8C,8FAA9C,GAA6I,EAAG;AAC5J;AACA;AACA,UAAUpB,CAAC,CAAC0B,mBAAF,GAAsB,qCAAtB,GAA4D,EAAG;AACzE;AACA;AACA,UAAU1B,CAAC,CAACU,wBAAF,GAA2BrB,CAAE,mBAA7B,GAAgD,EAAG;AAC7D,UAAUW,CAAC,CAACc,yBAAF,GAA4BzB,CAAE,oBAA9B,GAAkD,EAAG;AAC/D,UAAUW,CAAC,CAACe,2BAAF,GAA8B1B,CAAE,sBAAhC,GAAsD,EAAG;AACnE,UAAUW,CAAC,CAACgB,4BAAF,GAA+B3B,CAAE,uBAAjC,GAAwD,EAAG;AACrE,UAAUW,CAAC,CAACiB,oCAAF,GAAuC5B,CAAE,+BAAzC,GAAwE,EAAG;AACrF;AACA,KA/ByvK,CAAvuB,CAAhI,EA+B14IW,CAAC,CAACW,MAAF,KAAWrG,CAAC,CAACuG,KAAb,KAAqBZ,CAAC,CAACO,OAAF,CAAUhG,CAAV,EAAYwF,CAAZ,GAAeC,CAAC,CAACO,OAAF,CAAUhC,CAAV,EAAYwB,CAAZ,CAAf,EAA8BC,CAAC,CAACO,OAAF,CAAU5D,CAAV,EAAYoD,CAAZ,CAA9B,EAA6CK,CAAC,CAACmB,QAAF,CAAWf,GAAX,CAAe,CAAC,IAAItB,CAAJ,CAAM,SAAN,EAAiBrF,CAAC,IAAEA,CAAC,CAACkI,OAAtB,CAAD,EAAiC,IAAI7C,CAAJ,CAAM,cAAN,EAAsBrF,CAAC,IAAEA,CAAC,CAACmI,YAA3B,CAAjC,CAAf,CAA7C,EAAyIjC,CAAC,CAACkC,eAAF,IAAmB7B,CAAC,CAACmB,QAAF,CAAWf,GAAX,CAAe,IAAId,CAAJ,CAAM,KAAN,EAAa7F,CAAC,IAAEA,CAAC,CAACqI,OAAlB,CAAf,CAA5J,EAAwM9B,CAAC,CAACG,OAAF,CAAU9B,CAAV,CAAxM,EAAqN2B,CAAC,CAACwB,IAAF,CAAOpB,GAAP,CAAWpB,CAAE;AAC/P;AACA;AACA,UAAUW,CAAC,CAAC0B,mBAAF,GAAsB,wCAAtB,GAA+D,EAAG;AAC5E,UAAU1B,CAAC,CAACkC,eAAF,GAAkB7C,CAAE;AAC9B,iDAAiDW,CAAC,CAACU,wBAAF,GAA2BrB,CAAE,SAA7B,GAAsCA,CAAE,MAAM;AAC/F,kBAAkBW,CAAC,CAACoC,yBAAF,GAA4B,6BAA5B,GAA0D,EAAG;AAC/E,gDAHU,GAGuC/C,CAAE,4BAA4B;AAC/E,UAAUW,CAAC,CAACqC,eAAF,GAAkBhD,CAAE,qHAApB,GAAyIA,CAAE,0GAA0G;AAC/P;AACA;AACA,KAXkP,CAA1O,CA/B04I,EA0C14IW,CAAC,CAACW,MAAF,KAAWrG,CAAC,CAACsG,KAAb,KAAqBX,CAAC,CAACO,OAAF,CAAUhG,CAAV,EAAYwF,CAAZ,GAAeC,CAAC,CAACO,OAAF,CAAUpE,CAAV,EAAY4D,CAAZ,CAAf,EAA8BC,CAAC,CAACO,OAAF,CAAUtE,CAAV,EAAY8D,CAAZ,CAA9B,EAA6CC,CAAC,CAACO,OAAF,CAAUhC,CAAV,EAAYwB,CAAZ,CAA7C,EAA4DC,CAAC,CAACO,OAAF,CAAUR,CAAC,CAACsC,wBAAF,GAA2BhF,CAA3B,GAA6BE,CAAvC,EAAyCwC,CAAzC,CAA5D,EAAwGC,CAAC,CAACO,OAAF,CAAU5D,CAAV,EAAYoD,CAAZ,CAAxG,EAAuHjG,CAAC,CAACsG,CAAD,EAAGL,CAAH,CAAxH,EAA8HK,CAAC,CAACmB,QAAF,CAAWf,GAAX,CAAe,CAACN,CAAC,CAACqB,QAAF,CAAWe,GAAX,CAAe,aAAf,CAAD,EAA+B,IAAIxD,CAAJ,CAAM,SAAN,EAAiBjF,CAAC,IAAEA,CAAC,CAAC0I,OAAtB,CAA/B,EAA+D,IAAIzD,CAAJ,CAAM,SAAN,EAAiBjF,CAAC,IAAEA,CAAC,CAAC2I,OAAtB,CAA/D,EAA+F,IAAItD,CAAJ,CAAM,SAAN,EAAiBrF,CAAC,IAAEA,CAAC,CAACkI,OAAtB,CAA/F,EAA+H,IAAI7C,CAAJ,CAAM,cAAN,EAAsBrF,CAAC,IAAEA,CAAC,CAACmI,YAA3B,CAA/H,CAAf,CAA9H,EAAwTjC,CAAC,CAACkC,eAAF,IAAmB7B,CAAC,CAACmB,QAAF,CAAWf,GAAX,CAAe,IAAId,CAAJ,CAAM,KAAN,EAAa7F,CAAC,IAAEA,CAAC,CAACqI,OAAlB,CAAf,CAA3U,EAAuXlC,CAAC,CAACO,OAAF,CAAUtD,CAAV,EAAY8C,CAAZ,CAAvX,EAAsYC,CAAC,CAACO,OAAF,CAAUxD,CAAV,EAAYgD,CAAZ,CAAtY,EAAqZK,CAAC,CAACG,OAAF,CAAU9B,CAAV,CAArZ,EAAkauB,CAAC,CAACO,OAAF,CAAU1D,CAAV,EAAYkD,CAAZ,CAAla,EAAib1D,CAAC,CAAC+D,CAAD,CAAlb,EAAsb7D,CAAC,CAAC6D,CAAD,CAAvb,EAA2b3D,CAAC,CAAC2D,CAAD,CAA5b,EAAgcA,CAAC,CAACwB,IAAF,CAAOpB,GAAP,CAAWpB,CAAE;AAC1e;AACA;AACA,UAAUW,CAAC,CAAC0B,mBAAF,GAAsB,wCAAtB,GAA+D,EAAG;AAC5E,UAAU1B,CAAC,CAACkC,eAAF,GAAkB7C,CAAE;AAC9B,iDAAiDW,CAAC,CAACU,wBAAF,GAA2BrB,CAAE,SAA7B,GAAsCA,CAAE,MAAM;AAC/F,kBAAkBW,CAAC,CAACoC,yBAAF,GAA4B,6BAA5B,GAA0D,EAAG;AAC/E,gDAHU,GAGuC/C,CAAE,4BAA4B;AAC/E;AACA,UAAUW,CAAC,CAACkB,UAAF,KAAelG,CAAC,CAAC0H,gBAAjB,GAAkCrD,CAAE;AAC9C,iEADU,GACwDA,CAAE;AACpE;AACA,4DAA6D;AAC7D,UAAUW,CAAC,CAAC2C,OAAF,KAAYvF,CAAC,CAACwF,MAAd,GAAqB,oBAArB,GAA0C,EAAG;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB5C,CAAC,CAAC6C,cAAF,GAAiB,kCAAjB,GAAoD7C,CAAC,CAAC8C,SAAF,GAAY,uDAAZ,GAAoE,KAAM;AACvJ;AACA;AACA,UAAU9C,CAAC,CAACqC,eAAF,GAAkBhD,CAAE;AAC9B;AACA,oIAFU,GAE2HA,CAAE;AACvI;AACA,yHAA0H;AAC1H,UAAUW,CAAC,CAAC+C,gBAAF,GAAmB1D,CAAE;AAC/B,sCAAsCW,CAAC,CAAC+B,iBAAF,GAAoB,8BAApB,GAAmD,0CAA2C;AACpI,+EAFU,GAEsE1C,CAAE,8BAA8B;AAChH,8BAA8BW,CAAC,CAAC8C,SAAF,GAAYzD,CAAE,sBAAd,GAAoCA,CAAE,sBAAsB;AAC1F;AACA,UAAUW,CAAC,CAACgD,SAAF,GAAY3D,CAAE;AACxB;AACA;AACA;AACA,6CAJU,GAIoC,EAAG;AACjD;AACA;AACA;AACA,UAAUW,CAAC,CAAC2C,OAAF,KAAYvF,CAAC,CAACwF,MAAd,IAAsB5C,CAAC,CAAC2C,OAAF,KAAYvF,CAAC,CAAC6F,SAApC,GAA8C5D,CAAE;AAC1D;AACA,kBAAkBW,CAAC,CAACgD,SAAF,GAAY3D,CAAE;AAChC;AACA,mEAFkB,GAEkD,EAAG;AACvE;AACA,gNANU,GAMuMA,CAAE,uGAAuG;AAC1T;AACA,UAAUW,CAAC,CAACkD,oBAAF,KAAyBrD,CAAC,CAACe,KAA3B,GAAiCvB,CAAE,gDAAnC,GAAmF,EAAG;AAChG;AACA,KAnD6d,CAArd,CA1C04I,EA6F14IY,CAAC,CAACO,OAAF,CAAU1E,CAAV,EAAYkE,CAAZ,CA7F04I,EA6F33IC,CA7Fo3I;AA6Fl3I;;AAAA,MAAMA,CAAC,GAACkD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,cAAP,CAAsB;EAACC,SAAS,EAAC,IAAX;EAAgBC,KAAK,EAACvD;AAAtB,CAAtB,EAA+CwD,MAAM,CAACC,WAAtD,EAAkE;EAACC,KAAK,EAAC;AAAP,CAAlE,CAAd,CAAR;AAA2G,SAAOzD,CAAC,IAAI3B,CAAZ,EAAc0B,CAAC,IAAIhE,CAAnB"},"metadata":{},"sourceType":"module"}