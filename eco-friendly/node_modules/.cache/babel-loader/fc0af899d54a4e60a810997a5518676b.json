{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport t from \"./RectangleBinPack.js\";\nimport e from \"../webgl/Rect.js\";\nimport { PixelFormat as i, PixelType as s } from \"../../../webgl/enums.js\";\nimport { Texture as h } from \"../../../webgl/Texture.js\";\n\nclass r {\n  constructor(e, i, s) {\n    this.width = 0, this.height = 0, this._dirties = [], this._glyphData = [], this._currentPage = 0, this._glyphIndex = {}, this._textures = [], this._rangePromises = new Map(), this.width = e, this.height = i, this._glyphSource = s, this._binPack = new t(e - 4, i - 4), this._glyphData.push(new Uint8Array(e * i)), this._dirties.push(!0), this._textures.push(void 0);\n  }\n\n  getGlyphItems(i, s) {\n    const h = [],\n          r = this._glyphSource,\n          n = new Set(),\n          a = 1 / 256;\n\n    for (const t of s) {\n      const e = Math.floor(t * a);\n      n.add(e);\n    }\n\n    const o = [];\n    return n.forEach(t => {\n      if (t <= 256) {\n        const e = i + t;\n        if (this._rangePromises.has(e)) o.push(this._rangePromises.get(e));else {\n          const s = r.getRange(i, t).then(() => {\n            this._rangePromises.delete(e);\n          }, () => {\n            this._rangePromises.delete(e);\n          });\n          this._rangePromises.set(e, s), o.push(s);\n        }\n      }\n    }), Promise.all(o).then(() => {\n      let n = this._glyphIndex[i];\n      n || (n = {}, this._glyphIndex[i] = n);\n\n      for (const a of s) {\n        const s = n[a];\n\n        if (s) {\n          h[a] = {\n            sdf: !0,\n            rect: s.rect,\n            metrics: s.metrics,\n            page: s.page,\n            code: a\n          };\n          continue;\n        }\n\n        const o = r.getGlyph(i, a);\n        if (!o || !o.metrics) continue;\n        const l = o.metrics;\n        let c;\n        if (0 === l.width) c = new e(0, 0, 0, 0);else {\n          const e = 3,\n                i = l.width + 2 * e,\n                s = l.height + 2 * e;\n          let h = i % 4 ? 4 - i % 4 : 4,\n              r = s % 4 ? 4 - s % 4 : 4;\n          1 === h && (h = 5), 1 === r && (r = 5), c = this._binPack.allocate(i + h, s + r), c.isEmpty && (this._dirties[this._currentPage] || (this._glyphData[this._currentPage] = null), this._currentPage = this._glyphData.length, this._glyphData.push(new Uint8Array(this.width * this.height)), this._dirties.push(!0), this._textures.push(void 0), this._binPack = new t(this.width - 4, this.height - 4), c = this._binPack.allocate(i + h, s + r));\n          const n = this._glyphData[this._currentPage],\n                a = o.bitmap;\n\n          let g, _;\n\n          if (a) for (let t = 0; t < s; t++) {\n            g = i * t, _ = this.width * (c.y + t + 1) + c.x;\n\n            for (let t = 0; t < i; t++) n[_ + t + 1] = a[g + t];\n          }\n        }\n        n[a] = {\n          rect: c,\n          metrics: l,\n          tileIDs: null,\n          page: this._currentPage\n        }, h[a] = {\n          sdf: !0,\n          rect: c,\n          metrics: l,\n          page: this._currentPage,\n          code: a\n        }, this._dirties[this._currentPage] = !0;\n      }\n\n      return h;\n    });\n  }\n\n  removeGlyphs(t) {\n    for (const e in this._glyphIndex) {\n      const i = this._glyphIndex[e];\n      if (!i) continue;\n      let s;\n\n      for (const e in i) if (s = i[e], s.tileIDs.delete(t), 0 === s.tileIDs.size) {\n        const t = this._glyphData[s.page],\n              h = s.rect;\n        let r, n;\n\n        for (let e = 0; e < h.height; e++) for (r = this.width * (h.y + e) + h.x, n = 0; n < h.width; n++) t[r + n] = 0;\n\n        delete i[e], this._dirties[s.page] = !0;\n      }\n    }\n  }\n\n  bind(t, e, r, n = 0) {\n    this._textures[r] || (this._textures[r] = new h(t, {\n      pixelFormat: i.ALPHA,\n      dataType: s.UNSIGNED_BYTE,\n      width: this.width,\n      height: this.height\n    }, new Uint8Array(this.width * this.height)));\n    const a = this._textures[r];\n    a.setSamplingMode(e), this._dirties[r] && a.setData(this._glyphData[r]), t.bindTexture(a, n), this._dirties[r] = !1;\n  }\n\n  dispose() {\n    this._binPack = null;\n\n    for (const t of this._textures) t && t.dispose();\n\n    this._textures.length = 0;\n  }\n\n}\n\nexport { r as default };","map":{"version":3,"names":["t","e","PixelFormat","i","PixelType","s","Texture","h","r","constructor","width","height","_dirties","_glyphData","_currentPage","_glyphIndex","_textures","_rangePromises","Map","_glyphSource","_binPack","push","Uint8Array","getGlyphItems","n","Set","a","Math","floor","add","o","forEach","has","get","getRange","then","delete","set","Promise","all","sdf","rect","metrics","page","code","getGlyph","l","c","allocate","isEmpty","length","bitmap","g","_","y","x","tileIDs","removeGlyphs","size","bind","pixelFormat","ALPHA","dataType","UNSIGNED_BYTE","setSamplingMode","setData","bindTexture","dispose","default"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/engine/vectorTiles/GlyphMosaic.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport t from\"./RectangleBinPack.js\";import e from\"../webgl/Rect.js\";import{PixelFormat as i,PixelType as s}from\"../../../webgl/enums.js\";import{Texture as h}from\"../../../webgl/Texture.js\";class r{constructor(e,i,s){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphIndex={},this._textures=[],this._rangePromises=new Map,this.width=e,this.height=i,this._glyphSource=s,this._binPack=new t(e-4,i-4),this._glyphData.push(new Uint8Array(e*i)),this._dirties.push(!0),this._textures.push(void 0)}getGlyphItems(i,s){const h=[],r=this._glyphSource,n=new Set,a=1/256;for(const t of s){const e=Math.floor(t*a);n.add(e)}const o=[];return n.forEach((t=>{if(t<=256){const e=i+t;if(this._rangePromises.has(e))o.push(this._rangePromises.get(e));else{const s=r.getRange(i,t).then((()=>{this._rangePromises.delete(e)}),(()=>{this._rangePromises.delete(e)}));this._rangePromises.set(e,s),o.push(s)}}})),Promise.all(o).then((()=>{let n=this._glyphIndex[i];n||(n={},this._glyphIndex[i]=n);for(const a of s){const s=n[a];if(s){h[a]={sdf:!0,rect:s.rect,metrics:s.metrics,page:s.page,code:a};continue}const o=r.getGlyph(i,a);if(!o||!o.metrics)continue;const l=o.metrics;let c;if(0===l.width)c=new e(0,0,0,0);else{const e=3,i=l.width+2*e,s=l.height+2*e;let h=i%4?4-i%4:4,r=s%4?4-s%4:4;1===h&&(h=5),1===r&&(r=5),c=this._binPack.allocate(i+h,s+r),c.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(void 0),this._binPack=new t(this.width-4,this.height-4),c=this._binPack.allocate(i+h,s+r));const n=this._glyphData[this._currentPage],a=o.bitmap;let g,_;if(a)for(let t=0;t<s;t++){g=i*t,_=this.width*(c.y+t+1)+c.x;for(let t=0;t<i;t++)n[_+t+1]=a[g+t]}}n[a]={rect:c,metrics:l,tileIDs:null,page:this._currentPage},h[a]={sdf:!0,rect:c,metrics:l,page:this._currentPage,code:a},this._dirties[this._currentPage]=!0}return h}))}removeGlyphs(t){for(const e in this._glyphIndex){const i=this._glyphIndex[e];if(!i)continue;let s;for(const e in i)if(s=i[e],s.tileIDs.delete(t),0===s.tileIDs.size){const t=this._glyphData[s.page],h=s.rect;let r,n;for(let e=0;e<h.height;e++)for(r=this.width*(h.y+e)+h.x,n=0;n<h.width;n++)t[r+n]=0;delete i[e],this._dirties[s.page]=!0}}}bind(t,e,r,n=0){this._textures[r]||(this._textures[r]=new h(t,{pixelFormat:i.ALPHA,dataType:s.UNSIGNED_BYTE,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));const a=this._textures[r];a.setSamplingMode(e),this._dirties[r]&&a.setData(this._glyphData[r]),t.bindTexture(a,n),this._dirties[r]=!1}dispose(){this._binPack=null;for(const t of this._textures)t&&t.dispose();this._textures.length=0}}export{r as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}