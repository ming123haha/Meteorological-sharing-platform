{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"echartsbar\",\n\n  data() {\n    return {\n      cityallranks: [],\n      cityaqirank: [],\n      test: [\"test\"]\n    };\n  },\n\n  created() {\n    this.initdata();\n  },\n\n  mounted() {\n    this.echartsInit();\n  },\n\n  methods: {\n    initdata() {},\n\n    echartsInit() {\n      var option;\n      this.request.get(\"/nowatmospheredata/GetNowAQI\").then(res => {\n        // if(res[0].aqi>res[2].aqi){\n        //   console.log(\"ok!\")\n        // }\n        var num = res.length;\n        var i, j;\n        var temp;\n\n        for (i = num - 1; i > 0; i--) {\n          for (j = 0; j < i; j++) {\n            if (res[j].aqi > res[j + 1].aqi) {\n              temp = res[j];\n              res[j] = res[j + 1];\n              res[j + 1] = temp;\n            }\n          }\n        } //console.log(res)\n\n\n        for (var k = 0; k < res.length; k++) {\n          if (res[k].aqi == null) {\n            continue;\n          }\n\n          this.cityallranks.push(res[k]);\n          if (this.cityallranks.length === 7) break;\n        } //console.log(this.cityallranks)\n\n\n        option = {\n          title: {\n            text: '测区空气质量当天排名',\n            textStyle: {\n              //文字颜色\n              color: '#fff'\n            },\n            top: '0px'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              // Use axis to trigger tooltip\n              type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n\n            },\n            formatter: function (params) {\n              let name = params[0].seriesName;\n              const result = params[0].axisValue + '<br/>' + params[0].marker + params[0].seriesName + '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp' + '&nbsp' + '<span style=\\\"font-size: 14px;font-weight: 900;\">' + params[0].data + '</span>';\n              let relVal = result;\n\n              if (name == 'AQI') {\n                relVal = result;\n              } else if (name == 'PM2.5') {\n                relVal = result + \"ug/m³\";\n              }\n\n              return relVal;\n            }\n          },\n          legend: {\n            textStyle: {\n              color: '#fff'\n            },\n            top: '25px'\n          },\n          grid: {\n            left: '0%',\n            right: '0%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: {\n            type: 'value',\n            axisLabel: {\n              textStyle: {\n                color: '#fff'\n              }\n            }\n          },\n          yAxis: {\n            type: 'category',\n            axisLabel: {\n              textStyle: {\n                color: '#fff'\n              }\n            },\n            data: ['' + this.cityallranks[6].city + this.cityallranks[6].station + '站', '' + this.cityallranks[5].city + this.cityallranks[5].station + '站', '' + this.cityallranks[4].city + this.cityallranks[4].station + '站', '' + this.cityallranks[3].city + this.cityallranks[3].station + '站', '' + this.cityallranks[2].city + this.cityallranks[2].station + '站', '' + this.cityallranks[1].city + this.cityallranks[1].station + '站', '' + this.cityallranks[0].city + this.cityallranks[0].station + '站']\n          },\n          toolbox: {\n            show: true,\n            top: '0px',\n            iconStyle: {\n              borderColor: '#blue',\n              backgroundColor: 'fff',\n              color: '#fff'\n            },\n            feature: {\n              dataZoom: {\n                yAxisIndex: ''\n              },\n              dataView: {\n                readOnly: false\n              },\n              magicType: {\n                type: ['line', 'bar']\n              },\n              restore: {},\n              saveAsImage: {}\n            }\n          },\n          series: [{\n            name: 'AQI',\n            type: 'bar',\n            stack: 'total',\n            color: '#065279',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: [this.cityallranks[0].aqi, this.cityallranks[1].aqi, this.cityallranks[2].aqi, this.cityallranks[3].aqi, this.cityallranks[4].aqi, this.cityallranks[5].aqi, this.cityallranks[6].aqi]\n          }, {\n            name: 'CO',\n            type: 'bar',\n            stack: 'total',\n            color: '#177cb0',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: [this.cityallranks[0].co, this.cityallranks[1].co, this.cityallranks[2].co, this.cityallranks[3].co, this.cityallranks[4].co, this.cityallranks[5].co, this.cityallranks[6].co]\n          }, {\n            name: 'NO2',\n            type: 'bar',\n            stack: 'total',\n            color: '#1685a9',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: [this.cityallranks[0].no2, this.cityallranks[1].no2, this.cityallranks[2].no2, this.cityallranks[3].no2, this.cityallranks[4].no2, this.cityallranks[5].no2, this.cityallranks[6].no2]\n          }, {\n            name: 'PM25',\n            type: 'bar',\n            stack: 'total',\n            color: '#3eede7',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: [this.cityallranks[0].pm25, this.cityallranks[1].pm25, this.cityallranks[2].pm25, this.cityallranks[3].pm25, this.cityallranks[4].pm25, this.cityallranks[5].pm25, this.cityallranks[6].pm25]\n          }, {\n            name: 'PM10',\n            type: 'bar',\n            stack: 'total',\n            color: '#44cef6',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: [this.cityallranks[0].pm10, this.cityallranks[1].pm10, this.cityallranks[2].pm10, this.cityallranks[3].pm10, this.cityallranks[4].pm10, this.cityallranks[5].pm10, this.cityallranks[6].pm10]\n          }, {\n            name: 'SO2',\n            type: 'bar',\n            stack: 'total',\n            color: '#70f3ff',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: [this.cityallranks[0].so2, this.cityallranks[1].so2, this.cityallranks[2].so2, this.cityallranks[3].so2, this.cityallranks[4].so2, this.cityallranks[5].so2, this.cityallranks[6].so2]\n          }, {\n            name: 'O3',\n            type: 'bar',\n            stack: 'total',\n            color: '#003472',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: [this.cityallranks[0].o3, this.cityallranks[1].o3, this.cityallranks[2].o3, this.cityallranks[3].o3, this.cityallranks[4].o3, this.cityallranks[5].o3, this.cityallranks[6].o3]\n          }]\n        };\n        var chartDom = document.getElementById('bar');\n        var myChart = echarts.init(chartDom);\n        option && myChart.setOption(option);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAMA;AACA;EACAA,kBADA;;EAEAC;IACA;MACAC,gBADA;MAEAC,eAFA;MAGAC;IAHA;EAKA,CARA;;EASAC;IACA;EACA,CAXA;;EAYAC;IAEA;EACA,CAfA;;EAgBAC;IACAC,YACA,CAFA;;IAGAC;MAEA;MACA;QACA;QACA;QACA;QAEA;QACA;QACA;;QACA;UACA;YACA;cACAC;cACAC;cACAA;YACA;UACA;QACA,CAhBA,CAiBA;;;QACA;UACA;YAAA;UAAA;;UAEA;UAEA;QACA,CAxBA,CAyBA;;;QACAC;UACAC;YACAC,kBADA;YAEAC;cACA;cACAC;YAFA,CAFA;YAMAC;UANA,CADA;UASAC;YACAC,eADA;YAEAC;cACA;cACAC,cAFA,CAEA;;YAFA,CAFA;YAMAC;cACA;cACA,yFACA,OADA,GACA,OADA,GACA,OADA,GACA,OADA,GACA,OADA,GACA,OADA,GACA,mDADA,GAEAC,cAFA,GAEA,SAFA;cAIA;;cACA;gBACAC;cACA,CAFA,MAEA;gBACAA;cACA;;cACA;YAEA;UApBA,CATA;UA+BAC;YACAV;cACAC;YADA,CADA;YAIAC;UAJA,CA/BA;UAqCAS;YACAC,UADA;YAEAC,WAFA;YAGAC,YAHA;YAIAC;UAJA,CArCA;UA2CAC;YACAV,aADA;YAEAW;cAEAjB;gBACAC;cADA;YAFA;UAFA,CA3CA;UAoDAiB;YACAZ,gBADA;YAEAW;cACAjB;gBACAC;cADA;YADA,CAFA;YAOAf,iJACA,mEADA,EACA,mEADA,EAEA,mEAFA,EAEA,mEAFA,EAGA,mEAHA;UAPA,CApDA;UAgEAiC;YACAC,UADA;YAEAlB,UAFA;YAGAmB;cACAC,oBADA;cAEAC,sBAFA;cAGAtB;YAHA,CAHA;YAQAuB;cACAC;gBACAC;cADA,CADA;cAIAC;gBAAAC;cAAA,CAJA;cAKAC;gBAAAvB;cAAA,CALA;cAMAwB,WANA;cAOAC;YAPA;UARA,CAhEA;UAkFAC,SACA;YACA/C,WADA;YAEAqB,WAFA;YAGA2B,cAHA;YAIAhC,gBAJA;YAKAiC;cACAd;YADA,CALA;YAQAe;cACAC;YADA,CARA;YAaAlD,qFACA,wBADA,EACA,wBADA,EACA,wBADA,EACA,wBADA;UAbA,CADA,EAkBA;YACAD,UADA;YAEAqB,WAFA;YAGA2B,cAHA;YAIAhC,gBAJA;YAKAiC;cACAd;YADA,CALA;YAQAe;cACAC;YADA,CARA;YAWAlD,kFACA,uBADA,EACA,uBADA,EACA,uBADA,EACA,uBADA;UAXA,CAlBA,EAgCA;YACAD,WADA;YAEAqB,WAFA;YAGA2B,cAHA;YAIAhC,gBAJA;YAKAiC;cACAd;YADA,CALA;YAQAe;cACAC;YADA,CARA;YAWAlD,qFACA,wBADA,EACA,wBADA,EACA,wBADA,EACA,wBADA;UAXA,CAhCA,EA8CA;YACAD,YADA;YAEAqB,WAFA;YAGA2B,cAHA;YAIAhC,gBAJA;YAKAiC;cACAd;YADA,CALA;YAQAe;cACAC;YADA,CARA;YAWAlD,wFACA,yBADA,EACA,yBADA,EACA,yBADA,EACA,yBADA;UAXA,CA9CA,EA4DA;YACAD,YADA;YAEAqB,WAFA;YAGA2B,cAHA;YAIAhC,gBAJA;YAKAiC;cACAd;YADA,CALA;YAQAe;cACAC;YADA,CARA;YAWAlD,wFACA,yBADA,EACA,yBADA,EACA,yBADA,EACA,yBADA;UAXA,CA5DA,EAyEA;YACAD,WADA;YAEAqB,WAFA;YAGA2B,cAHA;YAIAhC,gBAJA;YAKAiC;cACAd;YADA,CALA;YAQAe;cACAC;YADA,CARA;YAWAlD,qFACA,wBADA,EACA,wBADA,EACA,wBADA,EACA,wBADA;UAXA,CAzEA,EAsFA;YACAD,UADA;YAEAqB,WAFA;YAGA2B,cAHA;YAIAhC,gBAJA;YAKAiC;cACAd;YADA,CALA;YAQAe;cACAC;YADA,CARA;YAWAlD,kFACA,uBADA,EACA,uBADA,EACA,uBADA,EACA,uBADA;UAXA,CAtFA;QAlFA;QAyLA;QACA;QAEAW;MACA,CAvNA;IA0NA;;EAhOA;AAhBA","names":["name","data","cityallranks","cityaqirank","test","created","mounted","methods","initdata","echartsInit","temp","res","option","title","text","textStyle","color","top","tooltip","trigger","axisPointer","type","formatter","params","relVal","legend","grid","left","right","bottom","containLabel","xAxis","axisLabel","yAxis","toolbox","show","iconStyle","borderColor","backgroundColor","feature","dataZoom","yAxisIndex","dataView","readOnly","magicType","restore","saveAsImage","series","stack","label","emphasis","focus"],"sourceRoot":"src/components","sources":["echartsbar.vue"],"sourcesContent":["<template>\r\n  <div id=\"bar\" style=\"height:350px\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport  * as echarts from 'echarts'\r\nexport default {\r\n  name: \"echartsbar\",\r\n  data() {\r\n    return {\r\n      cityallranks:[],\r\n      cityaqirank:[],\r\n      test:[\"test\"]\r\n    }\r\n  },\r\n  created() {\r\n    this.initdata()\r\n  },\r\n  mounted() {\r\n\r\n    this.echartsInit()\r\n  },\r\n  methods: {\r\n    initdata(){\r\n    },\r\n    echartsInit() {\r\n\r\n      var option;\r\n      this.request.get(\"/nowatmospheredata/GetNowAQI\").then(res=>{\r\n        // if(res[0].aqi>res[2].aqi){\r\n        //   console.log(\"ok!\")\r\n        // }\r\n\r\n        var num=res.length\r\n        var i,j;\r\n        var temp;\r\n        for(i=num-1;i>0;i--){\r\n          for(j=0;j<i;j++){\r\n            if(res[j].aqi>res[j+1].aqi){\r\n              temp=res[j]\r\n              res[j]=res[j+1]\r\n              res[j+1]=temp\r\n            }\r\n          }\r\n        }\r\n        //console.log(res)\r\n        for(var k=0;k<res.length;k++){\r\n          if(res[k].aqi==null){continue}\r\n\r\n          this.cityallranks.push(res[k])\r\n\r\n          if(this.cityallranks.length===7)break\r\n        }\r\n        //console.log(this.cityallranks)\r\n        option = {\r\n          title: {\r\n            text: '测区空气质量当天排名',\r\n            textStyle: {\r\n              //文字颜色\r\n              color: '#fff',\r\n            },\r\n            top:'0px',\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              // Use axis to trigger tooltip\r\n              type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\r\n            },\r\n            formatter:function (params){\r\n              let name=params[0].seriesName;\r\n              const result=params[0].axisValue+'<br/>'+params[0].marker+params[0].seriesName+\r\n                  '&nbsp'+'&nbsp'+'&nbsp'+'&nbsp'+'&nbsp'+'&nbsp'+'<span style=\\\"font-size: 14px;font-weight: 900;\">'\r\n                  +params[0].data+'</span>';\r\n\r\n              let relVal=result;\r\n              if(name=='AQI'){\r\n                relVal=result;\r\n              }else if (name=='PM2.5'){\r\n                relVal=result+\"ug/m³\"\r\n              }\r\n              return relVal\r\n\r\n            }\r\n          },\r\n          legend: {\r\n            textStyle:{\r\n              color:'#fff',\r\n            },\r\n            top:'25px',\r\n          },\r\n          grid: {\r\n            left: '0%',\r\n            right: '0%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            axisLabel:{\r\n\r\n              textStyle:{\r\n                color:'#fff',\r\n              },\r\n            },\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            axisLabel:{\r\n              textStyle:{\r\n                color:'#fff',\r\n              },\r\n            },\r\n            data: [''+this.cityallranks[6].city+this.cityallranks[6].station+'站', ''+this.cityallranks[5].city+this.cityallranks[5].station+'站',\r\n              ''+this.cityallranks[4].city+this.cityallranks[4].station+'站',''+this.cityallranks[3].city+this.cityallranks[3].station+'站',\r\n              ''+this.cityallranks[2].city+this.cityallranks[2].station+'站', ''+this.cityallranks[1].city+this.cityallranks[1].station+'站',\r\n              ''+this.cityallranks[0].city+this.cityallranks[0].station+'站']\r\n          },\r\n          toolbox: {\r\n            show: true,\r\n            top: '0px',\r\n            iconStyle: {\r\n              borderColor: '#blue',\r\n              backgroundColor: 'fff',\r\n              color: '#fff',\r\n            },\r\n            feature: {\r\n              dataZoom: {\r\n                yAxisIndex: ''\r\n              },\r\n              dataView: {readOnly: false},\r\n              magicType: {type: ['line', 'bar']},\r\n              restore: {},\r\n              saveAsImage: {}\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: 'AQI',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              color:'#065279',\r\n              label: {\r\n                show: true,\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n\r\n\r\n              data: [this.cityallranks[0].aqi , this.cityallranks[1].aqi, this.cityallranks[2].aqi,\r\n                this.cityallranks[3].aqi, this.cityallranks[4].aqi, this.cityallranks[5].aqi, this.cityallranks[6].aqi]\r\n            },\r\n\r\n            {\r\n              name: 'CO',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              color:'#177cb0',\r\n              label: {\r\n                show: true\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: [this.cityallranks[0].co, this.cityallranks[1].co, this.cityallranks[2].co,\r\n                this.cityallranks[3].co, this.cityallranks[4].co, this.cityallranks[5].co, this.cityallranks[6].co]\r\n            },\r\n            {\r\n              name: 'NO2',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              color:'#1685a9',\r\n              label: {\r\n                show: true,\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: [this.cityallranks[0].no2, this.cityallranks[1].no2, this.cityallranks[2].no2,\r\n                this.cityallranks[3].no2, this.cityallranks[4].no2, this.cityallranks[5].no2, this.cityallranks[6].no2]\r\n            },\r\n            {\r\n              name: 'PM25',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              color:'#3eede7',\r\n              label: {\r\n                show: true\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: [this.cityallranks[0].pm25, this.cityallranks[1].pm25, this.cityallranks[2].pm25,\r\n                this.cityallranks[3].pm25, this.cityallranks[4].pm25, this.cityallranks[5].pm25, this.cityallranks[6].pm25]\r\n            },\r\n            {\r\n              name: 'PM10',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              color:'#44cef6',\r\n              label: {\r\n                show: true\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: [this.cityallranks[0].pm10, this.cityallranks[1].pm10, this.cityallranks[2].pm10,\r\n                this.cityallranks[3].pm10, this.cityallranks[4].pm10, this.cityallranks[5].pm10, this.cityallranks[6].pm10]\r\n            },{\r\n              name: 'SO2',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              color:'#70f3ff',\r\n              label: {\r\n                show: true\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: [this.cityallranks[0].so2, this.cityallranks[1].so2, this.cityallranks[2].so2,\r\n                this.cityallranks[3].so2, this.cityallranks[4].so2, this.cityallranks[5].so2, this.cityallranks[6].so2]\r\n            },{\r\n              name: 'O3',\r\n              type: 'bar',\r\n              stack: 'total',\r\n              color:'#003472',\r\n              label: {\r\n                show: true\r\n              },\r\n              emphasis: {\r\n                focus: 'series'\r\n              },\r\n              data: [this.cityallranks[0].o3, this.cityallranks[1].o3, this.cityallranks[2].o3,\r\n                this.cityallranks[3].o3, this.cityallranks[4].o3, this.cityallranks[5].o3, this.cityallranks[6].o3]\r\n            }\r\n          ]\r\n        };\r\n\r\n        var chartDom = document.getElementById('bar');\r\n        var myChart = echarts.init(chartDom);\r\n\r\n        option && myChart.setOption(option);\r\n      })\r\n\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}