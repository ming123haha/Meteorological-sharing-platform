{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../../../../core/maybe.js\";\nimport t from \"../../../../core/ObjectPool.js\";\nimport n from \"../../../../core/PooledArray.js\";\nimport { g as o, a as r, d as s, c as i, h } from \"../../../../chunks/vec3.js\";\nimport { c as a, f as d } from \"../../../../chunks/vec3f64.js\";\nimport { intersectsSphere as l } from \"../../../../geometry/support/frustum.js\";\nimport { wrap as c } from \"../../../../geometry/support/ray.js\";\nimport { h as u, a as f, g as _, j as m, c as p } from \"../../../../chunks/sphere.js\";\nimport { rayBoxTest as b } from \"./Util.js\";\n\nclass g {\n  constructor(e, t) {\n    this._objectToBoundingSphere = e, this._maximumObjectsPerNode = 10, this._maximumDepth = 20, this._degenerateObjects = new Set(), this._root = new O(), this._objectCount = 0, t && (void 0 !== t.maximumObjectsPerNode && (this._maximumObjectsPerNode = t.maximumObjectsPerNode), void 0 !== t.maximumDepth && (this._maximumDepth = t.maximumDepth));\n  }\n\n  get bounds() {\n    return this._root.bounds;\n  }\n\n  get halfSize() {\n    return this._root.halfSize;\n  }\n\n  get root() {\n    return this._root.node;\n  }\n\n  get maximumObjectsPerNode() {\n    return this._maximumObjectsPerNode;\n  }\n\n  get maximumDepth() {\n    return this._maximumDepth;\n  }\n\n  get objectCount() {\n    return this._objectCount;\n  }\n\n  destroy() {\n    this._degenerateObjects.clear(), O.clearPool(), B[0] = null, w.prune(), W.prune();\n  }\n\n  add(e, t = e.length) {\n    this._objectCount += t, this._grow(e, t);\n    const n = O.acquire();\n\n    for (let o = 0; o < t; o++) {\n      const t = e[o];\n      this._isDegenerate(t) ? this._degenerateObjects.add(t) : (n.init(this._root), this._add(t, n));\n    }\n\n    O.release(n);\n  }\n\n  remove(t, n = null) {\n    this._objectCount -= t.length;\n    const o = O.acquire();\n\n    for (const r of t) {\n      const t = e(n) ? n : u(this._objectToBoundingSphere(r), C);\n      z(t[3]) ? (o.init(this._root), this._remove(r, t, o)) : this._degenerateObjects.delete(r);\n    }\n\n    O.release(o), this._shrink();\n  }\n\n  update(e, t) {\n    if (!z(t[3]) && this._isDegenerate(e)) return;\n    const n = R(e);\n    this.remove(n, t), this.add(n);\n  }\n\n  forEachAlongRay(e, t, n) {\n    const o = c(e, t);\n\n    this._forEachNode(this._root, e => {\n      if (!this._intersectsNode(o, e)) return !1;\n      const t = e.node;\n      return t.terminals.forAll(e => {\n        this._intersectsObject(o, e) && n(e);\n      }), null !== t.residents && t.residents.forAll(e => {\n        this._intersectsObject(o, e) && n(e);\n      }), !0;\n    });\n  }\n\n  forEachAlongRayWithVerticalOffset(e, t, n, o) {\n    const r = c(e, t);\n\n    this._forEachNode(this._root, e => {\n      if (!this._intersectsNodeWithOffset(r, e, o)) return !1;\n      const t = e.node;\n      return t.terminals.forAll(e => {\n        this._intersectsObjectWithOffset(r, e, o) && n(e);\n      }), null !== t.residents && t.residents.forAll(e => {\n        this._intersectsObjectWithOffset(r, e, o) && n(e);\n      }), !0;\n    });\n  }\n\n  forEach(e) {\n    this._forEachNode(this._root, t => {\n      const n = t.node;\n      return n.terminals.forAll(e), null !== n.residents && n.residents.forAll(e), !0;\n    }), this._degenerateObjects.forEach(e);\n  }\n\n  forEachDegenerateObject(e) {\n    this._degenerateObjects.forEach(e);\n  }\n\n  findClosest(e, t, n, s = () => !0, i = 1 / 0) {\n    let h = 1 / 0,\n        a = 1 / 0,\n        d = null;\n\n    const c = E(e, t),\n          u = o => {\n      if (--i, !s(o)) return;\n\n      const r = this._objectToBoundingSphere(o);\n\n      if (!l(n, r)) return;\n      const c = M(e, t, _(r)),\n            u = c - r[3],\n            f = c + r[3];\n      u < h && (h = u, a = f, d = o);\n    };\n\n    return this._forEachNodeDepthOrdered(this._root, s => {\n      if (i <= 0 || !l(n, s.bounds)) return !1;\n      o(F, c, s.halfSize), r(F, F, s.bounds);\n      if (M(e, t, F) > a) return !1;\n      const h = s.node;\n      return h.terminals.forAll(e => u(e)), null !== h.residents && h.residents.forAll(e => u(e)), !0;\n    }, e, t), d;\n  }\n\n  forEachInDepthRange(e, t, n, s, i, h, a) {\n    let d = -1 / 0,\n        c = 1 / 0;\n    const u = {\n      setRange: e => {\n        n === g.DepthOrder.FRONT_TO_BACK ? (d = Math.max(d, e.near), c = Math.min(c, e.far)) : (d = Math.max(d, -e.far), c = Math.min(c, -e.near));\n      }\n    };\n    u.setRange(s);\n\n    const f = M(t, n, e),\n          m = E(t, n),\n          p = E(t, -n),\n          b = e => {\n      if (!a(e)) return;\n\n      const o = this._objectToBoundingSphere(e),\n            r = _(o),\n            s = M(t, n, r) - f,\n            m = s - o[3],\n            p = s + o[3];\n\n      m > c || p < d || !l(h, o) || i(e, u);\n    };\n\n    this._forEachNodeDepthOrdered(this._root, e => {\n      if (!l(h, e.bounds)) return !1;\n      o(F, m, e.halfSize), r(F, F, e.bounds);\n      if (M(t, n, F) - f > c) return !1;\n      o(F, p, e.halfSize), r(F, F, e.bounds);\n      if (M(t, n, F) - f < d) return !1;\n      const s = e.node;\n      return s.terminals.forAll(e => b(e)), null !== s.residents && s.residents.forAll(e => b(e)), !0;\n    }, t, n);\n  }\n\n  forEachNode(e) {\n    this._forEachNode(this._root, t => e(t.node, t.bounds, t.halfSize));\n  }\n\n  forEachNeighbor(e, t) {\n    const n = f(t),\n          o = _(t),\n          r = t => {\n      const r = this._objectToBoundingSphere(t),\n            i = f(r),\n            h = n + i;\n\n      return !(s(_(r), o) - h * h <= 0) || e(t);\n    };\n\n    let i = !0;\n\n    const h = e => {\n      i && (i = r(e));\n    };\n\n    this._forEachNode(this._root, e => {\n      const t = f(e.bounds),\n            r = n + t;\n      if (s(_(e.bounds), o) - r * r > 0) return !1;\n      const a = e.node;\n      return a.terminals.forAll(h), i && null !== a.residents && a.residents.forAll(h), i;\n    }), i && this.forEachDegenerateObject(h);\n  }\n\n  _intersectsNode(e, t) {\n    return x(t.bounds, 2 * -t.halfSize, k), x(t.bounds, 2 * t.halfSize, q), b(e.origin, e.direction, k, q);\n  }\n\n  _intersectsNodeWithOffset(e, t, n) {\n    return x(t.bounds, 2 * -t.halfSize, k), x(t.bounds, 2 * t.halfSize, q), n.applyToMinMax(k, q), b(e.origin, e.direction, k, q);\n  }\n\n  _intersectsObject(e, t) {\n    const n = this._objectToBoundingSphere(t);\n\n    return !(n[3] > 0) || m(n, e);\n  }\n\n  _intersectsObjectWithOffset(e, t, n) {\n    const o = this._objectToBoundingSphere(t);\n\n    return !(o[3] > 0) || m(n.applyToBoundingSphere(o), e);\n  }\n\n  _forEachNode(e, t) {\n    let n = O.acquire().init(e);\n    const o = [n];\n\n    for (; 0 !== o.length;) {\n      if (n = o.pop(), t(n) && !n.isLeaf()) for (let e = 0; e < n.node.children.length; e++) {\n        n.node.children[e] && o.push(O.acquire().init(n).advance(e));\n      }\n      O.release(n);\n    }\n  }\n\n  _forEachNodeDepthOrdered(e, t, n, o = g.DepthOrder.FRONT_TO_BACK) {\n    let r = O.acquire().init(e);\n    const s = [r];\n\n    for (T(n, o, V); 0 !== s.length;) {\n      if (r = s.pop(), t(r) && !r.isLeaf()) for (let e = 7; e >= 0; --e) {\n        const t = V[e];\n        r.node.children[t] && s.push(O.acquire().init(r).advance(t));\n      }\n      O.release(r);\n    }\n  }\n\n  _remove(e, t, n) {\n    w.clear();\n    const o = n.advanceTo(t, (e, t) => {\n      w.push(e.node), w.push(t);\n    }) ? n.node.terminals : n.node.residents;\n    if (o.removeUnordered(e), 0 === o.length) for (let r = w.length - 2; r >= 0; r -= 2) {\n      const e = w.data[r],\n            t = w.data[r + 1];\n      if (!this._purge(e, t)) break;\n    }\n  }\n\n  _nodeIsEmpty(e) {\n    if (0 !== e.terminals.length) return !1;\n    if (null !== e.residents) return 0 === e.residents.length;\n\n    for (let t = 0; t < e.children.length; t++) if (e.children[t]) return !1;\n\n    return !0;\n  }\n\n  _purge(e, t) {\n    return t >= 0 && (e.children[t] = null), !!this._nodeIsEmpty(e) && (null === e.residents && (e.residents = new n({\n      shrink: !0\n    })), !0);\n  }\n\n  _add(e, t) {\n    t.advanceTo(this._objectToBoundingSphere(e)) ? t.node.terminals.push(e) : (t.node.residents.push(e), t.node.residents.length > this._maximumObjectsPerNode && t.depth < this._maximumDepth && this._split(t));\n  }\n\n  _split(e) {\n    const t = e.node.residents;\n    e.node.residents = null;\n\n    for (let n = 0; n < t.length; n++) {\n      const o = O.acquire().init(e);\n      this._add(t.getItemAt(n), o), O.release(o);\n    }\n  }\n\n  _grow(e, t) {\n    if (0 !== t && (N(e, t, e => this._objectToBoundingSphere(e), I), z(I[3]) && !this._fitsInsideTree(I))) if (this._nodeIsEmpty(this._root.node)) u(I, this._root.bounds), this._root.halfSize = 1.25 * I[3];else {\n      const e = this._rootBoundsForRootAsSubNode(I);\n\n      this._placingRootViolatesMaxDepth(e) ? this._rebuildTree(I, e) : this._growRootAsSubNode(e), O.release(e);\n    }\n  }\n\n  _rebuildTree(e, t) {\n    i(P, t.bounds), P[3] = t.halfSize, N([e, P], 2, e => e, L);\n    const n = O.acquire().init(this._root);\n    this._root.initFrom(null, L, 1.25 * L[3]), this._forEachNode(n, e => (this.add(e.node.terminals.data, e.node.terminals.length), null !== e.node.residents && this.add(e.node.residents.data, e.node.residents.length), !0)), O.release(n);\n  }\n\n  _placingRootViolatesMaxDepth(e) {\n    const t = Math.log(e.halfSize / this._root.halfSize) * Math.LOG2E;\n    let n = 0;\n    return this._forEachNode(this._root, e => (n = Math.max(n, e.depth), n + t <= this._maximumDepth)), n + t > this._maximumDepth;\n  }\n\n  _rootBoundsForRootAsSubNode(e) {\n    const t = e[3],\n          n = e;\n    let o = -1 / 0;\n    const r = this._root.bounds,\n          s = this._root.halfSize;\n\n    for (let i = 0; i < 3; i++) {\n      const e = r[i] - s - (n[i] - t),\n            h = n[i] + t - (r[i] + s),\n            a = Math.max(0, Math.ceil(e / (2 * s))),\n            d = Math.max(0, Math.ceil(h / (2 * s))) + 1,\n            l = 2 ** Math.ceil(Math.log(a + d) * Math.LOG2E);\n      o = Math.max(o, l), K[i].min = a, K[i].max = d;\n    }\n\n    for (let i = 0; i < 3; i++) {\n      let e = K[i].min,\n          t = K[i].max;\n      const n = (o - (e + t)) / 2;\n      e += Math.ceil(n), t += Math.floor(n);\n      const h = r[i] - s - e * s * 2;\n      y[i] = h + (t + e) * s;\n    }\n\n    return y[3] = o * s * v, O.acquire().initFrom(null, y, o * s, 0);\n  }\n\n  _growRootAsSubNode(e) {\n    const t = this._root.node;\n    i(I, this._root.bounds), I[3] = this._root.halfSize, this._root.init(e), e.advanceTo(I, null, !0), e.node.children = t.children, e.node.residents = t.residents, e.node.terminals = t.terminals;\n  }\n\n  _shrink() {\n    for (;;) {\n      const e = this._findShrinkIndex();\n\n      if (-1 === e) break;\n      this._root.advance(e), this._root.depth = 0;\n    }\n  }\n\n  _findShrinkIndex() {\n    if (0 !== this._root.node.terminals.length || this._root.isLeaf()) return -1;\n    let e = null;\n    const t = this._root.node.children;\n    let n = 0,\n        o = 0;\n\n    for (; o < t.length && null == e;) n = o++, e = t[n];\n\n    for (; o < t.length;) if (t[o++]) return -1;\n\n    return n;\n  }\n\n  _isDegenerate(e) {\n    return !z(this._objectToBoundingSphere(e)[3]);\n  }\n\n  _fitsInsideTree(e) {\n    const t = this._root.bounds,\n          n = this._root.halfSize;\n    return e[3] <= n && e[0] >= t[0] - n && e[0] <= t[0] + n && e[1] >= t[1] - n && e[1] <= t[1] + n && e[2] >= t[2] - n && e[2] <= t[2] + n;\n  }\n\n}\n\nclass O {\n  constructor() {\n    this.bounds = p(), this.halfSize = 0, this.initFrom(null, null, 0, 0);\n  }\n\n  init(e) {\n    return this.initFrom(e.node, e.bounds, e.halfSize, e.depth);\n  }\n\n  initFrom(t, n, o, r = this.depth) {\n    return this.node = e(t) ? t : O.createEmptyNode(), e(n) && u(n, this.bounds), this.halfSize = o, this.depth = r, this;\n  }\n\n  advance(e) {\n    let t = this.node.children[e];\n    t || (t = O.createEmptyNode(), this.node.children[e] = t), this.node = t, this.halfSize /= 2, this.depth++;\n    const n = A[e];\n    return this.bounds[0] += n[0] * this.halfSize, this.bounds[1] += n[1] * this.halfSize, this.bounds[2] += n[2] * this.halfSize, this.bounds[3] = this.halfSize * v, this;\n  }\n\n  advanceTo(e, t, n = !1) {\n    for (;;) {\n      if (this.isTerminalFor(e)) return t && t(this, -1), !0;\n\n      if (this.isLeaf()) {\n        if (!n) return t && t(this, -1), !1;\n        this.node.residents = null;\n      }\n\n      const o = this._childIndex(e);\n\n      t && t(this, o), this.advance(o);\n    }\n  }\n\n  isLeaf() {\n    return null != this.node.residents;\n  }\n\n  isTerminalFor(e) {\n    return e[3] > this.halfSize / 2;\n  }\n\n  _childIndex(e) {\n    const t = this.bounds;\n    return (t[0] < e[0] ? 1 : 0) + (t[1] < e[1] ? 2 : 0) + (t[2] < e[2] ? 4 : 0);\n  }\n\n  static createEmptyNode() {\n    return {\n      children: [null, null, null, null, null, null, null, null],\n      terminals: new n({\n        shrink: !0\n      }),\n      residents: new n({\n        shrink: !0\n      })\n    };\n  }\n\n  static acquire() {\n    return O._pool.acquire();\n  }\n\n  static release(e) {\n    O._pool.release(e);\n  }\n\n  static clearPool() {\n    O._pool.prune();\n  }\n\n}\n\nfunction j(e, t) {\n  e[0] = Math.min(e[0], t[0] - t[3]), e[1] = Math.min(e[1], t[1] - t[3]), e[2] = Math.min(e[2], t[2] - t[3]);\n}\n\nfunction S(e, t) {\n  e[0] = Math.max(e[0], t[0] + t[3]), e[1] = Math.max(e[1], t[1] + t[3]), e[2] = Math.max(e[2], t[2] + t[3]);\n}\n\nfunction x(e, t, n) {\n  n[0] = e[0] + t, n[1] = e[1] + t, n[2] = e[2] + t;\n}\n\nfunction N(e, t, n, o) {\n  if (1 === t) {\n    const t = n(e[0]);\n    u(t, o);\n  } else {\n    k[0] = 1 / 0, k[1] = 1 / 0, k[2] = 1 / 0, q[0] = -1 / 0, q[1] = -1 / 0, q[2] = -1 / 0;\n\n    for (let o = 0; o < t; o++) {\n      const t = n(e[o]);\n      z(t[3]) && (j(k, t), S(q, t));\n    }\n\n    h(o, k, q, .5), o[3] = Math.max(q[0] - k[0], q[1] - k[1], q[2] - k[2]) / 2;\n  }\n}\n\nfunction T(e, t, n) {\n  if (!W.length) for (let o = 0; o < 8; ++o) W.push({\n    index: 0,\n    distance: 0\n  });\n\n  for (let o = 0; o < 8; ++o) {\n    const n = A[o];\n    W.data[o].index = o, W.data[o].distance = M(e, t, n);\n  }\n\n  W.sort((e, t) => e.distance - t.distance);\n\n  for (let o = 0; o < 8; ++o) n[o] = W.data[o].index;\n}\n\nfunction E(e, t) {\n  let n,\n      o = 1 / 0;\n\n  for (let r = 0; r < 8; ++r) {\n    const s = M(e, t, D[r]);\n    s < o && (o = s, n = D[r]);\n  }\n\n  return n;\n}\n\nfunction M(e, t, n) {\n  return t * (e[0] * n[0] + e[1] * n[1] + e[2] * n[2]);\n}\n\nfunction z(e) {\n  return !isNaN(e) && e !== -1 / 0 && e !== 1 / 0 && e > 0;\n}\n\nO._pool = new t(O), function (e) {\n  var t;\n  (t = e.DepthOrder || (e.DepthOrder = {}))[t.FRONT_TO_BACK = 1] = \"FRONT_TO_BACK\", t[t.BACK_TO_FRONT = -1] = \"BACK_TO_FRONT\";\n}(g || (g = {}));\nconst A = [d(-1, -1, -1), d(1, -1, -1), d(-1, 1, -1), d(1, 1, -1), d(-1, -1, 1), d(1, -1, 1), d(-1, 1, 1), d(1, 1, 1)],\n      D = [d(-1, -1, -1), d(-1, -1, 1), d(-1, 1, -1), d(-1, 1, 1), d(1, -1, -1), d(1, -1, 1), d(1, 1, -1), d(1, 1, 1)],\n      v = Math.sqrt(3),\n      B = [null];\n\nfunction R(e) {\n  return B[0] = e, B;\n}\n\nconst y = p(),\n      F = a(),\n      k = a(),\n      q = a(),\n      w = new n(),\n      C = p(),\n      I = p(),\n      P = p(),\n      L = p(),\n      K = [{\n  min: 0,\n  max: 0\n}, {\n  min: 0,\n  max: 0\n}, {\n  min: 0,\n  max: 0\n}],\n      W = new n(),\n      V = [0, 0, 0, 0, 0, 0, 0, 0],\n      G = g;\nexport { G as default };","map":{"version":3,"names":["isSome","e","t","n","g","o","a","r","d","s","c","i","h","f","intersectsSphere","l","wrap","u","_","j","m","p","rayBoxTest","b","constructor","_objectToBoundingSphere","_maximumObjectsPerNode","_maximumDepth","_degenerateObjects","Set","_root","O","_objectCount","maximumObjectsPerNode","maximumDepth","bounds","halfSize","root","node","objectCount","destroy","clear","clearPool","B","w","prune","W","add","length","_grow","acquire","_isDegenerate","init","_add","release","remove","C","z","_remove","delete","_shrink","update","R","forEachAlongRay","_forEachNode","_intersectsNode","terminals","forAll","_intersectsObject","residents","forEachAlongRayWithVerticalOffset","_intersectsNodeWithOffset","_intersectsObjectWithOffset","forEach","forEachDegenerateObject","findClosest","E","M","_forEachNodeDepthOrdered","F","forEachInDepthRange","setRange","DepthOrder","FRONT_TO_BACK","Math","max","near","min","far","forEachNode","forEachNeighbor","x","k","q","origin","direction","applyToMinMax","applyToBoundingSphere","pop","isLeaf","children","push","advance","T","V","advanceTo","removeUnordered","data","_purge","_nodeIsEmpty","shrink","depth","_split","getItemAt","N","I","_fitsInsideTree","_rootBoundsForRootAsSubNode","_placingRootViolatesMaxDepth","_rebuildTree","_growRootAsSubNode","P","L","initFrom","log","LOG2E","ceil","K","floor","y","v","_findShrinkIndex","createEmptyNode","A","isTerminalFor","_childIndex","_pool","S","index","distance","sort","D","isNaN","BACK_TO_FRONT","sqrt","G","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/webgl-engine/lib/Octree.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../core/maybe.js\";import t from\"../../../../core/ObjectPool.js\";import n from\"../../../../core/PooledArray.js\";import{g as o,a as r,d as s,c as i,h}from\"../../../../chunks/vec3.js\";import{c as a,f as d}from\"../../../../chunks/vec3f64.js\";import{intersectsSphere as l}from\"../../../../geometry/support/frustum.js\";import{wrap as c}from\"../../../../geometry/support/ray.js\";import{h as u,a as f,g as _,j as m,c as p}from\"../../../../chunks/sphere.js\";import{rayBoxTest as b}from\"./Util.js\";class g{constructor(e,t){this._objectToBoundingSphere=e,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new O,this._objectCount=0,t&&(void 0!==t.maximumObjectsPerNode&&(this._maximumObjectsPerNode=t.maximumObjectsPerNode),void 0!==t.maximumDepth&&(this._maximumDepth=t.maximumDepth))}get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}destroy(){this._degenerateObjects.clear(),O.clearPool(),B[0]=null,w.prune(),W.prune()}add(e,t=e.length){this._objectCount+=t,this._grow(e,t);const n=O.acquire();for(let o=0;o<t;o++){const t=e[o];this._isDegenerate(t)?this._degenerateObjects.add(t):(n.init(this._root),this._add(t,n))}O.release(n)}remove(t,n=null){this._objectCount-=t.length;const o=O.acquire();for(const r of t){const t=e(n)?n:u(this._objectToBoundingSphere(r),C);z(t[3])?(o.init(this._root),this._remove(r,t,o)):this._degenerateObjects.delete(r)}O.release(o),this._shrink()}update(e,t){if(!z(t[3])&&this._isDegenerate(e))return;const n=R(e);this.remove(n,t),this.add(n)}forEachAlongRay(e,t,n){const o=c(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNode(o,e))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObject(o,e)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObject(o,e)&&n(e)})),!0}))}forEachAlongRayWithVerticalOffset(e,t,n,o){const r=c(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNodeWithOffset(r,e,o))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObjectWithOffset(r,e,o)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObjectWithOffset(r,e,o)&&n(e)})),!0}))}forEach(e){this._forEachNode(this._root,(t=>{const n=t.node;return n.terminals.forAll(e),null!==n.residents&&n.residents.forAll(e),!0})),this._degenerateObjects.forEach(e)}forEachDegenerateObject(e){this._degenerateObjects.forEach(e)}findClosest(e,t,n,s=(()=>!0),i=1/0){let h=1/0,a=1/0,d=null;const c=E(e,t),u=o=>{if(--i,!s(o))return;const r=this._objectToBoundingSphere(o);if(!l(n,r))return;const c=M(e,t,_(r)),u=c-r[3],f=c+r[3];u<h&&(h=u,a=f,d=o)};return this._forEachNodeDepthOrdered(this._root,(s=>{if(i<=0||!l(n,s.bounds))return!1;o(F,c,s.halfSize),r(F,F,s.bounds);if(M(e,t,F)>a)return!1;const h=s.node;return h.terminals.forAll((e=>u(e))),null!==h.residents&&h.residents.forAll((e=>u(e))),!0}),e,t),d}forEachInDepthRange(e,t,n,s,i,h,a){let d=-1/0,c=1/0;const u={setRange:e=>{n===g.DepthOrder.FRONT_TO_BACK?(d=Math.max(d,e.near),c=Math.min(c,e.far)):(d=Math.max(d,-e.far),c=Math.min(c,-e.near))}};u.setRange(s);const f=M(t,n,e),m=E(t,n),p=E(t,-n),b=e=>{if(!a(e))return;const o=this._objectToBoundingSphere(e),r=_(o),s=M(t,n,r)-f,m=s-o[3],p=s+o[3];m>c||p<d||!l(h,o)||i(e,u)};this._forEachNodeDepthOrdered(this._root,(e=>{if(!l(h,e.bounds))return!1;o(F,m,e.halfSize),r(F,F,e.bounds);if(M(t,n,F)-f>c)return!1;o(F,p,e.halfSize),r(F,F,e.bounds);if(M(t,n,F)-f<d)return!1;const s=e.node;return s.terminals.forAll((e=>b(e))),null!==s.residents&&s.residents.forAll((e=>b(e))),!0}),t,n)}forEachNode(e){this._forEachNode(this._root,(t=>e(t.node,t.bounds,t.halfSize)))}forEachNeighbor(e,t){const n=f(t),o=_(t),r=t=>{const r=this._objectToBoundingSphere(t),i=f(r),h=n+i;return!(s(_(r),o)-h*h<=0)||e(t)};let i=!0;const h=e=>{i&&(i=r(e))};this._forEachNode(this._root,(e=>{const t=f(e.bounds),r=n+t;if(s(_(e.bounds),o)-r*r>0)return!1;const a=e.node;return a.terminals.forAll(h),i&&null!==a.residents&&a.residents.forAll(h),i})),i&&this.forEachDegenerateObject(h)}_intersectsNode(e,t){return x(t.bounds,2*-t.halfSize,k),x(t.bounds,2*t.halfSize,q),b(e.origin,e.direction,k,q)}_intersectsNodeWithOffset(e,t,n){return x(t.bounds,2*-t.halfSize,k),x(t.bounds,2*t.halfSize,q),n.applyToMinMax(k,q),b(e.origin,e.direction,k,q)}_intersectsObject(e,t){const n=this._objectToBoundingSphere(t);return!(n[3]>0)||m(n,e)}_intersectsObjectWithOffset(e,t,n){const o=this._objectToBoundingSphere(t);return!(o[3]>0)||m(n.applyToBoundingSphere(o),e)}_forEachNode(e,t){let n=O.acquire().init(e);const o=[n];for(;0!==o.length;){if(n=o.pop(),t(n)&&!n.isLeaf())for(let e=0;e<n.node.children.length;e++){n.node.children[e]&&o.push(O.acquire().init(n).advance(e))}O.release(n)}}_forEachNodeDepthOrdered(e,t,n,o=g.DepthOrder.FRONT_TO_BACK){let r=O.acquire().init(e);const s=[r];for(T(n,o,V);0!==s.length;){if(r=s.pop(),t(r)&&!r.isLeaf())for(let e=7;e>=0;--e){const t=V[e];r.node.children[t]&&s.push(O.acquire().init(r).advance(t))}O.release(r)}}_remove(e,t,n){w.clear();const o=n.advanceTo(t,((e,t)=>{w.push(e.node),w.push(t)}))?n.node.terminals:n.node.residents;if(o.removeUnordered(e),0===o.length)for(let r=w.length-2;r>=0;r-=2){const e=w.data[r],t=w.data[r+1];if(!this._purge(e,t))break}}_nodeIsEmpty(e){if(0!==e.terminals.length)return!1;if(null!==e.residents)return 0===e.residents.length;for(let t=0;t<e.children.length;t++)if(e.children[t])return!1;return!0}_purge(e,t){return t>=0&&(e.children[t]=null),!!this._nodeIsEmpty(e)&&(null===e.residents&&(e.residents=new n({shrink:!0})),!0)}_add(e,t){t.advanceTo(this._objectToBoundingSphere(e))?t.node.terminals.push(e):(t.node.residents.push(e),t.node.residents.length>this._maximumObjectsPerNode&&t.depth<this._maximumDepth&&this._split(t))}_split(e){const t=e.node.residents;e.node.residents=null;for(let n=0;n<t.length;n++){const o=O.acquire().init(e);this._add(t.getItemAt(n),o),O.release(o)}}_grow(e,t){if(0!==t&&(N(e,t,(e=>this._objectToBoundingSphere(e)),I),z(I[3])&&!this._fitsInsideTree(I)))if(this._nodeIsEmpty(this._root.node))u(I,this._root.bounds),this._root.halfSize=1.25*I[3];else{const e=this._rootBoundsForRootAsSubNode(I);this._placingRootViolatesMaxDepth(e)?this._rebuildTree(I,e):this._growRootAsSubNode(e),O.release(e)}}_rebuildTree(e,t){i(P,t.bounds),P[3]=t.halfSize,N([e,P],2,(e=>e),L);const n=O.acquire().init(this._root);this._root.initFrom(null,L,1.25*L[3]),this._forEachNode(n,(e=>(this.add(e.node.terminals.data,e.node.terminals.length),null!==e.node.residents&&this.add(e.node.residents.data,e.node.residents.length),!0))),O.release(n)}_placingRootViolatesMaxDepth(e){const t=Math.log(e.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return this._forEachNode(this._root,(e=>(n=Math.max(n,e.depth),n+t<=this._maximumDepth))),n+t>this._maximumDepth}_rootBoundsForRootAsSubNode(e){const t=e[3],n=e;let o=-1/0;const r=this._root.bounds,s=this._root.halfSize;for(let i=0;i<3;i++){const e=r[i]-s-(n[i]-t),h=n[i]+t-(r[i]+s),a=Math.max(0,Math.ceil(e/(2*s))),d=Math.max(0,Math.ceil(h/(2*s)))+1,l=2**Math.ceil(Math.log(a+d)*Math.LOG2E);o=Math.max(o,l),K[i].min=a,K[i].max=d}for(let i=0;i<3;i++){let e=K[i].min,t=K[i].max;const n=(o-(e+t))/2;e+=Math.ceil(n),t+=Math.floor(n);const h=r[i]-s-e*s*2;y[i]=h+(t+e)*s}return y[3]=o*s*v,O.acquire().initFrom(null,y,o*s,0)}_growRootAsSubNode(e){const t=this._root.node;i(I,this._root.bounds),I[3]=this._root.halfSize,this._root.init(e),e.advanceTo(I,null,!0),e.node.children=t.children,e.node.residents=t.residents,e.node.terminals=t.terminals}_shrink(){for(;;){const e=this._findShrinkIndex();if(-1===e)break;this._root.advance(e),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let e=null;const t=this._root.node.children;let n=0,o=0;for(;o<t.length&&null==e;)n=o++,e=t[n];for(;o<t.length;)if(t[o++])return-1;return n}_isDegenerate(e){return!z(this._objectToBoundingSphere(e)[3])}_fitsInsideTree(e){const t=this._root.bounds,n=this._root.halfSize;return e[3]<=n&&e[0]>=t[0]-n&&e[0]<=t[0]+n&&e[1]>=t[1]-n&&e[1]<=t[1]+n&&e[2]>=t[2]-n&&e[2]<=t[2]+n}}class O{constructor(){this.bounds=p(),this.halfSize=0,this.initFrom(null,null,0,0)}init(e){return this.initFrom(e.node,e.bounds,e.halfSize,e.depth)}initFrom(t,n,o,r=this.depth){return this.node=e(t)?t:O.createEmptyNode(),e(n)&&u(n,this.bounds),this.halfSize=o,this.depth=r,this}advance(e){let t=this.node.children[e];t||(t=O.createEmptyNode(),this.node.children[e]=t),this.node=t,this.halfSize/=2,this.depth++;const n=A[e];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.bounds[3]=this.halfSize*v,this}advanceTo(e,t,n=!1){for(;;){if(this.isTerminalFor(e))return t&&t(this,-1),!0;if(this.isLeaf()){if(!n)return t&&t(this,-1),!1;this.node.residents=null}const o=this._childIndex(e);t&&t(this,o),this.advance(o)}}isLeaf(){return null!=this.node.residents}isTerminalFor(e){return e[3]>this.halfSize/2}_childIndex(e){const t=this.bounds;return(t[0]<e[0]?1:0)+(t[1]<e[1]?2:0)+(t[2]<e[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new n({shrink:!0}),residents:new n({shrink:!0})}}static acquire(){return O._pool.acquire()}static release(e){O._pool.release(e)}static clearPool(){O._pool.prune()}}function j(e,t){e[0]=Math.min(e[0],t[0]-t[3]),e[1]=Math.min(e[1],t[1]-t[3]),e[2]=Math.min(e[2],t[2]-t[3])}function S(e,t){e[0]=Math.max(e[0],t[0]+t[3]),e[1]=Math.max(e[1],t[1]+t[3]),e[2]=Math.max(e[2],t[2]+t[3])}function x(e,t,n){n[0]=e[0]+t,n[1]=e[1]+t,n[2]=e[2]+t}function N(e,t,n,o){if(1===t){const t=n(e[0]);u(t,o)}else{k[0]=1/0,k[1]=1/0,k[2]=1/0,q[0]=-1/0,q[1]=-1/0,q[2]=-1/0;for(let o=0;o<t;o++){const t=n(e[o]);z(t[3])&&(j(k,t),S(q,t))}h(o,k,q,.5),o[3]=Math.max(q[0]-k[0],q[1]-k[1],q[2]-k[2])/2}}function T(e,t,n){if(!W.length)for(let o=0;o<8;++o)W.push({index:0,distance:0});for(let o=0;o<8;++o){const n=A[o];W.data[o].index=o,W.data[o].distance=M(e,t,n)}W.sort(((e,t)=>e.distance-t.distance));for(let o=0;o<8;++o)n[o]=W.data[o].index}function E(e,t){let n,o=1/0;for(let r=0;r<8;++r){const s=M(e,t,D[r]);s<o&&(o=s,n=D[r])}return n}function M(e,t,n){return t*(e[0]*n[0]+e[1]*n[1]+e[2]*n[2])}function z(e){return!isNaN(e)&&e!==-1/0&&e!==1/0&&e>0}O._pool=new t(O),function(e){var t;(t=e.DepthOrder||(e.DepthOrder={}))[t.FRONT_TO_BACK=1]=\"FRONT_TO_BACK\",t[t.BACK_TO_FRONT=-1]=\"BACK_TO_FRONT\"}(g||(g={}));const A=[d(-1,-1,-1),d(1,-1,-1),d(-1,1,-1),d(1,1,-1),d(-1,-1,1),d(1,-1,1),d(-1,1,1),d(1,1,1)],D=[d(-1,-1,-1),d(-1,-1,1),d(-1,1,-1),d(-1,1,1),d(1,-1,-1),d(1,-1,1),d(1,1,-1),d(1,1,1)],v=Math.sqrt(3),B=[null];function R(e){return B[0]=e,B}const y=p(),F=a(),k=a(),q=a(),w=new n,C=p(),I=p(),P=p(),L=p(),K=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],W=new n,V=[0,0,0,0,0,0,0,0],G=g;export{G as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}