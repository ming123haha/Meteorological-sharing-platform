{"ast":null,"code":"import * as echarts from 'echarts'; //引入loadModules\n\nimport { loadModules } from 'esri-loader'; //引入ArcGIS API\n\nconst options = {\n  url: 'https://js.arcgis.com/4.18/init.js',\n  css: 'https://js.arcgis.com/4.18/esri/themes/light/main.css'\n};\nexport default {\n  name: \"Home\",\n\n  data() {\n    return {};\n  },\n\n  mounted() {\n    this._createMapView();\n\n    this.drawChart();\n    this.drawPie();\n  },\n\n  methods: {\n    //   创建地图视图\n    //async await是成对出现的，意思是把那些模块加载完成之后才可以执行后面的代码\n    async _createMapView() {\n      const [Map, FeatureLayer, MapView] = await loadModules(['esri/Map', 'esri/layers/FeatureLayer', 'esri/views/MapView'], options);\n      const map = new Map({});\n      const view = new MapView({\n        container: \"mapview\",\n        map: map,\n        center: [-73.95, 40.702],\n        zoom: 10\n      });\n      const template = {\n        title: \"{CITY}\",\n        content: [{\n          type: \"fields\",\n          fieldInfos: [{\n            fieldName: \"NAME99\",\n            label: \"区县名称\"\n          }]\n        }]\n      };\n      const featurelayer = new FeatureLayer({\n        url: \"http://localhost:6080/arcgis/rest/services/大气监测/MapServer\",\n        popupTemplate: template\n      });\n      map.add(featurelayer);\n    },\n\n    drawChart() {\n      // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\n      let myChart = this.$echarts.init(document.getElementById(\"home\")); // 指定图表的配置项和数据\n\n      let option = {\n        title: {\n          text: \"ECharts 入门示例\"\n        },\n        tooltip: {},\n        legend: {\n          data: [\"销量\"]\n        },\n        xAxis: {\n          data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\n        },\n        yAxis: {},\n        series: [{\n          name: \"销量\",\n          type: \"bar\",\n          data: [5, 20, 36, 10, 10, 20]\n        }]\n      }; // 使用刚指定的配置项和数据显示图表。\n\n      myChart.setOption(option);\n    },\n\n    drawPie() {\n      var chartDom = document.getElementById('pie');\n      var myChart = echarts.init(chartDom);\n      var option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '5%',\n          left: 'center'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '40',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: [{\n            value: 1048,\n            name: 'Search Engine'\n          }, {\n            value: 735,\n            name: 'Direct'\n          }, {\n            value: 580,\n            name: 'Email'\n          }, {\n            value: 484,\n            name: 'Union Ads'\n          }, {\n            value: 300,\n            name: 'Video Ads'\n          }]\n        }]\n      };\n      option && myChart.setOption(option);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAYA,mC,CACA;;AACA,0C,CACA;;AACA;EACAA,yCADA;EAEAC;AAFA;AAIA;EACAC,YADA;;EAEAC;IACA;EACA,CAJA;;EAKAC;IACA;;IACA;IACA;EACA,CATA;;EAUAC;IACA;IACA;IACA;MACA;MACA;MAEA;QACAC,oBADA;QAEAC,QAFA;QAGAC,wBAHA;QAIAC;MAJA;MAMA;QACAC,eADA;QAEAC,UACA;UACAC,cADA;UAEAC,aACA;YACAC,mBADA;YAEAC;UAFA,CADA;QAFA,CADA;MAFA;MAcA;QACAf,gEADA;QAEAgB;MAFA;MAIAT;IACA,CAhCA;;IAiCAU;MACA;MACA,kEAFA,CAGA;;MACA;QACAP;UACAQ;QADA,CADA;QAIAC,WAJA;QAKAC;UACAjB;QADA,CALA;QAQAkB;UACAlB;QADA,CARA;QAWAmB,SAXA;QAYAC,SACA;UACArB,UADA;UAEAU,WAFA;UAGAT;QAHA,CADA;MAZA,EAJA,CAwBA;;MACAqB;IACA,CA3DA;;IA4DAC;MACA;MACA;MACA;QACAN;UACAO;QADA,CADA;QAIAN;UACAO,SADA;UAEAC;QAFA,CAJA;QAQAL,SACA;UACArB,mBADA;UAEAU,WAFA;UAGAiB,sBAHA;UAIAC,wBAJA;UAKAC;YACAC,gBADA;YAEAC,mBAFA;YAGAC;UAHA,CALA;UAUAnB;YACAoB,WADA;YAEAC;UAFA,CAVA;UAcAC;YACAtB;cACAoB,UADA;cAEAG,cAFA;cAGAC;YAHA;UADA,CAdA;UAqBAC;YACAL;UADA,CArBA;UAwBAhC,OACA;YAAAsC;YAAAvC;UAAA,CADA,EAEA;YAAAuC;YAAAvC;UAAA,CAFA,EAGA;YAAAuC;YAAAvC;UAAA,CAHA,EAIA;YAAAuC;YAAAvC;UAAA,CAJA,EAKA;YAAAuC;YAAAvC;UAAA,CALA;QAxBA,CADA;MARA;MA4CAwC;IACA;;EA5GA;AAVA","names":["url","css","name","data","mounted","methods","container","map","center","zoom","title","content","type","fieldInfos","fieldName","label","popupTemplate","drawChart","text","tooltip","legend","xAxis","yAxis","series","myChart","drawPie","trigger","top","left","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","show","position","emphasis","fontSize","fontWeight","labelLine","value","option"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-row type=\"flex\" class=\"row-bg\" justify=\"space-between\">\r\n      <el-col :span=\"6\"><div id=\"home\" style=\"width: 350px ;height: 350px\"></div></el-col>\r\n      <el-col :span=\"6\"><div id=\"mapview\"></div></el-col>\r\n      <el-col :span=\"6\"><div id=\"pie\"style=\"width: 350px ;height: 350px\"></div></el-col>\r\n\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\n//引入loadModules\r\nimport {loadModules} from 'esri-loader'\r\n//引入ArcGIS API\r\nconst options={\r\n  url: 'https://js.arcgis.com/4.18/init.js',\r\n  css: 'https://js.arcgis.com/4.18/esri/themes/light/main.css',\r\n}\r\nexport default {\r\n  name: \"Home\",\r\n  data() {\r\n    return {}\r\n  },\r\n  mounted() {\r\n    this._createMapView();\r\n    this.drawChart();\r\n    this.drawPie();\r\n  },\r\n  methods: {\r\n    //   创建地图视图\r\n    //async await是成对出现的，意思是把那些模块加载完成之后才可以执行后面的代码\r\n    async _createMapView() {\r\n      const [Map,FeatureLayer,MapView] = await loadModules(['esri/Map','esri/layers/FeatureLayer','esri/views/MapView'], options);\r\n      const map = new Map({\r\n      });\r\n      const view = new MapView({\r\n        container: \"mapview\",\r\n        map: map,\r\n        center: [-73.95, 40.702],\r\n        zoom: 10\r\n      });\r\n      const template={\r\n        title:\"{CITY}\",\r\n        content:[\r\n          {\r\n            type:\"fields\",\r\n            fieldInfos:[\r\n              {\r\n                fieldName:\"NAME99\",\r\n                label:\"区县名称\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n      const featurelayer=new FeatureLayer({\r\n        url:\"http://localhost:6080/arcgis/rest/services/大气监测/MapServer\",\r\n        popupTemplate:template\r\n      });\r\n      map.add(featurelayer)\r\n    },\r\n    drawChart() {\r\n      // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\r\n      let myChart = this.$echarts.init(document.getElementById(\"home\"));\r\n      // 指定图表的配置项和数据\r\n      let option = {\r\n        title: {\r\n          text: \"ECharts 入门示例\",\r\n        },\r\n        tooltip: {},\r\n        legend: {\r\n          data: [\"销量\"],\r\n        },\r\n        xAxis: {\r\n          data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"],\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"销量\",\r\n            type: \"bar\",\r\n            data: [5, 20, 36, 10, 10, 20],\r\n          },\r\n        ],\r\n      };\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      myChart.setOption(option);\r\n    },\r\n    drawPie(){\r\n      var chartDom = document.getElementById('pie');\r\n      var myChart = echarts.init(chartDom);\r\n      var option = {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          top: '5%',\r\n          left: 'center'\r\n        },\r\n        series: [\r\n          {\r\n            name: 'Access From',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 10,\r\n              borderColor: '#fff',\r\n              borderWidth: 2\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '40',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: [\r\n              { value: 1048, name: 'Search Engine' },\r\n              { value: 735, name: 'Direct' },\r\n              { value: 580, name: 'Email' },\r\n              { value: 484, name: 'Union Ads' },\r\n              { value: 300, name: 'Video Ads' }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && myChart.setOption(option);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}