{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { unpackFloatRGBA as n } from \"../../core/floatRGBA.js\";\nimport { f as e } from \"../../chunks/vec3f64.js\";\nimport { BufferObject as o } from \"./BufferObject.js\";\nimport { encodeDoubleArray as t } from \"./doublePrecisionUtils.js\";\nimport { TargetType as r, DepthStencilTargetType as i, TextureType as a, TextureWrapMode as c, PixelFormat as s, PixelType as l, TextureSamplingMode as v, Usage as p, DataType as u, PrimitiveType as f } from \"./enums.js\";\nimport { FramebufferObject as m } from \"./FramebufferObject.js\";\nimport { VertexArrayObject as A } from \"./VertexArrayObject.js\";\nimport { VertexElementDescriptor as h } from \"./VertexElementDescriptor.js\";\n\nfunction d(t, d) {\n  t.resetState();\n\n  const B = new m(t, {\n    colorTarget: r.TEXTURE,\n    depthStencilTarget: i.NONE\n  }, {\n    target: a.TEXTURE_2D,\n    wrapMode: c.CLAMP_TO_EDGE,\n    pixelFormat: s.RGBA,\n    dataType: l.UNSIGNED_BYTE,\n    samplingMode: v.NEAREST,\n    width: 1,\n    height: 1\n  }),\n        E = o.createVertex(t, p.STATIC_DRAW, new Uint16Array([0, 0, 1, 0, 0, 1, 1, 1])),\n        g = new A(t, new Map([[\"position\", 0]]), {\n    geometry: [new h(\"position\", 2, u.UNSIGNED_SHORT, 0, 4)]\n  }, {\n    geometry: E\n  }),\n        T = e(5633261.287538229, 2626832.878767164, 1434988.0495278358),\n        b = e(5633271.46742708, 2626873.6381334523, 1434963.231608387),\n        F = _(t, T, b, d);\n\n  t.bindFramebuffer(B), t.setViewport(0, 0, 1, 1), t.bindVAO(g), t.drawArrays(f.TRIANGLE_STRIP, 0, 4);\n  const U = new Uint8Array(4);\n  B.readPixels(0, 0, 1, 1, s.RGBA, l.UNSIGNED_BYTE, U), F.dispose(), g.dispose(!1), E.dispose(), B.dispose();\n  const w = (T[2] - b[2]) / 25,\n        O = n(U);\n  return Math.abs(w - O);\n}\n\nfunction _(n, e, o, r) {\n  const i = `\\n\\n  precision highp float;\\n\\n  attribute vec2 position;\\n\\n  uniform vec3 u_highA;\\n  uniform vec3 u_lowA;\\n  uniform vec3 u_highB;\\n  uniform vec3 u_lowB;\\n\\n  varying vec4 v_color;\\n\\n  ${r ? \"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION\" : \"\"}\\n\\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\\n\\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\\n  }\\n\\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\\n  }\\n\\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\\n    vec3 t1 = dpPlusFrc(hiA, hiB);\\n    vec3 e = dpMinusFrc(t1, hiA);\\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\\n    return t1 + t2;\\n  }\\n\\n  #else\\n\\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\\n    vec3 t1 = hiA + hiB;\\n    vec3 e = t1 - hiA;\\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\\n    return t1 + t2;\\n  }\\n\\n  #endif\\n\\n  const float MAX_RGBA_FLOAT =\\n    255.0 / 256.0 +\\n    255.0 / 256.0 / 256.0 +\\n    255.0 / 256.0 / 256.0 / 256.0 +\\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\\n\\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\\n\\n  vec4 float2rgba(const float value) {\\n    // Make sure value is in the domain we can represent\\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\\n\\n    // Decompose value in 32bit fixed point parts represented as\\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\\n    // by a power of 256 (this removes the bits that are represented in the previous\\n    // component) and then converts the fractional part to 8bits.\\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\\n\\n    // Convert uint8 values (from 0 to 255) to floating point representation for\\n    // the shader\\n    const float toU8AsFloat = 1.0 / 255.0;\\n\\n    return fixedPointU8 * toU8AsFloat;\\n  }\\n\\n  void main() {\\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\\n\\n    v_color = float2rgba(val.z / 25.0);\\n\\n    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\\n  }\\n  `,\n        a = \"\\n  precision highp float;\\n\\n  varying vec4 v_color;\\n\\n  void main() {\\n    gl_FragColor = v_color;\\n  }\\n  \",\n        c = n.programCache.acquire(i, a, new Map([[\"position\", 0]])),\n        s = new Float32Array(6);\n  t(e, s, 3);\n  const l = new Float32Array(6);\n  return t(o, l, 3), n.useProgram(c), c.setUniform3f(\"u_highA\", s[0], s[2], s[4]), c.setUniform3f(\"u_lowA\", s[1], s[3], s[5]), c.setUniform3f(\"u_highB\", l[0], l[2], l[4]), c.setUniform3f(\"u_lowB\", l[1], l[3], l[5]), c;\n}\n\nexport { d as testDoublePrecisionArithmetic };","map":{"version":3,"names":["unpackFloatRGBA","n","f","e","BufferObject","o","encodeDoubleArray","t","TargetType","r","DepthStencilTargetType","i","TextureType","a","TextureWrapMode","c","PixelFormat","s","PixelType","l","TextureSamplingMode","v","Usage","p","DataType","u","PrimitiveType","FramebufferObject","m","VertexArrayObject","A","VertexElementDescriptor","h","d","resetState","B","colorTarget","TEXTURE","depthStencilTarget","NONE","target","TEXTURE_2D","wrapMode","CLAMP_TO_EDGE","pixelFormat","RGBA","dataType","UNSIGNED_BYTE","samplingMode","NEAREST","width","height","E","createVertex","STATIC_DRAW","Uint16Array","g","Map","geometry","UNSIGNED_SHORT","T","b","F","_","bindFramebuffer","setViewport","bindVAO","drawArrays","TRIANGLE_STRIP","U","Uint8Array","readPixels","dispose","w","O","Math","abs","programCache","acquire","Float32Array","useProgram","setUniform3f","testDoublePrecisionArithmetic"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/webgl/testDoublePrecisionArithmetic.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{unpackFloatRGBA as n}from\"../../core/floatRGBA.js\";import{f as e}from\"../../chunks/vec3f64.js\";import{BufferObject as o}from\"./BufferObject.js\";import{encodeDoubleArray as t}from\"./doublePrecisionUtils.js\";import{TargetType as r,DepthStencilTargetType as i,TextureType as a,TextureWrapMode as c,PixelFormat as s,PixelType as l,TextureSamplingMode as v,Usage as p,DataType as u,PrimitiveType as f}from\"./enums.js\";import{FramebufferObject as m}from\"./FramebufferObject.js\";import{VertexArrayObject as A}from\"./VertexArrayObject.js\";import{VertexElementDescriptor as h}from\"./VertexElementDescriptor.js\";function d(t,d){t.resetState();const B=new m(t,{colorTarget:r.TEXTURE,depthStencilTarget:i.NONE},{target:a.TEXTURE_2D,wrapMode:c.CLAMP_TO_EDGE,pixelFormat:s.RGBA,dataType:l.UNSIGNED_BYTE,samplingMode:v.NEAREST,width:1,height:1}),E=o.createVertex(t,p.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),g=new A(t,new Map([[\"position\",0]]),{geometry:[new h(\"position\",2,u.UNSIGNED_SHORT,0,4)]},{geometry:E}),T=e(5633261.287538229,2626832.878767164,1434988.0495278358),b=e(5633271.46742708,2626873.6381334523,1434963.231608387),F=_(t,T,b,d);t.bindFramebuffer(B),t.setViewport(0,0,1,1),t.bindVAO(g),t.drawArrays(f.TRIANGLE_STRIP,0,4);const U=new Uint8Array(4);B.readPixels(0,0,1,1,s.RGBA,l.UNSIGNED_BYTE,U),F.dispose(),g.dispose(!1),E.dispose(),B.dispose();const w=(T[2]-b[2])/25,O=n(U);return Math.abs(w-O)}function _(n,e,o,r){const i=`\\n\\n  precision highp float;\\n\\n  attribute vec2 position;\\n\\n  uniform vec3 u_highA;\\n  uniform vec3 u_lowA;\\n  uniform vec3 u_highB;\\n  uniform vec3 u_lowB;\\n\\n  varying vec4 v_color;\\n\\n  ${r?\"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION\":\"\"}\\n\\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\\n\\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\\n  }\\n\\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\\n  }\\n\\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\\n    vec3 t1 = dpPlusFrc(hiA, hiB);\\n    vec3 e = dpMinusFrc(t1, hiA);\\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\\n    return t1 + t2;\\n  }\\n\\n  #else\\n\\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\\n    vec3 t1 = hiA + hiB;\\n    vec3 e = t1 - hiA;\\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\\n    return t1 + t2;\\n  }\\n\\n  #endif\\n\\n  const float MAX_RGBA_FLOAT =\\n    255.0 / 256.0 +\\n    255.0 / 256.0 / 256.0 +\\n    255.0 / 256.0 / 256.0 / 256.0 +\\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\\n\\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\\n\\n  vec4 float2rgba(const float value) {\\n    // Make sure value is in the domain we can represent\\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\\n\\n    // Decompose value in 32bit fixed point parts represented as\\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\\n    // by a power of 256 (this removes the bits that are represented in the previous\\n    // component) and then converts the fractional part to 8bits.\\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\\n\\n    // Convert uint8 values (from 0 to 255) to floating point representation for\\n    // the shader\\n    const float toU8AsFloat = 1.0 / 255.0;\\n\\n    return fixedPointU8 * toU8AsFloat;\\n  }\\n\\n  void main() {\\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\\n\\n    v_color = float2rgba(val.z / 25.0);\\n\\n    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\\n  }\\n  `,a=\"\\n  precision highp float;\\n\\n  varying vec4 v_color;\\n\\n  void main() {\\n    gl_FragColor = v_color;\\n  }\\n  \",c=n.programCache.acquire(i,a,new Map([[\"position\",0]])),s=new Float32Array(6);t(e,s,3);const l=new Float32Array(6);return t(o,l,3),n.useProgram(c),c.setUniform3f(\"u_highA\",s[0],s[2],s[4]),c.setUniform3f(\"u_lowA\",s[1],s[3],s[5]),c.setUniform3f(\"u_highB\",l[0],l[2],l[4]),c.setUniform3f(\"u_lowB\",l[1],l[3],l[5]),c}export{d as testDoublePrecisionArithmetic};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}