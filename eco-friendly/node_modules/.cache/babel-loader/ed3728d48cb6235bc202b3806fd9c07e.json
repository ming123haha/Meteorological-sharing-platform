{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"AQI\",\n\n  data() {\n    return {\n      chartInstance: null\n    };\n  },\n\n  mounted() {\n    // this.initChart()\n    // this.getData()\n    //基于准备好的DOM，初始化ECharts图表\n    var myChart = echarts.init(document.getElementById(\"com-chart\")); //指定图表的配置项和数据\n\n    var color1 = [[0.2, \"rgba(255,0,0,1)\"], [0.8, \"rgba(0,255,255,1)\"], [1, \"rgba(0,255,0,1)\"]];\n    var data1 = [{\n      name: \"完成率(%)\",\n      value: 50\n    }];\n    var option = {\n      //指定图表的配置项和数据\n      backgroundColor: 'rgba(128, 128, 128, 0.1)',\n      //rgba设置透明度0.1\n      tooltip: {\n        //配置提示框组件\n        show: true,\n        formatter: \"{b}：{c}%\",\n        backgroundColor: \"rgba(255,0,0,0.8)\",\n        //设置提示框浮层的背景颜色\n        borderColor: \"#333\",\n        //设置提示框浮层的边框颜色\n        borderWidth: 0,\n        //设置提示框浮层的边框宽\n        padding: 5,\n        //设置提示框浮层内边距，单位px，默认各方向内边距为5\n        textStyle: {//设置提示框浮层的文本样式\n          //color,fontStyle,fontWeight,fontFamily,fontSize,lineHeight\n        }\n      },\n      title: {\n        //配置标题组件\n        text: '项目实际完成率(%)',\n        x: 'center',\n        y: 25,\n        show: true,\n        //设置是否显示标题，默认true\n        //设置相对于仪表盘中心的偏移位置\n        //数组第一项是水平方向的偏移，第二项是垂直方向的偏移\n        offsetCenter: [50, \"20%\"],\n        textStyle: {\n          fontFamily: \"黑体\",\n          //设置字体名称，默认宋体\n          color: \"blue\",\n          //设置字体颜色，默认#333\n          fontSize: 15 //设置字体大小，默认15\n\n        }\n      },\n      series: [{\n        name: \"单仪表盘示例\",\n        //设置系列名称，用于tooltip的显示，legend的图例筛选\n        type: \"gauge\",\n        //设置系列类型\n        radius: \"80%\",\n        //设置参数：number，string，仪表盘半径，默认75%\n        center: [\"50%\", \"55%\"],\n        //设置仪表盘位置(圆心坐标)\n        startAngle: 225,\n        //设置仪表盘起始角度，默认225\n        endAngle: -45,\n        //设置仪表盘结束角度，默认-45\n        clockwise: true,\n        //设置仪表盘刻度是否是顺时针增长，默认true\n        min: 0,\n        //设置最小的数据值，默认0，映射到minAngle\n        max: 100,\n        //设置最大的数据值，默认100，映射到maxAngle\n        splitNumber: 10,\n        //设置仪表盘刻度的分割段数，默认10\n        axisLine: {\n          //设置仪表盘轴线(轮廓线)相关配置\n          show: true,\n          //设置是否显示仪表盘轴线(轮廓线)，默认true\n          lineStyle: {\n            //设置仪表盘轴线样式\n            color: color1,\n            //设置仪表盘的轴线可以被分成不同颜色的多段\n            opacity: 1,\n            //设置图形透明度，支持从0到1的数字，为0时不绘制该图形\n            width: 30,\n            //设置轴线宽度，默认30\n            shadowBlur: 20,\n            //设置(发光效果)图形阴影的模糊大小\n            shadowColor: \"#fff\" //设置阴影颜色，支持的格式同color\n\n          }\n        },\n        splitLine: {\n          //设置分隔线样式\n          show: true,\n          //设置是否显示分隔线，默认true\n          length: 30,\n          //设置分隔线线长，支持相对半径的百分比，默认30\n          lineStyle: {\n            //设置分隔线样式\n            color: \"#eee\",\n            //设置线的颜色，默认#eee\n            //设置图形透明度，支持从0到1的数字，为0时不绘制该图形\n            opacity: 1,\n            width: 2,\n            //设置线度，默认2\n            type: \"solid\",\n            //设置线的类型，默认solid，此外还有dashed，dotted\n            shadowBlur: 10,\n            //设置(发光效果)图形阴影的模糊大小\n            shadowColor: \"#fff\" //设置阴影颜色，支持的格式同color\n\n          }\n        },\n        axisTick: {\n          //设置刻度(线)样式\n          show: true,\n          //设置是否显示刻度(线)，默认true\n          splitNumber: 5,\n          //设置分隔线之间分割的刻度数，默认5\n          length: 8,\n          //设置刻度线长.支持相对半径的百分比，默认8\n          lineStyle: {\n            //设置刻度线样式\n            color: \"#eee\",\n            //设置线的颜色，默认#eee\n            //设置图形透明度.支持从0到1的数字，为0时不绘制该图形\n            opacity: 1,\n            width: 1,\n            //设置线度，默认 1\n            type: \"solid\",\n            //设置线的类型，默认solid，此外还有dashed，dotted\n            shadowBlur: 10,\n            //设置(发光效果)图形阴影的模糊大小\n            shadowColor: \"#fff\" //设置阴影颜色，支持的格式同color\n\n          }\n        },\n        axisLabel: {\n          //设置刻度标签\n          show: true,\n          //设置是否显示标签，默认true\n          distance: 5,\n          //设置标签与刻度线的距离，默认5\n          color: \"blue\",\n          //设置文字的颜色\n          fontSize: 5,\n          //设置文字的字体大小，默认5\n          //设置刻度标签的内容格式器，支持字符串模板和回调函数两种形式\n          formatter: \"{value}\"\n        },\n        pointer: {\n          //设置仪表盘指针\n          show: true,\n          //设置是否显示指针，默认true\n          //设置指针长度,可以是绝对值，也可是相对于半径的百分比，默认80%\n          length: \"60%\",\n          width: 6 //设置指针宽度，默认8\n\n        },\n        itemStyle: {\n          //设置仪表盘指针样式\n          color: \"auto\",\n          //设置指针颜色，默认(auto)取数值所在的区间的颜色\n          opacity: 1,\n          //设置图形透明度，支持从0到1的数字，为0时不绘制该图形\n          borderWidth: 0,\n          //设置描边线宽,默认0，为0时无描边\n          //设置柱条的描边类型,默认为实线，支持'solid'，'dashed'，'dotted'\n          borderType: \"solid\",\n          borderColor: \"#000\",\n          //设置图形的描边颜色，默认\"#000\"，不支持回调函数\n          shadowBlur: 10,\n          //设置(发光效果)图形阴影的模糊大小\n          shadowColor: \"#fff\" //设置阴影颜色，支持的格式同color\n\n        },\n        emphasis: {\n          //设置高亮的仪表盘指针样式\n          itemStyle: {//高亮和正常,两者具有同样的配置项，只是在不同状态下配置项的值不同\n          }\n        },\n        detail: {\n          //设置仪表盘详情，用于显示数据\n          show: true,\n          //设置是否显示详情，默认true\n          offsetCenter: [0, \"50%\"],\n          //设置相对于仪表盘中心的偏移位置\n          color: \"auto\",\n          //设置文字的颜色，默认auto\n          fontSize: 20,\n          //设置文字的字体大小，默认15\n          formatter: \"{value}%\" //格式化函数或者字符串\n\n        },\n        data: data1\n      }]\n    };\n    setInterval(function () {\n      option.series[0].data[0].value = (Math.random() * 100).toFixed(2);\n      myChart.setOption(option, true); //使用指定的配置项和数据显示图表\n    }, 2000); //每2秒重新渲染一次，以实现动态效果\n  },\n\n  methods: {//  //初始化echarstInstance对象\n    //  initChart(){\n    //    this.$echarts.init(this.$refs.seller_ref)\n    //  },\n    //  //获取服务器的数据\n    // async getData(){\n    //  // http://localhost:8080/DataAnalysis\n    //    const ret=await this.$http.get('http://localhost:8080/DataAnalysis')\n    //   console.log(ret)\n    //  },\n    //  //更新图表\n    //  updateChart(){},\n  }\n};","map":{"version":3,"mappings":"AASA;AACA;EACAA,WADA;;EAEAC;IACA;MACAC;IADA;EAGA,CANA;;EAOAC;IACA;IACA;IACA;IACA,iEAJA,CAKA;;IACA;IACA;MACAH,cADA;MAEAI;IAFA;IAIA;MAAA;MACAC,2CADA;MACA;MACAC;QAAA;QACAC,UADA;QAEAC,qBAFA;QAGAH,oCAHA;QAGA;QACAI,mBAJA;QAIA;QACAC,cALA;QAKA;QACAC,UANA;QAMA;QACAC;UACA;QADA;MAPA,CAFA;MAaAC;QAAA;QACAC,kBADA;QAEAC,WAFA;QAEAC,KAFA;QAGAT,UAHA;QAGA;QACA;QACA;QACAU,yBANA;QAOAL;UACAM,gBADA;UACA;UACAC,aAFA;UAEA;UACAC,YAHA,CAGA;;QAHA;MAPA,CAbA;MA0BAC,SACA;QACArB,cADA;QACA;QACAsB,aAFA;QAEA;QACAC,aAHA;QAGA;QACAC,sBAJA;QAIA;QACAC,eALA;QAKA;QACAC,aANA;QAMA;QACAC,eAPA;QAOA;QACAC,MARA;QAQA;QACAC,QATA;QASA;QACAC,eAVA;QAUA;QACAC;UAAA;UACAxB,UADA;UACA;UACAyB;YAAA;YACAb,aADA;YACA;YACAc,UAFA;YAEA;YACAC,SAHA;YAGA;YACAC,cAJA;YAIA;YACAC,mBALA,CAKA;;UALA;QAFA,CAXA;QAqBAC;UAAA;UACA9B,UADA;UACA;UACA+B,UAFA;UAEA;UACAN;YAAA;YACAb,aADA;YACA;YACA;YACAc,UAHA;YAIAC,QAJA;YAIA;YACAZ,aALA;YAKA;YACAa,cANA;YAMA;YACAC,mBAPA,CAOA;;UAPA;QAHA,CArBA;QAkCAG;UAAA;UACAhC,UADA;UACA;UACAuB,cAFA;UAEA;UACAQ,SAHA;UAGA;UACAN;YAAA;YACAb,aADA;YACA;YACA;YACAc,UAHA;YAIAC,QAJA;YAIA;YACAZ,aALA;YAKA;YACAa,cANA;YAMA;YACAC,mBAPA,CAOA;;UAPA;QAJA,CAlCA;QAgDAI;UAAA;UACAjC,UADA;UACA;UACAkC,WAFA;UAEA;UACAtB,aAHA;UAGA;UACAC,WAJA;UAIA;UACA;UACAZ;QANA,CAhDA;QAwDAkC;UAAA;UACAnC,UADA;UACA;UACA;UACA+B,aAHA;UAIAJ,QAJA,CAIA;;QAJA,CAxDA;QA8DAS;UAAA;UACAxB,aADA;UACA;UACAc,UAFA;UAEA;UACAvB,cAHA;UAGA;UACA;UACAkC,mBALA;UAMAnC,mBANA;UAMA;UACA0B,cAPA;UAOA;UACAC,mBARA,CAQA;;QARA,CA9DA;QAwEAS;UAAA;UACAF,YACA;UADA;QADA,CAxEA;QA6EAG;UAAA;UACAvC,UADA;UACA;UACAU,wBAFA;UAEA;UACAE,aAHA;UAGA;UACAC,YAJA;UAIA;UACAZ,qBALA,CAKA;;QALA,CA7EA;QAoFAP;MApFA,CADA;IA1BA;IAmHA8C;MACAC;MACAC,gCAFA,CAEA;IACA,CAHA,EAGA,IAHA,EA9HA,CAiIA;EACA,CAzIA;;EA0IAC,UACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAZA;AA1IA","names":["name","data","chartInstance","mounted","value","backgroundColor","tooltip","show","formatter","borderColor","borderWidth","padding","textStyle","title","text","x","y","offsetCenter","fontFamily","color","fontSize","series","type","radius","center","startAngle","endAngle","clockwise","min","max","splitNumber","axisLine","lineStyle","opacity","width","shadowBlur","shadowColor","splitLine","length","axisTick","axisLabel","distance","pointer","itemStyle","borderType","emphasis","detail","setInterval","option","myChart","methods"],"sourceRoot":"src/components","sources":["AQI.vue"],"sourcesContent":["\r\n<template>\r\n<div class=\"com-container\">\r\n  <div id=\"com-chart\" ref=\"chart_ref\">\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  name: \"AQI\",\r\n  data(){\r\n    return{\r\n      chartInstance:null\r\n    }\r\n  },\r\n  mounted(){\r\n      // this.initChart()\r\n      // this.getData()\r\n    //基于准备好的DOM，初始化ECharts图表\r\n    var myChart = echarts.init(document.getElementById(\"com-chart\"));\r\n    //指定图表的配置项和数据\r\n    var color1 = [[0.2, \"rgba(255,0,0,1)\"], [0.8, \"rgba(0,255,255,1)\"], [1, \"rgba(0,255,0,1)\"]];\r\n    var data1 = [{\r\n      name: \"完成率(%)\",\r\n      value: 50,\r\n    }];\r\n    var option = {  //指定图表的配置项和数据\r\n      backgroundColor: 'rgba(128, 128, 128, 0.1)',  //rgba设置透明度0.1\r\n      tooltip: {  //配置提示框组件\r\n        show: true,\r\n        formatter: \"{b}：{c}%\",\r\n        backgroundColor: \"rgba(255,0,0,0.8)\",  //设置提示框浮层的背景颜色\r\n        borderColor: \"#333\",  //设置提示框浮层的边框颜色\r\n        borderWidth: 0,  //设置提示框浮层的边框宽\r\n        padding: 5,  //设置提示框浮层内边距，单位px，默认各方向内边距为5\r\n        textStyle: {  //设置提示框浮层的文本样式\r\n          //color,fontStyle,fontWeight,fontFamily,fontSize,lineHeight\r\n        },\r\n      },\r\n      title: {  //配置标题组件\r\n        text: '项目实际完成率(%)',\r\n        x: 'center', y: 25,\r\n        show: true,  //设置是否显示标题，默认true\r\n        //设置相对于仪表盘中心的偏移位置\r\n        //数组第一项是水平方向的偏移，第二项是垂直方向的偏移\r\n        offsetCenter: [50, \"20%\"],\r\n        textStyle: {\r\n          fontFamily: \"黑体\",  //设置字体名称，默认宋体\r\n          color: \"blue\",  //设置字体颜色，默认#333\r\n          fontSize: 15,  //设置字体大小，默认15\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"单仪表盘示例\",  //设置系列名称，用于tooltip的显示，legend的图例筛选\r\n          type: \"gauge\",  //设置系列类型\r\n          radius: \"80%\",  //设置参数：number，string，仪表盘半径，默认75%\r\n          center: [\"50%\", \"55%\"],  //设置仪表盘位置(圆心坐标)\r\n          startAngle: 225,  //设置仪表盘起始角度，默认225\r\n          endAngle: -45,  //设置仪表盘结束角度，默认-45\r\n          clockwise: true,  //设置仪表盘刻度是否是顺时针增长，默认true\r\n          min: 0,  //设置最小的数据值，默认0，映射到minAngle\r\n          max: 100,  //设置最大的数据值，默认100，映射到maxAngle\r\n          splitNumber: 10,  //设置仪表盘刻度的分割段数，默认10\r\n          axisLine: {  //设置仪表盘轴线(轮廓线)相关配置\r\n            show: true,  //设置是否显示仪表盘轴线(轮廓线)，默认true\r\n            lineStyle: {  //设置仪表盘轴线样式\r\n              color: color1,  //设置仪表盘的轴线可以被分成不同颜色的多段\r\n              opacity: 1,  //设置图形透明度，支持从0到1的数字，为0时不绘制该图形\r\n              width: 30,  //设置轴线宽度，默认30\r\n              shadowBlur: 20,  //设置(发光效果)图形阴影的模糊大小\r\n              shadowColor: \"#fff\",  //设置阴影颜色，支持的格式同color\r\n            }\r\n          },\r\n          splitLine: {  //设置分隔线样式\r\n            show: true,  //设置是否显示分隔线，默认true\r\n            length: 30,  //设置分隔线线长，支持相对半径的百分比，默认30\r\n            lineStyle: {  //设置分隔线样式\r\n              color: \"#eee\",  //设置线的颜色，默认#eee\r\n              //设置图形透明度，支持从0到1的数字，为0时不绘制该图形\r\n              opacity: 1,\r\n              width: 2,  //设置线度，默认2\r\n              type: \"solid\",  //设置线的类型，默认solid，此外还有dashed，dotted\r\n              shadowBlur: 10,  //设置(发光效果)图形阴影的模糊大小\r\n              shadowColor: \"#fff\",  //设置阴影颜色，支持的格式同color\r\n            }\r\n          },\r\n          axisTick: {  //设置刻度(线)样式\r\n            show: true,  //设置是否显示刻度(线)，默认true\r\n            splitNumber: 5,  //设置分隔线之间分割的刻度数，默认5\r\n            length: 8,  //设置刻度线长.支持相对半径的百分比，默认8\r\n            lineStyle: {  //设置刻度线样式\r\n              color: \"#eee\",  //设置线的颜色，默认#eee\r\n              //设置图形透明度.支持从0到1的数字，为0时不绘制该图形\r\n              opacity: 1,\r\n              width: 1,  //设置线度，默认 1\r\n              type: \"solid\",  //设置线的类型，默认solid，此外还有dashed，dotted\r\n              shadowBlur: 10,  //设置(发光效果)图形阴影的模糊大小\r\n              shadowColor: \"#fff\",  //设置阴影颜色，支持的格式同color\r\n            },\r\n          },\r\n          axisLabel: {  //设置刻度标签\r\n            show: true,  //设置是否显示标签，默认true\r\n            distance: 5,  //设置标签与刻度线的距离，默认5\r\n            color: \"blue\",  //设置文字的颜色\r\n            fontSize: 5,  //设置文字的字体大小，默认5\r\n            //设置刻度标签的内容格式器，支持字符串模板和回调函数两种形式\r\n            formatter: \"{value}\",\r\n          },\r\n          pointer: {  //设置仪表盘指针\r\n            show: true,  //设置是否显示指针，默认true\r\n            //设置指针长度,可以是绝对值，也可是相对于半径的百分比，默认80%\r\n            length: \"60%\",\r\n            width: 6,  //设置指针宽度，默认8\r\n          },\r\n          itemStyle: {  //设置仪表盘指针样式\r\n            color: \"auto\",  //设置指针颜色，默认(auto)取数值所在的区间的颜色\r\n            opacity: 1,  //设置图形透明度，支持从0到1的数字，为0时不绘制该图形\r\n            borderWidth: 0,  //设置描边线宽,默认0，为0时无描边\r\n            //设置柱条的描边类型,默认为实线，支持'solid'，'dashed'，'dotted'\r\n            borderType: \"solid\",\r\n            borderColor: \"#000\",  //设置图形的描边颜色，默认\"#000\"，不支持回调函数\r\n            shadowBlur: 10,  //设置(发光效果)图形阴影的模糊大小\r\n            shadowColor: \"#fff\",  //设置阴影颜色，支持的格式同color\r\n          },\r\n          emphasis: {  //设置高亮的仪表盘指针样式\r\n            itemStyle: {\r\n              //高亮和正常,两者具有同样的配置项，只是在不同状态下配置项的值不同\r\n            }\r\n          },\r\n          detail: {  //设置仪表盘详情，用于显示数据\r\n            show: true,  //设置是否显示详情，默认true\r\n            offsetCenter: [0, \"50%\"],  //设置相对于仪表盘中心的偏移位置\r\n            color: \"auto\",  //设置文字的颜色，默认auto\r\n            fontSize: 20,  //设置文字的字体大小，默认15\r\n            formatter: \"{value}%\",  //格式化函数或者字符串\r\n          },\r\n          data: data1\r\n        }\r\n      ]\r\n    };\r\n    setInterval(function () {\r\n      option.series[0].data[0].value = (Math.random() * 100).toFixed(2);\r\n      myChart.setOption(option, true);  //使用指定的配置项和数据显示图表\r\n    }, 2000);  //每2秒重新渲染一次，以实现动态效果\r\n          },\r\n  methods:{\r\n   //  //初始化echarstInstance对象\r\n   //  initChart(){\r\n   //    this.$echarts.init(this.$refs.seller_ref)\r\n   //  },\r\n   //  //获取服务器的数据\r\n   // async getData(){\r\n   //  // http://localhost:8080/DataAnalysis\r\n   //    const ret=await this.$http.get('http://localhost:8080/DataAnalysis')\r\n   //   console.log(ret)\r\n   //  },\r\n   //  //更新图表\r\n   //  updateChart(){},\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}