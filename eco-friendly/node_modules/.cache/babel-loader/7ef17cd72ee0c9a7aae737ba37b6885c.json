{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport s from \"./WGLDisplayRecord.js\";\nimport { serializeList as i, deserializeList as t } from \"./util/serializationUtils.js\";\n\nclass e {\n  constructor(s) {\n    this.insertAfter = null, this.id = s, this.displayRecords = [];\n  }\n\n  copy() {\n    const s = new e(this.id);\n    return s.set(this), s;\n  }\n\n  clone() {\n    const s = new e(this.id);\n    return s.displayRecords = this.displayRecords.map(s => s.clone()), s.insertAfter = this.insertAfter, s;\n  }\n\n  set(s) {\n    this.id = s.id, this.displayRecords = s.displayRecords, this.insertAfter = s.insertAfter;\n  }\n\n  serialize(s) {\n    return s.push(this.id), i(s, this.displayRecords), s;\n  }\n\n  static deserialize(i) {\n    const r = i.readInt32(),\n          d = new e(r),\n          o = {\n      id: r\n    };\n    return d.displayRecords = t(i, s, o), d;\n  }\n\n}\n\nexport { e as default };","map":{"version":3,"names":["s","serializeList","i","deserializeList","t","e","constructor","insertAfter","id","displayRecords","copy","set","clone","map","serialize","push","deserialize","r","readInt32","d","o","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/engine/webgl/WGLDisplayObject.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport s from\"./WGLDisplayRecord.js\";import{serializeList as i,deserializeList as t}from\"./util/serializationUtils.js\";class e{constructor(s){this.insertAfter=null,this.id=s,this.displayRecords=[]}copy(){const s=new e(this.id);return s.set(this),s}clone(){const s=new e(this.id);return s.displayRecords=this.displayRecords.map((s=>s.clone())),s.insertAfter=this.insertAfter,s}set(s){this.id=s.id,this.displayRecords=s.displayRecords,this.insertAfter=s.insertAfter}serialize(s){return s.push(this.id),i(s,this.displayRecords),s}static deserialize(i){const r=i.readInt32(),d=new e(r),o={id:r};return d.displayRecords=t(i,s,o),d}}export{e as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,uBAAb;AAAqC,SAAOC,aAAa,IAAIC,CAAxB,EAA0BC,eAAe,IAAIC,CAA7C,QAAmD,8BAAnD;;AAAkF,MAAMC,CAAN,CAAO;EAACC,WAAW,CAACN,CAAD,EAAG;IAAC,KAAKO,WAAL,GAAiB,IAAjB,EAAsB,KAAKC,EAAL,GAAQR,CAA9B,EAAgC,KAAKS,cAAL,GAAoB,EAApD;EAAuD;;EAAAC,IAAI,GAAE;IAAC,MAAMV,CAAC,GAAC,IAAIK,CAAJ,CAAM,KAAKG,EAAX,CAAR;IAAuB,OAAOR,CAAC,CAACW,GAAF,CAAM,IAAN,GAAYX,CAAnB;EAAqB;;EAAAY,KAAK,GAAE;IAAC,MAAMZ,CAAC,GAAC,IAAIK,CAAJ,CAAM,KAAKG,EAAX,CAAR;IAAuB,OAAOR,CAAC,CAACS,cAAF,GAAiB,KAAKA,cAAL,CAAoBI,GAApB,CAAyBb,CAAC,IAAEA,CAAC,CAACY,KAAF,EAA5B,CAAjB,EAAyDZ,CAAC,CAACO,WAAF,GAAc,KAAKA,WAA5E,EAAwFP,CAA/F;EAAiG;;EAAAW,GAAG,CAACX,CAAD,EAAG;IAAC,KAAKQ,EAAL,GAAQR,CAAC,CAACQ,EAAV,EAAa,KAAKC,cAAL,GAAoBT,CAAC,CAACS,cAAnC,EAAkD,KAAKF,WAAL,GAAiBP,CAAC,CAACO,WAArE;EAAiF;;EAAAO,SAAS,CAACd,CAAD,EAAG;IAAC,OAAOA,CAAC,CAACe,IAAF,CAAO,KAAKP,EAAZ,GAAgBN,CAAC,CAACF,CAAD,EAAG,KAAKS,cAAR,CAAjB,EAAyCT,CAAhD;EAAkD;;EAAkB,OAAXgB,WAAW,CAACd,CAAD,EAAG;IAAC,MAAMe,CAAC,GAACf,CAAC,CAACgB,SAAF,EAAR;IAAA,MAAsBC,CAAC,GAAC,IAAId,CAAJ,CAAMY,CAAN,CAAxB;IAAA,MAAiCG,CAAC,GAAC;MAACZ,EAAE,EAACS;IAAJ,CAAnC;IAA0C,OAAOE,CAAC,CAACV,cAAF,GAAiBL,CAAC,CAACF,CAAD,EAAGF,CAAH,EAAKoB,CAAL,CAAlB,EAA0BD,CAAjC;EAAmC;;AAApf;;AAAqf,SAAOd,CAAC,IAAIgB,OAAZ"},"metadata":{},"sourceType":"module"}