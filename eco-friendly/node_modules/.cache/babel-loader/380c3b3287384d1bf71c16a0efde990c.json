{"ast":null,"code":"import { loadModules } from \"esri-loader\";\nexport default {\n  name: \"web-map\",\n\n  mounted() {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules([\"esri/WebScene\", \"esri/views/SceneView\", \"esri/widgets/Expand\", \"esri/widgets/Weather\", \"esri/widgets/Daylight\"], {\n      css: true\n    }).then(([WebScene, SceneView, Expand, Weather, Daylight]) => {\n      const scene = new WebScene({\n        portalItem: {\n          id: \"c56dab9e4d1a4b0c9d1ee7f589343516\"\n        }\n      });\n      const map = new Map({\n        basemap: \"satellite\",\n        ground: \"world-elevation\"\n      });\n      const view = new MapView({\n        container: \"viewDiv\",\n        map: map,\n        environment: {\n          weather: {\n            type: \"cloudy\",\n            // autocasts as new CloudyWeather({ cloudCover: 0.3 })\n            cloudCover: 0.3\n          }\n        }\n      });\n    });\n  },\n\n  beforeUnmount() {\n    if (this.view) {\n      // destroy the map view\n      this.view.container = null;\n    }\n  }\n\n};","map":{"version":3,"mappings":"AAOA;AAEA;EACAA,eADA;;EAEAC;IACA;IACAC,YACA,CACA,eADA,EAEA,sBAFA,EAGA,qBAHA,EAIA,sBAJA,EAKA,uBALA,CADA,EAQA;MAAAC;IAAA,CARA,EASAC,IATA,CASA;MACA;QACAC;UACAC;QADA;MADA;MAQA;QACAC,oBADA;QAEAC;MAFA;MAKA;QACAC,oBADA;QAEAC,QAFA;QAGAC;UACAC;YACAC,cADA;YACA;YACAC;UAFA;QADA;MAHA;IAYA,CAnCA;EAoCA,CAxCA;;EAyCAC;IACA;MACA;MACA;IACA;EACA;;AA9CA","names":["name","mounted","loadModules","css","then","portalItem","id","basemap","ground","container","map","environment","weather","type","cloudCover","beforeUnmount"],"sourceRoot":"src/views","sources":["SpatialAnalysis.vue"],"sourcesContent":["<template>\r\n\r\n  <body>\r\n  <div id=\"viewDiv\"></div>\r\n  </body>\r\n</template>\r\n<script>\r\nimport { loadModules } from \"esri-loader\";\r\n\r\nexport default {\r\n  name: \"web-map\",\r\n  mounted() {\r\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n    loadModules(\r\n        [\r\n          \"esri/WebScene\",\r\n          \"esri/views/SceneView\",\r\n          \"esri/widgets/Expand\",\r\n          \"esri/widgets/Weather\",\r\n          \"esri/widgets/Daylight\"\r\n        ],\r\n        { css: true }\r\n    ).then(([WebScene, SceneView, Expand, Weather, Daylight]) => {\r\n      const scene = new WebScene({\r\n        portalItem: {\r\n          id: \"c56dab9e4d1a4b0c9d1ee7f589343516\"\r\n        }\r\n      });\r\n\r\n\r\n\r\n      const map = new Map({\r\n        basemap: \"satellite\",\r\n        ground: \"world-elevation\"\r\n      });\r\n\r\n      const view = new MapView({\r\n        container: \"viewDiv\",\r\n        map: map,\r\n        environment: {\r\n          weather: {\r\n            type: \"cloudy\",     // autocasts as new CloudyWeather({ cloudCover: 0.3 })\r\n            cloudCover: 0.3\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n    });\r\n  },\r\n  beforeUnmount() {\r\n    if (this.view) {\r\n      // destroy the map view\r\n      this.view.container = null;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\nbody {\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n\r\n\r\n#viewDiv {\r\n  height: 100%;\r\n  max-width: 100%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}