{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport t from \"../../config.js\";\nimport e from \"../../core/Error.js\";\nimport n from \"../../core/Logger.js\";\nimport { isNone as o, isSome as s } from \"../../core/maybe.js\";\nimport r from \"../Polygon.js\";\nimport i from \"../Polyline.js\";\nimport { getGeometryParts as l, cutParams as f, offsetMagnitude as c, updatePolyGeometry as p } from \"./normalizeUtilsCommon.js\";\nimport { getInfo as u } from \"./spatialReferenceUtils.js\";\nimport { geographicToWebMercator as a, webMercatorToGeographic as h } from \"./webMercatorUtils.js\";\nimport { cut as m } from \"../../rest/geometry/cut.js\";\nimport { simplify as g } from \"../../rest/geometry/simplify.js\";\nconst y = n.getLogger(\"esri.geometry.support.normalizeUtils\");\n\nfunction x(t) {\n  return \"polygon\" === t.type;\n}\n\nfunction d(t) {\n  return \"polygon\" === t[0].type;\n}\n\nfunction w(t) {\n  return \"polyline\" === t[0].type;\n}\n\nfunction j(t) {\n  const e = [];\n  let n = 0,\n      o = 0;\n\n  for (let s = 0; s < t.length; s++) {\n    const r = t[s];\n    let i = null;\n\n    for (let t = 0; t < r.length; t++) i = r[t], e.push(i), 0 === t ? (n = i[0], o = n) : (n = Math.min(n, i[0]), o = Math.max(o, i[0]));\n\n    i && e.push([(n + o) / 2, 0]);\n  }\n\n  return e;\n}\n\nfunction M(t, n) {\n  if (!(t instanceof i || t instanceof r)) {\n    const t = \"straightLineDensify: the input geometry is neither polyline nor polygon\";\n    throw y.error(t), new e(t);\n  }\n\n  const o = l(t),\n        s = [];\n\n  for (const e of o) {\n    const t = [];\n    s.push(t), t.push([e[0][0], e[0][1]]);\n\n    for (let o = 0; o < e.length - 1; o++) {\n      const s = e[o][0],\n            r = e[o][1],\n            i = e[o + 1][0],\n            l = e[o + 1][1],\n            f = Math.sqrt((i - s) * (i - s) + (l - r) * (l - r)),\n            c = (l - r) / f,\n            p = (i - s) / f,\n            u = f / n;\n\n      if (u > 1) {\n        for (let l = 1; l <= u - 1; l++) {\n          const e = l * n,\n                o = p * e + s,\n                i = c * e + r;\n          t.push([o, i]);\n        }\n\n        const e = (f + Math.floor(u - 1) * n) / 2,\n              o = p * e + s,\n              i = c * e + r;\n        t.push([o, i]);\n      }\n\n      t.push([i, l]);\n    }\n  }\n\n  return x(t) ? new r({\n    rings: s,\n    spatialReference: t.spatialReference\n  }) : new i({\n    paths: s,\n    spatialReference: t.spatialReference\n  });\n}\n\nfunction R(t, e, n) {\n  if (e) {\n    const e = M(t, 1e6);\n    t = h(e, !0);\n  }\n\n  return n && (t = p(t, n)), t;\n}\n\nfunction b(t, e, n) {\n  if (Array.isArray(t)) {\n    const o = t[0];\n\n    if (o > e) {\n      const n = c(o, e);\n      t[0] = o + n * (-2 * e);\n    } else if (o < n) {\n      const e = c(o, n);\n      t[0] = o + e * (-2 * n);\n    }\n  } else {\n    const o = t.x;\n\n    if (o > e) {\n      const n = c(o, e);\n      t = t.clone().offset(n * (-2 * e), 0);\n    } else if (o < n) {\n      const e = c(o, n);\n      t = t.clone().offset(e * (-2 * n), 0);\n    }\n  }\n\n  return t;\n}\n\nfunction P(t, e) {\n  let n = -1;\n\n  for (let o = 0; o < e.cutIndexes.length; o++) {\n    const s = e.cutIndexes[o],\n          r = e.geometries[o],\n          i = l(r);\n\n    for (let t = 0; t < i.length; t++) {\n      const e = i[t];\n      e.some(n => {\n        if (n[0] < 180) return !0;\n        {\n          let n = 0;\n\n          for (let t = 0; t < e.length; t++) {\n            const o = e[t][0];\n            n = o > n ? o : n;\n          }\n\n          n = Number(n.toFixed(9));\n          const o = -360 * c(n, 180);\n\n          for (let s = 0; s < e.length; s++) {\n            const e = r.getPoint(t, s);\n            r.setPoint(t, s, e.clone().offset(o, 0));\n          }\n\n          return !0;\n        }\n      });\n    }\n\n    if (s === n) {\n      if (d(t)) for (const e of l(r)) t[s] = t[s].addRing(e);else if (w(t)) for (const e of l(r)) t[s] = t[s].addPath(e);\n    } else n = s, t[s] = r;\n  }\n\n  return t;\n}\n\nasync function L(e, n, l) {\n  if (!Array.isArray(e)) return L([e], n);\n  n && \"string\" != typeof n && y.warn(\"normalizeCentralMeridian()\", \"The url object is deprecated, use the url string instead\");\n  const h = \"string\" == typeof n ? n : n?.url ?? t.geometryServiceUrl;\n  let x,\n      d,\n      w,\n      j,\n      M,\n      U,\n      z,\n      A,\n      v = 0;\n  const k = [],\n        C = [];\n\n  for (const t of e) if (o(t)) C.push(t);else if (x || (x = t.spatialReference, d = u(x), w = x.isWebMercator, U = w ? 102100 : 4326, j = f[U].maxX, M = f[U].minX, z = f[U].plus180Line, A = f[U].minus180Line), d) {\n    if (\"mesh\" === t.type) C.push(t);else if (\"point\" === t.type) C.push(b(t.clone(), j, M));else if (\"multipoint\" === t.type) {\n      const e = t.clone();\n      e.points = e.points.map(t => b(t, j, M)), C.push(e);\n    } else if (\"extent\" === t.type) {\n      const e = t.clone()._normalize(!1, !1, d);\n\n      C.push(e.rings ? new r(e) : e);\n    } else if (t.extent) {\n      const e = t.extent,\n            n = c(e.xmin, M) * (2 * j);\n      let o = 0 === n ? t.clone() : p(t.clone(), n);\n      e.offset(n, 0), e.intersects(z) && e.xmax !== j ? (v = e.xmax > v ? e.xmax : v, o = R(o, w), k.push(o), C.push(\"cut\")) : e.intersects(A) && e.xmin !== M ? (v = e.xmax * (2 * j) > v ? e.xmax * (2 * j) : v, o = R(o, w, 360), k.push(o), C.push(\"cut\")) : C.push(o);\n    } else C.push(t.clone());\n  } else C.push(t);\n\n  let I = c(v, j),\n      X = -90;\n  const q = I,\n        D = new i();\n\n  for (; I > 0;) {\n    const t = 360 * I - 180;\n    D.addPath([[t, X], [t, -1 * X]]), X *= -1, I--;\n  }\n\n  if (k.length > 0 && q > 0) {\n    const t = P(k, await m(h, k, D, l)),\n          n = [],\n          o = [];\n\n    for (let l = 0; l < C.length; l++) {\n      const r = C[l];\n      if (\"cut\" !== r) o.push(r);else {\n        const r = t.shift(),\n              i = e[l];\n        s(i) && \"polygon\" === i.type && i.rings && i.rings.length > 1 && r.rings.length >= i.rings.length ? (n.push(r), o.push(\"simplify\")) : o.push(w ? a(r) : r);\n      }\n    }\n\n    if (!n.length) return o;\n    const r = await g(h, n, l),\n          i = [];\n\n    for (let e = 0; e < o.length; e++) {\n      const t = o[e];\n      \"simplify\" !== t ? i.push(t) : i.push(w ? a(r.shift()) : r.shift());\n    }\n\n    return i;\n  }\n\n  const E = [];\n\n  for (let t = 0; t < C.length; t++) {\n    const e = C[t];\n    if (\"cut\" !== e) E.push(e);else {\n      const t = k.shift();\n      E.push(!0 === w ? a(t) : t);\n    }\n  }\n\n  return E;\n}\n\nfunction U(t) {\n  if (!t) return null;\n  const e = t.extent;\n  if (!e) return null;\n  const n = t.spatialReference && u(t.spatialReference);\n  if (!n) return e;\n  const [o, s] = n.valid,\n        r = 2 * s,\n        {\n    width: i\n  } = e;\n  let l,\n      {\n    xmin: f,\n    xmax: c\n  } = e;\n  if ([f, c] = [c, f], \"extent\" === t.type || 0 === i || i <= s || i > r || f < o || c > s) return e;\n\n  switch (t.type) {\n    case \"polygon\":\n      if (!(t.rings.length > 1)) return e;\n      l = j(t.rings);\n      break;\n\n    case \"polyline\":\n      if (!(t.paths.length > 1)) return e;\n      l = j(t.paths);\n      break;\n\n    case \"multipoint\":\n      l = t.points;\n  }\n\n  const p = e.clone();\n\n  for (let u = 0; u < l.length; u++) {\n    let t = l[u][0];\n    t < 0 ? (t += s, c = Math.max(t, c)) : (t -= s, f = Math.min(t, f));\n  }\n\n  return p.xmin = f, p.xmax = c, p.width < i ? (p.xmin -= s, p.xmax -= s, p) : e;\n}\n\nfunction z(t, e) {\n  const n = u(e);\n\n  if (n) {\n    const [e, o] = n.valid,\n          s = o - e;\n    if (t < e) for (; t < e;) t += s;\n    if (t > o) for (; t > o;) t -= s;\n  }\n\n  return t;\n}\n\nexport { U as getDenormalizedExtent, L as normalizeCentralMeridian, z as normalizeMapX, M as straightLineDensify };","map":{"version":3,"names":["t","e","n","isNone","o","isSome","s","r","i","getGeometryParts","l","cutParams","f","offsetMagnitude","c","updatePolyGeometry","p","getInfo","u","geographicToWebMercator","a","webMercatorToGeographic","h","cut","m","simplify","g","y","getLogger","x","type","d","w","j","length","push","Math","min","max","M","error","sqrt","floor","rings","spatialReference","paths","R","b","Array","isArray","clone","offset","P","cutIndexes","geometries","some","Number","toFixed","getPoint","setPoint","addRing","addPath","L","warn","url","geometryServiceUrl","U","z","A","v","k","C","isWebMercator","maxX","minX","plus180Line","minus180Line","points","map","_normalize","extent","xmin","intersects","xmax","I","X","q","D","shift","E","valid","width","getDenormalizedExtent","normalizeCentralMeridian","normalizeMapX","straightLineDensify"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/geometry/support/normalizeUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport t from\"../../config.js\";import e from\"../../core/Error.js\";import n from\"../../core/Logger.js\";import{isNone as o,isSome as s}from\"../../core/maybe.js\";import r from\"../Polygon.js\";import i from\"../Polyline.js\";import{getGeometryParts as l,cutParams as f,offsetMagnitude as c,updatePolyGeometry as p}from\"./normalizeUtilsCommon.js\";import{getInfo as u}from\"./spatialReferenceUtils.js\";import{geographicToWebMercator as a,webMercatorToGeographic as h}from\"./webMercatorUtils.js\";import{cut as m}from\"../../rest/geometry/cut.js\";import{simplify as g}from\"../../rest/geometry/simplify.js\";const y=n.getLogger(\"esri.geometry.support.normalizeUtils\");function x(t){return\"polygon\"===t.type}function d(t){return\"polygon\"===t[0].type}function w(t){return\"polyline\"===t[0].type}function j(t){const e=[];let n=0,o=0;for(let s=0;s<t.length;s++){const r=t[s];let i=null;for(let t=0;t<r.length;t++)i=r[t],e.push(i),0===t?(n=i[0],o=n):(n=Math.min(n,i[0]),o=Math.max(o,i[0]));i&&e.push([(n+o)/2,0])}return e}function M(t,n){if(!(t instanceof i||t instanceof r)){const t=\"straightLineDensify: the input geometry is neither polyline nor polygon\";throw y.error(t),new e(t)}const o=l(t),s=[];for(const e of o){const t=[];s.push(t),t.push([e[0][0],e[0][1]]);for(let o=0;o<e.length-1;o++){const s=e[o][0],r=e[o][1],i=e[o+1][0],l=e[o+1][1],f=Math.sqrt((i-s)*(i-s)+(l-r)*(l-r)),c=(l-r)/f,p=(i-s)/f,u=f/n;if(u>1){for(let l=1;l<=u-1;l++){const e=l*n,o=p*e+s,i=c*e+r;t.push([o,i])}const e=(f+Math.floor(u-1)*n)/2,o=p*e+s,i=c*e+r;t.push([o,i])}t.push([i,l])}}return x(t)?new r({rings:s,spatialReference:t.spatialReference}):new i({paths:s,spatialReference:t.spatialReference})}function R(t,e,n){if(e){const e=M(t,1e6);t=h(e,!0)}return n&&(t=p(t,n)),t}function b(t,e,n){if(Array.isArray(t)){const o=t[0];if(o>e){const n=c(o,e);t[0]=o+n*(-2*e)}else if(o<n){const e=c(o,n);t[0]=o+e*(-2*n)}}else{const o=t.x;if(o>e){const n=c(o,e);t=t.clone().offset(n*(-2*e),0)}else if(o<n){const e=c(o,n);t=t.clone().offset(e*(-2*n),0)}}return t}function P(t,e){let n=-1;for(let o=0;o<e.cutIndexes.length;o++){const s=e.cutIndexes[o],r=e.geometries[o],i=l(r);for(let t=0;t<i.length;t++){const e=i[t];e.some((n=>{if(n[0]<180)return!0;{let n=0;for(let t=0;t<e.length;t++){const o=e[t][0];n=o>n?o:n}n=Number(n.toFixed(9));const o=-360*c(n,180);for(let s=0;s<e.length;s++){const e=r.getPoint(t,s);r.setPoint(t,s,e.clone().offset(o,0))}return!0}}))}if(s===n){if(d(t))for(const e of l(r))t[s]=t[s].addRing(e);else if(w(t))for(const e of l(r))t[s]=t[s].addPath(e)}else n=s,t[s]=r}return t}async function L(e,n,l){if(!Array.isArray(e))return L([e],n);n&&\"string\"!=typeof n&&y.warn(\"normalizeCentralMeridian()\",\"The url object is deprecated, use the url string instead\");const h=\"string\"==typeof n?n:n?.url??t.geometryServiceUrl;let x,d,w,j,M,U,z,A,v=0;const k=[],C=[];for(const t of e)if(o(t))C.push(t);else if(x||(x=t.spatialReference,d=u(x),w=x.isWebMercator,U=w?102100:4326,j=f[U].maxX,M=f[U].minX,z=f[U].plus180Line,A=f[U].minus180Line),d)if(\"mesh\"===t.type)C.push(t);else if(\"point\"===t.type)C.push(b(t.clone(),j,M));else if(\"multipoint\"===t.type){const e=t.clone();e.points=e.points.map((t=>b(t,j,M))),C.push(e)}else if(\"extent\"===t.type){const e=t.clone()._normalize(!1,!1,d);C.push(e.rings?new r(e):e)}else if(t.extent){const e=t.extent,n=c(e.xmin,M)*(2*j);let o=0===n?t.clone():p(t.clone(),n);e.offset(n,0),e.intersects(z)&&e.xmax!==j?(v=e.xmax>v?e.xmax:v,o=R(o,w),k.push(o),C.push(\"cut\")):e.intersects(A)&&e.xmin!==M?(v=e.xmax*(2*j)>v?e.xmax*(2*j):v,o=R(o,w,360),k.push(o),C.push(\"cut\")):C.push(o)}else C.push(t.clone());else C.push(t);let I=c(v,j),X=-90;const q=I,D=new i;for(;I>0;){const t=360*I-180;D.addPath([[t,X],[t,-1*X]]),X*=-1,I--}if(k.length>0&&q>0){const t=P(k,await m(h,k,D,l)),n=[],o=[];for(let l=0;l<C.length;l++){const r=C[l];if(\"cut\"!==r)o.push(r);else{const r=t.shift(),i=e[l];s(i)&&\"polygon\"===i.type&&i.rings&&i.rings.length>1&&r.rings.length>=i.rings.length?(n.push(r),o.push(\"simplify\")):o.push(w?a(r):r)}}if(!n.length)return o;const r=await g(h,n,l),i=[];for(let e=0;e<o.length;e++){const t=o[e];\"simplify\"!==t?i.push(t):i.push(w?a(r.shift()):r.shift())}return i}const E=[];for(let t=0;t<C.length;t++){const e=C[t];if(\"cut\"!==e)E.push(e);else{const t=k.shift();E.push(!0===w?a(t):t)}}return E}function U(t){if(!t)return null;const e=t.extent;if(!e)return null;const n=t.spatialReference&&u(t.spatialReference);if(!n)return e;const[o,s]=n.valid,r=2*s,{width:i}=e;let l,{xmin:f,xmax:c}=e;if([f,c]=[c,f],\"extent\"===t.type||0===i||i<=s||i>r||f<o||c>s)return e;switch(t.type){case\"polygon\":if(!(t.rings.length>1))return e;l=j(t.rings);break;case\"polyline\":if(!(t.paths.length>1))return e;l=j(t.paths);break;case\"multipoint\":l=t.points}const p=e.clone();for(let u=0;u<l.length;u++){let t=l[u][0];t<0?(t+=s,c=Math.max(t,c)):(t-=s,f=Math.min(t,f))}return p.xmin=f,p.xmax=c,p.width<i?(p.xmin-=s,p.xmax-=s,p):e}function z(t,e){const n=u(e);if(n){const[e,o]=n.valid,s=o-e;if(t<e)for(;t<e;)t+=s;if(t>o)for(;t>o;)t-=s}return t}export{U as getDenormalizedExtent,L as normalizeCentralMeridian,z as normalizeMapX,M as straightLineDensify};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}