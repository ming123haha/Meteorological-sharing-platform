{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport { isSome as r, unwrap as e } from \"../../core/maybe.js\";\nimport t from \"../../geometry/support/GeographicTransformation.js\";\nimport s from \"./PixelBlock.js\";\nimport { decode as o } from \"./rasterFormats/RasterCodec.js\";\nimport { split as i, mosaic as a, approximateTransform as n, getLocalArithmeticNorthRotations as m } from \"./rasterFunctions/pixelUtils.js\";\nimport { create as l } from \"./rasterFunctions/rasterFunctionHelper.js\";\nimport { requirePE as c, load as f, getProjectionOffsetGrid as p } from \"./rasterFunctions/rasterProjectionHelper.js\";\nimport { estimateStatisticsHistograms as u } from \"./rasterFunctions/stretchUtils.js\";\nimport { convertVectorFieldData as d, convertToLocalDirections as S } from \"./rasterFunctions/vectorFieldUtils.js\";\nimport { readTransform as y } from \"./rasterTransforms/utils.js\";\nimport h from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as x } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport O from \"../../geometry/Extent.js\";\n\nclass N {\n  convertVectorFieldData(e) {\n    const t = s.fromJSON(e.pixelBlock),\n          o = d(t, e.type);\n    return Promise.resolve(r(o) && o.toJSON());\n  }\n\n  async decode(r) {\n    const e = await o(r.data, r.options);\n    return e && e.toJSON();\n  }\n\n  symbolize(e) {\n    e.pixelBlock = s.fromJSON(e.pixelBlock), e.extent = e.extent ? O.fromJSON(e.extent) : null;\n    const t = this.symbolizer.symbolize(e);\n    return Promise.resolve(r(t) && t.toJSON());\n  }\n\n  async updateSymbolizer(r) {\n    this.symbolizer = h.fromJSON(r.symbolizerJSON), r.histograms && \"rasterStretch\" === this.symbolizer?.rendererJSON.type && (this.symbolizer.rendererJSON.histograms = r.histograms);\n  }\n\n  async updateRasterFunction(r) {\n    this.rasterFunction = l(r.rasterFunctionJSON);\n  }\n\n  async process(e) {\n    const t = this.rasterFunction.process({\n      extent: O.fromJSON(e.extent),\n      primaryPixelBlocks: e.primaryPixelBlocks.map(e => r(e) ? s.fromJSON(e) : null),\n      primaryRasterIds: e.primaryRasterIds\n    });\n    return r(t) ? t.toJSON() : null;\n  }\n\n  stretch(e) {\n    const t = this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock), e.stretchParams);\n    return Promise.resolve(r(t) && t.toJSON());\n  }\n\n  estimateStatisticsHistograms(r) {\n    const e = u(s.fromJSON(r.srcPixelBlock));\n    return Promise.resolve(e);\n  }\n\n  split(r) {\n    const e = i(s.fromJSON(r.srcPixelBlock), r.tileSize, r.maximumPyramidLevel);\n    return e && e.forEach((r, t) => {\n      e.set(t, r?.toJSON());\n    }), Promise.resolve(e);\n  }\n\n  async mosaicAndTransform(r) {\n    const t = r.srcPixelBlocks.map(r => r ? new s(r) : null),\n          o = a(t, r.srcMosaicSize, {\n      blockWidths: r.blockWidths,\n      alignmentInfo: r.alignmentInfo,\n      clipOffset: r.clipOffset,\n      clipSize: r.clipSize\n    });\n    let i,\n        l = o;\n    return r.coefs && (l = n(o, r.destDimension, r.coefs, r.sampleSpacing, r.interpolation)), r.projectDirections && r.gcsGrid && (i = m(r.destDimension, r.gcsGrid), l = e(S(l, r.isUV ? \"vector-uv\" : \"vector-magdir\", i))), {\n      pixelBlock: l?.toJSON(),\n      localNorthDirections: i\n    };\n  }\n\n  async createFlowMesh(r, e) {\n    const t = {\n      data: new Float32Array(r.flowData.buffer),\n      mask: new Uint8Array(r.flowData.maskBuffer),\n      width: r.flowData.width,\n      height: r.flowData.height\n    },\n          {\n      vertexData: s,\n      indexData: o\n    } = await x(r.meshType, r.simulationSettings, t, e.signal);\n    return {\n      result: {\n        vertexBuffer: s.buffer,\n        indexBuffer: o.buffer\n      },\n      transferList: [s.buffer, o.buffer]\n    };\n  }\n\n  async getProjectionOffsetGrid(r) {\n    const e = O.fromJSON(r.projectedExtent),\n          s = O.fromJSON(r.srcBufferExtent);\n    let o = null;\n    r.datumTransformationSteps && (o = new t({\n      steps: r.datumTransformationSteps\n    })), (r.includeGCSGrid || c(e.spatialReference, s.spatialReference, o)) && (await f());\n    const i = r.rasterTransform ? y(r.rasterTransform) : null;\n    return p({ ...r,\n      projectedExtent: e,\n      srcBufferExtent: s,\n      datumTransformation: o,\n      rasterTransform: i\n    });\n  }\n\n}\n\nexport { N as default };","map":{"version":3,"names":["isSome","r","unwrap","e","t","s","decode","o","split","i","mosaic","a","approximateTransform","n","getLocalArithmeticNorthRotations","m","create","l","requirePE","c","load","f","getProjectionOffsetGrid","p","estimateStatisticsHistograms","u","convertVectorFieldData","d","convertToLocalDirections","S","readTransform","y","h","createFlowMesh","x","O","N","fromJSON","pixelBlock","type","Promise","resolve","toJSON","data","options","symbolize","extent","symbolizer","updateSymbolizer","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","tileSize","maximumPyramidLevel","forEach","set","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","isUV","localNorthDirections","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","rasterTransform","datumTransformation","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r,unwrap as e}from\"../../core/maybe.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import s from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{split as i,mosaic as a,approximateTransform as n,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{create as l}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as c,load as f,getProjectionOffsetGrid as p}from\"./rasterFunctions/rasterProjectionHelper.js\";import{estimateStatisticsHistograms as u}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as d,convertToLocalDirections as S}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as y}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as x}from\"../../views/2d/engine/flow/dataUtils.js\";import O from\"../../geometry/Extent.js\";class N{convertVectorFieldData(e){const t=s.fromJSON(e.pixelBlock),o=d(t,e.type);return Promise.resolve(r(o)&&o.toJSON())}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=s.fromJSON(e.pixelBlock),e.extent=e.extent?O.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(r(t)&&t.toJSON())}async updateSymbolizer(r){this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=l(r.rasterFunctionJSON)}async process(e){const t=this.rasterFunction.process({extent:O.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>r(e)?s.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return r(t)?t.toJSON():null}stretch(e){const t=this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(t)&&t.toJSON())}estimateStatisticsHistograms(r){const e=u(s.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,r?.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new s(r):null)),o=a(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let i,l=o;return r.coefs&&(l=n(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(i=m(r.destDimension,r.gcsGrid),l=e(S(l,r.isUV?\"vector-uv\":\"vector-magdir\",i))),{pixelBlock:l?.toJSON(),localNorthDirections:i}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await x(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(r){const e=O.fromJSON(r.projectedExtent),s=O.fromJSON(r.srcBufferExtent);let o=null;r.datumTransformationSteps&&(o=new t({steps:r.datumTransformationSteps})),(r.includeGCSGrid||c(e.spatialReference,s.spatialReference,o))&&await f();const i=r.rasterTransform?y(r.rasterTransform):null;return p({...r,projectedExtent:e,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{N as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}