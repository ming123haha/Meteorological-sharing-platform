{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { getId as t } from \"./CIMCursor.js\";\nimport { CurveHelper as s, PIXEL_TOLERANCE as e } from \"./CurveHelper.js\";\nconst i = 1e-7;\n\nclass n {\n  constructor() {\n    this._values = [], this.extPtGap = 0, this.ctrlPtGap = 0, this._length = 0, this._currentValue = 0;\n  }\n\n  isEmpty() {\n    return 0 === this._values.length;\n  }\n\n  size() {\n    return this._values.length;\n  }\n\n  init(t, s, e = !0) {\n    if (this._setEmpty(), !t || 0 === t.length) return !1;\n\n    for (let n = 0; n < t.length; n++) {\n      let s = Math.abs(t[n]);\n      e && s < i && (s = i), this._values.push(s), this._length += s;\n    }\n\n    return s && 1 & t.length && (this._length *= 2), 0 !== this._length && (this.ctrlPtGap = this.extPtGap = 0, this._currentValue = -1, !0);\n  }\n\n  scale(t) {\n    const s = this._values ? this._values.length : 0;\n\n    for (let e = 0; e < s; ++e) this._values[e] *= t;\n\n    this._length *= t, this.extPtGap *= t, this.ctrlPtGap *= t;\n  }\n\n  addValue(t) {\n    this._length += t, this._values.push(t);\n  }\n\n  firstValue() {\n    return this._values[0];\n  }\n\n  lastValue() {\n    return this._values[this._values.length - 1];\n  }\n\n  nextValue() {\n    return this._currentValue++, this._currentValue === this._values.length && (this._currentValue = 0), this._values[this._currentValue];\n  }\n\n  reset() {\n    this._currentValue = -1;\n  }\n\n  length() {\n    return this._length;\n  }\n\n  _setEmpty() {\n    this.extPtGap = this.ctrlPtGap = this._length = 0, this._currentValue = -1, this._values.length = 0;\n  }\n\n}\n\nclass h {\n  constructor() {\n    this.pt = null, this.ca = 0, this.sa = 0;\n  }\n\n}\n\nvar r;\n!function (t) {\n  t[t.FAIL = 0] = \"FAIL\", t[t.END = 1] = \"END\", t[t.CONTINUE = 2] = \"CONTINUE\";\n}(r || (r = {}));\n\nclass a {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.segment = -1, this.segmentLength = 0, this.abscissa = 0, this.isPathEnd = !1, this.isPartEnd = !1;\n  }\n\n  isValid() {\n    return -1 !== this.segment;\n  }\n\n  copyTo(t) {\n    t.segment = this.segment, t.segmentLength = this.segmentLength, t.abscissa = this.abscissa, t.isPathEnd = this.isPathEnd, t.isPartEnd = this.isPartEnd;\n  }\n\n}\n\nclass g extends s {\n  constructor(t = 0, s = !1) {\n    super(t, s), this._tolerance = e, this._currentPosition = new a();\n  }\n\n  updateTolerance(t) {\n    this._tolerance = e * t;\n  }\n\n  init(t, s, e = !0) {\n    return e ? (this._patternLength = s.length(), this._partExtPtGap = s.extPtGap, this._partCtrlPtGap = s.ctrlPtGap) : (this._patternLength = 0, this._partExtPtGap = 0, this._partCtrlPtGap = 0), this._currentPosition.reset(), this._partSegCount = 0, this._path = t, this._seg = -1, this._setPosAtNextPart();\n  }\n\n  curPositionIsValid() {\n    return this._currentPosition.isValid();\n  }\n\n  nextPosition(t, s = r.FAIL) {\n    const e = new a();\n    return !!this._nextPosition(t, e, null, s) && (e.copyTo(this._currentPosition), !0);\n  }\n\n  curPointAndAngle(t) {\n    t.pt = this._getPoint(this._currentPosition);\n\n    const [s, e] = this._getAngle(this._currentPosition);\n\n    t.ca = s, t.sa = e;\n  }\n\n  nextPointAndAngle(t, s, e = r.FAIL) {\n    const i = new a();\n    if (!this._nextPosition(t, i, null, e)) return !1;\n    i.copyTo(this._currentPosition), s.pt = this._getPoint(i);\n\n    const [n, h] = this._getAngle(i);\n\n    return s.ca = n, s.sa = h, !0;\n  }\n\n  nextCurve(t) {\n    if (0 === t) return null;\n    const s = [],\n          e = new a();\n    return this._nextPosition(t, e, s, r.END) ? (e.copyTo(this._currentPosition), s) : null;\n  }\n\n  isPathEnd() {\n    return this._currentPosition.isPathEnd;\n  }\n\n  getPathEnd() {\n    if (-1 === this._currentPosition.segment) throw new Error(\"missing segment\");\n    return this._path[this._currentPosition.segment + 1];\n  }\n\n  _nextPosition(t, s, e, i) {\n    if (this._currentPosition.isPathEnd) return !1;\n    let n = this._currentPosition.abscissa;\n\n    for (this._currentPosition.segmentLength > 0 && (n /= this._currentPosition.segmentLength), this._currentPosition.copyTo(s); s.abscissa + t * this._partLengthRatio > s.segmentLength + this._tolerance;) {\n      if (e) {\n        if (0 === e.length) if (0 === n) {\n          const t = this._path[s.segment];\n          e.push([t[0], t[1]]);\n        } else e.push(this.getSegCoord2D(this._path, s.segment, n));\n        const t = this._path[s.segment + 1];\n        e.push([t[0], t[1]]);\n      }\n\n      if (n = 0, t -= (s.segmentLength - s.abscissa) / this._partLengthRatio, this._partSegCount) s.segment = this._nextSegment(), s.segmentLength = this.calculateSegLength(this._path, s.segment), s.abscissa = 0, this._partSegCount--;else {\n        if (!this._setPosAtNextPart()) return i !== r.FAIL && (s.segmentLength = this.calculateSegLength(this._path, s.segment), s.isPartEnd = !0, i === r.END ? (s.abscissa = s.segmentLength, s.isPathEnd = !0) : s.abscissa = s.segmentLength + t, !0);\n\n        this._currentPosition.copyTo(s);\n      }\n    }\n\n    if (s.abscissa += t * this._partLengthRatio, e) {\n      if (0 === e.length) if (0 === n) {\n        const t = this._path[s.segment];\n        e.push([t[0], t[1]]);\n      } else e.push(this.getSegCoord2D(this._path, s.segment, n));\n      const t = s.abscissa / s.segmentLength;\n\n      if (1 === t) {\n        const t = this._path[s.segment + 1];\n        e.push([t[0], t[1]]);\n      } else e.push(this.getSegCoord2D(this._path, s.segment, t));\n    }\n\n    return this._partSegCount || Math.abs(s.abscissa - s.segmentLength) < this._tolerance && (s.isPathEnd = this._partIsLast, s.isPartEnd = !0), !0;\n  }\n\n  _getPoint(t) {\n    if (-1 === t.segment) throw new Error(\"missing segment\");\n    const s = t.segmentLength <= 0 ? 0 : t.abscissa / t.segmentLength;\n    return this.getSegCoord2D(this._path, t.segment, s);\n  }\n\n  _getAngle(t) {\n    if (-1 === t.segment) throw new Error(\"missing segment\");\n    const s = t.segmentLength <= 0 ? 0 : t.abscissa / t.segmentLength;\n    return this.getSegAngleCS(this._path, t.segment, s);\n  }\n\n  _setPosAtNextPart() {\n    for (; this._partSegCount;) this._hasNextSegment() && this._nextSegment(), this._partSegCount--;\n\n    if (!this._hasNextSegment()) return !1;\n\n    for (this._partLength = 0, this._partIsLast = !0, this._partSegCount = 0; this._hasNextSegment();) if (this._partLength += this.calculateSegLength(this._path, this._nextSegment()), this._partSegCount++, 1 === t(this._path[this._getEndPointIndex()])) {\n      this._partIsLast = !this._hasNextSegment();\n      break;\n    }\n\n    let s = this._partSegCount;\n\n    for (; s;) this._previousSegment(), --s;\n\n    this._currentPosition.segment = this._nextSegment(), this._currentPosition.segmentLength = this.calculateSegLength(this._path, this._currentPosition.segment), this._currentPosition.abscissa = 0, this._currentPosition.isPathEnd = this._currentPosition.isPartEnd = !1, --this._partSegCount;\n\n    const e = this._getStartPointIndex();\n\n    this._ctrlPtBegin = 1 === t(this._path[e]);\n    let i = e + this._partSegCount + 1;\n\n    if (i >= this._path.length && (i = 0), this._ctrlPtEnd = 1 === t(this._path[i]), this._patternLength > 0) {\n      const t = this._ctrlPtBegin ? this._partCtrlPtGap : this._partExtPtGap,\n            s = this._ctrlPtEnd ? this._partCtrlPtGap : this._partExtPtGap;\n      let e = Math.round((this._partLength - (t + s)) / this._patternLength);\n      e <= 0 && (e = t + s > 0 ? 0 : 1), this._partLengthRatio = this._partLength / (t + s + e * this._patternLength), this._partLengthRatio < .01 && (this._partLengthRatio = 1);\n    } else this._partLengthRatio = 1;\n\n    return !0;\n  }\n\n  _hasNextSegment() {\n    return this._seg < this._path.length - 2;\n  }\n\n  _previousSegment() {\n    return --this._seg;\n  }\n\n  _nextSegment() {\n    return ++this._seg;\n  }\n\n  _getStartPointIndex() {\n    return this._seg;\n  }\n\n  _getEndPointIndex() {\n    return this._seg + 1;\n  }\n\n}\n\nexport { n as DashPattern, r as EndType, g as GeometryWalker, h as Pos };","map":{"version":3,"names":["getId","t","CurveHelper","s","PIXEL_TOLERANCE","e","i","n","constructor","_values","extPtGap","ctrlPtGap","_length","_currentValue","isEmpty","length","size","init","_setEmpty","Math","abs","push","scale","addValue","firstValue","lastValue","nextValue","reset","h","pt","ca","sa","r","FAIL","END","CONTINUE","a","segment","segmentLength","abscissa","isPathEnd","isPartEnd","isValid","copyTo","g","_tolerance","_currentPosition","updateTolerance","_patternLength","_partExtPtGap","_partCtrlPtGap","_partSegCount","_path","_seg","_setPosAtNextPart","curPositionIsValid","nextPosition","_nextPosition","curPointAndAngle","_getPoint","_getAngle","nextPointAndAngle","nextCurve","getPathEnd","Error","_partLengthRatio","getSegCoord2D","_nextSegment","calculateSegLength","_partIsLast","getSegAngleCS","_hasNextSegment","_partLength","_getEndPointIndex","_previousSegment","_getStartPointIndex","_ctrlPtBegin","_ctrlPtEnd","round","DashPattern","EndType","GeometryWalker","Pos"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/symbols/cim/GeometryWalker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{getId as t}from\"./CIMCursor.js\";import{CurveHelper as s,PIXEL_TOLERANCE as e}from\"./CurveHelper.js\";const i=1e-7;class n{constructor(){this._values=[],this.extPtGap=0,this.ctrlPtGap=0,this._length=0,this._currentValue=0}isEmpty(){return 0===this._values.length}size(){return this._values.length}init(t,s,e=!0){if(this._setEmpty(),!t||0===t.length)return!1;for(let n=0;n<t.length;n++){let s=Math.abs(t[n]);e&&s<i&&(s=i),this._values.push(s),this._length+=s}return s&&1&t.length&&(this._length*=2),0!==this._length&&(this.ctrlPtGap=this.extPtGap=0,this._currentValue=-1,!0)}scale(t){const s=this._values?this._values.length:0;for(let e=0;e<s;++e)this._values[e]*=t;this._length*=t,this.extPtGap*=t,this.ctrlPtGap*=t}addValue(t){this._length+=t,this._values.push(t)}firstValue(){return this._values[0]}lastValue(){return this._values[this._values.length-1]}nextValue(){return this._currentValue++,this._currentValue===this._values.length&&(this._currentValue=0),this._values[this._currentValue]}reset(){this._currentValue=-1}length(){return this._length}_setEmpty(){this.extPtGap=this.ctrlPtGap=this._length=0,this._currentValue=-1,this._values.length=0}}class h{constructor(){this.pt=null,this.ca=0,this.sa=0}}var r;!function(t){t[t.FAIL=0]=\"FAIL\",t[t.END=1]=\"END\",t[t.CONTINUE=2]=\"CONTINUE\"}(r||(r={}));class a{constructor(){this.reset()}reset(){this.segment=-1,this.segmentLength=0,this.abscissa=0,this.isPathEnd=!1,this.isPartEnd=!1}isValid(){return-1!==this.segment}copyTo(t){t.segment=this.segment,t.segmentLength=this.segmentLength,t.abscissa=this.abscissa,t.isPathEnd=this.isPathEnd,t.isPartEnd=this.isPartEnd}}class g extends s{constructor(t=0,s=!1){super(t,s),this._tolerance=e,this._currentPosition=new a}updateTolerance(t){this._tolerance=e*t}init(t,s,e=!0){return e?(this._patternLength=s.length(),this._partExtPtGap=s.extPtGap,this._partCtrlPtGap=s.ctrlPtGap):(this._patternLength=0,this._partExtPtGap=0,this._partCtrlPtGap=0),this._currentPosition.reset(),this._partSegCount=0,this._path=t,this._seg=-1,this._setPosAtNextPart()}curPositionIsValid(){return this._currentPosition.isValid()}nextPosition(t,s=r.FAIL){const e=new a;return!!this._nextPosition(t,e,null,s)&&(e.copyTo(this._currentPosition),!0)}curPointAndAngle(t){t.pt=this._getPoint(this._currentPosition);const[s,e]=this._getAngle(this._currentPosition);t.ca=s,t.sa=e}nextPointAndAngle(t,s,e=r.FAIL){const i=new a;if(!this._nextPosition(t,i,null,e))return!1;i.copyTo(this._currentPosition),s.pt=this._getPoint(i);const[n,h]=this._getAngle(i);return s.ca=n,s.sa=h,!0}nextCurve(t){if(0===t)return null;const s=[],e=new a;return this._nextPosition(t,e,s,r.END)?(e.copyTo(this._currentPosition),s):null}isPathEnd(){return this._currentPosition.isPathEnd}getPathEnd(){if(-1===this._currentPosition.segment)throw new Error(\"missing segment\");return this._path[this._currentPosition.segment+1]}_nextPosition(t,s,e,i){if(this._currentPosition.isPathEnd)return!1;let n=this._currentPosition.abscissa;for(this._currentPosition.segmentLength>0&&(n/=this._currentPosition.segmentLength),this._currentPosition.copyTo(s);s.abscissa+t*this._partLengthRatio>s.segmentLength+this._tolerance;){if(e){if(0===e.length)if(0===n){const t=this._path[s.segment];e.push([t[0],t[1]])}else e.push(this.getSegCoord2D(this._path,s.segment,n));const t=this._path[s.segment+1];e.push([t[0],t[1]])}if(n=0,t-=(s.segmentLength-s.abscissa)/this._partLengthRatio,this._partSegCount)s.segment=this._nextSegment(),s.segmentLength=this.calculateSegLength(this._path,s.segment),s.abscissa=0,this._partSegCount--;else{if(!this._setPosAtNextPart())return i!==r.FAIL&&(s.segmentLength=this.calculateSegLength(this._path,s.segment),s.isPartEnd=!0,i===r.END?(s.abscissa=s.segmentLength,s.isPathEnd=!0):s.abscissa=s.segmentLength+t,!0);this._currentPosition.copyTo(s)}}if(s.abscissa+=t*this._partLengthRatio,e){if(0===e.length)if(0===n){const t=this._path[s.segment];e.push([t[0],t[1]])}else e.push(this.getSegCoord2D(this._path,s.segment,n));const t=s.abscissa/s.segmentLength;if(1===t){const t=this._path[s.segment+1];e.push([t[0],t[1]])}else e.push(this.getSegCoord2D(this._path,s.segment,t))}return this._partSegCount||Math.abs(s.abscissa-s.segmentLength)<this._tolerance&&(s.isPathEnd=this._partIsLast,s.isPartEnd=!0),!0}_getPoint(t){if(-1===t.segment)throw new Error(\"missing segment\");const s=t.segmentLength<=0?0:t.abscissa/t.segmentLength;return this.getSegCoord2D(this._path,t.segment,s)}_getAngle(t){if(-1===t.segment)throw new Error(\"missing segment\");const s=t.segmentLength<=0?0:t.abscissa/t.segmentLength;return this.getSegAngleCS(this._path,t.segment,s)}_setPosAtNextPart(){for(;this._partSegCount;)this._hasNextSegment()&&this._nextSegment(),this._partSegCount--;if(!this._hasNextSegment())return!1;for(this._partLength=0,this._partIsLast=!0,this._partSegCount=0;this._hasNextSegment();)if(this._partLength+=this.calculateSegLength(this._path,this._nextSegment()),this._partSegCount++,1===t(this._path[this._getEndPointIndex()])){this._partIsLast=!this._hasNextSegment();break}let s=this._partSegCount;for(;s;)this._previousSegment(),--s;this._currentPosition.segment=this._nextSegment(),this._currentPosition.segmentLength=this.calculateSegLength(this._path,this._currentPosition.segment),this._currentPosition.abscissa=0,this._currentPosition.isPathEnd=this._currentPosition.isPartEnd=!1,--this._partSegCount;const e=this._getStartPointIndex();this._ctrlPtBegin=1===t(this._path[e]);let i=e+this._partSegCount+1;if(i>=this._path.length&&(i=0),this._ctrlPtEnd=1===t(this._path[i]),this._patternLength>0){const t=this._ctrlPtBegin?this._partCtrlPtGap:this._partExtPtGap,s=this._ctrlPtEnd?this._partCtrlPtGap:this._partExtPtGap;let e=Math.round((this._partLength-(t+s))/this._patternLength);e<=0&&(e=t+s>0?0:1),this._partLengthRatio=this._partLength/(t+s+e*this._patternLength),this._partLengthRatio<.01&&(this._partLengthRatio=1)}else this._partLengthRatio=1;return!0}_hasNextSegment(){return this._seg<this._path.length-2}_previousSegment(){return--this._seg}_nextSegment(){return++this._seg}_getStartPointIndex(){return this._seg}_getEndPointIndex(){return this._seg+1}}export{n as DashPattern,r as EndType,g as GeometryWalker,h as Pos};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAAOA,KAAK,IAAIC,CAAhB,QAAsB,gBAAtB;AAAuC,SAAOC,WAAW,IAAIC,CAAtB,EAAwBC,eAAe,IAAIC,CAA3C,QAAiD,kBAAjD;AAAoE,MAAMC,CAAC,GAAC,IAAR;;AAAa,MAAMC,CAAN,CAAO;EAACC,WAAW,GAAE;IAAC,KAAKC,OAAL,GAAa,EAAb,EAAgB,KAAKC,QAAL,GAAc,CAA9B,EAAgC,KAAKC,SAAL,GAAe,CAA/C,EAAiD,KAAKC,OAAL,GAAa,CAA9D,EAAgE,KAAKC,aAAL,GAAmB,CAAnF;EAAqF;;EAAAC,OAAO,GAAE;IAAC,OAAO,MAAI,KAAKL,OAAL,CAAaM,MAAxB;EAA+B;;EAAAC,IAAI,GAAE;IAAC,OAAO,KAAKP,OAAL,CAAaM,MAApB;EAA2B;;EAAAE,IAAI,CAAChB,CAAD,EAAGE,CAAH,EAAKE,CAAC,GAAC,CAAC,CAAR,EAAU;IAAC,IAAG,KAAKa,SAAL,IAAiB,CAACjB,CAAD,IAAI,MAAIA,CAAC,CAACc,MAA9B,EAAqC,OAAM,CAAC,CAAP;;IAAS,KAAI,IAAIR,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,CAAC,CAACc,MAAhB,EAAuBR,CAAC,EAAxB,EAA2B;MAAC,IAAIJ,CAAC,GAACgB,IAAI,CAACC,GAAL,CAASnB,CAAC,CAACM,CAAD,CAAV,CAAN;MAAqBF,CAAC,IAAEF,CAAC,GAACG,CAAL,KAASH,CAAC,GAACG,CAAX,GAAc,KAAKG,OAAL,CAAaY,IAAb,CAAkBlB,CAAlB,CAAd,EAAmC,KAAKS,OAAL,IAAcT,CAAjD;IAAmD;;IAAA,OAAOA,CAAC,IAAE,IAAEF,CAAC,CAACc,MAAP,KAAgB,KAAKH,OAAL,IAAc,CAA9B,GAAiC,MAAI,KAAKA,OAAT,KAAmB,KAAKD,SAAL,GAAe,KAAKD,QAAL,GAAc,CAA7B,EAA+B,KAAKG,aAAL,GAAmB,CAAC,CAAnD,EAAqD,CAAC,CAAzE,CAAxC;EAAoH;;EAAAS,KAAK,CAACrB,CAAD,EAAG;IAAC,MAAME,CAAC,GAAC,KAAKM,OAAL,GAAa,KAAKA,OAAL,CAAaM,MAA1B,GAAiC,CAAzC;;IAA2C,KAAI,IAAIV,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgB,EAAEE,CAAlB,EAAoB,KAAKI,OAAL,CAAaJ,CAAb,KAAiBJ,CAAjB;;IAAmB,KAAKW,OAAL,IAAcX,CAAd,EAAgB,KAAKS,QAAL,IAAeT,CAA/B,EAAiC,KAAKU,SAAL,IAAgBV,CAAjD;EAAmD;;EAAAsB,QAAQ,CAACtB,CAAD,EAAG;IAAC,KAAKW,OAAL,IAAcX,CAAd,EAAgB,KAAKQ,OAAL,CAAaY,IAAb,CAAkBpB,CAAlB,CAAhB;EAAqC;;EAAAuB,UAAU,GAAE;IAAC,OAAO,KAAKf,OAAL,CAAa,CAAb,CAAP;EAAuB;;EAAAgB,SAAS,GAAE;IAAC,OAAO,KAAKhB,OAAL,CAAa,KAAKA,OAAL,CAAaM,MAAb,GAAoB,CAAjC,CAAP;EAA2C;;EAAAW,SAAS,GAAE;IAAC,OAAO,KAAKb,aAAL,IAAqB,KAAKA,aAAL,KAAqB,KAAKJ,OAAL,CAAaM,MAAlC,KAA2C,KAAKF,aAAL,GAAmB,CAA9D,CAArB,EAAsF,KAAKJ,OAAL,CAAa,KAAKI,aAAlB,CAA7F;EAA8H;;EAAAc,KAAK,GAAE;IAAC,KAAKd,aAAL,GAAmB,CAAC,CAApB;EAAsB;;EAAAE,MAAM,GAAE;IAAC,OAAO,KAAKH,OAAZ;EAAoB;;EAAAM,SAAS,GAAE;IAAC,KAAKR,QAAL,GAAc,KAAKC,SAAL,GAAe,KAAKC,OAAL,GAAa,CAA1C,EAA4C,KAAKC,aAAL,GAAmB,CAAC,CAAhE,EAAkE,KAAKJ,OAAL,CAAaM,MAAb,GAAoB,CAAtF;EAAwF;;AAAvgC;;AAAwgC,MAAMa,CAAN,CAAO;EAACpB,WAAW,GAAE;IAAC,KAAKqB,EAAL,GAAQ,IAAR,EAAa,KAAKC,EAAL,GAAQ,CAArB,EAAuB,KAAKC,EAAL,GAAQ,CAA/B;EAAiC;;AAAhD;;AAAiD,IAAIC,CAAJ;AAAM,CAAC,UAAS/B,CAAT,EAAW;EAACA,CAAC,CAACA,CAAC,CAACgC,IAAF,GAAO,CAAR,CAAD,GAAY,MAAZ,EAAmBhC,CAAC,CAACA,CAAC,CAACiC,GAAF,GAAM,CAAP,CAAD,GAAW,KAA9B,EAAoCjC,CAAC,CAACA,CAAC,CAACkC,QAAF,GAAW,CAAZ,CAAD,GAAgB,UAApD;AAA+D,CAA3E,CAA4EH,CAAC,KAAGA,CAAC,GAAC,EAAL,CAA7E,CAAD;;AAAwF,MAAMI,CAAN,CAAO;EAAC5B,WAAW,GAAE;IAAC,KAAKmB,KAAL;EAAa;;EAAAA,KAAK,GAAE;IAAC,KAAKU,OAAL,GAAa,CAAC,CAAd,EAAgB,KAAKC,aAAL,GAAmB,CAAnC,EAAqC,KAAKC,QAAL,GAAc,CAAnD,EAAqD,KAAKC,SAAL,GAAe,CAAC,CAArE,EAAuE,KAAKC,SAAL,GAAe,CAAC,CAAvF;EAAyF;;EAAAC,OAAO,GAAE;IAAC,OAAM,CAAC,CAAD,KAAK,KAAKL,OAAhB;EAAwB;;EAAAM,MAAM,CAAC1C,CAAD,EAAG;IAACA,CAAC,CAACoC,OAAF,GAAU,KAAKA,OAAf,EAAuBpC,CAAC,CAACqC,aAAF,GAAgB,KAAKA,aAA5C,EAA0DrC,CAAC,CAACsC,QAAF,GAAW,KAAKA,QAA1E,EAAmFtC,CAAC,CAACuC,SAAF,GAAY,KAAKA,SAApG,EAA8GvC,CAAC,CAACwC,SAAF,GAAY,KAAKA,SAA/H;EAAyI;;AAAlT;;AAAmT,MAAMG,CAAN,SAAgBzC,CAAhB,CAAiB;EAACK,WAAW,CAACP,CAAC,GAAC,CAAH,EAAKE,CAAC,GAAC,CAAC,CAAR,EAAU;IAAC,MAAMF,CAAN,EAAQE,CAAR,GAAW,KAAK0C,UAAL,GAAgBxC,CAA3B,EAA6B,KAAKyC,gBAAL,GAAsB,IAAIV,CAAJ,EAAnD;EAAyD;;EAAAW,eAAe,CAAC9C,CAAD,EAAG;IAAC,KAAK4C,UAAL,GAAgBxC,CAAC,GAACJ,CAAlB;EAAoB;;EAAAgB,IAAI,CAAChB,CAAD,EAAGE,CAAH,EAAKE,CAAC,GAAC,CAAC,CAAR,EAAU;IAAC,OAAOA,CAAC,IAAE,KAAK2C,cAAL,GAAoB7C,CAAC,CAACY,MAAF,EAApB,EAA+B,KAAKkC,aAAL,GAAmB9C,CAAC,CAACO,QAApD,EAA6D,KAAKwC,cAAL,GAAoB/C,CAAC,CAACQ,SAArF,KAAiG,KAAKqC,cAAL,GAAoB,CAApB,EAAsB,KAAKC,aAAL,GAAmB,CAAzC,EAA2C,KAAKC,cAAL,GAAoB,CAAhK,CAAD,EAAoK,KAAKJ,gBAAL,CAAsBnB,KAAtB,EAApK,EAAkM,KAAKwB,aAAL,GAAmB,CAArN,EAAuN,KAAKC,KAAL,GAAWnD,CAAlO,EAAoO,KAAKoD,IAAL,GAAU,CAAC,CAA/O,EAAiP,KAAKC,iBAAL,EAAxP;EAAiR;;EAAAC,kBAAkB,GAAE;IAAC,OAAO,KAAKT,gBAAL,CAAsBJ,OAAtB,EAAP;EAAuC;;EAAAc,YAAY,CAACvD,CAAD,EAAGE,CAAC,GAAC6B,CAAC,CAACC,IAAP,EAAY;IAAC,MAAM5B,CAAC,GAAC,IAAI+B,CAAJ,EAAR;IAAc,OAAM,CAAC,CAAC,KAAKqB,aAAL,CAAmBxD,CAAnB,EAAqBI,CAArB,EAAuB,IAAvB,EAA4BF,CAA5B,CAAF,KAAmCE,CAAC,CAACsC,MAAF,CAAS,KAAKG,gBAAd,GAAgC,CAAC,CAApE,CAAN;EAA6E;;EAAAY,gBAAgB,CAACzD,CAAD,EAAG;IAACA,CAAC,CAAC4B,EAAF,GAAK,KAAK8B,SAAL,CAAe,KAAKb,gBAApB,CAAL;;IAA2C,MAAK,CAAC3C,CAAD,EAAGE,CAAH,IAAM,KAAKuD,SAAL,CAAe,KAAKd,gBAApB,CAAX;;IAAiD7C,CAAC,CAAC6B,EAAF,GAAK3B,CAAL,EAAOF,CAAC,CAAC8B,EAAF,GAAK1B,CAAZ;EAAc;;EAAAwD,iBAAiB,CAAC5D,CAAD,EAAGE,CAAH,EAAKE,CAAC,GAAC2B,CAAC,CAACC,IAAT,EAAc;IAAC,MAAM3B,CAAC,GAAC,IAAI8B,CAAJ,EAAR;IAAc,IAAG,CAAC,KAAKqB,aAAL,CAAmBxD,CAAnB,EAAqBK,CAArB,EAAuB,IAAvB,EAA4BD,CAA5B,CAAJ,EAAmC,OAAM,CAAC,CAAP;IAASC,CAAC,CAACqC,MAAF,CAAS,KAAKG,gBAAd,GAAgC3C,CAAC,CAAC0B,EAAF,GAAK,KAAK8B,SAAL,CAAerD,CAAf,CAArC;;IAAuD,MAAK,CAACC,CAAD,EAAGqB,CAAH,IAAM,KAAKgC,SAAL,CAAetD,CAAf,CAAX;;IAA6B,OAAOH,CAAC,CAAC2B,EAAF,GAAKvB,CAAL,EAAOJ,CAAC,CAAC4B,EAAF,GAAKH,CAAZ,EAAc,CAAC,CAAtB;EAAwB;;EAAAkC,SAAS,CAAC7D,CAAD,EAAG;IAAC,IAAG,MAAIA,CAAP,EAAS,OAAO,IAAP;IAAY,MAAME,CAAC,GAAC,EAAR;IAAA,MAAWE,CAAC,GAAC,IAAI+B,CAAJ,EAAb;IAAmB,OAAO,KAAKqB,aAAL,CAAmBxD,CAAnB,EAAqBI,CAArB,EAAuBF,CAAvB,EAAyB6B,CAAC,CAACE,GAA3B,KAAiC7B,CAAC,CAACsC,MAAF,CAAS,KAAKG,gBAAd,GAAgC3C,CAAjE,IAAoE,IAA3E;EAAgF;;EAAAqC,SAAS,GAAE;IAAC,OAAO,KAAKM,gBAAL,CAAsBN,SAA7B;EAAuC;;EAAAuB,UAAU,GAAE;IAAC,IAAG,CAAC,CAAD,KAAK,KAAKjB,gBAAL,CAAsBT,OAA9B,EAAsC,MAAM,IAAI2B,KAAJ,CAAU,iBAAV,CAAN;IAAmC,OAAO,KAAKZ,KAAL,CAAW,KAAKN,gBAAL,CAAsBT,OAAtB,GAA8B,CAAzC,CAAP;EAAmD;;EAAAoB,aAAa,CAACxD,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAOC,CAAP,EAAS;IAAC,IAAG,KAAKwC,gBAAL,CAAsBN,SAAzB,EAAmC,OAAM,CAAC,CAAP;IAAS,IAAIjC,CAAC,GAAC,KAAKuC,gBAAL,CAAsBP,QAA5B;;IAAqC,KAAI,KAAKO,gBAAL,CAAsBR,aAAtB,GAAoC,CAApC,KAAwC/B,CAAC,IAAE,KAAKuC,gBAAL,CAAsBR,aAAjE,GAAgF,KAAKQ,gBAAL,CAAsBH,MAAtB,CAA6BxC,CAA7B,CAApF,EAAoHA,CAAC,CAACoC,QAAF,GAAWtC,CAAC,GAAC,KAAKgE,gBAAlB,GAAmC9D,CAAC,CAACmC,aAAF,GAAgB,KAAKO,UAA5K,GAAwL;MAAC,IAAGxC,CAAH,EAAK;QAAC,IAAG,MAAIA,CAAC,CAACU,MAAT,EAAgB,IAAG,MAAIR,CAAP,EAAS;UAAC,MAAMN,CAAC,GAAC,KAAKmD,KAAL,CAAWjD,CAAC,CAACkC,OAAb,CAAR;UAA8BhC,CAAC,CAACgB,IAAF,CAAO,CAACpB,CAAC,CAAC,CAAD,CAAF,EAAMA,CAAC,CAAC,CAAD,CAAP,CAAP;QAAoB,CAA5D,MAAiEI,CAAC,CAACgB,IAAF,CAAO,KAAK6C,aAAL,CAAmB,KAAKd,KAAxB,EAA8BjD,CAAC,CAACkC,OAAhC,EAAwC9B,CAAxC,CAAP;QAAmD,MAAMN,CAAC,GAAC,KAAKmD,KAAL,CAAWjD,CAAC,CAACkC,OAAF,GAAU,CAArB,CAAR;QAAgChC,CAAC,CAACgB,IAAF,CAAO,CAACpB,CAAC,CAAC,CAAD,CAAF,EAAMA,CAAC,CAAC,CAAD,CAAP,CAAP;MAAoB;;MAAA,IAAGM,CAAC,GAAC,CAAF,EAAIN,CAAC,IAAE,CAACE,CAAC,CAACmC,aAAF,GAAgBnC,CAAC,CAACoC,QAAnB,IAA6B,KAAK0B,gBAAzC,EAA0D,KAAKd,aAAlE,EAAgFhD,CAAC,CAACkC,OAAF,GAAU,KAAK8B,YAAL,EAAV,EAA8BhE,CAAC,CAACmC,aAAF,GAAgB,KAAK8B,kBAAL,CAAwB,KAAKhB,KAA7B,EAAmCjD,CAAC,CAACkC,OAArC,CAA9C,EAA4FlC,CAAC,CAACoC,QAAF,GAAW,CAAvG,EAAyG,KAAKY,aAAL,EAAzG,CAAhF,KAAkN;QAAC,IAAG,CAAC,KAAKG,iBAAL,EAAJ,EAA6B,OAAOhD,CAAC,KAAG0B,CAAC,CAACC,IAAN,KAAa9B,CAAC,CAACmC,aAAF,GAAgB,KAAK8B,kBAAL,CAAwB,KAAKhB,KAA7B,EAAmCjD,CAAC,CAACkC,OAArC,CAAhB,EAA8DlC,CAAC,CAACsC,SAAF,GAAY,CAAC,CAA3E,EAA6EnC,CAAC,KAAG0B,CAAC,CAACE,GAAN,IAAW/B,CAAC,CAACoC,QAAF,GAAWpC,CAAC,CAACmC,aAAb,EAA2BnC,CAAC,CAACqC,SAAF,GAAY,CAAC,CAAnD,IAAsDrC,CAAC,CAACoC,QAAF,GAAWpC,CAAC,CAACmC,aAAF,GAAgBrC,CAA9J,EAAgK,CAAC,CAA9K,CAAP;;QAAwL,KAAK6C,gBAAL,CAAsBH,MAAtB,CAA6BxC,CAA7B;MAAgC;IAAC;;IAAA,IAAGA,CAAC,CAACoC,QAAF,IAAYtC,CAAC,GAAC,KAAKgE,gBAAnB,EAAoC5D,CAAvC,EAAyC;MAAC,IAAG,MAAIA,CAAC,CAACU,MAAT,EAAgB,IAAG,MAAIR,CAAP,EAAS;QAAC,MAAMN,CAAC,GAAC,KAAKmD,KAAL,CAAWjD,CAAC,CAACkC,OAAb,CAAR;QAA8BhC,CAAC,CAACgB,IAAF,CAAO,CAACpB,CAAC,CAAC,CAAD,CAAF,EAAMA,CAAC,CAAC,CAAD,CAAP,CAAP;MAAoB,CAA5D,MAAiEI,CAAC,CAACgB,IAAF,CAAO,KAAK6C,aAAL,CAAmB,KAAKd,KAAxB,EAA8BjD,CAAC,CAACkC,OAAhC,EAAwC9B,CAAxC,CAAP;MAAmD,MAAMN,CAAC,GAACE,CAAC,CAACoC,QAAF,GAAWpC,CAAC,CAACmC,aAArB;;MAAmC,IAAG,MAAIrC,CAAP,EAAS;QAAC,MAAMA,CAAC,GAAC,KAAKmD,KAAL,CAAWjD,CAAC,CAACkC,OAAF,GAAU,CAArB,CAAR;QAAgChC,CAAC,CAACgB,IAAF,CAAO,CAACpB,CAAC,CAAC,CAAD,CAAF,EAAMA,CAAC,CAAC,CAAD,CAAP,CAAP;MAAoB,CAA9D,MAAmEI,CAAC,CAACgB,IAAF,CAAO,KAAK6C,aAAL,CAAmB,KAAKd,KAAxB,EAA8BjD,CAAC,CAACkC,OAAhC,EAAwCpC,CAAxC,CAAP;IAAmD;;IAAA,OAAO,KAAKkD,aAAL,IAAoBhC,IAAI,CAACC,GAAL,CAASjB,CAAC,CAACoC,QAAF,GAAWpC,CAAC,CAACmC,aAAtB,IAAqC,KAAKO,UAA1C,KAAuD1C,CAAC,CAACqC,SAAF,GAAY,KAAK6B,WAAjB,EAA6BlE,CAAC,CAACsC,SAAF,GAAY,CAAC,CAAjG,CAApB,EAAwH,CAAC,CAAhI;EAAkI;;EAAAkB,SAAS,CAAC1D,CAAD,EAAG;IAAC,IAAG,CAAC,CAAD,KAAKA,CAAC,CAACoC,OAAV,EAAkB,MAAM,IAAI2B,KAAJ,CAAU,iBAAV,CAAN;IAAmC,MAAM7D,CAAC,GAACF,CAAC,CAACqC,aAAF,IAAiB,CAAjB,GAAmB,CAAnB,GAAqBrC,CAAC,CAACsC,QAAF,GAAWtC,CAAC,CAACqC,aAA1C;IAAwD,OAAO,KAAK4B,aAAL,CAAmB,KAAKd,KAAxB,EAA8BnD,CAAC,CAACoC,OAAhC,EAAwClC,CAAxC,CAAP;EAAkD;;EAAAyD,SAAS,CAAC3D,CAAD,EAAG;IAAC,IAAG,CAAC,CAAD,KAAKA,CAAC,CAACoC,OAAV,EAAkB,MAAM,IAAI2B,KAAJ,CAAU,iBAAV,CAAN;IAAmC,MAAM7D,CAAC,GAACF,CAAC,CAACqC,aAAF,IAAiB,CAAjB,GAAmB,CAAnB,GAAqBrC,CAAC,CAACsC,QAAF,GAAWtC,CAAC,CAACqC,aAA1C;IAAwD,OAAO,KAAKgC,aAAL,CAAmB,KAAKlB,KAAxB,EAA8BnD,CAAC,CAACoC,OAAhC,EAAwClC,CAAxC,CAAP;EAAkD;;EAAAmD,iBAAiB,GAAE;IAAC,OAAK,KAAKH,aAAV,GAAyB,KAAKoB,eAAL,MAAwB,KAAKJ,YAAL,EAAxB,EAA4C,KAAKhB,aAAL,EAA5C;;IAAiE,IAAG,CAAC,KAAKoB,eAAL,EAAJ,EAA2B,OAAM,CAAC,CAAP;;IAAS,KAAI,KAAKC,WAAL,GAAiB,CAAjB,EAAmB,KAAKH,WAAL,GAAiB,CAAC,CAArC,EAAuC,KAAKlB,aAAL,GAAmB,CAA9D,EAAgE,KAAKoB,eAAL,EAAhE,GAAwF,IAAG,KAAKC,WAAL,IAAkB,KAAKJ,kBAAL,CAAwB,KAAKhB,KAA7B,EAAmC,KAAKe,YAAL,EAAnC,CAAlB,EAA0E,KAAKhB,aAAL,EAA1E,EAA+F,MAAIlD,CAAC,CAAC,KAAKmD,KAAL,CAAW,KAAKqB,iBAAL,EAAX,CAAD,CAAvG,EAA8I;MAAC,KAAKJ,WAAL,GAAiB,CAAC,KAAKE,eAAL,EAAlB;MAAyC;IAAM;;IAAA,IAAIpE,CAAC,GAAC,KAAKgD,aAAX;;IAAyB,OAAKhD,CAAL,GAAQ,KAAKuE,gBAAL,IAAwB,EAAEvE,CAA1B;;IAA4B,KAAK2C,gBAAL,CAAsBT,OAAtB,GAA8B,KAAK8B,YAAL,EAA9B,EAAkD,KAAKrB,gBAAL,CAAsBR,aAAtB,GAAoC,KAAK8B,kBAAL,CAAwB,KAAKhB,KAA7B,EAAmC,KAAKN,gBAAL,CAAsBT,OAAzD,CAAtF,EAAwJ,KAAKS,gBAAL,CAAsBP,QAAtB,GAA+B,CAAvL,EAAyL,KAAKO,gBAAL,CAAsBN,SAAtB,GAAgC,KAAKM,gBAAL,CAAsBL,SAAtB,GAAgC,CAAC,CAA1P,EAA4P,EAAE,KAAKU,aAAnQ;;IAAiR,MAAM9C,CAAC,GAAC,KAAKsE,mBAAL,EAAR;;IAAmC,KAAKC,YAAL,GAAkB,MAAI3E,CAAC,CAAC,KAAKmD,KAAL,CAAW/C,CAAX,CAAD,CAAvB;IAAuC,IAAIC,CAAC,GAACD,CAAC,GAAC,KAAK8C,aAAP,GAAqB,CAA3B;;IAA6B,IAAG7C,CAAC,IAAE,KAAK8C,KAAL,CAAWrC,MAAd,KAAuBT,CAAC,GAAC,CAAzB,GAA4B,KAAKuE,UAAL,GAAgB,MAAI5E,CAAC,CAAC,KAAKmD,KAAL,CAAW9C,CAAX,CAAD,CAAjD,EAAiE,KAAK0C,cAAL,GAAoB,CAAxF,EAA0F;MAAC,MAAM/C,CAAC,GAAC,KAAK2E,YAAL,GAAkB,KAAK1B,cAAvB,GAAsC,KAAKD,aAAnD;MAAA,MAAiE9C,CAAC,GAAC,KAAK0E,UAAL,GAAgB,KAAK3B,cAArB,GAAoC,KAAKD,aAA5G;MAA0H,IAAI5C,CAAC,GAACc,IAAI,CAAC2D,KAAL,CAAW,CAAC,KAAKN,WAAL,IAAkBvE,CAAC,GAACE,CAApB,CAAD,IAAyB,KAAK6C,cAAzC,CAAN;MAA+D3C,CAAC,IAAE,CAAH,KAAOA,CAAC,GAACJ,CAAC,GAACE,CAAF,GAAI,CAAJ,GAAM,CAAN,GAAQ,CAAjB,GAAoB,KAAK8D,gBAAL,GAAsB,KAAKO,WAAL,IAAkBvE,CAAC,GAACE,CAAF,GAAIE,CAAC,GAAC,KAAK2C,cAA7B,CAA1C,EAAuF,KAAKiB,gBAAL,GAAsB,GAAtB,KAA4B,KAAKA,gBAAL,GAAsB,CAAlD,CAAvF;IAA4I,CAAha,MAAqa,KAAKA,gBAAL,GAAsB,CAAtB;;IAAwB,OAAM,CAAC,CAAP;EAAS;;EAAAM,eAAe,GAAE;IAAC,OAAO,KAAKlB,IAAL,GAAU,KAAKD,KAAL,CAAWrC,MAAX,GAAkB,CAAnC;EAAqC;;EAAA2D,gBAAgB,GAAE;IAAC,OAAM,EAAE,KAAKrB,IAAb;EAAkB;;EAAAc,YAAY,GAAE;IAAC,OAAM,EAAE,KAAKd,IAAb;EAAkB;;EAAAsB,mBAAmB,GAAE;IAAC,OAAO,KAAKtB,IAAZ;EAAiB;;EAAAoB,iBAAiB,GAAE;IAAC,OAAO,KAAKpB,IAAL,GAAU,CAAjB;EAAmB;;AAAn4I;;AAAo4I,SAAO9C,CAAC,IAAIwE,WAAZ,EAAwB/C,CAAC,IAAIgD,OAA7B,EAAqCpC,CAAC,IAAIqC,cAA1C,EAAyDrD,CAAC,IAAIsD,GAA9D"},"metadata":{},"sourceType":"module"}