{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport t from \"../../Graphic.js\";\nimport { read as r, rasterRendererTypes as i, websceneRasterRendererTypes as s } from \"../../rasterRenderers.js\";\nimport n from \"../../request.js\";\nimport o from \"../../core/Error.js\";\nimport { strict as a } from \"../../core/jsonMap.js\";\nimport { clone as l } from \"../../core/lang.js\";\nimport u from \"../../core/Logger.js\";\nimport { isSome as p, isNone as c, unwrap as m } from \"../../core/maybe.js\";\nimport { when as d } from \"../../core/promiseUtils.js\";\nimport { watch as h } from \"../../core/reactiveUtils.js\";\nimport { urlToObject as f } from \"../../core/urlUtils.js\";\nimport { aliasOf as y } from \"../../core/accessorSupport/decorators/aliasOf.js\";\nimport { ensureClass as g, Integer as R, ensureNumber as v } from \"../../core/accessorSupport/ensureType.js\";\nimport { property as S, ensureRange as b } from \"../../core/accessorSupport/decorators/property.js\";\nimport { reader as I } from \"../../core/accessorSupport/decorators/reader.js\";\nimport { subclass as x } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { writer as w } from \"../../core/accessorSupport/decorators/writer.js\";\nimport { opacity as _, url as F } from \"../support/commonProperties.js\";\nimport D from \"../support/DimensionalDefinition.js\";\nimport { ExportImageServiceParameters as j } from \"../support/ExportImageServiceParameters.js\";\nimport T from \"../support/Field.js\";\nimport P from \"../support/FieldsIndex.js\";\nimport { isSupportedRendererType as O } from \"../support/imageryRendererUtils.js\";\nimport N from \"../support/MosaicRule.js\";\nimport C from \"../support/PixelBlock.js\";\nimport { interpolationKebab as M, noDataInterpretationKebab as J } from \"../support/rasterEnums.js\";\nimport q from \"../support/RasterFunction.js\";\nimport V from \"../support/RasterInfo.js\";\nimport A from \"../support/RasterJobHandler.js\";\nimport { getDefaultMultidimensionalDefinition as E } from \"../support/rasterDatasets/multidimensionalUtils.js\";\nimport { decode as Q, getFormat as z } from \"../support/rasterFormats/RasterCodec.js\";\nimport { uvComponentToVector as H } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { getSupportedRendererTypes as U, getDefaultBandCombination as L, createDefaultRenderer as B, normalizeRendererJSON as G } from \"../../renderers/support/rasterRendererHelper.js\";\nimport k from \"../../renderers/support/RasterSymbolizer.js\";\nimport { computeAngles as W, computePixelSpaceLocations as X, computeHistograms as K, computeStatisticsHistograms as Y, getImageSpatialReferenceQueryParameter as $, getSamples as Z, identify as ee } from \"../../rest/imageService.js\";\nimport \"../../core/has.js\";\nimport \"../support/source/DataLayerSource.js\";\nimport { executeQueryJSON as te } from \"../../rest/query/executeQueryJSON.js\";\nimport \"../../core/unitUtils.js\";\nimport \"../../geometry/support/spatialReferenceUtils.js\";\nimport \"../graphics/featureConversionUtils.js\";\nimport re from \"../../geometry/Extent.js\";\nimport \"../../geometry/Geometry.js\";\nimport \"../../geometry/Multipoint.js\";\nimport \"../../geometry/Point.js\";\nimport ie from \"../../geometry/Polygon.js\";\nimport \"../../geometry/Polyline.js\";\nimport \"../../geometry/support/normalizeUtils.js\";\nimport \"../../core/pbf.js\";\nimport se from \"../../rest/support/FeatureSet.js\";\nimport ne from \"../../rest/support/Query.js\";\nimport \"../../kernel.js\";\nimport \"../../rest/query/support/AttachmentInfo.js\";\nimport \"../../rest/support/AttachmentQuery.js\";\nimport { executeForCount as oe } from \"../../rest/query/executeForCount.js\";\nimport { executeForIds as ae } from \"../../rest/query/executeForIds.js\";\nimport \"../../rest/support/RelationshipQuery.js\";\nimport \"../../rest/support/TopFeaturesQuery.js\";\nimport { fetchServiceRasterInfo as le, generateRasterInfo as ue } from \"../../rest/imageService/fetchRasterInfo.js\";\nimport { getCatalogItemRasterInfo as pe } from \"../../rest/imageService/getCatalogItemRasterInfo.js\";\nimport ce from \"../../rest/support/ImageAngleParameters.js\";\nimport me from \"../../rest/support/ImageHistogramParameters.js\";\nimport de from \"../../rest/support/ImageIdentifyParameters.js\";\nimport he from \"../../rest/support/ImagePixelLocationParameters.js\";\nimport fe from \"../../rest/support/ImageSampleParameters.js\";\nimport { createFlowMesh as ye } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport ge from \"../../geometry/SpatialReference.js\";\nconst Re = u.getLogger(\"esri.layers.mixins.ArcGISImageService\"),\n      ve = a()({\n  U1: \"u1\",\n  U2: \"u2\",\n  U4: \"u4\",\n  U8: \"u8\",\n  S8: \"s8\",\n  U16: \"u16\",\n  S16: \"s16\",\n  U32: \"u32\",\n  S32: \"s32\",\n  F32: \"f32\",\n  F64: \"f64\",\n  C64: \"c64\",\n  C128: \"c128\",\n  UNKNOWN: \"unknown\"\n}),\n      Se = new Set([\"png\", \"png8\", \"png24\", \"png32\", \"jpg\", \"bmp\", \"gif\", \"jpgpng\", \"lerc\", \"tiff\"]),\n      be = b(v, {\n  min: 0,\n  max: 255\n});\n\nfunction Ie(e) {\n  if (!e) return null;\n  const t = JSON.stringify(e).match(/\"rasterFunction\":\"(.*?\")/gi)?.map(e => e.replace('\"rasterFunction\":\"', \"\").replace('\"', \"\"));\n  return t ? t.join(\"/\") : null;\n}\n\nconst xe = a => {\n  let u = class extends a {\n    constructor() {\n      super(...arguments), this._functionRasterInfos = {}, this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this._defaultServiceMosaicRule = null, this._serviceSourceType = null, this._serviceSupportsMosaicRule = null, this.rasterAttributeTableFieldPrefix = \"Raster.\", this.adjustAspectRatio = null, this.bandCount = null, this.bandIds = void 0, this.capabilities = null, this.compressionQuality = void 0, this.compressionTolerance = .01, this.copyright = null, this.definitionExpression = null, this.exportImageServiceParameters = null, this.rasterInfo = null, this.fields = null, this.fullExtent = null, this.hasMultidimensions = !1, this.imageMaxHeight = 4100, this.imageMaxWidth = 4100, this.interpolation = void 0, this.minScale = 0, this.maxScale = 0, this.multidimensionalInfo = null, this.noData = null, this.noDataInterpretation = void 0, this.objectIdField = null, this.geometryType = \"polygon\", this.typeIdField = null, this.types = [], this.pixelSizeX = null, this.pixelSizeY = null, this.pixelFilter = null, this.raster = void 0, this.viewId = void 0, this.symbolizer = null, this.rasterAttributeTable = null, this.rasterFunctionInfos = null, this.serviceDataType = null, this.spatialReference = null, this.pixelType = null, this.serviceRasterInfo = null, this.sourceJSON = null, this.url = null, this.version = void 0;\n    }\n\n    initialize() {\n      this._set(\"exportImageServiceParameters\", new j({\n        layer: this\n      }));\n    }\n\n    readDefaultServiceMosaicRule(e, t) {\n      return this._serviceSupportsMosaicRule ? N.fromJSON(t) : null;\n    }\n\n    readServiceSourceType(e, t) {\n      return this._isMosaicDataset(t) ? \"mosaic-dataset\" : \"raster-dataset\";\n    }\n\n    readServiceSupportsMosaicRule(e, t) {\n      return this._isMosaicRuleSupported(t);\n    }\n\n    get rasterFunctionNamesIndex() {\n      const e = new Map();\n      return !this.rasterFunctionInfos || p(this.rasterFunctionInfos) && this.rasterFunctionInfos.length < 1 || p(this.rasterFunctionInfos) && this.rasterFunctionInfos.forEach(t => {\n        e.set(t.name.toLowerCase().replace(/ /gi, \"_\"), t.name);\n      }), e;\n    }\n\n    readBandIds(e, t) {\n      if (Array.isArray(e) && e.length > 0 && e.every(e => \"number\" == typeof e)) return e;\n    }\n\n    readCapabilities(e, t) {\n      return this._readCapabilities(t);\n    }\n\n    writeCompressionQuality(e, t, r) {\n      null != e && \"lerc\" !== this.format && (t[r] = e);\n    }\n\n    writeCompressionTolerance(e, t, r) {\n      \"lerc\" === this.format && null != e && (t[r] = e);\n    }\n\n    get fieldsIndex() {\n      return this.fields ? new P(this.fields) : null;\n    }\n\n    set format(e) {\n      e && Se.has(e.toLowerCase()) && this._set(\"format\", e.toLowerCase());\n    }\n\n    readFormat(e, t) {\n      return \"esriImageServiceDataTypeVector-UV\" === t.serviceDataType || \"esriImageServiceDataTypeVector-MagDir\" === t.serviceDataType || null != this.pixelFilter ? \"lerc\" : \"jpgpng\";\n    }\n\n    readMinScale(e, t) {\n      return null != t.minLOD && null != t.maxLOD ? e : 0;\n    }\n\n    readMaxScale(e, t) {\n      return null != t.minLOD && null != t.maxLOD ? e : 0;\n    }\n\n    set mosaicRule(e) {\n      let t = e;\n      t && t.mosaicMethod && (t = N.fromJSON({ ...t.toJSON(),\n        mosaicMethod: t.mosaicMethod,\n        mosaicOperation: t.mosaicOperation\n      })), this._set(\"mosaicRule\", t);\n    }\n\n    readMosaicRule(e, t) {\n      const r = e || t.mosaicRule;\n      return r ? N.fromJSON(r) : this._isMosaicRuleSupported(t) ? N.fromJSON(t) : null;\n    }\n\n    writeMosaicRule(e, t, r) {\n      let i = this.mosaicRule;\n      const s = this.definitionExpression;\n      i ? s && s !== i.where && (i = i.clone(), i.where = s) : s && (i = new N({\n        where: s\n      })), this._isValidCustomizedMosaicRule(i) && (t[r] = i.toJSON());\n    }\n\n    writeNoData(e, t, r) {\n      null != e && \"number\" == typeof e && (t[r] = be(e));\n    }\n\n    readObjectIdField(e, t) {\n      if (!e) {\n        const r = t.fields.filter(e => \"esriFieldTypeOID\" === e.type || \"oid\" === e.type);\n        e = r && r[0] && r[0].name;\n      }\n\n      return e;\n    }\n\n    get parsedUrl() {\n      return this.url ? f(this.url) : null;\n    }\n\n    set renderer(e) {\n      this.loaded && (e = this._configRenderer(e)), this._set(\"renderer\", e);\n    }\n\n    readRenderer(e, t, i) {\n      const s = t?.layerDefinition?.drawingInfo?.renderer,\n            n = r(s, i);\n      return null == n ? null : (\"vector-field\" === n.type && t.symbolTileSize && !s.symbolTileSize && (n.symbolTileSize = t.symbolTileSize), O(n) || Re.warn(\"ArcGISImageService\", \"Imagery layer doesn't support given renderer type.\"), n);\n    }\n\n    writeRenderer(e, t, r) {\n      t.layerDefinition = t.layerDefinition || {}, t.layerDefinition.drawingInfo = t.layerDefinition.drawingInfo || {}, t.layerDefinition.drawingInfo.renderer = e.toJSON(), \"vector-field\" === e.type && (t.symbolTileSize = e.symbolTileSize);\n    }\n\n    get rasterFields() {\n      const e = this.rasterAttributeTableFieldPrefix || \"Raster.\",\n            t = new T({\n        name: \"Raster.ItemPixelValue\",\n        alias: \"Item Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      }),\n            r = new T({\n        name: \"Raster.ServicePixelValue\",\n        alias: \"Service Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      }),\n            i = new T({\n        name: \"Raster.ServicePixelValue.Raw\",\n        alias: \"Raw Service Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      });\n      let s = this.fields ? l(this.fields) : [];\n      s.push(r), this.capabilities.operations.supportsQuery && this.fields && this.fields.length > 0 && s.push(t), this.version >= 10.4 && p(this.rasterFunctionInfos) && this.rasterFunctionInfos.some(e => \"none\" === e.name.toLowerCase()) && s.push(i), p(this.rasterFunctionInfos) && this.rasterFunctionInfos.filter(e => \"none\" !== e.name.toLowerCase()).forEach(e => {\n        s.push(new T({\n          name: \"Raster.ServicePixelValue.\" + e.name,\n          alias: e.name,\n          domain: null,\n          editable: !1,\n          length: 50,\n          type: \"string\"\n        }));\n      }), this._isVectorDataSet() && (s.push(new T({\n        name: \"Raster.Magnitude\",\n        alias: \"Magnitude\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })), s.push(new T({\n        name: \"Raster.Direction\",\n        alias: \"Direction\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })));\n      const n = this.rasterInfo.attributeTable && this.rasterInfo.attributeTable.fields || null;\n\n      if (n && n.length > 0) {\n        const t = n.filter(e => \"esriFieldTypeOID\" !== e.type && \"value\" !== e.name.toLowerCase()).map(t => {\n          const r = l(t);\n          return r.name = e + t.name, r;\n        });\n        s = s.concat(t);\n      }\n\n      return s;\n    }\n\n    set renderingRule(e) {\n      let t = e;\n      t && t.rasterFunction && (t = q.fromJSON({ ...t.toJSON(),\n        rasterFunction: t.rasterFunction,\n        rasterFunctionArguments: t.rasterFunctionArguments\n      })), this._set(\"renderingRule\", t);\n    }\n\n    readRenderingRule(e, t) {\n      const r = t.rasterFunctionInfos;\n      return t.renderingRule || r && r.length && \"None\" !== r[0].name ? this._isRFTJson(t.renderingRule) ? q.fromJSON({\n        rasterFunctionDefinition: t.renderingRule\n      }) : q.fromJSON(t.renderingRule || {\n        rasterFunctionInfos: t.rasterFunctionInfos\n      }) : null;\n    }\n\n    writeRenderingRule(e, t, r) {\n      const i = e.toJSON();\n      i.rasterFunctionDefinition ? t[r] = i.rasterFunctionDefinition : t[r] = i;\n    }\n\n    readSpatialReference(e, t) {\n      const r = e || t.extent.spatialReference;\n      return r ? ge.fromJSON(r) : null;\n    }\n\n    readPixelType(e) {\n      return ve.fromJSON(e) || e;\n    }\n\n    writePixelType(e, t, r) {\n      (c(this.serviceRasterInfo) || this.pixelType !== this.serviceRasterInfo.pixelType) && (t[r] = ve.toJSON(e));\n    }\n\n    readVersion(e, t) {\n      let r = t.currentVersion;\n      return r || (r = t.hasOwnProperty(\"fields\") || t.hasOwnProperty(\"timeInfo\") ? 10 : 9.3), r;\n    }\n\n    applyFilter(e) {\n      let t = e;\n      return this.pixelFilter && (t = this._clonePixelData(e), this.pixelFilter(t)), t;\n    }\n\n    async applyRenderer(e, t) {\n      let r = e;\n\n      if (!this._isPicture() && this.renderer && this.symbolizer && !this.pixelFilter) {\n        const i = JSON.stringify(this._cachedRendererJson) !== JSON.stringify(this.renderer.toJSON()),\n              s = this._rasterJobHandler.instance,\n              {\n          bandIds: n\n        } = this;\n\n        if (s) {\n          i && (this.symbolizer.bind(), await s.updateSymbolizer(this.symbolizer, t), this._cachedRendererJson = this.renderer.toJSON());\n          const o = await s.symbolize({\n            bandIds: n,\n            ...e\n          }, t);\n          r = {\n            extent: e.extent,\n            pixelBlock: o\n          };\n        } else r = {\n          extent: e.extent,\n          pixelBlock: this.symbolizer.symbolize({\n            bandIds: n,\n            ...e\n          })\n        };\n      }\n\n      return r;\n    }\n\n    destroy() {\n      this._shutdownJobHandler();\n    }\n\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n\n    async computeAngles(e, t) {\n      if (await this._fetchCapabilities(t?.signal), !this.capabilities.operations.supportsComputeAngles) throw new o(\"imagery-layer:compute-angles\", \"this operation is not supported on the input image service\");\n      return e = g(ce, e).clone(), W(this.url, e, this._getRequestOptions(t));\n    }\n\n    async computePixelSpaceLocations(e, t) {\n      if (await this._fetchCapabilities(t?.signal), !this.capabilities.operations.supportsComputePixelLocation) throw new o(\"imagery-layer:compute-pixel-space-locations\", \"this operation is not supported on the input image service\");\n      return e = g(he, e).clone(), X(this.url, e, this._getRequestOptions(t));\n    }\n\n    async computeHistograms(e, t) {\n      if (await this._fetchCapabilities(t?.signal), !this.capabilities.operations.supportsComputeHistograms) throw new o(\"imagery-layer:compute-histograms\", \"this operation is not supported on the input image service\");\n      e = g(me, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n      return s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule && (e.mosaicRule = i), r && null == e.raster && (e.raster = r), K(this.url, e, this._getRequestOptions(t));\n    }\n\n    async computeStatisticsHistograms(e, t) {\n      if (await this._fetchCapabilities(t?.signal), !this.capabilities.operations.supportsComputeStatisticsHistograms) throw new o(\"imagery-layer:compute-statistics-histograms\", \"this operation is not supported on the input image service\");\n      e = g(me, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n      return s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule && (e.mosaicRule = i), r && null == e.raster && (e.raster = r), Y(this.url, e, this._getRequestOptions(t));\n    }\n\n    getField(e) {\n      const {\n        fieldsIndex: t\n      } = this;\n      return p(t) ? t.get(e) : void 0;\n    }\n\n    getFieldDomain(e, t) {\n      const r = this.getField(e);\n      return r ? r.domain : null;\n    }\n\n    fetchImage(e, t, r, i = {}) {\n      if (null == e || null == t || null == r) return Promise.reject(new o(\"imagery-layer:fetch-image\", \"Insufficient parameters for requesting an image. A valid extent, width and height values are required.\"));\n      const s = this.renderer || this.symbolizer ? this.generateRasterInfo(this.renderingRule, {\n        signal: i.signal\n      }) : null;\n      return d(s).then(s => {\n        s && (this.rasterInfo = s);\n        const n = {\n          imageServiceParameters: this.getExportImageServiceParameters(e, t, r, i.timeExtent),\n          imageProps: {\n            extent: e,\n            width: t,\n            height: r,\n            format: this.format\n          },\n          requestAsImageElement: i.requestAsImageElement && !this.pixelFilter || !1,\n          signal: i.signal\n        };\n        return this._requestArrayBuffer(n);\n      });\n    }\n\n    fetchKeyProperties(e) {\n      return n(this.parsedUrl.path + \"/keyProperties\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.3 ? e?.renderingRule : null\n        })\n      }).then(e => e.data);\n    }\n\n    fetchRasterAttributeTable(e) {\n      return this.version < 10.1 ? Promise.reject(new o(\"#fetchRasterAttributeTable()\", \"Failed to get rasterAttributeTable\")) : n(this.parsedUrl.path + \"/rasterAttributeTable\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.3 ? e?.renderingRule : null\n        })\n      }).then(e => se.fromJSON(e.data));\n    }\n\n    getCatalogItemRasterInfo(e, t) {\n      const r = { ...t,\n        query: this._getQueryParams()\n      };\n      return pe(this.parsedUrl.path, e, r);\n    }\n\n    async getCatalogItemICSInfo(e, t) {\n      const {\n        data: r\n      } = await n(this.parsedUrl.path + \"/\" + e + \"/info/ics\", {\n        query: this._getQueryParams(),\n        ...t\n      }),\n            i = r && r.ics;\n      if (!i) return;\n      let s = null;\n\n      try {\n        s = (await n(this.parsedUrl.path + \"/\" + e + \"/info\", {\n          query: this._getQueryParams(),\n          ...t\n        })).data.extent;\n      } catch {}\n\n      if (!s || !s.spatialReference) return {\n        ics: i,\n        icsToPixelTransform: null,\n        icsExtent: null,\n        northDirection: null\n      };\n      const o = this.version >= 10.7 ? n(this.parsedUrl.path + \"/\" + e + \"/info/icstopixel\", {\n        query: this._getQueryParams(),\n        ...t\n      }).then(e => e.data).catch(() => ({})) : {},\n            a = s.spatialReference,\n            l = {\n        geometries: JSON.stringify({\n          geometryType: \"esriGeometryEnvelope\",\n          geometries: [s]\n        }),\n        inSR: a.wkid || JSON.stringify(a),\n        outSR: \"0:\" + e\n      },\n            u = n(this.parsedUrl.path + \"/project\", {\n        query: this._getQueryParams(l),\n        ...t\n      }).then(e => e.data).catch(() => ({})),\n            p = 5,\n            c = (s.xmin + s.xmax) / 2,\n            m = (s.ymax - s.ymin) / (p + 1),\n            d = s.ymin + m,\n            h = [];\n\n      for (let n = 0; n < p; n++) h.push({\n        x: c,\n        y: d + m * n\n      });\n\n      const f = {\n        geometries: JSON.stringify({\n          geometryType: \"esriGeometryPoint\",\n          geometries: h\n        }),\n        inSR: a.wkid || JSON.stringify(a),\n        outSR: \"0:\" + e\n      },\n            y = n(this.parsedUrl.path + \"/project\", {\n        query: this._getQueryParams(f),\n        ...t\n      }).then(e => e.data).catch(() => ({})),\n            g = await Promise.all([o, u, y]);\n      let R = g[0].ipxf;\n\n      if (null == R) {\n        const e = i.geodataXform?.xf_0;\n        \"topup\" === e?.name?.toLowerCase() && 6 === e?.coefficients?.length && (R = {\n          affine: {\n            name: \"ics [sensor: Frame] to pixel (column, row) transformation\",\n            coefficients: e.coefficients,\n            cellsizeRatio: 0,\n            type: \"GeometricXform\"\n          }\n        });\n      }\n\n      const v = re.fromJSON(g[1] && g[1].geometries && g[1].geometries[0]);\n      v && (v.spatialReference = new ge({\n        wkid: 0,\n        imageCoordinateSystem: i\n      }));\n      const S = g[2].geometries ? g[2].geometries.filter(e => null != e && null != e.x && null != e.y && \"NaN\" !== e.x && \"NaN\" !== e.y) : [],\n            b = S.length;\n      if (b < 3) return {\n        ics: i,\n        icsToPixelTransform: R,\n        icsExtent: v,\n        northDirection: null\n      };\n      let I = 0,\n          x = 0,\n          w = 0,\n          _ = 0;\n\n      for (let n = 0; n < b; n++) I += S[n].x, x += S[n].y, w += S[n].x * S[n].x, _ += S[n].x * S[n].y;\n\n      const F = (b * _ - I * x) / (b * w - I * I);\n      let D = 0;\n      const j = S[p - 1].x > S[0].x,\n            T = S[p - 1].y > S[0].y;\n      return F === 1 / 0 ? D = T ? 90 : 270 : 0 === F ? D = j ? 0 : 180 : F > 0 ? D = j ? 180 * Math.atan(F) / Math.PI : 180 * Math.atan(F) / Math.PI + 180 : F < 0 && (D = T ? 180 + 180 * Math.atan(F) / Math.PI : 360 + 180 * Math.atan(F) / Math.PI), {\n        ics: i,\n        icsToPixelTransform: R,\n        icsExtent: v,\n        northDirection: D\n      };\n    }\n\n    async generateRasterInfo(e, t) {\n      if ((!e || \"none\" === e?.functionName?.toLowerCase() || this._isVectorFieldResampleFunction(e)) && p(this.serviceRasterInfo)) return this.serviceRasterInfo;\n      const r = Ie(e);\n      if (this._functionRasterInfos[r]) return this._functionRasterInfos[r];\n\n      const i = this._generateRasterInfo(e, t);\n\n      this._functionRasterInfos[r] = i;\n\n      try {\n        return await i;\n      } catch {\n        return this._functionRasterInfos[r] = null, null;\n      }\n    }\n\n    getExportImageServiceParameters(e, t, r, i) {\n      e = e.clone().shiftCentralMeridian();\n      const s = $(e.spatialReference, this.parsedUrl.path);\n      p(this.serviceRasterInfo) && this.pixelType !== this.serviceRasterInfo.pixelType && (this.exportImageServiceParameters.pixelType = this.pixelType);\n      const n = this.exportImageServiceParameters.toJSON(),\n            {\n        bandIds: o,\n        noData: a\n      } = n;\n      let {\n        renderingRule: l\n      } = n;\n      const u = this.renderingRule?.rasterFunctionDefinition,\n            c = !this.renderer || \"raster-stretch\" === this.renderer.type;\n\n      if (o?.length && this._hasRenderingRule(this.renderingRule) && !u && c) {\n        const e = {\n          rasterFunction: \"ExtractBand\",\n          rasterFunctionArguments: {\n            BandIds: o\n          }\n        };\n        if (\"Stretch\" === l.rasterFunction) e.rasterFunctionArguments.Raster = l.rasterFunctionArguments.Raster, l.rasterFunctionArguments.Raster = e;else if (\"Colormap\" === l.rasterFunction) {\n          const t = l.rasterFunctionArguments.Raster;\n          \"Stretch\" === t?.rasterFunction ? (e.rasterFunctionArguments.Raster = t.rasterFunctionArguments.Raster, t.rasterFunctionArguments.Raster = e) : (e.rasterFunctionArguments.Raster = t, l.rasterFunctionArguments.Raster = e);\n        } else e.rasterFunctionArguments.Raster = l, l = e;\n        n.bandIds = void 0;\n      } else n.bandIds = o?.join(\",\");\n\n      a instanceof Array && a.length > 0 && (n.noData = a.join(\",\"));\n      const m = this._serviceSupportsMosaicRule ? this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule, i) : null;\n      n.mosaicRule = m && JSON.stringify(m), n.renderingRule = this._getRenderingRuleString(q.fromJSON(l));\n      const d = {};\n\n      if (i) {\n        const {\n          start: e,\n          end: t\n        } = i.toJSON();\n        e && t && e === t ? d.time = \"\" + e : null == e && null == t || (d.time = `${null == e ? \"null\" : e},${null == t ? \"null\" : t}`);\n      }\n\n      return {\n        bbox: e.xmin + \",\" + e.ymin + \",\" + e.xmax + \",\" + e.ymax,\n        bboxSR: s,\n        imageSR: s,\n        size: t + \",\" + r,\n        ...n,\n        ...d\n      };\n    }\n\n    async getSamples(e, t) {\n      if (await this._fetchCapabilities(t?.signal), !this.capabilities.operations.supportsGetSamples) throw new o(\"imagery-layer:get-samples\", \"getSamples operation is not supported on the input image service\");\n      e = g(fe, e).clone();\n      const {\n        raster: r\n      } = this;\n      return r && null == e.raster && (e.raster = r), Z(this.url, e, this._getRequestOptions(t));\n    }\n\n    async identify(e, t) {\n      if (await this._fetchCapabilities(t?.signal), !this.capabilities.operations.supportsIdentify) throw new o(\"imagery-layer:query-rasters\", \"query operation is not supported on the input image service\");\n      e = g(de, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n\n      if (s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule) {\n        const t = this._combineMosaicRuleWithTimeExtent(i, e.timeExtent);\n\n        e.mosaicRule = m(t);\n      }\n\n      return r && null == e.raster && (e.raster = r), ee(this.url, e, this._getRequestOptions(t));\n    }\n\n    createQuery() {\n      const e = new ne();\n      return e.outFields = [\"*\"], e.returnGeometry = !0, e.where = this.definitionExpression || \"1=1\", e;\n    }\n\n    async queryRasters(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), te(this.url, e, t);\n    }\n\n    async queryObjectIds(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), ae(this.url, e, t);\n    }\n\n    async queryRasterCount(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), oe(this.url, e, t);\n    }\n\n    async queryVisibleRasters(e, t) {\n      if (!e) throw new o(\"imagery-layer: query-visible-rasters\", \"missing query parameter\");\n      const {\n        pixelSize: r,\n        returnDomainValues: i,\n        returnTopmostRaster: s,\n        showNoDataRecords: n\n      } = t || {\n        pixelSize: null,\n        returnDomainValues: !1,\n        returnTopmostRaster: !1,\n        showNoDataRecords: !1\n      };\n      let a = !1,\n          l = null,\n          u = null;\n      const m = \"raster.servicepixelvalue\",\n            d = this.rasterFunctionNamesIndex;\n\n      if (p(e.outFields) && (a = e.outFields.some(e => !e.toLowerCase().includes(m)), this.version >= 10.4)) {\n        const t = e.outFields.filter(e => e.toLowerCase().includes(m) && e.length > m.length).map(e => {\n          const t = e.slice(m.length + 1);\n          return [this._updateRenderingRulesFunctionName(t, d), t];\n        });\n        l = t.map(e => new q({\n          functionName: e[0]\n        })), u = t.map(e => e[1]), 0 === l.length ? this.renderingRule ? (l.push(this.renderingRule), u.push(this.renderingRule.functionName)) : l = null : this.renderingRule && !l.some(e => e.functionName === this.renderingRule.functionName) && (l.push(this.renderingRule), u.push(this.renderingRule.functionName));\n      }\n\n      const h = c(e.outSpatialReference) || e.outSpatialReference.equals(this.spatialReference),\n            f = e.timeExtent || this.timeExtent,\n            y = this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule, f),\n            g = this._getQueryParams({\n        geometry: e.geometry,\n        timeExtent: f,\n        mosaicRule: y,\n        renderingRule: this.version < 10.4 ? this.renderingRule : null,\n        renderingRules: l,\n        pixelSize: r,\n        returnCatalogItems: a,\n        returnGeometry: h,\n        raster: this.raster,\n        maxItemCount: s ? 1 : null\n      });\n\n      delete g.f;\n      const R = new de(g);\n\n      try {\n        await this.generateRasterInfo(this.renderingRule);\n        const r = await ee(this.url, R, {\n          signal: t?.signal,\n          query: { ...this.customParameters\n          }\n        }),\n              s = e.outFields,\n              o = r.value.toLowerCase().includes(\"nodata\");\n        if (!(a && !h && r?.catalogItems?.features.length && (n || !o))) return this._processVisibleRastersResponse(r, {\n          returnDomainValues: i,\n          templateRRFunctionNames: u,\n          showNoDataRecords: n,\n          templateFields: s\n        });\n        const l = this.objectIdField || \"ObjectId\",\n              c = r.catalogItems.features,\n              m = c.map(e => e.attributes?.[l]),\n              d = new ne({\n          objectIds: m,\n          returnGeometry: !0,\n          outSpatialReference: e.outSpatialReference,\n          outFields: [l]\n        }),\n              f = await this.queryRasters(d);\n        return f?.features?.length && f.features.forEach(t => {\n          c.forEach(r => {\n            r.attributes[l] === t.attributes[l] && (r.geometry = new ie(t.geometry), p(e.outSpatialReference) && (r.geometry.spatialReference = e.outSpatialReference));\n          });\n        }), this._processVisibleRastersResponse(r, {\n          returnDomainValues: i,\n          templateRRFunctionNames: u,\n          showNoDataRecords: n,\n          templateFields: s\n        });\n      } catch {\n        throw new o(\"imagery-layer:query-visible-rasters\", \"encountered error when querying visible rasters\");\n      }\n    }\n\n    async fetchVariableStatisticsHistograms(e, t) {\n      const r = n(this.parsedUrl.path + \"/statistics\", {\n        query: this._getQueryParams({\n          variable: e\n        }),\n        signal: t\n      }).then(e => e.data?.statistics),\n            i = n(this.parsedUrl.path + \"/histograms\", {\n        query: this._getQueryParams({\n          variable: e\n        }),\n        signal: t\n      }).then(e => e.data?.histograms),\n            s = await Promise.all([r, i]);\n      return s[0] && s[0].forEach(e => {\n        e.avg = e.mean, e.stddev = e.standardDeviation;\n      }), {\n        statistics: s[0] || null,\n        histograms: s[1] || null\n      };\n    }\n\n    async createFlowMesh(e, t) {\n      const r = this._rasterJobHandler.instance;\n      return r ? r.createFlowMesh(e, t) : ye(e.meshType, e.simulationSettings, e.flowData, p(t.signal) ? t.signal : new AbortController().signal);\n    }\n\n    async _fetchService(e) {\n      await this._fetchServiceInfo(e), p(this.serviceRasterInfo) && !this.rasterInfo && (this.rasterInfo = this.serviceRasterInfo);\n\n      const t = this.sourceJSON,\n            r = p(this.serviceRasterInfo) ? Promise.resolve(this.serviceRasterInfo) : le(this.parsedUrl.path, t, {\n        signal: e,\n        query: this._getQueryParams()\n      }).then(e => (this._set(\"serviceRasterInfo\", e), e)),\n            i = this._hasRenderingRule(this.renderingRule) ? this.generateRasterInfo(this.renderingRule, {\n        signal: e\n      }) : null,\n            s = this._getRasterFunctionInfos();\n\n      return Promise.all([r, i, s]).then(e => {\n        e[1] ? this._set(\"rasterInfo\", e[1]) : this._set(\"rasterInfo\", e[0]), e[2] && this._set(\"rasterFunctionInfos\", e[2]), this.renderer && !this._isSupportedRenderer(this.renderer) && (this._set(\"renderer\", null), Re.warn(\"ArcGISImageService\", \"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer\")), this._set(\"renderer\", this._configRenderer(this.renderer)), this.own(h(() => this.renderingRule, e => {\n          (this.renderer || this.symbolizer || this.popupEnabled && this.popupTemplate) && this.generateRasterInfo(e).then(e => {\n            e && (this.rasterInfo = e);\n          });\n        }));\n        const {\n          serviceRasterInfo: t\n        } = this;\n        p(t) && t.multidimensionalInfo && this._updateMultidimensionalDefinition(t);\n      });\n    }\n\n    _combineMosaicRuleWithTimeExtent(e, t) {\n      const r = this.timeInfo;\n      if (c(e) || c(this.multidimensionalInfo) || c(t) || c(r?.startField)) return e;\n      const {\n        startField: i\n      } = r,\n            s = this.multidimensionalInfo.variables.some(e => e.dimensions.some(e => e.name === i)) ? i : \"StdTime\";\n      if (e = e.clone(), \"mosaic-dataset\" === this._serviceSourceType) return e.multidimensionalDefinition = e.multidimensionalDefinition?.filter(e => e.dimensionName !== s), this._cleanupMultidimensionalDefinition(e);\n      e.multidimensionalDefinition = e.multidimensionalDefinition || [];\n      const n = e.multidimensionalDefinition.filter(e => e.dimensionName === s),\n            o = p(t.start) ? t.start.getTime() : null,\n            a = p(t.end) ? t.end.getTime() : null,\n            l = null == o || null == a || o === a,\n            u = l ? [o || a] : [[o, a]],\n            m = this.version >= 10.8;\n      if (n.length) n.forEach(e => {\n        e.dimensionName === s && (m ? (e.dimensionName = null, e.isSlice = null, e.values = null) : (e.isSlice = l, e.values = u));\n      });else if (!m) {\n        const t = e.multidimensionalDefinition.filter(e => null != e.variableName && null == e.dimensionName);\n        t.length ? t.forEach(e => {\n          e.dimensionName = s, e.isSlice = l, e.values = u;\n        }) : e.multidimensionalDefinition.push(new D({\n          variableName: \"\",\n          dimensionName: s,\n          isSlice: l,\n          values: u\n        }));\n      }\n      return this._cleanupMultidimensionalDefinition(e);\n    }\n\n    _cleanupMultidimensionalDefinition(e) {\n      return c(e) ? null : (e.multidimensionalDefinition && (e.multidimensionalDefinition = e.multidimensionalDefinition.filter(e => !(!e.variableName && !e.dimensionName)), 0 === e.multidimensionalDefinition.length && (e.multidimensionalDefinition = null)), \"mosaic-dataset\" !== this._serviceSourceType && null == e.multidimensionalDefinition ? null : e);\n    }\n\n    async _prepareForQuery(e, t) {\n      if (await this._fetchCapabilities(t?.signal), !this.capabilities.operations.supportsQuery) throw new o(\"imagery-layer:query-rasters\", \"query operation is not supported on the input image service\");\n      return e = p(e) ? g(ne, e) : this.createQuery(), t = this._getRequestOptions(t), this.raster && (t.query = { ...t.query,\n        raster: this.raster\n      }), {\n        query: e,\n        requestOptions: t\n      };\n    }\n\n    async _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new A();\n      this._rasterJobHandler.connectionPromise = e.initialize().then(() => {\n        this._rasterJobHandler.instance = e;\n      }, () => null), await this._rasterJobHandler.connectionPromise;\n    }\n\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this._cachedRendererJson = null;\n    }\n\n    _isSupportedRenderer(e) {\n      const {\n        rasterInfo: t,\n        renderingRule: r\n      } = this;\n      return \"unique-value\" === e.type && this._hasRenderingRule(r) && 1 === t.bandCount && [\"u8\", \"s8\"].includes(t.pixelType) || U(this.rasterInfo).includes(this.renderer.type);\n    }\n\n    async _fetchCapabilities(e) {\n      return this.capabilities || (await this._fetchServiceInfo(e)), this.capabilities;\n    }\n\n    async _fetchServiceInfo(e) {\n      let t = this.sourceJSON;\n\n      if (!t) {\n        const {\n          data: r,\n          ssl: i\n        } = await n(this.parsedUrl.path, {\n          query: this._getQueryParams(),\n          signal: e\n        });\n        t = r, this.sourceJSON = t, i && (this.url = this.url.replace(/^http:/i, \"https:\"));\n      }\n\n      if (t.capabilities?.toLowerCase().split(\",\").map(e => e.trim()).indexOf(\"tilesonly\") > -1) throw new o(\"imagery-layer:fetch-service-info\", \"use ImageryTileLayer to open tiles-only image services\");\n      this.read(t, {\n        origin: \"service\",\n        url: this.parsedUrl\n      });\n    }\n\n    _isMosaicDataset(e) {\n      return e.serviceSourceType ? \"esriImageServiceSourceTypeMosaicDataset\" === e.serviceSourceType : e.fields?.length > 0;\n    }\n\n    _isMosaicRuleSupported(e) {\n      if (!e) return !1;\n\n      const t = this._isMosaicDataset(e),\n            r = e.currentVersion >= 10.71 && e.hasMultidimensions && e.timeInfo && !(e.objectIdField && e.fields?.length > 1);\n\n      return t || r;\n    }\n\n    _isVectorFieldResampleFunction(e) {\n      if (c(e)) return !1;\n      const {\n        functionName: t,\n        functionArguments: r\n      } = e,\n            i = \"resample\" === t?.toLowerCase(),\n            s = r?.ResampleType || r?.resampleType;\n      return i && (7 === s || 10 === s);\n    }\n\n    _isPicture() {\n      return !this.format || this.format.includes(\"jpg\") || this.format.includes(\"png\");\n    }\n\n    _configRenderer(e) {\n      if (!this._isPicture() && !this.pixelFilter || this._isVectorDataSet()) {\n        if (!this.bandIds && this.rasterInfo.bandCount >= 3) {\n          const e = L(this.rasterInfo);\n          !e || 3 === this.rasterInfo.bandCount && 0 === e[0] && 1 === e[1] && 2 === e[2] || (this.bandIds = e);\n        }\n\n        e || (e = B(this.rasterInfo, {\n          bandIds: this.bandIds,\n          variableName: this.renderingRule ? null : this.mosaicRule?.multidimensionalDefinition?.[0].variableName\n        }));\n        const t = G(e.toJSON());\n        this.symbolizer ? (this.symbolizer.rendererJSON = t, this.symbolizer.rasterInfo = this.rasterInfo) : this.symbolizer = new k({\n          rendererJSON: t,\n          rasterInfo: this.rasterInfo\n        }), this.symbolizer.bind().success || (this.symbolizer = null);\n      }\n\n      return e;\n    }\n\n    _clonePixelData(e) {\n      return null == e ? e : {\n        extent: e.extent && e.extent.clone(),\n        pixelBlock: p(e.pixelBlock) && e.pixelBlock.clone()\n      };\n    }\n\n    _getQueryParams(e) {\n      p(e?.renderingRule) && \"string\" != typeof e.renderingRule && (e.renderingRule = this._getRenderingRuleString(e.renderingRule));\n      const {\n        raster: t,\n        viewId: r\n      } = this;\n      return {\n        raster: t,\n        viewId: r,\n        f: \"json\",\n        ...e,\n        ...this.customParameters\n      };\n    }\n\n    _getRequestOptions(e) {\n      return { ...e,\n        query: { ...e?.query,\n          ...this.customParameters\n        }\n      };\n    }\n\n    _decodePixelBlock(e, t, r) {\n      return this._rasterJobHandler.instance ? this._rasterJobHandler.instance.decode({\n        data: e,\n        options: t\n      }) : Q(e, t, r);\n    }\n\n    async _getRasterFunctionInfos(e) {\n      const t = this.sourceJSON.rasterFunctionInfos;\n      if (this.serviceRasterInfo) return t;\n\n      if (t && this.version >= 10.3) {\n        if (1 === t.length && \"none\" === t[0].name.toLowerCase()) return t;\n        return (await n(this.parsedUrl.path + \"/rasterFunctionInfos\", {\n          query: this._getQueryParams(),\n          signal: e\n        })).data?.rasterFunctionInfos;\n      }\n\n      return null;\n    }\n\n    async _requestArrayBuffer(e) {\n      const {\n        imageProps: t,\n        requestAsImageElement: r,\n        signal: i\n      } = e;\n\n      if (r && !this.pixelFilter && t.format?.indexOf(\"png\") > -1) {\n        return {\n          imageElement: (await n(this.parsedUrl.path + \"/exportImage\", {\n            responseType: \"image\",\n            query: this._getQueryParams({\n              f: \"image\",\n              ...e.imageServiceParameters\n            }),\n            signal: i\n          })).data,\n          params: t\n        };\n      }\n\n      const s = this._initJobHandler(),\n            a = n(this.parsedUrl.path + \"/exportImage\", {\n        responseType: \"array-buffer\",\n        query: this._getQueryParams({\n          f: \"image\",\n          ...e.imageServiceParameters\n        }),\n        signal: i\n      }),\n            l = (await Promise.all([a, s]))[0].data,\n            u = t.format || \"jpgpng\";\n\n      let p = u;\n      if (\"bsq\" !== p && \"bip\" !== p && (p = z(l)), !p) throw new o(\"imagery-layer:fetch-image\", \"unsupported format signature \" + String.fromCharCode.apply(null, new Uint8Array(l)));\n      const c = {\n        signal: i\n      },\n            m = \"gif\" === u || \"bmp\" === u || u.includes(\"png\") && (\"png\" === p || \"jpg\" === p) ? Q(l, {\n        useCanvas: !0,\n        ...t\n      }, c) : this._decodePixelBlock(l, {\n        width: t.width,\n        height: t.height,\n        planes: null,\n        pixelType: null,\n        noDataValue: null,\n        format: u\n      }, c);\n      return {\n        pixelData: {\n          pixelBlock: await m,\n          extent: t.extent\n        },\n        params: t\n      };\n    }\n\n    _generateRasterInfo(e, t) {\n      const r = { ...t,\n        query: this._getQueryParams()\n      };\n      return ue(this.parsedUrl.path, e, r);\n    }\n\n    _isValidCustomizedMosaicRule(e) {\n      return e && JSON.stringify(e.toJSON()) !== JSON.stringify(this._defaultServiceMosaicRule?.toJSON());\n    }\n\n    _updateMultidimensionalDefinition(e) {\n      if (this._isValidCustomizedMosaicRule(this.mosaicRule)) return;\n      const t = E(e);\n\n      if (p(t) && t.length > 0) {\n        this.mosaicRule = this.mosaicRule || new N();\n        const e = this.mosaicRule.multidimensionalDefinition;\n        (!e || e && e.length <= 0) && (this.mosaicRule.multidimensionalDefinition = t);\n      }\n    }\n\n    _processVisibleRastersResponse(e, r) {\n      r = r || {};\n      const i = e.value,\n            {\n        templateRRFunctionNames: s,\n        showNoDataRecords: n,\n        returnDomainValues: o,\n        templateFields: a\n      } = r,\n            l = e.processedValues;\n      let u = e.catalogItems && e.catalogItems.features,\n          c = e.properties && e.properties.Values && e.properties.Values.map(e => e.replace(/ /gi, \", \")) || [];\n      const m = this.objectIdField || \"ObjectId\",\n            d = \"string\" == typeof i && i.toLowerCase().includes(\"nodata\"),\n            h = [];\n\n      if (i && !u && !d) {\n        const e = {};\n        e[m] = 0;\n        c = [i], u = [new t(this.fullExtent, null, e)];\n      }\n\n      if (!u) return [];\n      let f, y, g;\n      this._updateResponseFieldNames(u, a), d && !n && (u = []);\n\n      for (let t = 0; t < u.length; t++) {\n        if (f = u[t], null != i) {\n          if (y = c[t], g = this.renderingRule && l && l.length > 0 && s && s.length > 0 && s.includes(this.renderingRule.functionName) ? l[s.indexOf(this.renderingRule.functionName)] : i, \"nodata\" === y.toLowerCase() && !n) continue;\n          const e = \"Raster.ItemPixelValue\",\n                r = \"Raster.ServicePixelValue\";\n          f.attributes[e] = y, f.attributes[r] = g, this._updateFeatureWithMagDirValues(f, y);\n          const o = this.fields && this.fields.length > 0;\n          let a = this.renderingRule && p(this.serviceRasterInfo) && this.serviceRasterInfo.attributeTable ? o ? y : i : g;\n          this.renderingRule || (a = o ? y : i), this._updateFeatureWithRasterAttributeTableValues(f, a);\n        }\n\n        if (f.sourceLayer = f.layer = this, o && this._updateFeatureWithDomainValues(f), s && l && s.length === l.length) for (let e = 0; e < s.length; e++) {\n          const t = \"Raster.ServicePixelValue.\" + s[e];\n          f.attributes[t] = l[e];\n        }\n        h.push(u[t]);\n      }\n\n      return h;\n    }\n\n    _updateFeatureWithRasterAttributeTableValues(e, t) {\n      const r = this.rasterInfo && this.rasterInfo.attributeTable || p(this.serviceRasterInfo) && this.serviceRasterInfo.attributeTable,\n            i = r && r.features;\n      if (!i) return;\n      const s = r.fields,\n            n = s.map(e => e.name).filter(e => \"value\" === e.toLowerCase()),\n            o = n && n[0];\n      if (!o) return;\n      const a = i.filter(e => e.attributes[o] === (null != t ? parseInt(t, 10) : null));\n      a && a[0] && s.forEach(t => {\n        const r = this.rasterAttributeTableFieldPrefix + t.name;\n        e.attributes[r] = a[0].attributes[t.name];\n      });\n    }\n\n    _updateFeatureWithMagDirValues(e, t) {\n      if (!this._isVectorDataSet()) return;\n      const r = t.split(/,\\s*/).map(e => parseFloat(e)),\n            i = r.map(e => [e]),\n            s = r.map(e => ({\n        minValue: e,\n        maxValue: e,\n        noDataValue: null\n      })),\n            n = new C({\n        height: 1,\n        width: 1,\n        pixelType: \"f32\",\n        pixels: i,\n        statistics: s\n      });\n      null != this.pixelFilter && this.pixelFilter({\n        pixelBlock: n,\n        extent: new re(0, 0, 0, 0, this.spatialReference)\n      });\n      const o = \"esriImageServiceDataTypeVector-MagDir\" === this.serviceDataType ? [n.pixels[0][0], n.pixels[1][0]] : H([n.pixels[0][0], n.pixels[1][0]]);\n      e.attributes[\"Raster.Magnitude\"] = o[0], e.attributes[\"Raster.Direction\"] = o[1];\n    }\n\n    _updateFeatureWithDomainValues(e) {\n      const t = this.fields && this.fields.filter(e => e.domain && \"coded-value\" === e.domain.type);\n      null != t && t.forEach(t => {\n        const r = e.attributes[t.name];\n\n        if (null != r) {\n          const i = t.domain.codedValues.find(e => e.code === r);\n          i && (e.attributes[t.name] = i.name);\n        }\n      });\n    }\n\n    _updateResponseFieldNames(e, t) {\n      if (!t || t.length < 1) return;\n      const r = this.fieldsIndex;\n      c(r) || e.forEach(e => {\n        if (e && e.attributes) for (const i of t) if (r.has(i)) {\n          const t = r.get(i).name;\n          t !== i && (e.attributes[i] = e.attributes[t], delete e.attributes[t]);\n        }\n      });\n    }\n\n    _getRenderingRuleString(e) {\n      if (this._hasRenderingRule(e)) {\n        let t = e.toJSON();\n        return t = t.rasterFunctionDefinition ?? t, (t.thumbnail || t.thumbnailEx) && (t.thumbnail = t.thumbnailEx = null), JSON.stringify(t);\n      }\n\n      return null;\n    }\n\n    _hasRenderingRule(e) {\n      return e && e.functionName && \"none\" !== e.functionName.toLowerCase();\n    }\n\n    _updateRenderingRulesFunctionName(e, t) {\n      if (!e || e.length < 1) return;\n      if (\"Raw\" === e) return e.replace(\"Raw\", \"None\");\n      const r = e.toLowerCase().replace(/ /gi, \"_\");\n      return t.has(r) ? t.get(r) : e;\n    }\n\n    _isRFTJson(e) {\n      return e && e.name && e.arguments && e.function && e.hasOwnProperty(\"functionType\");\n    }\n\n    _isVectorDataSet() {\n      return \"esriImageServiceDataTypeVector-UV\" === this.serviceDataType || \"esriImageServiceDataTypeVector-MagDir\" === this.serviceDataType;\n    }\n\n    _readCapabilities(e) {\n      const t = e.capabilities ? e.capabilities.toLowerCase().split(\",\").map(e => e.trim()) : [\"image\", \"catalog\"],\n            {\n        currentVersion: r,\n        advancedQueryCapabilities: i,\n        maxRecordCount: s\n      } = e,\n            n = t.includes(\"image\"),\n            o = \"esriImageServiceDataTypeElevation\" === e.serviceDataType,\n            a = !!(e.spatialReference || e.extent && e.extent.spatialReference),\n            l = t.includes(\"edit\");\n      return {\n        data: {\n          supportsAttachment: !1\n        },\n        operations: {\n          supportsComputeHistograms: n,\n          supportsExportImage: n,\n          supportsIdentify: n,\n          supportsMeasure: t.includes(\"mensuration\") && a,\n          supportsDownload: t.includes(\"download\"),\n          supportsQuery: t.includes(\"catalog\") && e.fields && e.fields.length > 0,\n          supportsGetSamples: r >= 10.2 && n,\n          supportsProject: r >= 10.3 && n,\n          supportsComputeStatisticsHistograms: r >= 10.4 && n,\n          supportsQueryBoundary: r >= 10.6 && n,\n          supportsCalculateVolume: r >= 10.7 && o,\n          supportsComputePixelLocation: r >= 10.7 && t.includes(\"catalog\"),\n          supportsComputeAngles: r >= 10.91,\n          supportsAdd: l,\n          supportsDelete: l,\n          supportsEditing: l,\n          supportsUpdate: l,\n          supportsCalculate: !1,\n          supportsTruncate: !1,\n          supportsValidateSql: !1,\n          supportsChangeTracking: !1,\n          supportsQueryAttachments: !1,\n          supportsResizeAttachments: !1,\n          supportsSync: !1,\n          supportsExceedsLimitStatistics: !1,\n          supportsQueryAnalytics: !1,\n          supportsQueryTopFeatures: !1\n        },\n        query: {\n          maxRecordCount: s,\n          maxRecordCountFactor: void 0,\n          supportsStatistics: !!i?.supportsStatistics,\n          supportsOrderBy: !!i?.supportsOrderBy,\n          supportsDistinct: !!i?.supportsDistinct,\n          supportsPagination: !!i?.supportsPagination,\n          supportsStandardizedQueriesOnly: !!i?.useStandardizedQueries,\n          supportsPercentileStatistics: !!i?.supportsPercentileStatistics,\n          supportsCentroid: !!i?.supportsReturningGeometryCentroid,\n          supportsDistance: !!i?.supportsQueryWithDistance,\n          supportsExtent: !!i?.supportsReturningQueryExtent,\n          supportsGeometryProperties: !!i?.supportsReturningGeometryProperties,\n          supportsHavingClause: !!i?.supportsHavingClause,\n          supportsQuantization: !1,\n          supportsQuantizationEditMode: !1,\n          supportsQueryGeometry: !1,\n          supportsResultType: !1,\n          supportsMaxRecordCountFactor: !1,\n          supportsSqlExpression: !1,\n          supportsTopFeaturesQuery: !1,\n          supportsQueryByOthers: !1,\n          supportsHistoricMoment: !1,\n          supportsFormatPBF: !1,\n          supportsDisjointSpatialRelationship: !1,\n          supportsCacheHint: !1,\n          supportsSpatialAggregationStatistics: !1,\n          supportedSpatialAggregationStatistics: {\n            envelope: !1,\n            centroid: !1,\n            convexHull: !1\n          },\n          supportsDefaultSpatialReference: !!i?.supportsDefaultSR,\n          supportsCompactGeometry: !1,\n          standardMaxRecordCount: void 0,\n          tileMaxRecordCount: void 0\n        }\n      };\n    }\n\n  };\n  return e([S()], u.prototype, \"_functionRasterInfos\", void 0), e([S()], u.prototype, \"_rasterJobHandler\", void 0), e([S({\n    dependsOn: [\"_serviceSupportsMosaicRule\"]\n  })], u.prototype, \"_defaultServiceMosaicRule\", void 0), e([I(\"_defaultServiceMosaicRule\", [\"defaultMosaicMethod\"])], u.prototype, \"readDefaultServiceMosaicRule\", null), e([S()], u.prototype, \"_cachedRendererJson\", void 0), e([S({\n    readOnly: !0\n  })], u.prototype, \"_serviceSourceType\", void 0), e([I(\"_serviceSourceType\", [\"serviceSourceType\", \"fields\"])], u.prototype, \"readServiceSourceType\", null), e([S({\n    readOnly: !0\n  })], u.prototype, \"_serviceSupportsMosaicRule\", void 0), e([I(\"_serviceSupportsMosaicRule\", [\"currentVersion\", \"fields\"])], u.prototype, \"readServiceSupportsMosaicRule\", null), e([S()], u.prototype, \"rasterAttributeTableFieldPrefix\", void 0), e([S({\n    readOnly: !0\n  })], u.prototype, \"rasterFunctionNamesIndex\", null), e([S()], u.prototype, \"adjustAspectRatio\", void 0), e([S({\n    readOnly: !0\n  }), y(\"serviceRasterInfo.bandCount\")], u.prototype, \"bandCount\", void 0), e([S({\n    type: [R],\n    json: {\n      write: !0\n    }\n  })], u.prototype, \"bandIds\", void 0), e([I(\"bandIds\")], u.prototype, \"readBandIds\", null), e([S({\n    readOnly: !0,\n    json: {\n      read: !1\n    }\n  })], u.prototype, \"capabilities\", void 0), e([I(\"service\", \"capabilities\", [\"capabilities\", \"currentVersion\", \"serviceDataType\"])], u.prototype, \"readCapabilities\", null), e([S({\n    type: Number\n  })], u.prototype, \"compressionQuality\", void 0), e([w(\"compressionQuality\")], u.prototype, \"writeCompressionQuality\", null), e([S({\n    type: Number\n  })], u.prototype, \"compressionTolerance\", void 0), e([w(\"compressionTolerance\")], u.prototype, \"writeCompressionTolerance\", null), e([S({\n    json: {\n      read: {\n        source: \"copyrightText\"\n      }\n    }\n  })], u.prototype, \"copyright\", void 0), e([S({\n    type: String,\n    json: {\n      name: \"layerDefinition.definitionExpression\",\n      write: {\n        enabled: !0,\n        allowNull: !0\n      }\n    }\n  })], u.prototype, \"definitionExpression\", void 0), e([S({\n    readOnly: !0,\n    constructOnly: !0\n  })], u.prototype, \"exportImageServiceParameters\", void 0), e([S()], u.prototype, \"rasterInfo\", void 0), e([S({\n    readOnly: !0,\n    type: [T]\n  })], u.prototype, \"fields\", void 0), e([S({\n    readOnly: !0\n  })], u.prototype, \"fieldsIndex\", null), e([S({\n    type: [\"png\", \"png8\", \"png24\", \"png32\", \"jpg\", \"bmp\", \"gif\", \"jpgpng\", \"lerc\", \"tiff\"],\n    json: {\n      write: !0\n    }\n  })], u.prototype, \"format\", null), e([I(\"service\", \"format\", [\"serviceDataType\"])], u.prototype, \"readFormat\", null), e([S({\n    type: re\n  })], u.prototype, \"fullExtent\", void 0), e([S({\n    readOnly: !0\n  })], u.prototype, \"hasMultidimensions\", void 0), e([S({\n    json: {\n      read: {\n        source: \"maxImageHeight\"\n      }\n    }\n  })], u.prototype, \"imageMaxHeight\", void 0), e([S({\n    json: {\n      read: {\n        source: \"maxImageWidth\"\n      }\n    }\n  })], u.prototype, \"imageMaxWidth\", void 0), e([S({\n    type: String,\n    json: {\n      type: M.jsonValues,\n      read: M.read,\n      write: M.write\n    }\n  })], u.prototype, \"interpolation\", void 0), e([S()], u.prototype, \"minScale\", void 0), e([I(\"service\", \"minScale\")], u.prototype, \"readMinScale\", null), e([S()], u.prototype, \"maxScale\", void 0), e([I(\"service\", \"maxScale\")], u.prototype, \"readMaxScale\", null), e([S({\n    type: N\n  })], u.prototype, \"mosaicRule\", null), e([I(\"mosaicRule\", [\"mosaicRule\", \"defaultMosaicMethod\"])], u.prototype, \"readMosaicRule\", null), e([w(\"mosaicRule\")], u.prototype, \"writeMosaicRule\", null), e([S({\n    readOnly: !0\n  }), y(\"serviceRasterInfo.multidimensionalInfo\")], u.prototype, \"multidimensionalInfo\", void 0), e([S({\n    json: {\n      type: R\n    }\n  })], u.prototype, \"noData\", void 0), e([w(\"noData\")], u.prototype, \"writeNoData\", null), e([S({\n    type: String,\n    json: {\n      type: J.jsonValues,\n      read: J.read,\n      write: J.write\n    }\n  })], u.prototype, \"noDataInterpretation\", void 0), e([S({\n    type: String,\n    readOnly: !0,\n    json: {\n      read: {\n        source: [\"fields\"]\n      }\n    }\n  })], u.prototype, \"objectIdField\", void 0), e([I(\"objectIdField\")], u.prototype, \"readObjectIdField\", null), e([S({})], u.prototype, \"geometryType\", void 0), e([S({})], u.prototype, \"typeIdField\", void 0), e([S({})], u.prototype, \"types\", void 0), e([S({\n    readOnly: !0\n  })], u.prototype, \"parsedUrl\", null), e([S({\n    readOnly: !0\n  }), y(\"serviceRasterInfo.pixelSize.x\")], u.prototype, \"pixelSizeX\", void 0), e([S({\n    readOnly: !0\n  }), y(\"serviceRasterInfo.pixelSize.y\")], u.prototype, \"pixelSizeY\", void 0), e([S({\n    type: Function\n  })], u.prototype, \"pixelFilter\", void 0), e([S()], u.prototype, \"raster\", void 0), e([S()], u.prototype, \"viewId\", void 0), e([S({\n    types: i,\n    json: {\n      name: \"layerDefinition.drawingInfo.renderer\",\n      origins: {\n        \"web-scene\": {\n          types: s,\n          name: \"layerDefinition.drawingInfo.renderer\",\n          write: {\n            overridePolicy: e => ({\n              enabled: e && \"vector-field\" !== e.type && \"flow\" !== e.type\n            })\n          }\n        }\n      }\n    }\n  })], u.prototype, \"renderer\", null), e([I(\"renderer\")], u.prototype, \"readRenderer\", null), e([w(\"renderer\")], u.prototype, \"writeRenderer\", null), e([S()], u.prototype, \"symbolizer\", void 0), e([S(_)], u.prototype, \"opacity\", void 0), e([S({\n    readOnly: !0\n  }), y(\"serviceRasterInfo.attributeTable\")], u.prototype, \"rasterAttributeTable\", void 0), e([S({\n    readOnly: !0\n  })], u.prototype, \"rasterFields\", null), e([S({\n    constructOnly: !0\n  })], u.prototype, \"rasterFunctionInfos\", void 0), e([S({\n    type: q\n  })], u.prototype, \"renderingRule\", null), e([I(\"renderingRule\", [\"renderingRule\", \"rasterFunctionInfos\"])], u.prototype, \"readRenderingRule\", null), e([w(\"renderingRule\")], u.prototype, \"writeRenderingRule\", null), e([S()], u.prototype, \"serviceDataType\", void 0), e([S({\n    readOnly: !0,\n    type: ge\n  })], u.prototype, \"spatialReference\", void 0), e([I(\"spatialReference\", [\"spatialReference\", \"extent\"])], u.prototype, \"readSpatialReference\", null), e([S({\n    json: {\n      type: ve.jsonValues\n    }\n  })], u.prototype, \"pixelType\", void 0), e([I(\"pixelType\")], u.prototype, \"readPixelType\", null), e([w(\"pixelType\")], u.prototype, \"writePixelType\", null), e([S({\n    constructOnly: !0,\n    type: V\n  })], u.prototype, \"serviceRasterInfo\", void 0), e([S()], u.prototype, \"sourceJSON\", void 0), e([S(F)], u.prototype, \"url\", void 0), e([S({\n    readOnly: !0\n  })], u.prototype, \"version\", void 0), e([I(\"version\", [\"currentVersion\", \"fields\", \"timeInfo\"])], u.prototype, \"readVersion\", null), u = e([x(\"esri.layers.mixins.ArcGISImageService\")], u), u;\n};\n\nexport { xe as ArcGISImageService };","map":{"version":3,"names":["_","e","t","read","r","rasterRendererTypes","i","websceneRasterRendererTypes","s","n","o","strict","a","clone","l","u","isSome","p","isNone","c","unwrap","m","when","d","watch","h","urlToObject","f","aliasOf","y","ensureClass","g","Integer","R","ensureNumber","v","property","S","ensureRange","b","reader","I","subclass","x","writer","w","opacity","url","F","D","ExportImageServiceParameters","j","T","P","isSupportedRendererType","O","N","C","interpolationKebab","M","noDataInterpretationKebab","J","q","V","A","getDefaultMultidimensionalDefinition","E","decode","Q","getFormat","z","uvComponentToVector","H","getSupportedRendererTypes","U","getDefaultBandCombination","L","createDefaultRenderer","B","normalizeRendererJSON","G","k","computeAngles","W","computePixelSpaceLocations","X","computeHistograms","K","computeStatisticsHistograms","Y","getImageSpatialReferenceQueryParameter","$","getSamples","Z","identify","ee","executeQueryJSON","te","re","ie","se","ne","executeForCount","oe","executeForIds","ae","fetchServiceRasterInfo","le","generateRasterInfo","ue","getCatalogItemRasterInfo","pe","ce","me","de","he","fe","createFlowMesh","ye","ge","Re","getLogger","ve","U1","U2","U4","U8","S8","U16","S16","U32","S32","F32","F64","C64","C128","UNKNOWN","Se","Set","be","min","max","Ie","JSON","stringify","match","map","replace","join","xe","constructor","arguments","_functionRasterInfos","_rasterJobHandler","instance","refCount","connectionPromise","_defaultServiceMosaicRule","_serviceSourceType","_serviceSupportsMosaicRule","rasterAttributeTableFieldPrefix","adjustAspectRatio","bandCount","bandIds","capabilities","compressionQuality","compressionTolerance","copyright","definitionExpression","exportImageServiceParameters","rasterInfo","fields","fullExtent","hasMultidimensions","imageMaxHeight","imageMaxWidth","interpolation","minScale","maxScale","multidimensionalInfo","noData","noDataInterpretation","objectIdField","geometryType","typeIdField","types","pixelSizeX","pixelSizeY","pixelFilter","raster","viewId","symbolizer","rasterAttributeTable","rasterFunctionInfos","serviceDataType","spatialReference","pixelType","serviceRasterInfo","sourceJSON","version","initialize","_set","layer","readDefaultServiceMosaicRule","fromJSON","readServiceSourceType","_isMosaicDataset","readServiceSupportsMosaicRule","_isMosaicRuleSupported","rasterFunctionNamesIndex","Map","length","forEach","set","name","toLowerCase","readBandIds","Array","isArray","every","readCapabilities","_readCapabilities","writeCompressionQuality","format","writeCompressionTolerance","fieldsIndex","has","readFormat","readMinScale","minLOD","maxLOD","readMaxScale","mosaicRule","mosaicMethod","toJSON","mosaicOperation","readMosaicRule","writeMosaicRule","where","_isValidCustomizedMosaicRule","writeNoData","readObjectIdField","filter","type","parsedUrl","renderer","loaded","_configRenderer","readRenderer","layerDefinition","drawingInfo","symbolTileSize","warn","writeRenderer","rasterFields","alias","domain","editable","push","operations","supportsQuery","some","_isVectorDataSet","attributeTable","concat","renderingRule","rasterFunction","rasterFunctionArguments","readRenderingRule","_isRFTJson","rasterFunctionDefinition","writeRenderingRule","readSpatialReference","extent","readPixelType","writePixelType","readVersion","currentVersion","hasOwnProperty","applyFilter","_clonePixelData","applyRenderer","_isPicture","_cachedRendererJson","bind","updateSymbolizer","symbolize","pixelBlock","destroy","_shutdownJobHandler","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_fetchCapabilities","signal","supportsComputeAngles","_getRequestOptions","supportsComputePixelLocation","supportsComputeHistograms","supportsComputeStatisticsHistograms","getField","get","getFieldDomain","fetchImage","Promise","reject","then","imageServiceParameters","getExportImageServiceParameters","timeExtent","imageProps","width","height","requestAsImageElement","_requestArrayBuffer","fetchKeyProperties","path","query","_getQueryParams","data","fetchRasterAttributeTable","getCatalogItemICSInfo","ics","icsToPixelTransform","icsExtent","northDirection","catch","geometries","inSR","wkid","outSR","xmin","xmax","ymax","ymin","all","ipxf","geodataXform","xf_0","coefficients","affine","cellsizeRatio","imageCoordinateSystem","Math","atan","PI","functionName","_isVectorFieldResampleFunction","_generateRasterInfo","shiftCentralMeridian","_hasRenderingRule","BandIds","Raster","_combineMosaicRuleWithTimeExtent","_getRenderingRuleString","start","end","time","bbox","bboxSR","imageSR","size","supportsGetSamples","supportsIdentify","createQuery","outFields","returnGeometry","queryRasters","requestOptions","_prepareForQuery","queryObjectIds","queryRasterCount","queryVisibleRasters","pixelSize","returnDomainValues","returnTopmostRaster","showNoDataRecords","includes","slice","_updateRenderingRulesFunctionName","outSpatialReference","equals","geometry","renderingRules","returnCatalogItems","maxItemCount","customParameters","value","catalogItems","features","_processVisibleRastersResponse","templateRRFunctionNames","templateFields","attributes","objectIds","fetchVariableStatisticsHistograms","variable","statistics","histograms","avg","mean","stddev","standardDeviation","meshType","simulationSettings","flowData","AbortController","_fetchService","_fetchServiceInfo","resolve","_getRasterFunctionInfos","_isSupportedRenderer","own","popupEnabled","popupTemplate","_updateMultidimensionalDefinition","timeInfo","startField","variables","dimensions","multidimensionalDefinition","dimensionName","_cleanupMultidimensionalDefinition","getTime","isSlice","values","variableName","_initJobHandler","ssl","split","trim","indexOf","origin","serviceSourceType","functionArguments","ResampleType","resampleType","rendererJSON","success","_decodePixelBlock","options","imageElement","responseType","params","String","fromCharCode","apply","Uint8Array","useCanvas","planes","noDataValue","pixelData","processedValues","properties","Values","_updateResponseFieldNames","_updateFeatureWithMagDirValues","_updateFeatureWithRasterAttributeTableValues","sourceLayer","_updateFeatureWithDomainValues","parseInt","parseFloat","minValue","maxValue","pixels","codedValues","find","code","thumbnail","thumbnailEx","function","advancedQueryCapabilities","maxRecordCount","supportsAttachment","supportsExportImage","supportsMeasure","supportsDownload","supportsProject","supportsQueryBoundary","supportsCalculateVolume","supportsAdd","supportsDelete","supportsEditing","supportsUpdate","supportsCalculate","supportsTruncate","supportsValidateSql","supportsChangeTracking","supportsQueryAttachments","supportsResizeAttachments","supportsSync","supportsExceedsLimitStatistics","supportsQueryAnalytics","supportsQueryTopFeatures","maxRecordCountFactor","supportsStatistics","supportsOrderBy","supportsDistinct","supportsPagination","supportsStandardizedQueriesOnly","useStandardizedQueries","supportsPercentileStatistics","supportsCentroid","supportsReturningGeometryCentroid","supportsDistance","supportsQueryWithDistance","supportsExtent","supportsReturningQueryExtent","supportsGeometryProperties","supportsReturningGeometryProperties","supportsHavingClause","supportsQuantization","supportsQuantizationEditMode","supportsQueryGeometry","supportsResultType","supportsMaxRecordCountFactor","supportsSqlExpression","supportsTopFeaturesQuery","supportsQueryByOthers","supportsHistoricMoment","supportsFormatPBF","supportsDisjointSpatialRelationship","supportsCacheHint","supportsSpatialAggregationStatistics","supportedSpatialAggregationStatistics","envelope","centroid","convexHull","supportsDefaultSpatialReference","supportsDefaultSR","supportsCompactGeometry","standardMaxRecordCount","tileMaxRecordCount","prototype","dependsOn","readOnly","json","write","Number","source","enabled","allowNull","constructOnly","jsonValues","Function","origins","overridePolicy","ArcGISImageService"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/mixins/ArcGISImageService.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import t from\"../../Graphic.js\";import{read as r,rasterRendererTypes as i,websceneRasterRendererTypes as s}from\"../../rasterRenderers.js\";import n from\"../../request.js\";import o from\"../../core/Error.js\";import{strict as a}from\"../../core/jsonMap.js\";import{clone as l}from\"../../core/lang.js\";import u from\"../../core/Logger.js\";import{isSome as p,isNone as c,unwrap as m}from\"../../core/maybe.js\";import{when as d}from\"../../core/promiseUtils.js\";import{watch as h}from\"../../core/reactiveUtils.js\";import{urlToObject as f}from\"../../core/urlUtils.js\";import{aliasOf as y}from\"../../core/accessorSupport/decorators/aliasOf.js\";import{ensureClass as g,Integer as R,ensureNumber as v}from\"../../core/accessorSupport/ensureType.js\";import{property as S,ensureRange as b}from\"../../core/accessorSupport/decorators/property.js\";import{reader as I}from\"../../core/accessorSupport/decorators/reader.js\";import{subclass as x}from\"../../core/accessorSupport/decorators/subclass.js\";import{writer as w}from\"../../core/accessorSupport/decorators/writer.js\";import{opacity as _,url as F}from\"../support/commonProperties.js\";import D from\"../support/DimensionalDefinition.js\";import{ExportImageServiceParameters as j}from\"../support/ExportImageServiceParameters.js\";import T from\"../support/Field.js\";import P from\"../support/FieldsIndex.js\";import{isSupportedRendererType as O}from\"../support/imageryRendererUtils.js\";import N from\"../support/MosaicRule.js\";import C from\"../support/PixelBlock.js\";import{interpolationKebab as M,noDataInterpretationKebab as J}from\"../support/rasterEnums.js\";import q from\"../support/RasterFunction.js\";import V from\"../support/RasterInfo.js\";import A from\"../support/RasterJobHandler.js\";import{getDefaultMultidimensionalDefinition as E}from\"../support/rasterDatasets/multidimensionalUtils.js\";import{decode as Q,getFormat as z}from\"../support/rasterFormats/RasterCodec.js\";import{uvComponentToVector as H}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{getSupportedRendererTypes as U,getDefaultBandCombination as L,createDefaultRenderer as B,normalizeRendererJSON as G}from\"../../renderers/support/rasterRendererHelper.js\";import k from\"../../renderers/support/RasterSymbolizer.js\";import{computeAngles as W,computePixelSpaceLocations as X,computeHistograms as K,computeStatisticsHistograms as Y,getImageSpatialReferenceQueryParameter as $,getSamples as Z,identify as ee}from\"../../rest/imageService.js\";import\"../../core/has.js\";import\"../support/source/DataLayerSource.js\";import{executeQueryJSON as te}from\"../../rest/query/executeQueryJSON.js\";import\"../../core/unitUtils.js\";import\"../../geometry/support/spatialReferenceUtils.js\";import\"../graphics/featureConversionUtils.js\";import re from\"../../geometry/Extent.js\";import\"../../geometry/Geometry.js\";import\"../../geometry/Multipoint.js\";import\"../../geometry/Point.js\";import ie from\"../../geometry/Polygon.js\";import\"../../geometry/Polyline.js\";import\"../../geometry/support/normalizeUtils.js\";import\"../../core/pbf.js\";import se from\"../../rest/support/FeatureSet.js\";import ne from\"../../rest/support/Query.js\";import\"../../kernel.js\";import\"../../rest/query/support/AttachmentInfo.js\";import\"../../rest/support/AttachmentQuery.js\";import{executeForCount as oe}from\"../../rest/query/executeForCount.js\";import{executeForIds as ae}from\"../../rest/query/executeForIds.js\";import\"../../rest/support/RelationshipQuery.js\";import\"../../rest/support/TopFeaturesQuery.js\";import{fetchServiceRasterInfo as le,generateRasterInfo as ue}from\"../../rest/imageService/fetchRasterInfo.js\";import{getCatalogItemRasterInfo as pe}from\"../../rest/imageService/getCatalogItemRasterInfo.js\";import ce from\"../../rest/support/ImageAngleParameters.js\";import me from\"../../rest/support/ImageHistogramParameters.js\";import de from\"../../rest/support/ImageIdentifyParameters.js\";import he from\"../../rest/support/ImagePixelLocationParameters.js\";import fe from\"../../rest/support/ImageSampleParameters.js\";import{createFlowMesh as ye}from\"../../views/2d/engine/flow/dataUtils.js\";import ge from\"../../geometry/SpatialReference.js\";const Re=u.getLogger(\"esri.layers.mixins.ArcGISImageService\"),ve=a()({U1:\"u1\",U2:\"u2\",U4:\"u4\",U8:\"u8\",S8:\"s8\",U16:\"u16\",S16:\"s16\",U32:\"u32\",S32:\"s32\",F32:\"f32\",F64:\"f64\",C64:\"c64\",C128:\"c128\",UNKNOWN:\"unknown\"}),Se=new Set([\"png\",\"png8\",\"png24\",\"png32\",\"jpg\",\"bmp\",\"gif\",\"jpgpng\",\"lerc\",\"tiff\"]),be=b(v,{min:0,max:255});function Ie(e){if(!e)return null;const t=JSON.stringify(e).match(/\"rasterFunction\":\"(.*?\")/gi)?.map((e=>e.replace('\"rasterFunction\":\"',\"\").replace('\"',\"\")));return t?t.join(\"/\"):null}const xe=a=>{let u=class extends a{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix=\"Raster.\",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType=\"polygon\",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set(\"exportImageServiceParameters\",new j({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?N.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?\"mosaic-dataset\":\"raster-dataset\"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,\"_\"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>\"number\"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&\"lerc\"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){\"lerc\"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new P(this.fields):null}set format(e){e&&Se.has(e.toLowerCase())&&this._set(\"format\",e.toLowerCase())}readFormat(e,t){return\"esriImageServiceDataTypeVector-UV\"===t.serviceDataType||\"esriImageServiceDataTypeVector-MagDir\"===t.serviceDataType||null!=this.pixelFilter?\"lerc\":\"jpgpng\"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=N.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set(\"mosaicRule\",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?N.fromJSON(r):this._isMosaicRuleSupported(t)?N.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new N({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&\"number\"==typeof e&&(t[r]=be(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>\"esriFieldTypeOID\"===e.type||\"oid\"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?f(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set(\"renderer\",e)}readRenderer(e,t,i){const s=t?.layerDefinition?.drawingInfo?.renderer,n=r(s,i);return null==n?null:(\"vector-field\"===n.type&&t.symbolTileSize&&!s.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),O(n)||Re.warn(\"ArcGISImageService\",\"Imagery layer doesn't support given renderer type.\"),n)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),\"vector-field\"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||\"Raster.\",t=new T({name:\"Raster.ItemPixelValue\",alias:\"Item Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"}),r=new T({name:\"Raster.ServicePixelValue\",alias:\"Service Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"}),i=new T({name:\"Raster.ServicePixelValue.Raw\",alias:\"Raw Service Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"});let s=this.fields?l(this.fields):[];s.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>\"none\"===e.name.toLowerCase()))&&s.push(i),p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>\"none\"!==e.name.toLowerCase())).forEach((e=>{s.push(new T({name:\"Raster.ServicePixelValue.\"+e.name,alias:e.name,domain:null,editable:!1,length:50,type:\"string\"}))})),this._isVectorDataSet()&&(s.push(new T({name:\"Raster.Magnitude\",alias:\"Magnitude\",domain:null,editable:!1,type:\"double\"})),s.push(new T({name:\"Raster.Direction\",alias:\"Direction\",domain:null,editable:!1,type:\"double\"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter((e=>\"esriFieldTypeOID\"!==e.type&&\"value\"!==e.name.toLowerCase())).map((t=>{const r=l(t);return r.name=e+t.name,r}));s=s.concat(t)}return s}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=q.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set(\"renderingRule\",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&\"None\"!==r[0].name?this._isRFTJson(t.renderingRule)?q.fromJSON({rasterFunctionDefinition:t.renderingRule}):q.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){const i=e.toJSON();i.rasterFunctionDefinition?t[r]=i.rasterFunctionDefinition:t[r]=i}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?ge.fromJSON(r):null}readPixelType(e){return ve.fromJSON(e)||e}writePixelType(e,t,r){(c(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=ve.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty(\"fields\")||t.hasOwnProperty(\"timeInfo\")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this.symbolizer.bind(),await s.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const o=await s.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:o}}else r={extent:e.extent,pixelBlock:this.symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeAngles)throw new o(\"imagery-layer:compute-angles\",\"this operation is not supported on the input image service\");return e=g(ce,e).clone(),W(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new o(\"imagery-layer:compute-pixel-space-locations\",\"this operation is not supported on the input image service\");return e=g(he,e).clone(),X(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeHistograms)throw new o(\"imagery-layer:compute-histograms\",\"this operation is not supported on the input image service\");e=g(me,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),K(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new o(\"imagery-layer:compute-statistics-histograms\",\"this operation is not supported on the input image service\");e=g(me,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),Y(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return p(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new o(\"imagery-layer:fetch-image\",\"Insufficient parameters for requesting an image. A valid extent, width and height values are required.\"));const s=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return d(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){return n(this.parsedUrl.path+\"/keyProperties\",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new o(\"#fetchRasterAttributeTable()\",\"Failed to get rasterAttributeTable\")):n(this.parsedUrl.path+\"/rasterAttributeTable\",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>se.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return pe(this.parsedUrl.path,e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await n(this.parsedUrl.path+\"/\"+e+\"/info/ics\",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await n(this.parsedUrl.path+\"/\"+e+\"/info\",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?n(this.parsedUrl.path+\"/\"+e+\"/info/icstopixel\",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=s.spatialReference,l={geometries:JSON.stringify({geometryType:\"esriGeometryEnvelope\",geometries:[s]}),inSR:a.wkid||JSON.stringify(a),outSR:\"0:\"+e},u=n(this.parsedUrl.path+\"/project\",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=5,c=(s.xmin+s.xmax)/2,m=(s.ymax-s.ymin)/(p+1),d=s.ymin+m,h=[];for(let n=0;n<p;n++)h.push({x:c,y:d+m*n});const f={geometries:JSON.stringify({geometryType:\"esriGeometryPoint\",geometries:h}),inSR:a.wkid||JSON.stringify(a),outSR:\"0:\"+e},y=n(this.parsedUrl.path+\"/project\",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([o,u,y]);let R=g[0].ipxf;if(null==R){const e=i.geodataXform?.xf_0;\"topup\"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(R={affine:{name:\"ics [sensor: Frame] to pixel (column, row) transformation\",coefficients:e.coefficients,cellsizeRatio:0,type:\"GeometricXform\"}})}const v=re.fromJSON(g[1]&&g[1].geometries&&g[1].geometries[0]);v&&(v.spatialReference=new ge({wkid:0,imageCoordinateSystem:i}));const S=g[2].geometries?g[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&\"NaN\"!==e.x&&\"NaN\"!==e.y)):[],b=S.length;if(b<3)return{ics:i,icsToPixelTransform:R,icsExtent:v,northDirection:null};let I=0,x=0,w=0,_=0;for(let n=0;n<b;n++)I+=S[n].x,x+=S[n].y,w+=S[n].x*S[n].x,_+=S[n].x*S[n].y;const F=(b*_-I*x)/(b*w-I*I);let D=0;const j=S[p-1].x>S[0].x,T=S[p-1].y>S[0].y;return F===1/0?D=T?90:270:0===F?D=j?0:180:F>0?D=j?180*Math.atan(F)/Math.PI:180*Math.atan(F)/Math.PI+180:F<0&&(D=T?180+180*Math.atan(F)/Math.PI:360+180*Math.atan(F)/Math.PI),{ics:i,icsToPixelTransform:R,icsExtent:v,northDirection:D}}async generateRasterInfo(e,t){if((!e||\"none\"===e?.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))&&p(this.serviceRasterInfo))return this.serviceRasterInfo;const r=Ie(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){e=e.clone().shiftCentralMeridian();const s=$(e.spatialReference,this.parsedUrl.path);p(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const n=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:a}=n;let{renderingRule:l}=n;const u=this.renderingRule?.rasterFunctionDefinition,c=!this.renderer||\"raster-stretch\"===this.renderer.type;if(o?.length&&this._hasRenderingRule(this.renderingRule)&&!u&&c){const e={rasterFunction:\"ExtractBand\",rasterFunctionArguments:{BandIds:o}};if(\"Stretch\"===l.rasterFunction)e.rasterFunctionArguments.Raster=l.rasterFunctionArguments.Raster,l.rasterFunctionArguments.Raster=e;else if(\"Colormap\"===l.rasterFunction){const t=l.rasterFunctionArguments.Raster;\"Stretch\"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,l.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=l,l=e;n.bandIds=void 0}else n.bandIds=o?.join(\",\");a instanceof Array&&a.length>0&&(n.noData=a.join(\",\"));const m=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;n.mosaicRule=m&&JSON.stringify(m),n.renderingRule=this._getRenderingRuleString(q.fromJSON(l));const d={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?d.time=\"\"+e:null==e&&null==t||(d.time=`${null==e?\"null\":e},${null==t?\"null\":t}`)}return{bbox:e.xmin+\",\"+e.ymin+\",\"+e.xmax+\",\"+e.ymax,bboxSR:s,imageSR:s,size:t+\",\"+r,...n,...d}}async getSamples(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsGetSamples)throw new o(\"imagery-layer:get-samples\",\"getSamples operation is not supported on the input image service\");e=g(fe,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),Z(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsIdentify)throw new o(\"imagery-layer:query-rasters\",\"query operation is not supported on the input image service\");e=g(de,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;if(s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=m(t)}return r&&null==e.raster&&(e.raster=r),ee(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new ne;return e.outFields=[\"*\"],e.returnGeometry=!0,e.where=this.definitionExpression||\"1=1\",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),te(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),ae(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),oe(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new o(\"imagery-layer: query-visible-rasters\",\"missing query parameter\");const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let a=!1,l=null,u=null;const m=\"raster.servicepixelvalue\",d=this.rasterFunctionNamesIndex;if(p(e.outFields)&&(a=e.outFields.some((e=>!e.toLowerCase().includes(m))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(m)&&e.length>m.length)).map((e=>{const t=e.slice(m.length+1);return[this._updateRenderingRulesFunctionName(t,d),t]}));l=t.map((e=>new q({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName))}const h=c(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f=e.timeExtent||this.timeExtent,y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,f),g=this._getQueryParams({geometry:e.geometry,timeExtent:f,mosaicRule:y,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:a,returnGeometry:h,raster:this.raster,maxItemCount:s?1:null});delete g.f;const R=new de(g);try{await this.generateRasterInfo(this.renderingRule);const r=await ee(this.url,R,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,o=r.value.toLowerCase().includes(\"nodata\");if(!(a&&!h&&r?.catalogItems?.features.length&&(n||!o)))return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s});const l=this.objectIdField||\"ObjectId\",c=r.catalogItems.features,m=c.map((e=>e.attributes?.[l])),d=new ne({objectIds:m,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),f=await this.queryRasters(d);return f?.features?.length&&f.features.forEach((t=>{c.forEach((r=>{r.attributes[l]===t.attributes[l]&&(r.geometry=new ie(t.geometry),p(e.outSpatialReference)&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s})}catch{throw new o(\"imagery-layer:query-visible-rasters\",\"encountered error when querying visible rasters\")}}async fetchVariableStatisticsHistograms(e,t){const r=n(this.parsedUrl.path+\"/statistics\",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),i=n(this.parsedUrl.path+\"/histograms\",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):ye(e.meshType,e.simulationSettings,e.flowData,p(t.signal)?t.signal:(new AbortController).signal)}async _fetchService(e){await this._fetchServiceInfo(e),p(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=p(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):le(this.parsedUrl.path,t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set(\"serviceRasterInfo\",e),e))),i=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,i,s]).then((e=>{e[1]?this._set(\"rasterInfo\",e[1]):this._set(\"rasterInfo\",e[0]),e[2]&&this._set(\"rasterFunctionInfos\",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set(\"renderer\",null),Re.warn(\"ArcGISImageService\",\"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer\")),this._set(\"renderer\",this._configRenderer(this.renderer)),this.own(h((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))})));const{serviceRasterInfo:t}=this;p(t)&&t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if(c(e)||c(this.multidimensionalInfo)||c(t)||c(r?.startField))return e;const{startField:i}=r,s=this.multidimensionalInfo.variables.some((e=>e.dimensions.some((e=>e.name===i))))?i:\"StdTime\";if(e=e.clone(),\"mosaic-dataset\"===this._serviceSourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==s)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const n=e.multidimensionalDefinition.filter((e=>e.dimensionName===s)),o=p(t.start)?t.start.getTime():null,a=p(t.end)?t.end.getTime():null,l=null==o||null==a||o===a,u=l?[o||a]:[[o,a]],m=this.version>=10.8;if(n.length)n.forEach((e=>{e.dimensionName===s&&(m?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=l,e.values=u))}));else if(!m){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=s,e.isSlice=l,e.values=u})):e.multidimensionalDefinition.push(new D({variableName:\"\",dimensionName:s,isSlice:l,values:u}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return c(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),\"mosaic-dataset\"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsQuery)throw new o(\"imagery-layer:query-rasters\",\"query operation is not supported on the input image service\");return e=p(e)?g(ne,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new A;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return\"unique-value\"===e.type&&this._hasRenderingRule(r)&&1===t.bandCount&&[\"u8\",\"s8\"].includes(t.pixelType)||U(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:i}=await n(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,i&&(this.url=this.url.replace(/^http:/i,\"https:\"))}if(t.capabilities?.toLowerCase().split(\",\").map((e=>e.trim())).indexOf(\"tilesonly\")>-1)throw new o(\"imagery-layer:fetch-service-info\",\"use ImageryTileLayer to open tiles-only image services\");this.read(t,{origin:\"service\",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?\"esriImageServiceSourceTypeMosaicDataset\"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&e.fields?.length>1);return t||r}_isVectorFieldResampleFunction(e){if(c(e))return!1;const{functionName:t,functionArguments:r}=e,i=\"resample\"===t?.toLowerCase(),s=r?.ResampleType||r?.resampleType;return i&&(7===s||10===s)}_isPicture(){return!this.format||this.format.includes(\"jpg\")||this.format.includes(\"png\")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=L(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=B(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=G(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new k({rendererJSON:t,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:p(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){p(e?.renderingRule)&&\"string\"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:\"json\",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Q(e,t,r)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.serviceRasterInfo)return t;if(t&&this.version>=10.3){if(1===t.length&&\"none\"===t[0].name.toLowerCase())return t;return(await n(this.parsedUrl.path+\"/rasterFunctionInfos\",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos}return null}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format?.indexOf(\"png\")>-1){return{imageElement:(await n(this.parsedUrl.path+\"/exportImage\",{responseType:\"image\",query:this._getQueryParams({f:\"image\",...e.imageServiceParameters}),signal:i})).data,params:t}}const s=this._initJobHandler(),a=n(this.parsedUrl.path+\"/exportImage\",{responseType:\"array-buffer\",query:this._getQueryParams({f:\"image\",...e.imageServiceParameters}),signal:i}),l=(await Promise.all([a,s]))[0].data,u=t.format||\"jpgpng\";let p=u;if(\"bsq\"!==p&&\"bip\"!==p&&(p=z(l)),!p)throw new o(\"imagery-layer:fetch-image\",\"unsupported format signature \"+String.fromCharCode.apply(null,new Uint8Array(l)));const c={signal:i},m=\"gif\"===u||\"bmp\"===u||u.includes(\"png\")&&(\"png\"===p||\"jpg\"===p)?Q(l,{useCanvas:!0,...t},c):this._decodePixelBlock(l,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:u},c);return{pixelData:{pixelBlock:await m,extent:t.extent},params:t}}_generateRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return ue(this.parsedUrl.path,e,r)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=E(e);if(p(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new N;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,r){r=r||{};const i=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:o,templateFields:a}=r,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,c=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,\", \")))||[];const m=this.objectIdField||\"ObjectId\",d=\"string\"==typeof i&&i.toLowerCase().includes(\"nodata\"),h=[];if(i&&!u&&!d){const e={};e[m]=0;c=[i],u=[new t(this.fullExtent,null,e)]}if(!u)return[];let f,y,g;this._updateResponseFieldNames(u,a),d&&!n&&(u=[]);for(let t=0;t<u.length;t++){if(f=u[t],null!=i){if(y=c[t],g=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.includes(this.renderingRule.functionName)?l[s.indexOf(this.renderingRule.functionName)]:i,\"nodata\"===y.toLowerCase()&&!n)continue;const e=\"Raster.ItemPixelValue\",r=\"Raster.ServicePixelValue\";f.attributes[e]=y,f.attributes[r]=g,this._updateFeatureWithMagDirValues(f,y);const o=this.fields&&this.fields.length>0;let a=this.renderingRule&&p(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?o?y:i:g;this.renderingRule||(a=o?y:i),this._updateFeatureWithRasterAttributeTableValues(f,a)}if(f.sourceLayer=f.layer=this,o&&this._updateFeatureWithDomainValues(f),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t=\"Raster.ServicePixelValue.\"+s[e];f.attributes[t]=l[e]}h.push(u[t])}return h}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||p(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const s=r.fields,n=s.map((e=>e.name)).filter((e=>\"value\"===e.toLowerCase())),o=n&&n[0];if(!o)return;const a=i.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));a&&a[0]&&s.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=a[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new C({height:1,width:1,pixelType:\"f32\",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new re(0,0,0,0,this.spatialReference)});const o=\"esriImageServiceDataTypeVector-MagDir\"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:H([n.pixels[0][0],n.pixels[1][0]]);e.attributes[\"Raster.Magnitude\"]=o[0],e.attributes[\"Raster.Direction\"]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&\"coded-value\"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;c(r)||e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRenderingRule(e){return e&&e.functionName&&\"none\"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(\"Raw\"===e)return e.replace(\"Raw\",\"None\");const r=e.toLowerCase().replace(/ /gi,\"_\");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty(\"functionType\")}_isVectorDataSet(){return\"esriImageServiceDataTypeVector-UV\"===this.serviceDataType||\"esriImageServiceDataTypeVector-MagDir\"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(\",\").map((e=>e.trim())):[\"image\",\"catalog\"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.includes(\"image\"),o=\"esriImageServiceDataTypeElevation\"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes(\"edit\");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.includes(\"mensuration\")&&a,supportsDownload:t.includes(\"download\"),supportsQuery:t.includes(\"catalog\")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&t.includes(\"catalog\"),supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!!i?.supportsStatistics,supportsOrderBy:!!i?.supportsOrderBy,supportsDistinct:!!i?.supportsDistinct,supportsPagination:!!i?.supportsPagination,supportsStandardizedQueriesOnly:!!i?.useStandardizedQueries,supportsPercentileStatistics:!!i?.supportsPercentileStatistics,supportsCentroid:!!i?.supportsReturningGeometryCentroid,supportsDistance:!!i?.supportsQueryWithDistance,supportsExtent:!!i?.supportsReturningQueryExtent,supportsGeometryProperties:!!i?.supportsReturningGeometryProperties,supportsHavingClause:!!i?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!i?.supportsDefaultSR,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return e([S()],u.prototype,\"_functionRasterInfos\",void 0),e([S()],u.prototype,\"_rasterJobHandler\",void 0),e([S({dependsOn:[\"_serviceSupportsMosaicRule\"]})],u.prototype,\"_defaultServiceMosaicRule\",void 0),e([I(\"_defaultServiceMosaicRule\",[\"defaultMosaicMethod\"])],u.prototype,\"readDefaultServiceMosaicRule\",null),e([S()],u.prototype,\"_cachedRendererJson\",void 0),e([S({readOnly:!0})],u.prototype,\"_serviceSourceType\",void 0),e([I(\"_serviceSourceType\",[\"serviceSourceType\",\"fields\"])],u.prototype,\"readServiceSourceType\",null),e([S({readOnly:!0})],u.prototype,\"_serviceSupportsMosaicRule\",void 0),e([I(\"_serviceSupportsMosaicRule\",[\"currentVersion\",\"fields\"])],u.prototype,\"readServiceSupportsMosaicRule\",null),e([S()],u.prototype,\"rasterAttributeTableFieldPrefix\",void 0),e([S({readOnly:!0})],u.prototype,\"rasterFunctionNamesIndex\",null),e([S()],u.prototype,\"adjustAspectRatio\",void 0),e([S({readOnly:!0}),y(\"serviceRasterInfo.bandCount\")],u.prototype,\"bandCount\",void 0),e([S({type:[R],json:{write:!0}})],u.prototype,\"bandIds\",void 0),e([I(\"bandIds\")],u.prototype,\"readBandIds\",null),e([S({readOnly:!0,json:{read:!1}})],u.prototype,\"capabilities\",void 0),e([I(\"service\",\"capabilities\",[\"capabilities\",\"currentVersion\",\"serviceDataType\"])],u.prototype,\"readCapabilities\",null),e([S({type:Number})],u.prototype,\"compressionQuality\",void 0),e([w(\"compressionQuality\")],u.prototype,\"writeCompressionQuality\",null),e([S({type:Number})],u.prototype,\"compressionTolerance\",void 0),e([w(\"compressionTolerance\")],u.prototype,\"writeCompressionTolerance\",null),e([S({json:{read:{source:\"copyrightText\"}}})],u.prototype,\"copyright\",void 0),e([S({type:String,json:{name:\"layerDefinition.definitionExpression\",write:{enabled:!0,allowNull:!0}}})],u.prototype,\"definitionExpression\",void 0),e([S({readOnly:!0,constructOnly:!0})],u.prototype,\"exportImageServiceParameters\",void 0),e([S()],u.prototype,\"rasterInfo\",void 0),e([S({readOnly:!0,type:[T]})],u.prototype,\"fields\",void 0),e([S({readOnly:!0})],u.prototype,\"fieldsIndex\",null),e([S({type:[\"png\",\"png8\",\"png24\",\"png32\",\"jpg\",\"bmp\",\"gif\",\"jpgpng\",\"lerc\",\"tiff\"],json:{write:!0}})],u.prototype,\"format\",null),e([I(\"service\",\"format\",[\"serviceDataType\"])],u.prototype,\"readFormat\",null),e([S({type:re})],u.prototype,\"fullExtent\",void 0),e([S({readOnly:!0})],u.prototype,\"hasMultidimensions\",void 0),e([S({json:{read:{source:\"maxImageHeight\"}}})],u.prototype,\"imageMaxHeight\",void 0),e([S({json:{read:{source:\"maxImageWidth\"}}})],u.prototype,\"imageMaxWidth\",void 0),e([S({type:String,json:{type:M.jsonValues,read:M.read,write:M.write}})],u.prototype,\"interpolation\",void 0),e([S()],u.prototype,\"minScale\",void 0),e([I(\"service\",\"minScale\")],u.prototype,\"readMinScale\",null),e([S()],u.prototype,\"maxScale\",void 0),e([I(\"service\",\"maxScale\")],u.prototype,\"readMaxScale\",null),e([S({type:N})],u.prototype,\"mosaicRule\",null),e([I(\"mosaicRule\",[\"mosaicRule\",\"defaultMosaicMethod\"])],u.prototype,\"readMosaicRule\",null),e([w(\"mosaicRule\")],u.prototype,\"writeMosaicRule\",null),e([S({readOnly:!0}),y(\"serviceRasterInfo.multidimensionalInfo\")],u.prototype,\"multidimensionalInfo\",void 0),e([S({json:{type:R}})],u.prototype,\"noData\",void 0),e([w(\"noData\")],u.prototype,\"writeNoData\",null),e([S({type:String,json:{type:J.jsonValues,read:J.read,write:J.write}})],u.prototype,\"noDataInterpretation\",void 0),e([S({type:String,readOnly:!0,json:{read:{source:[\"fields\"]}}})],u.prototype,\"objectIdField\",void 0),e([I(\"objectIdField\")],u.prototype,\"readObjectIdField\",null),e([S({})],u.prototype,\"geometryType\",void 0),e([S({})],u.prototype,\"typeIdField\",void 0),e([S({})],u.prototype,\"types\",void 0),e([S({readOnly:!0})],u.prototype,\"parsedUrl\",null),e([S({readOnly:!0}),y(\"serviceRasterInfo.pixelSize.x\")],u.prototype,\"pixelSizeX\",void 0),e([S({readOnly:!0}),y(\"serviceRasterInfo.pixelSize.y\")],u.prototype,\"pixelSizeY\",void 0),e([S({type:Function})],u.prototype,\"pixelFilter\",void 0),e([S()],u.prototype,\"raster\",void 0),e([S()],u.prototype,\"viewId\",void 0),e([S({types:i,json:{name:\"layerDefinition.drawingInfo.renderer\",origins:{\"web-scene\":{types:s,name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:e=>({enabled:e&&\"vector-field\"!==e.type&&\"flow\"!==e.type})}}}}})],u.prototype,\"renderer\",null),e([I(\"renderer\")],u.prototype,\"readRenderer\",null),e([w(\"renderer\")],u.prototype,\"writeRenderer\",null),e([S()],u.prototype,\"symbolizer\",void 0),e([S(_)],u.prototype,\"opacity\",void 0),e([S({readOnly:!0}),y(\"serviceRasterInfo.attributeTable\")],u.prototype,\"rasterAttributeTable\",void 0),e([S({readOnly:!0})],u.prototype,\"rasterFields\",null),e([S({constructOnly:!0})],u.prototype,\"rasterFunctionInfos\",void 0),e([S({type:q})],u.prototype,\"renderingRule\",null),e([I(\"renderingRule\",[\"renderingRule\",\"rasterFunctionInfos\"])],u.prototype,\"readRenderingRule\",null),e([w(\"renderingRule\")],u.prototype,\"writeRenderingRule\",null),e([S()],u.prototype,\"serviceDataType\",void 0),e([S({readOnly:!0,type:ge})],u.prototype,\"spatialReference\",void 0),e([I(\"spatialReference\",[\"spatialReference\",\"extent\"])],u.prototype,\"readSpatialReference\",null),e([S({json:{type:ve.jsonValues}})],u.prototype,\"pixelType\",void 0),e([I(\"pixelType\")],u.prototype,\"readPixelType\",null),e([w(\"pixelType\")],u.prototype,\"writePixelType\",null),e([S({constructOnly:!0,type:V})],u.prototype,\"serviceRasterInfo\",void 0),e([S()],u.prototype,\"sourceJSON\",void 0),e([S(F)],u.prototype,\"url\",void 0),e([S({readOnly:!0})],u.prototype,\"version\",void 0),e([I(\"version\",[\"currentVersion\",\"fields\",\"timeInfo\"])],u.prototype,\"readVersion\",null),u=e([x(\"esri.layers.mixins.ArcGISImageService\")],u),u};export{xe as ArcGISImageService};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}