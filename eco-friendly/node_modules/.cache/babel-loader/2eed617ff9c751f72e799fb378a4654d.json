{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { s as e } from \"../../../../../../chunks/vec4.js\";\nimport { c as r } from \"../../../../../../chunks/vec4f64.js\";\nimport { ScreenSizePerspective as t, addScreenSizePerspectiveAlignment as l } from \"../util/ScreenSizePerspective.glsl.js\";\nimport { addCameraPosition as o } from \"../util/View.glsl.js\";\nimport { Float4PassUniform as c } from \"../../shaderModules/Float4PassUniform.js\";\nimport { glsl as s } from \"../../shaderModules/interfaces.js\";\n\nfunction a(e, r) {\n  const c = e.vertex;\n  r.hasVerticalOffset ? (f(c), r.hasScreenSizePerspective && (e.include(t), l(c), o(e.vertex, r)), c.code.add(s`\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ${r.spherical ? s`vec3 worldNormal = normalize(worldPos + localOrigin);` : s`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\n        ${r.hasScreenSizePerspective ? s`\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);` : s`\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    `)) : c.code.add(s`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`);\n}\n\nconst i = r();\n\nfunction f(r) {\n  r.uniforms.add(new c(\"verticalOffset\", (r, t) => {\n    const {\n      minWorldLength: l,\n      maxWorldLength: o,\n      screenLength: c\n    } = r.verticalOffset,\n          s = Math.tan(.5 * t.camera.fovY) / (.5 * t.camera.fullViewport[3]),\n          a = t.camera.pixelRatio || 1;\n    return e(i, c * a, s, l, o);\n  }));\n}\n\nexport { a as VerticalOffset, f as addVerticalOffset };","map":{"version":3,"names":["s","e","c","r","ScreenSizePerspective","t","addScreenSizePerspectiveAlignment","l","addCameraPosition","o","Float4PassUniform","glsl","a","vertex","hasVerticalOffset","f","hasScreenSizePerspective","include","code","add","spherical","i","uniforms","minWorldLength","maxWorldLength","screenLength","verticalOffset","Math","tan","camera","fovY","fullViewport","pixelRatio","VerticalOffset","addVerticalOffset"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{s as e}from\"../../../../../../chunks/vec4.js\";import{c as r}from\"../../../../../../chunks/vec4f64.js\";import{ScreenSizePerspective as t,addScreenSizePerspectiveAlignment as l}from\"../util/ScreenSizePerspective.glsl.js\";import{addCameraPosition as o}from\"../util/View.glsl.js\";import{Float4PassUniform as c}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";function a(e,r){const c=e.vertex;r.hasVerticalOffset?(f(c),r.hasScreenSizePerspective&&(e.include(t),l(c),o(e.vertex,r)),c.code.add(s`\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ${r.spherical?s`vec3 worldNormal = normalize(worldPos + localOrigin);`:s`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\n        ${r.hasScreenSizePerspective?s`\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);`:s`\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    `)):c.code.add(s`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`)}const i=r();function f(r){r.uniforms.add(new c(\"verticalOffset\",((r,t)=>{const{minWorldLength:l,maxWorldLength:o,screenLength:c}=r.verticalOffset,s=Math.tan(.5*t.camera.fovY)/(.5*t.camera.fullViewport[3]),a=t.camera.pixelRatio||1;return e(i,c*a,s,l,o)})))}export{a as VerticalOffset,f as addVerticalOffset};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,kCAAlB;AAAqD,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,qCAAlB;AAAwD,SAAOC,qBAAqB,IAAIC,CAAhC,EAAkCC,iCAAiC,IAAIC,CAAvE,QAA6E,uCAA7E;AAAqH,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,sBAAlC;AAAyD,SAAOC,iBAAiB,IAAIR,CAA5B,QAAkC,0CAAlC;AAA6E,SAAOS,IAAI,IAAIX,CAAf,QAAqB,mCAArB;;AAAyD,SAASY,CAAT,CAAWX,CAAX,EAAaE,CAAb,EAAe;EAAC,MAAMD,CAAC,GAACD,CAAC,CAACY,MAAV;EAAiBV,CAAC,CAACW,iBAAF,IAAqBC,CAAC,CAACb,CAAD,CAAD,EAAKC,CAAC,CAACa,wBAAF,KAA6Bf,CAAC,CAACgB,OAAF,CAAUZ,CAAV,GAAaE,CAAC,CAACL,CAAD,CAAd,EAAkBO,CAAC,CAACR,CAAC,CAACY,MAAH,EAAUV,CAAV,CAAhD,CAAL,EAAmED,CAAC,CAACgB,IAAF,CAAOC,GAAP,CAAWnB,CAAE;AACviB;AACA;AACA,UAAUG,CAAC,CAACiB,SAAF,GAAYpB,CAAE,uDAAd,GAAqEA,CAAE,yCAAyC;AAC1H,UAAUG,CAAC,CAACa,wBAAF,GAA2BhB,CAAE;AACvC;AACA,+JAFU,GAEsJA,CAAE;AAClK,iEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAhB0hB,CAAxF,IAgB1bE,CAAC,CAACgB,IAAF,CAAOC,GAAP,CAAWnB,CAAE,8EAAb,CAhB0b;AAgB9V;;AAAA,MAAMqB,CAAC,GAAClB,CAAC,EAAT;;AAAY,SAASY,CAAT,CAAWZ,CAAX,EAAa;EAACA,CAAC,CAACmB,QAAF,CAAWH,GAAX,CAAe,IAAIjB,CAAJ,CAAM,gBAAN,EAAwB,CAACC,CAAD,EAAGE,CAAH,KAAO;IAAC,MAAK;MAACkB,cAAc,EAAChB,CAAhB;MAAkBiB,cAAc,EAACf,CAAjC;MAAmCgB,YAAY,EAACvB;IAAhD,IAAmDC,CAAC,CAACuB,cAA1D;IAAA,MAAyE1B,CAAC,GAAC2B,IAAI,CAACC,GAAL,CAAS,KAAGvB,CAAC,CAACwB,MAAF,CAASC,IAArB,KAA4B,KAAGzB,CAAC,CAACwB,MAAF,CAASE,YAAT,CAAsB,CAAtB,CAA/B,CAA3E;IAAA,MAAoInB,CAAC,GAACP,CAAC,CAACwB,MAAF,CAASG,UAAT,IAAqB,CAA3J;IAA6J,OAAO/B,CAAC,CAACoB,CAAD,EAAGnB,CAAC,GAACU,CAAL,EAAOZ,CAAP,EAASO,CAAT,EAAWE,CAAX,CAAR;EAAsB,CAAnN,CAAf;AAAsO;;AAAA,SAAOG,CAAC,IAAIqB,cAAZ,EAA2BlB,CAAC,IAAImB,iBAAhC"},"metadata":{},"sourceType":"module"}