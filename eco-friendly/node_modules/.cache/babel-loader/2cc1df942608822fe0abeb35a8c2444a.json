{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport t from \"../../../../core/Error.js\";\nimport has from \"../../../../core/has.js\";\nimport e from \"../../../../core/Logger.js\";\nimport { isNone as i, mapMany as s, isSome as r, applySome as a, unwrap as d, forEachSome as h, mapOr as n, unwrapOr as o } from \"../../../../core/maybe.js\";\nimport { createResolver as u } from \"../../../../core/promiseUtils.js\";\nimport { ATTRIBUTE_DATA_VV as l, TEXTURE_BINDING_ATTRIBUTE_DATA_0 as p, TEXTURE_BINDING_ATTRIBUTE_DATA_1 as x, TEXTURE_BINDING_ATTRIBUTE_DATA_2 as _, TEXTURE_BINDING_ATTRIBUTE_DATA_3 as g, TEXTURE_BINDING_ATTRIBUTE_DATA_4 as c, TEXTURE_BINDING_ATTRIBUTE_DATA_5 as T, TEXTURE_BINDING_GPGPU as f, ATTRIBUTE_DATA_FILTER_FLAGS as b, ATTRIBUTE_DATA_GPGPU as m, ATTRIBUTE_DATA_ANIMATION as y, ATTRIBUTE_DATA_DD1 as w } from \"./definitions.js\";\nimport { getDisplayIdTexel as z } from \"./DisplayId.js\";\nimport { getPixelArrayCtor as E, getPixelBytes as U } from \"./Utils.js\";\nimport { createDebugLogger as D, DEBUG_ATTR_UPDATES as S } from \"./util/debug.js\";\nimport { TextureWrapMode as A, PixelFormat as j, PixelType as k, TextureSamplingMode as M, TextureType as N, TargetType as O, DepthStencilTargetType as F } from \"../../../webgl/enums.js\";\nimport { FramebufferObject as R } from \"../../../webgl/FramebufferObject.js\";\nimport { Texture as v } from \"../../../webgl/Texture.js\";\nconst B = e.getLogger(\"esri.views.2d.engine.webgl.AttributeStoreView\"),\n      V = D(S, B);\n\nclass L {\n  constructor(t, e, i) {\n    this._texture = null, this._lastTexture = null, this._fbos = {}, this.texelSize = 4;\n    const {\n      buffer: s,\n      pixelType: r,\n      textureOnly: a\n    } = t,\n          h = E(r);\n    this.shared = i, this.pixelType = r, this.size = e, this.textureOnly = a, a || (this.data = new h(d(s))), this._resetRange();\n  }\n\n  destroy() {\n    a(this._texture, t => t.dispose());\n\n    for (const t in this._fbos) a(this._fbos[t], e => {\n      \"0\" === t && e.detachColorTexture(), e.dispose();\n    }), this._fbos[t] = null;\n\n    this._texture = null;\n  }\n\n  get _textureDesc() {\n    return {\n      target: N.TEXTURE_2D,\n      wrapMode: A.CLAMP_TO_EDGE,\n      pixelFormat: j.RGBA,\n      dataType: this.pixelType,\n      samplingMode: M.NEAREST,\n      width: this.size,\n      height: this.size\n    };\n  }\n\n  setData(t, e, i) {\n    const s = z(t),\n          r = d(this.data),\n          a = s * this.texelSize + e;\n    !r || a >= r.length || (r[a] = i, this.dirtyStart = Math.min(this.dirtyStart, s), this.dirtyEnd = Math.max(this.dirtyEnd, s));\n  }\n\n  getData(t, e) {\n    if (i(this.data)) return null;\n    const s = z(t) * this.texelSize + e;\n    return !this.data || s >= this.data.length ? null : this.data[s];\n  }\n\n  getTexture(t) {\n    return o(this._texture, () => this._initTexture(t));\n  }\n\n  getFBO(t, e = 0) {\n    if (i(this._fbos[e])) {\n      const i = {\n        colorTarget: O.TEXTURE,\n        depthStencilTarget: F.NONE\n      },\n            s = 0 === e ? this.getTexture(t) : this._textureDesc;\n      this._fbos[e] = new R(t, i, s);\n    }\n\n    return this._fbos[e];\n  }\n\n  get locked() {\n    return !(this.pixelType !== k.UNSIGNED_BYTE || !this.shared || this.textureOnly || !has(\"esri-atomics\") || !this.data) && 1 === Atomics.load(this.data, 0);\n  }\n\n  get hasDirty() {\n    const t = this.dirtyStart;\n    return this.dirtyEnd >= t;\n  }\n\n  updateTexture(e, i) {\n    if (!this.locked) {\n      try {\n        const i = this.dirtyStart,\n              s = this.dirtyEnd;\n        if (!this.hasDirty) return;\n\n        this._resetRange();\n\n        const r = d(this.data).buffer,\n              a = this.getTexture(e),\n              h = 4,\n              n = (i - i % this.size) / this.size,\n              o = (s - s % this.size) / this.size,\n              u = n,\n              l = this.size,\n              p = o,\n              x = n * this.size * h,\n              _ = (l + p * this.size) * h - x,\n              g = E(this.pixelType),\n              c = new g(r, x * g.BYTES_PER_ELEMENT, _),\n              T = this.size,\n              f = p - u + 1;\n\n        if (f > this.size) return void B.error(new t(\"mapview-webgl\", \"Out-of-bounds index when updating AttributeData\"));\n        a.updateData(0, 0, u, T, f, c);\n      } catch (s) {}\n\n      i();\n    }\n  }\n\n  update(t) {\n    const {\n      data: e,\n      start: i,\n      end: s\n    } = t;\n\n    if (r(e)) {\n      const s = this.data,\n            r = i * this.texelSize;\n\n      for (let i = 0; i < e.length; i++) {\n        const a = 1 << i % this.texelSize;\n        t.layout & a && (s[r + i] = e[i]);\n      }\n    }\n\n    this.dirtyStart = Math.min(this.dirtyStart, i), this.dirtyEnd = Math.max(this.dirtyEnd, s);\n  }\n\n  resize(t, e) {\n    const i = this.size;\n    if (this.size = e, this.textureOnly) return void (i !== this.size && (this._lastTexture = this._texture, this._texture = null));\n    const s = E(this.pixelType);\n    this.destroy(), this.data = new s(d(t.buffer));\n  }\n\n  _resetRange() {\n    this.dirtyStart = 2147483647, this.dirtyEnd = 0;\n  }\n\n  _initTexture(t) {\n    const e = new v(t, this._textureDesc, o(this.data, void 0));\n\n    if (r(this._lastTexture) && this._fbos[0]) {\n      const i = this._lastTexture.descriptor.width,\n            s = this._lastTexture.descriptor.height,\n            r = this._lastTexture.descriptor.dataType,\n            a = this._lastTexture.descriptor.pixelFormat,\n            d = this.getFBO(t),\n            h = U(r),\n            n = new (E(r))(new ArrayBuffer(i * s * h * this.texelSize)),\n            o = t.getBoundFramebufferObject(),\n            {\n        x: u,\n        y: l,\n        width: p,\n        height: x\n      } = t.getViewport();\n      t.bindFramebuffer(d), d.readPixels(0, 0, i, s, a, r, n), e.updateData(0, 0, 0, 2 * i, s / 2, n), t.setViewport(u, l, p, x), t.bindFramebuffer(o);\n    }\n\n    return this.destroy(), this._texture = e, this._texture;\n  }\n\n}\n\nclass G {\n  constructor(t) {\n    this._onUpdate = t, this._initialized = !1, this._forceNextUpload = !1, this._locked = !1;\n  }\n\n  initialize(t) {\n    const {\n      blocks: e,\n      shared: a,\n      size: d\n    } = t;\n    if (this.shared = a, this.size = d, V(\"Initializing AttributeStoreView\", t), i(this._data)) this._data = s(e, t => new L(t, d, a));else for (let s = 0; s < this._data.length; s++) {\n      const t = this._data[s],\n            h = e[s];\n      r(h) && (i(t) ? this._data[s] = new L(h, d, a) : t.resize(h, d));\n    }\n    this._initialized = !0;\n  }\n\n  destroy() {\n    a(this._data, t => s(t, t => t.destroy())), a(this._defaultTexture, t => t.dispose());\n  }\n\n  isEmpty() {\n    const t = this._data;\n    return i(t);\n  }\n\n  isUpdating() {\n    const t = r(this._pendingAttributeUpdate),\n          e = t;\n    return has(\"esri-2d-log-updating\") && console.log(`Updating AttributeStoreView ${e}\\n  -> hasPendingUpdate ${t}`), e;\n  }\n\n  getBlock(t) {\n    if (i(this._data)) return null;\n    return this._data[t];\n  }\n\n  setLabelMinZoom(t, e) {\n    this.setData(t, 0, 1, e);\n  }\n\n  getLabelMinZoom(t) {\n    return this.getData(t, 0, 1, 255);\n  }\n\n  getFilterFlags(t) {\n    return this.getData(t, 0, 0, 0);\n  }\n\n  getVVSize(t) {\n    return this.getData(t, l, 0, 0);\n  }\n\n  getData(t, e, s, a) {\n    if (!this._data) return 0;\n    const h = d(this._data)[e];\n    if (i(h)) return 0;\n    const n = h.getData(t, s);\n    return r(n) ? n : a;\n  }\n\n  setData(t, e, i, s) {\n    const r = d(this._data)[e];\n    d(r).setData(t, i, s);\n  }\n\n  lockTextureUpload() {\n    this._locked = !0;\n  }\n\n  unlockTextureUpload() {\n    this._locked = !1;\n  }\n\n  forceTextureUpload() {\n    this._forceNextUpload = !0;\n  }\n\n  async requestUpdate(e) {\n    if (this._pendingAttributeUpdate) return void B.error(new t(\"mapview-webgl\", \"Tried to update attribute data with a pending update\"));\n    const i = u();\n    return V(\"AttributeStoreView Update Requested\", e), this._pendingAttributeUpdate = {\n      data: e,\n      resolver: i\n    }, this._onUpdate(), i.promise;\n  }\n\n  update() {\n    if (this._initialized && r(this._pendingAttributeUpdate)) {\n      has(\"esri-2d-update-debug\") && console.debug(\"AttributeStoreView::update\");\n      const {\n        data: t,\n        resolver: e\n      } = this._pendingAttributeUpdate,\n            i = d(this._data);\n\n      for (let s = 0; s < t.blocks.length; s++) {\n        const e = t.blocks[s],\n              r = i[s];\n        a(r, t => a(e, e => {\n          V(`Updating block ${s}`, e), t.update(e);\n        }));\n      }\n\n      this._pendingAttributeUpdate = null, e(), this._onUpdate();\n    }\n  }\n\n  bindTextures(t, e = !0) {\n    const i = this._getDefaultTexture(t);\n\n    if (!this._initialized) return t.bindTexture(i, p), void (e && (t.bindTexture(i, x), t.bindTexture(i, _), t.bindTexture(i, g), t.bindTexture(i, c), t.bindTexture(i, T), t.bindTexture(i, f)));\n    const s = d(this._data);\n    this._locked && !this._forceNextUpload || (h(s, e => e.updateTexture(t, () => this._onUpdate())), this._forceNextUpload = !1), t.bindTexture(n(s[b], i, e => e.getTexture(t)), p), e && (t.bindTexture(n(s[m], i, e => e.getTexture(t)), f), t.bindTexture(n(s[y], i, e => e.getTexture(t)), x), t.bindTexture(n(s[l], i, e => e.getTexture(t)), _), t.bindTexture(n(s[w], i, e => e.getTexture(t)), g), t.bindTexture(n(s[c], i, e => e.getTexture(t)), c), t.bindTexture(n(s[T], i, e => e.getTexture(t)), T));\n  }\n\n  _getDefaultTexture(t) {\n    if (i(this._defaultTexture)) {\n      const e = {\n        wrapMode: A.CLAMP_TO_EDGE,\n        pixelFormat: j.RGBA,\n        dataType: k.UNSIGNED_BYTE,\n        samplingMode: M.NEAREST,\n        width: 1,\n        height: 1\n      };\n      this._defaultTexture = new v(t, e, new Uint8Array(4));\n    }\n\n    return this._defaultTexture;\n  }\n\n}\n\nexport { G as AttributeStoreView };","map":{"version":3,"names":["t","has","e","isNone","i","mapMany","s","isSome","r","applySome","a","unwrap","d","forEachSome","h","mapOr","n","unwrapOr","o","createResolver","u","ATTRIBUTE_DATA_VV","l","TEXTURE_BINDING_ATTRIBUTE_DATA_0","p","TEXTURE_BINDING_ATTRIBUTE_DATA_1","x","TEXTURE_BINDING_ATTRIBUTE_DATA_2","_","TEXTURE_BINDING_ATTRIBUTE_DATA_3","g","TEXTURE_BINDING_ATTRIBUTE_DATA_4","c","TEXTURE_BINDING_ATTRIBUTE_DATA_5","T","TEXTURE_BINDING_GPGPU","f","ATTRIBUTE_DATA_FILTER_FLAGS","b","ATTRIBUTE_DATA_GPGPU","m","ATTRIBUTE_DATA_ANIMATION","y","ATTRIBUTE_DATA_DD1","w","getDisplayIdTexel","z","getPixelArrayCtor","E","getPixelBytes","U","createDebugLogger","D","DEBUG_ATTR_UPDATES","S","TextureWrapMode","A","PixelFormat","j","PixelType","k","TextureSamplingMode","M","TextureType","N","TargetType","O","DepthStencilTargetType","F","FramebufferObject","R","Texture","v","B","getLogger","V","L","constructor","_texture","_lastTexture","_fbos","texelSize","buffer","pixelType","textureOnly","shared","size","data","_resetRange","destroy","dispose","detachColorTexture","_textureDesc","target","TEXTURE_2D","wrapMode","CLAMP_TO_EDGE","pixelFormat","RGBA","dataType","samplingMode","NEAREST","width","height","setData","length","dirtyStart","Math","min","dirtyEnd","max","getData","getTexture","_initTexture","getFBO","colorTarget","TEXTURE","depthStencilTarget","NONE","locked","UNSIGNED_BYTE","Atomics","load","hasDirty","updateTexture","BYTES_PER_ELEMENT","error","updateData","update","start","end","layout","resize","descriptor","ArrayBuffer","getBoundFramebufferObject","getViewport","bindFramebuffer","readPixels","setViewport","G","_onUpdate","_initialized","_forceNextUpload","_locked","initialize","blocks","_data","_defaultTexture","isEmpty","isUpdating","_pendingAttributeUpdate","console","log","getBlock","setLabelMinZoom","getLabelMinZoom","getFilterFlags","getVVSize","lockTextureUpload","unlockTextureUpload","forceTextureUpload","requestUpdate","resolver","promise","debug","bindTextures","_getDefaultTexture","bindTexture","Uint8Array","AttributeStoreView"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/engine/webgl/AttributeStoreView.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport t from\"../../../../core/Error.js\";import has from\"../../../../core/has.js\";import e from\"../../../../core/Logger.js\";import{isNone as i,mapMany as s,isSome as r,applySome as a,unwrap as d,forEachSome as h,mapOr as n,unwrapOr as o}from\"../../../../core/maybe.js\";import{createResolver as u}from\"../../../../core/promiseUtils.js\";import{ATTRIBUTE_DATA_VV as l,TEXTURE_BINDING_ATTRIBUTE_DATA_0 as p,TEXTURE_BINDING_ATTRIBUTE_DATA_1 as x,TEXTURE_BINDING_ATTRIBUTE_DATA_2 as _,TEXTURE_BINDING_ATTRIBUTE_DATA_3 as g,TEXTURE_BINDING_ATTRIBUTE_DATA_4 as c,TEXTURE_BINDING_ATTRIBUTE_DATA_5 as T,TEXTURE_BINDING_GPGPU as f,ATTRIBUTE_DATA_FILTER_FLAGS as b,ATTRIBUTE_DATA_GPGPU as m,ATTRIBUTE_DATA_ANIMATION as y,ATTRIBUTE_DATA_DD1 as w}from\"./definitions.js\";import{getDisplayIdTexel as z}from\"./DisplayId.js\";import{getPixelArrayCtor as E,getPixelBytes as U}from\"./Utils.js\";import{createDebugLogger as D,DEBUG_ATTR_UPDATES as S}from\"./util/debug.js\";import{TextureWrapMode as A,PixelFormat as j,PixelType as k,TextureSamplingMode as M,TextureType as N,TargetType as O,DepthStencilTargetType as F}from\"../../../webgl/enums.js\";import{FramebufferObject as R}from\"../../../webgl/FramebufferObject.js\";import{Texture as v}from\"../../../webgl/Texture.js\";const B=e.getLogger(\"esri.views.2d.engine.webgl.AttributeStoreView\"),V=D(S,B);class L{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:a}=t,h=E(r);this.shared=i,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new h(d(s))),this._resetRange()}destroy(){a(this._texture,(t=>t.dispose()));for(const t in this._fbos)a(this._fbos[t],(e=>{\"0\"===t&&e.detachColorTexture(),e.dispose()})),this._fbos[t]=null;this._texture=null}get _textureDesc(){return{target:N.TEXTURE_2D,wrapMode:A.CLAMP_TO_EDGE,pixelFormat:j.RGBA,dataType:this.pixelType,samplingMode:M.NEAREST,width:this.size,height:this.size}}setData(t,e,i){const s=z(t),r=d(this.data),a=s*this.texelSize+e;!r||a>=r.length||(r[a]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(i(this.data))return null;const s=z(t)*this.texelSize+e;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(t){return o(this._texture,(()=>this._initTexture(t)))}getFBO(t,e=0){if(i(this._fbos[e])){const i={colorTarget:O.TEXTURE,depthStencilTarget:F.NONE},s=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new R(t,i,s)}return this._fbos[e]}get locked(){return!(this.pixelType!==k.UNSIGNED_BYTE||!this.shared||this.textureOnly||!has(\"esri-atomics\")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(e,i){if(!this.locked){try{const i=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const r=d(this.data).buffer,a=this.getTexture(e),h=4,n=(i-i%this.size)/this.size,o=(s-s%this.size)/this.size,u=n,l=this.size,p=o,x=n*this.size*h,_=(l+p*this.size)*h-x,g=E(this.pixelType),c=new g(r,x*g.BYTES_PER_ELEMENT,_),T=this.size,f=p-u+1;if(f>this.size)return void B.error(new t(\"mapview-webgl\",\"Out-of-bounds index when updating AttributeData\"));a.updateData(0,0,u,T,f,c)}catch(s){}i()}}update(t){const{data:e,start:i,end:s}=t;if(r(e)){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const a=1<<i%this.texelSize;t.layout&a&&(s[r+i]=e[i])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=E(this.pixelType);this.destroy(),this.data=new s(d(t.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new v(t,this._textureDesc,o(this.data,void 0));if(r(this._lastTexture)&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,d=this.getFBO(t),h=U(r),n=new(E(r))(new ArrayBuffer(i*s*h*this.texelSize)),o=t.getBoundFramebufferObject(),{x:u,y:l,width:p,height:x}=t.getViewport();t.bindFramebuffer(d),d.readPixels(0,0,i,s,a,r,n),e.updateData(0,0,0,2*i,s/2,n),t.setViewport(u,l,p,x),t.bindFramebuffer(o)}return this.destroy(),this._texture=e,this._texture}}class G{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:a,size:d}=t;if(this.shared=a,this.size=d,V(\"Initializing AttributeStoreView\",t),i(this._data))this._data=s(e,(t=>new L(t,d,a)));else for(let s=0;s<this._data.length;s++){const t=this._data[s],h=e[s];r(h)&&(i(t)?this._data[s]=new L(h,d,a):t.resize(h,d))}this._initialized=!0}destroy(){a(this._data,(t=>s(t,(t=>t.destroy())))),a(this._defaultTexture,(t=>t.dispose()))}isEmpty(){const t=this._data;return i(t)}isUpdating(){const t=r(this._pendingAttributeUpdate),e=t;return has(\"esri-2d-log-updating\")&&console.log(`Updating AttributeStoreView ${e}\\n  -> hasPendingUpdate ${t}`),e}getBlock(t){if(i(this._data))return null;return this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,l,0,0)}getData(t,e,s,a){if(!this._data)return 0;const h=d(this._data)[e];if(i(h))return 0;const n=h.getData(t,s);return r(n)?n:a}setData(t,e,i,s){const r=d(this._data)[e];d(r).setData(t,i,s)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void B.error(new t(\"mapview-webgl\",\"Tried to update attribute data with a pending update\"));const i=u();return V(\"AttributeStoreView Update Requested\",e),this._pendingAttributeUpdate={data:e,resolver:i},this._onUpdate(),i.promise}update(){if(this._initialized&&r(this._pendingAttributeUpdate)){has(\"esri-2d-update-debug\")&&console.debug(\"AttributeStoreView::update\");const{data:t,resolver:e}=this._pendingAttributeUpdate,i=d(this._data);for(let s=0;s<t.blocks.length;s++){const e=t.blocks[s],r=i[s];a(r,(t=>a(e,(e=>{V(`Updating block ${s}`,e),t.update(e)}))))}this._pendingAttributeUpdate=null,e(),this._onUpdate()}}bindTextures(t,e=!0){const i=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(i,p),void(e&&(t.bindTexture(i,x),t.bindTexture(i,_),t.bindTexture(i,g),t.bindTexture(i,c),t.bindTexture(i,T),t.bindTexture(i,f)));const s=d(this._data);this._locked&&!this._forceNextUpload||(h(s,(e=>e.updateTexture(t,(()=>this._onUpdate())))),this._forceNextUpload=!1),t.bindTexture(n(s[b],i,(e=>e.getTexture(t))),p),e&&(t.bindTexture(n(s[m],i,(e=>e.getTexture(t))),f),t.bindTexture(n(s[y],i,(e=>e.getTexture(t))),x),t.bindTexture(n(s[l],i,(e=>e.getTexture(t))),_),t.bindTexture(n(s[w],i,(e=>e.getTexture(t))),g),t.bindTexture(n(s[c],i,(e=>e.getTexture(t))),c),t.bindTexture(n(s[T],i,(e=>e.getTexture(t))),T))}_getDefaultTexture(t){if(i(this._defaultTexture)){const e={wrapMode:A.CLAMP_TO_EDGE,pixelFormat:j.RGBA,dataType:k.UNSIGNED_BYTE,samplingMode:M.NEAREST,width:1,height:1};this._defaultTexture=new v(t,e,new Uint8Array(4))}return this._defaultTexture}}export{G as AttributeStoreView};\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,2BAAb;AAAyC,OAAOC,GAAP,MAAe,yBAAf;AAAyC,OAAOC,CAAP,MAAa,4BAAb;AAA0C,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,OAAO,IAAIC,CAA9B,EAAgCC,MAAM,IAAIC,CAA1C,EAA4CC,SAAS,IAAIC,CAAzD,EAA2DC,MAAM,IAAIC,CAArE,EAAuEC,WAAW,IAAIC,CAAtF,EAAwFC,KAAK,IAAIC,CAAjG,EAAmGC,QAAQ,IAAIC,CAA/G,QAAqH,2BAArH;AAAiJ,SAAOC,cAAc,IAAIC,CAAzB,QAA+B,kCAA/B;AAAkE,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,gCAAgC,IAAIC,CAAlE,EAAoEC,gCAAgC,IAAIC,CAAxG,EAA0GC,gCAAgC,IAAIC,CAA9I,EAAgJC,gCAAgC,IAAIC,CAApL,EAAsLC,gCAAgC,IAAIC,CAA1N,EAA4NC,gCAAgC,IAAIC,CAAhQ,EAAkQC,qBAAqB,IAAIC,CAA3R,EAA6RC,2BAA2B,IAAIC,CAA5T,EAA8TC,oBAAoB,IAAIC,CAAtV,EAAwVC,wBAAwB,IAAIC,CAApX,EAAsXC,kBAAkB,IAAIC,CAA5Y,QAAkZ,kBAAlZ;AAAqa,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,gBAAlC;AAAmD,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,aAAa,IAAIC,CAA/C,QAAqD,YAArD;AAAkE,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,kBAAkB,IAAIC,CAApD,QAA0D,iBAA1D;AAA4E,SAAOC,eAAe,IAAIC,CAA1B,EAA4BC,WAAW,IAAIC,CAA3C,EAA6CC,SAAS,IAAIC,CAA1D,EAA4DC,mBAAmB,IAAIC,CAAnF,EAAqFC,WAAW,IAAIC,CAApG,EAAsGC,UAAU,IAAIC,CAApH,EAAsHC,sBAAsB,IAAIC,CAAhJ,QAAsJ,yBAAtJ;AAAgL,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,qCAAlC;AAAwE,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,2BAAxB;AAAoD,MAAMC,CAAC,GAACvE,CAAC,CAACwE,SAAF,CAAY,+CAAZ,CAAR;AAAA,MAAqEC,CAAC,GAACvB,CAAC,CAACE,CAAD,EAAGmB,CAAH,CAAxE;;AAA8E,MAAMG,CAAN,CAAO;EAACC,WAAW,CAAC7E,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;IAAC,KAAK0E,QAAL,GAAc,IAAd,EAAmB,KAAKC,YAAL,GAAkB,IAArC,EAA0C,KAAKC,KAAL,GAAW,EAArD,EAAwD,KAAKC,SAAL,GAAe,CAAvE;IAAyE,MAAK;MAACC,MAAM,EAAC5E,CAAR;MAAU6E,SAAS,EAAC3E,CAApB;MAAsB4E,WAAW,EAAC1E;IAAlC,IAAqCV,CAA1C;IAAA,MAA4Cc,CAAC,GAACkC,CAAC,CAACxC,CAAD,CAA/C;IAAmD,KAAK6E,MAAL,GAAYjF,CAAZ,EAAc,KAAK+E,SAAL,GAAe3E,CAA7B,EAA+B,KAAK8E,IAAL,GAAUpF,CAAzC,EAA2C,KAAKkF,WAAL,GAAiB1E,CAA5D,EAA8DA,CAAC,KAAG,KAAK6E,IAAL,GAAU,IAAIzE,CAAJ,CAAMF,CAAC,CAACN,CAAD,CAAP,CAAb,CAA/D,EAAyF,KAAKkF,WAAL,EAAzF;EAA4G;;EAAAC,OAAO,GAAE;IAAC/E,CAAC,CAAC,KAAKoE,QAAN,EAAgB9E,CAAC,IAAEA,CAAC,CAAC0F,OAAF,EAAnB,CAAD;;IAAkC,KAAI,MAAM1F,CAAV,IAAe,KAAKgF,KAApB,EAA0BtE,CAAC,CAAC,KAAKsE,KAAL,CAAWhF,CAAX,CAAD,EAAgBE,CAAC,IAAE;MAAC,QAAMF,CAAN,IAASE,CAAC,CAACyF,kBAAF,EAAT,EAAgCzF,CAAC,CAACwF,OAAF,EAAhC;IAA4C,CAAhE,CAAD,EAAoE,KAAKV,KAAL,CAAWhF,CAAX,IAAc,IAAlF;;IAAuF,KAAK8E,QAAL,GAAc,IAAd;EAAmB;;EAAgB,IAAZc,YAAY,GAAE;IAAC,OAAM;MAACC,MAAM,EAAC7B,CAAC,CAAC8B,UAAV;MAAqBC,QAAQ,EAACvC,CAAC,CAACwC,aAAhC;MAA8CC,WAAW,EAACvC,CAAC,CAACwC,IAA5D;MAAiEC,QAAQ,EAAC,KAAKhB,SAA/E;MAAyFiB,YAAY,EAACtC,CAAC,CAACuC,OAAxG;MAAgHC,KAAK,EAAC,KAAKhB,IAA3H;MAAgIiB,MAAM,EAAC,KAAKjB;IAA5I,CAAN;EAAwJ;;EAAAkB,OAAO,CAACxG,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;IAAC,MAAME,CAAC,GAACwC,CAAC,CAAC9C,CAAD,CAAT;IAAA,MAAaQ,CAAC,GAACI,CAAC,CAAC,KAAK2E,IAAN,CAAhB;IAAA,MAA4B7E,CAAC,GAACJ,CAAC,GAAC,KAAK2E,SAAP,GAAiB/E,CAA/C;IAAiD,CAACM,CAAD,IAAIE,CAAC,IAAEF,CAAC,CAACiG,MAAT,KAAkBjG,CAAC,CAACE,CAAD,CAAD,GAAKN,CAAL,EAAO,KAAKsG,UAAL,GAAgBC,IAAI,CAACC,GAAL,CAAS,KAAKF,UAAd,EAAyBpG,CAAzB,CAAvB,EAAmD,KAAKuG,QAAL,GAAcF,IAAI,CAACG,GAAL,CAAS,KAAKD,QAAd,EAAuBvG,CAAvB,CAAnF;EAA8G;;EAAAyG,OAAO,CAAC/G,CAAD,EAAGE,CAAH,EAAK;IAAC,IAAGE,CAAC,CAAC,KAAKmF,IAAN,CAAJ,EAAgB,OAAO,IAAP;IAAY,MAAMjF,CAAC,GAACwC,CAAC,CAAC9C,CAAD,CAAD,GAAK,KAAKiF,SAAV,GAAoB/E,CAA5B;IAA8B,OAAM,CAAC,KAAKqF,IAAN,IAAYjF,CAAC,IAAE,KAAKiF,IAAL,CAAUkB,MAAzB,GAAgC,IAAhC,GAAqC,KAAKlB,IAAL,CAAUjF,CAAV,CAA3C;EAAwD;;EAAA0G,UAAU,CAAChH,CAAD,EAAG;IAAC,OAAOkB,CAAC,CAAC,KAAK4D,QAAN,EAAgB,MAAI,KAAKmC,YAAL,CAAkBjH,CAAlB,CAApB,CAAR;EAAmD;;EAAAkH,MAAM,CAAClH,CAAD,EAAGE,CAAC,GAAC,CAAL,EAAO;IAAC,IAAGE,CAAC,CAAC,KAAK4E,KAAL,CAAW9E,CAAX,CAAD,CAAJ,EAAoB;MAAC,MAAME,CAAC,GAAC;QAAC+G,WAAW,EAACjD,CAAC,CAACkD,OAAf;QAAuBC,kBAAkB,EAACjD,CAAC,CAACkD;MAA5C,CAAR;MAAA,MAA0DhH,CAAC,GAAC,MAAIJ,CAAJ,GAAM,KAAK8G,UAAL,CAAgBhH,CAAhB,CAAN,GAAyB,KAAK4F,YAA1F;MAAuG,KAAKZ,KAAL,CAAW9E,CAAX,IAAc,IAAIoE,CAAJ,CAAMtE,CAAN,EAAQI,CAAR,EAAUE,CAAV,CAAd;IAA2B;;IAAA,OAAO,KAAK0E,KAAL,CAAW9E,CAAX,CAAP;EAAqB;;EAAU,IAANqH,MAAM,GAAE;IAAC,OAAM,EAAE,KAAKpC,SAAL,KAAiBvB,CAAC,CAAC4D,aAAnB,IAAkC,CAAC,KAAKnC,MAAxC,IAAgD,KAAKD,WAArD,IAAkE,CAACnF,GAAG,CAAC,cAAD,CAAtE,IAAwF,CAAC,KAAKsF,IAAhG,KAAuG,MAAIkC,OAAO,CAACC,IAAR,CAAa,KAAKnC,IAAlB,EAAuB,CAAvB,CAAjH;EAA2I;;EAAY,IAARoC,QAAQ,GAAE;IAAC,MAAM3H,CAAC,GAAC,KAAK0G,UAAb;IAAwB,OAAO,KAAKG,QAAL,IAAe7G,CAAtB;EAAwB;;EAAA4H,aAAa,CAAC1H,CAAD,EAAGE,CAAH,EAAK;IAAC,IAAG,CAAC,KAAKmH,MAAT,EAAgB;MAAC,IAAG;QAAC,MAAMnH,CAAC,GAAC,KAAKsG,UAAb;QAAA,MAAwBpG,CAAC,GAAC,KAAKuG,QAA/B;QAAwC,IAAG,CAAC,KAAKc,QAAT,EAAkB;;QAAO,KAAKnC,WAAL;;QAAmB,MAAMhF,CAAC,GAACI,CAAC,CAAC,KAAK2E,IAAN,CAAD,CAAaL,MAArB;QAAA,MAA4BxE,CAAC,GAAC,KAAKsG,UAAL,CAAgB9G,CAAhB,CAA9B;QAAA,MAAiDY,CAAC,GAAC,CAAnD;QAAA,MAAqDE,CAAC,GAAC,CAACZ,CAAC,GAACA,CAAC,GAAC,KAAKkF,IAAV,IAAgB,KAAKA,IAA5E;QAAA,MAAiFpE,CAAC,GAAC,CAACZ,CAAC,GAACA,CAAC,GAAC,KAAKgF,IAAV,IAAgB,KAAKA,IAAxG;QAAA,MAA6GlE,CAAC,GAACJ,CAA/G;QAAA,MAAiHM,CAAC,GAAC,KAAKgE,IAAxH;QAAA,MAA6H9D,CAAC,GAACN,CAA/H;QAAA,MAAiIQ,CAAC,GAACV,CAAC,GAAC,KAAKsE,IAAP,GAAYxE,CAA/I;QAAA,MAAiJc,CAAC,GAAC,CAACN,CAAC,GAACE,CAAC,GAAC,KAAK8D,IAAV,IAAgBxE,CAAhB,GAAkBY,CAArK;QAAA,MAAuKI,CAAC,GAACkB,CAAC,CAAC,KAAKmC,SAAN,CAA1K;QAAA,MAA2LnD,CAAC,GAAC,IAAIF,CAAJ,CAAMtB,CAAN,EAAQkB,CAAC,GAACI,CAAC,CAAC+F,iBAAZ,EAA8BjG,CAA9B,CAA7L;QAAA,MAA8NM,CAAC,GAAC,KAAKoD,IAArO;QAAA,MAA0OlD,CAAC,GAACZ,CAAC,GAACJ,CAAF,GAAI,CAAhP;;QAAkP,IAAGgB,CAAC,GAAC,KAAKkD,IAAV,EAAe,OAAO,KAAKb,CAAC,CAACqD,KAAF,CAAQ,IAAI9H,CAAJ,CAAM,eAAN,EAAsB,iDAAtB,CAAR,CAAZ;QAA8FU,CAAC,CAACqH,UAAF,CAAa,CAAb,EAAe,CAAf,EAAiB3G,CAAjB,EAAmBc,CAAnB,EAAqBE,CAArB,EAAuBJ,CAAvB;MAA0B,CAAjd,CAAid,OAAM1B,CAAN,EAAQ,CAAE;;MAAAF,CAAC;IAAG;EAAC;;EAAA4H,MAAM,CAAChI,CAAD,EAAG;IAAC,MAAK;MAACuF,IAAI,EAACrF,CAAN;MAAQ+H,KAAK,EAAC7H,CAAd;MAAgB8H,GAAG,EAAC5H;IAApB,IAAuBN,CAA5B;;IAA8B,IAAGQ,CAAC,CAACN,CAAD,CAAJ,EAAQ;MAAC,MAAMI,CAAC,GAAC,KAAKiF,IAAb;MAAA,MAAkB/E,CAAC,GAACJ,CAAC,GAAC,KAAK6E,SAA3B;;MAAqC,KAAI,IAAI7E,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAC,CAACuG,MAAhB,EAAuBrG,CAAC,EAAxB,EAA2B;QAAC,MAAMM,CAAC,GAAC,KAAGN,CAAC,GAAC,KAAK6E,SAAlB;QAA4BjF,CAAC,CAACmI,MAAF,GAASzH,CAAT,KAAaJ,CAAC,CAACE,CAAC,GAACJ,CAAH,CAAD,GAAOF,CAAC,CAACE,CAAD,CAArB;MAA0B;IAAC;;IAAA,KAAKsG,UAAL,GAAgBC,IAAI,CAACC,GAAL,CAAS,KAAKF,UAAd,EAAyBtG,CAAzB,CAAhB,EAA4C,KAAKyG,QAAL,GAAcF,IAAI,CAACG,GAAL,CAAS,KAAKD,QAAd,EAAuBvG,CAAvB,CAA1D;EAAoF;;EAAA8H,MAAM,CAACpI,CAAD,EAAGE,CAAH,EAAK;IAAC,MAAME,CAAC,GAAC,KAAKkF,IAAb;IAAkB,IAAG,KAAKA,IAAL,GAAUpF,CAAV,EAAY,KAAKkF,WAApB,EAAgC,OAAO,MAAKhF,CAAC,KAAG,KAAKkF,IAAT,KAAgB,KAAKP,YAAL,GAAkB,KAAKD,QAAvB,EAAgC,KAAKA,QAAL,GAAc,IAA9D,CAAL,CAAP;IAAiF,MAAMxE,CAAC,GAAC0C,CAAC,CAAC,KAAKmC,SAAN,CAAT;IAA0B,KAAKM,OAAL,IAAe,KAAKF,IAAL,GAAU,IAAIjF,CAAJ,CAAMM,CAAC,CAACZ,CAAC,CAACkF,MAAH,CAAP,CAAzB;EAA4C;;EAAAM,WAAW,GAAE;IAAC,KAAKkB,UAAL,GAAgB,UAAhB,EAA2B,KAAKG,QAAL,GAAc,CAAzC;EAA2C;;EAAAI,YAAY,CAACjH,CAAD,EAAG;IAAC,MAAME,CAAC,GAAC,IAAIsE,CAAJ,CAAMxE,CAAN,EAAQ,KAAK4F,YAAb,EAA0B1E,CAAC,CAAC,KAAKqE,IAAN,EAAW,KAAK,CAAhB,CAA3B,CAAR;;IAAuD,IAAG/E,CAAC,CAAC,KAAKuE,YAAN,CAAD,IAAsB,KAAKC,KAAL,CAAW,CAAX,CAAzB,EAAuC;MAAC,MAAM5E,CAAC,GAAC,KAAK2E,YAAL,CAAkBsD,UAAlB,CAA6B/B,KAArC;MAAA,MAA2ChG,CAAC,GAAC,KAAKyE,YAAL,CAAkBsD,UAAlB,CAA6B9B,MAA1E;MAAA,MAAiF/F,CAAC,GAAC,KAAKuE,YAAL,CAAkBsD,UAAlB,CAA6BlC,QAAhH;MAAA,MAAyHzF,CAAC,GAAC,KAAKqE,YAAL,CAAkBsD,UAAlB,CAA6BpC,WAAxJ;MAAA,MAAoKrF,CAAC,GAAC,KAAKsG,MAAL,CAAYlH,CAAZ,CAAtK;MAAA,MAAqLc,CAAC,GAACoC,CAAC,CAAC1C,CAAD,CAAxL;MAAA,MAA4LQ,CAAC,GAAC,KAAIgC,CAAC,CAACxC,CAAD,CAAL,EAAU,IAAI8H,WAAJ,CAAgBlI,CAAC,GAACE,CAAF,GAAIQ,CAAJ,GAAM,KAAKmE,SAA3B,CAAV,CAA9L;MAAA,MAA+O/D,CAAC,GAAClB,CAAC,CAACuI,yBAAF,EAAjP;MAAA,MAA+Q;QAAC7G,CAAC,EAACN,CAAH;QAAKsB,CAAC,EAACpB,CAAP;QAASgF,KAAK,EAAC9E,CAAf;QAAiB+E,MAAM,EAAC7E;MAAxB,IAA2B1B,CAAC,CAACwI,WAAF,EAA1S;MAA0TxI,CAAC,CAACyI,eAAF,CAAkB7H,CAAlB,GAAqBA,CAAC,CAAC8H,UAAF,CAAa,CAAb,EAAe,CAAf,EAAiBtI,CAAjB,EAAmBE,CAAnB,EAAqBI,CAArB,EAAuBF,CAAvB,EAAyBQ,CAAzB,CAArB,EAAiDd,CAAC,CAAC6H,UAAF,CAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,IAAE3H,CAArB,EAAuBE,CAAC,GAAC,CAAzB,EAA2BU,CAA3B,CAAjD,EAA+EhB,CAAC,CAAC2I,WAAF,CAAcvH,CAAd,EAAgBE,CAAhB,EAAkBE,CAAlB,EAAoBE,CAApB,CAA/E,EAAsG1B,CAAC,CAACyI,eAAF,CAAkBvH,CAAlB,CAAtG;IAA2H;;IAAA,OAAO,KAAKuE,OAAL,IAAe,KAAKX,QAAL,GAAc5E,CAA7B,EAA+B,KAAK4E,QAA3C;EAAoD;;AAA77F;;AAA87F,MAAM8D,CAAN,CAAO;EAAC/D,WAAW,CAAC7E,CAAD,EAAG;IAAC,KAAK6I,SAAL,GAAe7I,CAAf,EAAiB,KAAK8I,YAAL,GAAkB,CAAC,CAApC,EAAsC,KAAKC,gBAAL,GAAsB,CAAC,CAA7D,EAA+D,KAAKC,OAAL,GAAa,CAAC,CAA7E;EAA+E;;EAAAC,UAAU,CAACjJ,CAAD,EAAG;IAAC,MAAK;MAACkJ,MAAM,EAAChJ,CAAR;MAAUmF,MAAM,EAAC3E,CAAjB;MAAmB4E,IAAI,EAAC1E;IAAxB,IAA2BZ,CAAhC;IAAkC,IAAG,KAAKqF,MAAL,GAAY3E,CAAZ,EAAc,KAAK4E,IAAL,GAAU1E,CAAxB,EAA0B+D,CAAC,CAAC,iCAAD,EAAmC3E,CAAnC,CAA3B,EAAiEI,CAAC,CAAC,KAAK+I,KAAN,CAArE,EAAkF,KAAKA,KAAL,GAAW7I,CAAC,CAACJ,CAAD,EAAIF,CAAC,IAAE,IAAI4E,CAAJ,CAAM5E,CAAN,EAAQY,CAAR,EAAUF,CAAV,CAAP,CAAZ,CAAlF,KAAyH,KAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAK6I,KAAL,CAAW1C,MAAzB,EAAgCnG,CAAC,EAAjC,EAAoC;MAAC,MAAMN,CAAC,GAAC,KAAKmJ,KAAL,CAAW7I,CAAX,CAAR;MAAA,MAAsBQ,CAAC,GAACZ,CAAC,CAACI,CAAD,CAAzB;MAA6BE,CAAC,CAACM,CAAD,CAAD,KAAOV,CAAC,CAACJ,CAAD,CAAD,GAAK,KAAKmJ,KAAL,CAAW7I,CAAX,IAAc,IAAIsE,CAAJ,CAAM9D,CAAN,EAAQF,CAAR,EAAUF,CAAV,CAAnB,GAAgCV,CAAC,CAACoI,MAAF,CAAStH,CAAT,EAAWF,CAAX,CAAvC;IAAsD;IAAA,KAAKkI,YAAL,GAAkB,CAAC,CAAnB;EAAqB;;EAAArD,OAAO,GAAE;IAAC/E,CAAC,CAAC,KAAKyI,KAAN,EAAanJ,CAAC,IAAEM,CAAC,CAACN,CAAD,EAAIA,CAAC,IAAEA,CAAC,CAACyF,OAAF,EAAP,CAAjB,CAAD,EAAyC/E,CAAC,CAAC,KAAK0I,eAAN,EAAuBpJ,CAAC,IAAEA,CAAC,CAAC0F,OAAF,EAA1B,CAA1C;EAAkF;;EAAA2D,OAAO,GAAE;IAAC,MAAMrJ,CAAC,GAAC,KAAKmJ,KAAb;IAAmB,OAAO/I,CAAC,CAACJ,CAAD,CAAR;EAAY;;EAAAsJ,UAAU,GAAE;IAAC,MAAMtJ,CAAC,GAACQ,CAAC,CAAC,KAAK+I,uBAAN,CAAT;IAAA,MAAwCrJ,CAAC,GAACF,CAA1C;IAA4C,OAAOC,GAAG,CAAC,sBAAD,CAAH,IAA6BuJ,OAAO,CAACC,GAAR,CAAa,+BAA8BvJ,CAAE,2BAA0BF,CAAE,EAAzE,CAA7B,EAAyGE,CAAhH;EAAkH;;EAAAwJ,QAAQ,CAAC1J,CAAD,EAAG;IAAC,IAAGI,CAAC,CAAC,KAAK+I,KAAN,CAAJ,EAAiB,OAAO,IAAP;IAAY,OAAO,KAAKA,KAAL,CAAWnJ,CAAX,CAAP;EAAqB;;EAAA2J,eAAe,CAAC3J,CAAD,EAAGE,CAAH,EAAK;IAAC,KAAKsG,OAAL,CAAaxG,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmBE,CAAnB;EAAsB;;EAAA0J,eAAe,CAAC5J,CAAD,EAAG;IAAC,OAAO,KAAK+G,OAAL,CAAa/G,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,GAAnB,CAAP;EAA+B;;EAAA6J,cAAc,CAAC7J,CAAD,EAAG;IAAC,OAAO,KAAK+G,OAAL,CAAa/G,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAP;EAA6B;;EAAA8J,SAAS,CAAC9J,CAAD,EAAG;IAAC,OAAO,KAAK+G,OAAL,CAAa/G,CAAb,EAAesB,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAP;EAA6B;;EAAAyF,OAAO,CAAC/G,CAAD,EAAGE,CAAH,EAAKI,CAAL,EAAOI,CAAP,EAAS;IAAC,IAAG,CAAC,KAAKyI,KAAT,EAAe,OAAO,CAAP;IAAS,MAAMrI,CAAC,GAACF,CAAC,CAAC,KAAKuI,KAAN,CAAD,CAAcjJ,CAAd,CAAR;IAAyB,IAAGE,CAAC,CAACU,CAAD,CAAJ,EAAQ,OAAO,CAAP;IAAS,MAAME,CAAC,GAACF,CAAC,CAACiG,OAAF,CAAU/G,CAAV,EAAYM,CAAZ,CAAR;IAAuB,OAAOE,CAAC,CAACQ,CAAD,CAAD,GAAKA,CAAL,GAAON,CAAd;EAAgB;;EAAA8F,OAAO,CAACxG,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAOE,CAAP,EAAS;IAAC,MAAME,CAAC,GAACI,CAAC,CAAC,KAAKuI,KAAN,CAAD,CAAcjJ,CAAd,CAAR;IAAyBU,CAAC,CAACJ,CAAD,CAAD,CAAKgG,OAAL,CAAaxG,CAAb,EAAeI,CAAf,EAAiBE,CAAjB;EAAoB;;EAAAyJ,iBAAiB,GAAE;IAAC,KAAKf,OAAL,GAAa,CAAC,CAAd;EAAgB;;EAAAgB,mBAAmB,GAAE;IAAC,KAAKhB,OAAL,GAAa,CAAC,CAAd;EAAgB;;EAAAiB,kBAAkB,GAAE;IAAC,KAAKlB,gBAAL,GAAsB,CAAC,CAAvB;EAAyB;;EAAmB,MAAbmB,aAAa,CAAChK,CAAD,EAAG;IAAC,IAAG,KAAKqJ,uBAAR,EAAgC,OAAO,KAAK9E,CAAC,CAACqD,KAAF,CAAQ,IAAI9H,CAAJ,CAAM,eAAN,EAAsB,sDAAtB,CAAR,CAAZ;IAAmG,MAAMI,CAAC,GAACgB,CAAC,EAAT;IAAY,OAAOuD,CAAC,CAAC,qCAAD,EAAuCzE,CAAvC,CAAD,EAA2C,KAAKqJ,uBAAL,GAA6B;MAAChE,IAAI,EAACrF,CAAN;MAAQiK,QAAQ,EAAC/J;IAAjB,CAAxE,EAA4F,KAAKyI,SAAL,EAA5F,EAA6GzI,CAAC,CAACgK,OAAtH;EAA8H;;EAAApC,MAAM,GAAE;IAAC,IAAG,KAAKc,YAAL,IAAmBtI,CAAC,CAAC,KAAK+I,uBAAN,CAAvB,EAAsD;MAACtJ,GAAG,CAAC,sBAAD,CAAH,IAA6BuJ,OAAO,CAACa,KAAR,CAAc,4BAAd,CAA7B;MAAyE,MAAK;QAAC9E,IAAI,EAACvF,CAAN;QAAQmK,QAAQ,EAACjK;MAAjB,IAAoB,KAAKqJ,uBAA9B;MAAA,MAAsDnJ,CAAC,GAACQ,CAAC,CAAC,KAAKuI,KAAN,CAAzD;;MAAsE,KAAI,IAAI7I,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,CAAC,CAACkJ,MAAF,CAASzC,MAAvB,EAA8BnG,CAAC,EAA/B,EAAkC;QAAC,MAAMJ,CAAC,GAACF,CAAC,CAACkJ,MAAF,CAAS5I,CAAT,CAAR;QAAA,MAAoBE,CAAC,GAACJ,CAAC,CAACE,CAAD,CAAvB;QAA2BI,CAAC,CAACF,CAAD,EAAIR,CAAC,IAAEU,CAAC,CAACR,CAAD,EAAIA,CAAC,IAAE;UAACyE,CAAC,CAAE,kBAAiBrE,CAAE,EAArB,EAAuBJ,CAAvB,CAAD,EAA2BF,CAAC,CAACgI,MAAF,CAAS9H,CAAT,CAA3B;QAAuC,CAA/C,CAAR,CAAD;MAA6D;;MAAA,KAAKqJ,uBAAL,GAA6B,IAA7B,EAAkCrJ,CAAC,EAAnC,EAAsC,KAAK2I,SAAL,EAAtC;IAAuD;EAAC;;EAAAyB,YAAY,CAACtK,CAAD,EAAGE,CAAC,GAAC,CAAC,CAAN,EAAQ;IAAC,MAAME,CAAC,GAAC,KAAKmK,kBAAL,CAAwBvK,CAAxB,CAAR;;IAAmC,IAAG,CAAC,KAAK8I,YAAT,EAAsB,OAAO9I,CAAC,CAACwK,WAAF,CAAcpK,CAAd,EAAgBoB,CAAhB,GAAmB,MAAKtB,CAAC,KAAGF,CAAC,CAACwK,WAAF,CAAcpK,CAAd,EAAgBsB,CAAhB,GAAmB1B,CAAC,CAACwK,WAAF,CAAcpK,CAAd,EAAgBwB,CAAhB,CAAnB,EAAsC5B,CAAC,CAACwK,WAAF,CAAcpK,CAAd,EAAgB0B,CAAhB,CAAtC,EAAyD9B,CAAC,CAACwK,WAAF,CAAcpK,CAAd,EAAgB4B,CAAhB,CAAzD,EAA4EhC,CAAC,CAACwK,WAAF,CAAcpK,CAAd,EAAgB8B,CAAhB,CAA5E,EAA+FlC,CAAC,CAACwK,WAAF,CAAcpK,CAAd,EAAgBgC,CAAhB,CAAlG,CAAN,CAA1B;IAAuJ,MAAM9B,CAAC,GAACM,CAAC,CAAC,KAAKuI,KAAN,CAAT;IAAsB,KAAKH,OAAL,IAAc,CAAC,KAAKD,gBAApB,KAAuCjI,CAAC,CAACR,CAAD,EAAIJ,CAAC,IAAEA,CAAC,CAAC0H,aAAF,CAAgB5H,CAAhB,EAAmB,MAAI,KAAK6I,SAAL,EAAvB,CAAP,CAAD,EAAoD,KAAKE,gBAAL,GAAsB,CAAC,CAAlH,GAAqH/I,CAAC,CAACwK,WAAF,CAAcxJ,CAAC,CAACV,CAAC,CAACgC,CAAD,CAAF,EAAMlC,CAAN,EAASF,CAAC,IAAEA,CAAC,CAAC8G,UAAF,CAAahH,CAAb,CAAZ,CAAf,EAA6CwB,CAA7C,CAArH,EAAqKtB,CAAC,KAAGF,CAAC,CAACwK,WAAF,CAAcxJ,CAAC,CAACV,CAAC,CAACkC,CAAD,CAAF,EAAMpC,CAAN,EAASF,CAAC,IAAEA,CAAC,CAAC8G,UAAF,CAAahH,CAAb,CAAZ,CAAf,EAA6CoC,CAA7C,GAAgDpC,CAAC,CAACwK,WAAF,CAAcxJ,CAAC,CAACV,CAAC,CAACoC,CAAD,CAAF,EAAMtC,CAAN,EAASF,CAAC,IAAEA,CAAC,CAAC8G,UAAF,CAAahH,CAAb,CAAZ,CAAf,EAA6C0B,CAA7C,CAAhD,EAAgG1B,CAAC,CAACwK,WAAF,CAAcxJ,CAAC,CAACV,CAAC,CAACgB,CAAD,CAAF,EAAMlB,CAAN,EAASF,CAAC,IAAEA,CAAC,CAAC8G,UAAF,CAAahH,CAAb,CAAZ,CAAf,EAA6C4B,CAA7C,CAAhG,EAAgJ5B,CAAC,CAACwK,WAAF,CAAcxJ,CAAC,CAACV,CAAC,CAACsC,CAAD,CAAF,EAAMxC,CAAN,EAASF,CAAC,IAAEA,CAAC,CAAC8G,UAAF,CAAahH,CAAb,CAAZ,CAAf,EAA6C8B,CAA7C,CAAhJ,EAAgM9B,CAAC,CAACwK,WAAF,CAAcxJ,CAAC,CAACV,CAAC,CAAC0B,CAAD,CAAF,EAAM5B,CAAN,EAASF,CAAC,IAAEA,CAAC,CAAC8G,UAAF,CAAahH,CAAb,CAAZ,CAAf,EAA6CgC,CAA7C,CAAhM,EAAgPhC,CAAC,CAACwK,WAAF,CAAcxJ,CAAC,CAACV,CAAC,CAAC4B,CAAD,CAAF,EAAM9B,CAAN,EAASF,CAAC,IAAEA,CAAC,CAAC8G,UAAF,CAAahH,CAAb,CAAZ,CAAf,EAA6CkC,CAA7C,CAAnP,CAAtK;EAA0c;;EAAAqI,kBAAkB,CAACvK,CAAD,EAAG;IAAC,IAAGI,CAAC,CAAC,KAAKgJ,eAAN,CAAJ,EAA2B;MAAC,MAAMlJ,CAAC,GAAC;QAAC6F,QAAQ,EAACvC,CAAC,CAACwC,aAAZ;QAA0BC,WAAW,EAACvC,CAAC,CAACwC,IAAxC;QAA6CC,QAAQ,EAACvC,CAAC,CAAC4D,aAAxD;QAAsEpB,YAAY,EAACtC,CAAC,CAACuC,OAArF;QAA6FC,KAAK,EAAC,CAAnG;QAAqGC,MAAM,EAAC;MAA5G,CAAR;MAAuH,KAAK6C,eAAL,GAAqB,IAAI5E,CAAJ,CAAMxE,CAAN,EAAQE,CAAR,EAAU,IAAIuK,UAAJ,CAAe,CAAf,CAAV,CAArB;IAAkD;;IAAA,OAAO,KAAKrB,eAAZ;EAA4B;;AAA30F;;AAA40F,SAAOR,CAAC,IAAI8B,kBAAZ"},"metadata":{},"sourceType":"module"}