{"ast":null,"code":"import Map from \"@arcgis/core/Map\";\nimport View from \"@arcgis/core/views/MapView\";\nimport MapImageLayer from \"@arcgis/core/layers/MapImageLayer\";\nimport BasemapGallery from \"@arcgis/core/widgets/BasemapGallery\";\nimport Expand from \"@arcgis/core/widgets/Expand\";\nimport Basemap from \"@arcgis/core/Basemap\";\nimport Portal from \"@arcgis/core/portal/Portal\";\nimport Compass from \"@arcgis/core/widgets/Compass\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport * as promiseUtils from \"@arcgis/core/core/promiseUtils\";\nimport Print from \"@arcgis/core/widgets/Print\";\nimport * as reactiveUtils from \"@arcgis/core/core/reactiveUtils\";\nexport default {\n  data() {\n    return {};\n  },\n\n  beforeMount() {\n    console.log(reactiveUtils);\n  },\n\n  created() {},\n\n  mounted() {\n    this.initMap();\n  },\n\n  beforeDestroy() {},\n\n  methods: {\n    initMap() {\n      // esriConfig.portalUrl = \"https://linux111.esrichina.com/arcgis\"\n      const m_Map = new Map({\n        basemap: \"topo-vector\"\n      });\n      const view = new View({\n        container: \"viewDiv\",\n        map: m_Map,\n        center: [115, 32],\n        zoom: 5\n      });\n      const compass = new Compass({\n        //指南针\n        view: view\n      });\n      view.ui.add(compass, \"bottom-left\"); //导出地图小组件\n\n      view.when(() => {\n        const print = new Print({\n          view: view,\n          printServiceUrl: \"https://utility.arcgisonline.com/arcgis/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task\"\n        });\n        var printExpand = new Expand({\n          view: view,\n          content: print,\n          expandTooltip: \"导出\"\n        }, \"printMap\");\n      });\n      let layer = new MapImageLayer({\n        url: \"http://localhost:6080/arcgis/rest/services/graduate/MapServer\"\n      }); // layer.portalItem=\"test\"\n\n      var expand = new Expand({\n        //图层集\n        content: new BasemapGallery({\n          view: view,\n          // 设定图层集有哪些图层\n          source: [Basemap.fromId(\"topo-vector\"), Basemap.fromId(\"hybrid\"), Basemap.fromId(\"osm\")] // autocasts to LocalBasemapsSource\n\n        })\n      }, \"BasemapGallery\");\n      expand.expanded = false;\n      m_Map.add(layer); //鹰眼地图定义\n\n      var overviewMap = new Map({\n        basemap: \"hybrid\"\n      }); //鹰眼地图视图\n\n      var mapView = new MapView({\n        container: \"overviewDiv\",\n        map: overviewMap,\n        constraints: {\n          rotationEnabled: false //不允许旋转\n\n        }\n      }); //去掉缩略图的ui\n\n      mapView.ui.components = []; //全图显示\n\n      var extentButton = document.getElementById(\"fullextent-btn\");\n      extentButton.addEventListener(\"click\", () => {\n        FullExtentShow();\n      }); //定义全图显示函数\n\n      function FullExtentShow() {\n        view.center = [110, 30]; //地图中心点\n\n        view.zoom = 4;\n      }\n\n      view.ui.remove('attribution'); // 鹰眼地图监听主地图的extent发生变化\n\n      mapView.when(() => {\n        view.when(() => {\n          setup();\n        });\n      }); //mapView.stationary是判断当前视图是否静止\n\n      var extentDebouncer = promiseUtils.debounce(() => {\n        if (mapView.stationary) {\n          mapView.goTo({\n            center: view.center,\n            scale: view.scale * 2 * Math.max(view.width / mapView.width, view.height / mapView.height)\n          });\n        }\n      });\n\n      function setup() {\n        //设置框体符号\n        const extent2Dgraphic = new Graphic({\n          geometry: null,\n          symbol: {\n            type: \"simple-fill\",\n            color: [0, 0, 0, 0.2],\n            outline: null\n          }\n        });\n        mapView.graphics.add(extent2Dgraphic); //添加设置的填充符号\n\n        reactiveUtils.watch(() => view.extent, //监听底图的全图范围\n        extent => {\n          //当视图静止时，同步鹰眼地图位置\n          extentDebouncer().then(() => {\n            extent2Dgraphic.geometry = extent; //框框的大小是底图的大小\n          });\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;EACAA;IACA;EAGA,CALA;;EAMAC;IACAC;EACA,CARA;;EASAC,WAEA,CAXA;;EAYAC;IACA;EACA,CAdA;;EAeAC,iBACA,CAhBA;;EAiBAC;IACAC;MACA;MACA;QACAC;MADA;MAGA;QACAC,oBADA;QAEAC,UAFA;QAGAC,iBAHA;QAIAC;MAJA;MAMA;QAAA;QACAC;MADA;MAGAA,oCAdA,CAeA;;MACAA;QACA;UACAA,UADA;UAEAC,iBACA;QAHA;QAKA;UACAD,UADA;UAEAE,cAFA;UAGAC;QAHA,GAIA,UAJA;MAKA,CAXA;MAaA;QACAC;MADA,GA7BA,CAgCA;;MACA;QAAA;QACAF;UACAF,UADA;UAEA;UACAK,wFAHA,CAGA;;QAHA;MADA,GAMA,gBANA;MAOAC;MAEAC,iBA1CA,CA2CA;;MACA;QACAZ;MADA,GA5CA,CA+CA;;MACA;QACAC,wBADA;QAEAC,gBAFA;QAGAW;UACAC,sBADA,CACA;;QADA;MAHA,GAhDA,CAuDA;;MACAC,2BAxDA,CA0DA;;MACA;MACAC;QACAC;MAAA,CADA,EA5DA,CA8DA;;MACA;QACAZ,wBADA,CACA;;QACAA;MACA;;MAGAA,8BArEA,CAsEA;;MACAU;QACAV;UACAa;QACA,CAFA;MAGA,CAJA,EAvEA,CA4EA;;MACA;QACA;UACAH;YACAZ,mBADA;YAEAgB;UAFA;QAIA;MACA,CAPA;;MASA;QAEA;QACA;UACAC,cADA;UAEAC;YACAC,mBADA;YAEAC,qBAFA;YAGAC;UAHA;QAFA;QAQAT,sCAXA,CAWA;;QAEAU,oBACA,iBADA,EACA;QACAC;UACA;UACAC;YACAC,kCADA,CACA;UACA,CAFA;QAGA,CAPA;MAQA;IACA;;EA7GA;AAjBA","names":["data","beforeMount","console","created","mounted","beforeDestroy","methods","initMap","basemap","container","map","center","zoom","view","printServiceUrl","content","expandTooltip","url","source","expand","m_Map","constraints","rotationEnabled","mapView","extentButton","FullExtentShow","setup","scale","geometry","symbol","type","color","outline","reactiveUtils","extent","extentDebouncer","extent2Dgraphic"],"sourceRoot":"src/views","sources":["HomeMap.vue"],"sourcesContent":["<template>\n  <body>\n  <div style=\"position: relative\" id=\"viewDiv\">\n    <div id=\"BasemapGallery\" style=\"position: absolute;top:10px;right: 200px\"></div>\n    <!-- 导出的div -->\n    <div id=\"printMap\"  style=\"position:absolute;top:10px;left: 1350px;box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 2px; \"></div>\n    <!-- 工具条区域 -->\n    <div id=\"overviewDiv\"><div id=\"extentDiv\"></div></div>\n    <div id=\"fullExtent\" style=\"position:absolute;top:10px;right: 240px\">\n      <button title=\"全图显示\" id=\"fullextent-btn\" class=\"esri-widget--button esri-interactive esri-icon-zoom-out-fixed\" style=\"border: none;box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 2px; \"></button>\n    </div>\n  </div>\n\n  <div style=\"position: absolute;width: 60px;height: 120px;top: 200px;right: 450px\">\n    <el-card class=\"box-card\" shadow=\"hover\">\n      <div slot=\"header\" class=\"clearfix\" style=\"text-align: center\">\n        <span>克里金插值</span>\n      </div>\n      <div class=\"text item\">\n        {{'普通克里金（Ordinary Kriging, OK）是最早被提出和系统研究的克里金法，\n          并随着地统计学的发展衍生出一系列变体和改进算法。\n          普通克里金是一个线性估计系统，\n          适用于任何满足各向同性假设的固有平稳随机场\n          各向同性假设下的固有平稳随机场中，\n          数学期望与其位置无关，且协方差仅是点间距离的函数。通常随机场的协方差函数是未知的，需要使用变异函数作为近似，此时变异函数也仅与点间距离有关。'}}\n      </div>\n\n    </el-card>\n  </div>\n\n  </body>\n\n\n\n</template>\n\n<script>\nimport Map from \"@arcgis/core/Map\";\nimport View from \"@arcgis/core/views/MapView\"\nimport MapImageLayer from \"@arcgis/core/layers/MapImageLayer\";\nimport BasemapGallery from \"@arcgis/core/widgets/BasemapGallery\";\nimport Expand from \"@arcgis/core/widgets/Expand\";\nimport Basemap from \"@arcgis/core/Basemap\";\nimport Portal from \"@arcgis/core/portal/Portal\";\nimport Compass from \"@arcgis/core/widgets/Compass\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport * as promiseUtils from \"@arcgis/core/core/promiseUtils\";\nimport Print from \"@arcgis/core/widgets/Print\";\nimport * as reactiveUtils from \"@arcgis/core/core/reactiveUtils\";\n\n\nexport default {\n  data() {\n    return {\n\n    }\n  },\n  beforeMount() {\n    console.log(reactiveUtils)\n  },\n  created() {\n\n  },\n  mounted() {\n    this.initMap()\n  },\n  beforeDestroy() {\n  },\n  methods: {\n    initMap() {\n      // esriConfig.portalUrl = \"https://linux111.esrichina.com/arcgis\"\n      const m_Map = new Map({\n        basemap: \"topo-vector\"\n      })\n      const view = new View({\n        container: \"viewDiv\",\n        map: m_Map,\n        center: [115, 32],\n        zoom: 5\n      })\n      const compass=new Compass({ //指南针\n        view:view\n      });\n      view.ui.add(compass,\"bottom-left\");\n      //导出地图小组件\n      view.when(() => {\n        const print = new Print({\n          view: view,\n          printServiceUrl:\n              \"https://utility.arcgisonline.com/arcgis/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task\"\n        });\n        var printExpand=new Expand({\n          view:view,\n          content:print,\n          expandTooltip:\"导出\"\n        },\"printMap\")\n      });\n\n      let layer = new MapImageLayer({\n        url: \"http://localhost:6080/arcgis/rest/services/graduate/MapServer\"\n      });\n      // layer.portalItem=\"test\"\n      var expand =  new Expand({ //图层集\n        content:new BasemapGallery({\n          view:view,\n          // 设定图层集有哪些图层\n          source: [Basemap.fromId(\"topo-vector\"), Basemap.fromId(\"hybrid\"),Basemap.fromId(\"osm\")], // autocasts to LocalBasemapsSource\n        }),\n      },\"BasemapGallery\")\n      expand.expanded=false\n\n      m_Map.add(layer);\n      //鹰眼地图定义\n      var overviewMap = new Map({\n        basemap:\"hybrid\"\n      })\n      //鹰眼地图视图\n      var mapView = new MapView({\n        container:\"overviewDiv\",\n        map:overviewMap,\n        constraints:{\n          rotationEnabled:false  //不允许旋转\n        }\n      })\n      //去掉缩略图的ui\n      mapView.ui.components = []\n\n      //全图显示\n      var extentButton = document.getElementById(\"fullextent-btn\")\n      extentButton.addEventListener(\"click\",()=>{\n        FullExtentShow()})\n      //定义全图显示函数\n      function FullExtentShow(){\n        view.center=[110,30] //地图中心点\n        view.zoom=4\n      }\n\n\n      view.ui.remove('attribution')\n      // 鹰眼地图监听主地图的extent发生变化\n      mapView.when(() => {\n        view.when(() => {\n          setup();\n        });\n      });\n      //mapView.stationary是判断当前视图是否静止\n      var extentDebouncer = promiseUtils.debounce(() => {\n        if (mapView.stationary) {\n          mapView.goTo({\n            center: view.center,\n            scale:view.scale*2*Math.max(view.width / mapView.width,view.height / mapView.height)\n          });\n        }\n      });\n\n      function setup() {\n\n        //设置框体符号\n        const extent2Dgraphic = new Graphic({\n          geometry: null,\n          symbol: {\n            type: \"simple-fill\",\n            color: [0, 0, 0, 0.2],\n            outline: null\n          }\n        });\n        mapView.graphics.add(extent2Dgraphic); //添加设置的填充符号\n\n        reactiveUtils.watch(\n            () => view.extent, //监听底图的全图范围\n            (extent) => {\n              //当视图静止时，同步鹰眼地图位置\n              extentDebouncer().then(() => {\n                extent2Dgraphic.geometry = extent;  //框框的大小是底图的大小\n              });\n            });\n      }\n    }\n\n  }\n}\n</script>\n\n<style>\nhtml,body,#viewDiv{\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  -webkit-border-vertical-spacing: 10px;\n}\n#overviewDiv {\n  position: absolute;\n  bottom: 20px;\n  right: 12px;\n  width: 300px;\n  height: 200px;\n  border: 1px solid black;\n  z-index: 1;\n  overflow: hidden;\n}\n\n.text {\n  font-size: 14px;\n}\n\n.item {\n  margin-bottom: 18px;\n}\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n.clearfix:after {\n  clear: both\n}\n\n.box-card {\n  width: 450px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}