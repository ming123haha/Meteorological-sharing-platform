{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { f as e } from \"../../../../../../chunks/vec2f64.js\";\nimport { PositionAttribute as o } from \"./PositionAttribute.glsl.js\";\nimport { Float2PassUniform as r } from \"../../shaderModules/Float2PassUniform.js\";\nimport { Float3PassUniform as i } from \"../../shaderModules/Float3PassUniform.js\";\nimport { Float4sPassUniform as t } from \"../../shaderModules/Float4sPassUniform.js\";\nimport { FloatsPassUniform as a } from \"../../shaderModules/FloatsPassUniform.js\";\nimport { glsl as l } from \"../../shaderModules/interfaces.js\";\nimport { VertexAttribute as v } from \"../../../lib/VertexAttribute.js\";\nimport { vvColorNumber as s, VisualVariablePassParameters as c } from \"../../../materials/VisualVariablePassParameters.js\";\nconst f = 8;\n\nfunction n(e, c) {\n  e.attributes.add(v.FEATUREVALUE, \"vec4\");\n  const n = e.vertex;\n  n.code.add(l`bool isCapVertex() {\nreturn featureValue.w == 1.0;\n}`), n.uniforms.add(new r(\"size\", e => e.size)), c.vvSize ? (n.uniforms.add(new i(\"vvSizeMinSize\", e => e.vvSizeMinSize)), n.uniforms.add(new i(\"vvSizeMaxSize\", e => e.vvSizeMaxSize)), n.uniforms.add(new i(\"vvSizeOffset\", e => e.vvSizeOffset)), n.uniforms.add(new i(\"vvSizeFactor\", e => e.vvSizeFactor)), n.code.add(l`vec2 getSize() {\nreturn size * clamp(vvSizeOffset + featureValue.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).xz;\n}`)) : n.code.add(l`vec2 getSize(){\nreturn size;\n}`), c.vvOpacity ? (n.constants.add(\"vvOpacityNumber\", \"int\", f), n.uniforms.add([new a(\"vvOpacityValues\", e => e.vvOpacityValues, f), new a(\"vvOpacityOpacities\", e => e.vvOpacityOpacities, f)]), n.code.add(l`vec4 applyOpacity(vec4 color) {\nfloat value = featureValue.z;\nif (value <= vvOpacityValues[0]) {\nreturn vec4( color.xyz, vvOpacityOpacities[0]);\n}\nfor (int i = 1; i < vvOpacityNumber; ++i) {\nif (vvOpacityValues[i] >= value) {\nfloat f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);\nreturn vec4( color.xyz, mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f));\n}\n}\nreturn vec4( color.xyz, vvOpacityOpacities[vvOpacityNumber - 1]);\n}`)) : n.code.add(l`vec4 applyOpacity(vec4 color){\nreturn color;\n}`), c.vvColor ? (n.constants.add(\"vvColorNumber\", \"int\", s), n.uniforms.add([new a(\"vvColorValues\", e => e.vvColorValues, s), new t(\"vvColorColors\", e => e.vvColorColors, s)]), n.code.add(l`vec4 getColor() {\nfloat value = featureValue.y;\nif (value <= vvColorValues[0]) {\nreturn applyOpacity(vvColorColors[0]);\n}\nfor (int i = 1; i < vvColorNumber; ++i) {\nif (vvColorValues[i] >= value) {\nfloat f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);\nreturn applyOpacity(mix(vvColorColors[i-1], vvColorColors[i], f));\n}\n}\nreturn applyOpacity(vvColorColors[vvColorNumber - 1]);\n}`)) : n.code.add(l`vec4 getColor(){\nreturn applyOpacity(vec4(1, 1, 1, 1));\n}`), e.include(o), e.attributes.add(v.PROFILERIGHT, \"vec4\"), e.attributes.add(v.PROFILEUP, \"vec4\"), e.attributes.add(v.PROFILEVERTEXANDNORMAL, \"vec4\"), n.code.add(l`vec3 calculateVPos() {\nvec2 size = getSize();\nvec3 origin = position;\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileVertex = profileVertexAndNormal.xy * size;\nvec2 profileNormal = profileVertexAndNormal.zw;\nfloat positionOffsetAlongProfilePlaneNormal = 0.0;\nfloat normalOffsetAlongProfilePlaneNormal = 0.0;`), n.code.add(l`if(!isCapVertex()) {\nvec2 rotationRight = vec2(profileRight.w, profileUp.w);\nfloat maxDistance = length(rotationRight);`), n.code.add(l`rotationRight = maxDistance > 0.0 ? normalize(rotationRight) : vec2(0, 0);\nfloat rx = dot(profileVertex, rotationRight);\nif (abs(rx) > maxDistance) {\nvec2 rotationUp = vec2(-rotationRight.y, rotationRight.x);\nfloat ry = dot(profileVertex, rotationUp);\nprofileVertex = rotationRight * maxDistance * sign(rx) + rotationUp * ry;\n}\n}else{\npositionOffsetAlongProfilePlaneNormal = profileRight.w * size[0];\nnormalOffsetAlongProfilePlaneNormal = profileUp.w;\n}\nvec3 offset = right * profileVertex.x + up * profileVertex.y + forward * positionOffsetAlongProfilePlaneNormal;\nreturn origin + offset;\n}`), n.code.add(l`vec3 localNormal() {\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileNormal = profileVertexAndNormal.zw;\nvec3 normal = right * profileNormal.x + up * profileNormal.y;\nif(isCapVertex()) {\nnormal += forward * profileUp.w;\n}\nreturn normal;\n}`);\n}\n\nclass p extends c {\n  constructor() {\n    super(...arguments), this.size = e(1, 1);\n  }\n\n}\n\nexport { n as PathVertexPosition, p as PathVertexPositionPassParameters };","map":{"version":3,"names":["f","e","PositionAttribute","o","Float2PassUniform","r","Float3PassUniform","i","Float4sPassUniform","t","FloatsPassUniform","a","glsl","l","VertexAttribute","v","vvColorNumber","s","VisualVariablePassParameters","c","n","attributes","add","FEATUREVALUE","vertex","code","uniforms","size","vvSize","vvSizeMinSize","vvSizeMaxSize","vvSizeOffset","vvSizeFactor","vvOpacity","constants","vvOpacityValues","vvOpacityOpacities","vvColor","vvColorValues","vvColorColors","include","PROFILERIGHT","PROFILEUP","PROFILEVERTEXANDNORMAL","p","constructor","arguments","PathVertexPosition","PathVertexPositionPassParameters"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/PathVertexPosition.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../../chunks/vec2f64.js\";import{PositionAttribute as o}from\"./PositionAttribute.glsl.js\";import{Float2PassUniform as r}from\"../../shaderModules/Float2PassUniform.js\";import{Float3PassUniform as i}from\"../../shaderModules/Float3PassUniform.js\";import{Float4sPassUniform as t}from\"../../shaderModules/Float4sPassUniform.js\";import{FloatsPassUniform as a}from\"../../shaderModules/FloatsPassUniform.js\";import{glsl as l}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as v}from\"../../../lib/VertexAttribute.js\";import{vvColorNumber as s,VisualVariablePassParameters as c}from\"../../../materials/VisualVariablePassParameters.js\";const f=8;function n(e,c){e.attributes.add(v.FEATUREVALUE,\"vec4\");const n=e.vertex;n.code.add(l`bool isCapVertex() {\nreturn featureValue.w == 1.0;\n}`),n.uniforms.add(new r(\"size\",(e=>e.size))),c.vvSize?(n.uniforms.add(new i(\"vvSizeMinSize\",(e=>e.vvSizeMinSize))),n.uniforms.add(new i(\"vvSizeMaxSize\",(e=>e.vvSizeMaxSize))),n.uniforms.add(new i(\"vvSizeOffset\",(e=>e.vvSizeOffset))),n.uniforms.add(new i(\"vvSizeFactor\",(e=>e.vvSizeFactor))),n.code.add(l`vec2 getSize() {\nreturn size * clamp(vvSizeOffset + featureValue.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).xz;\n}`)):n.code.add(l`vec2 getSize(){\nreturn size;\n}`),c.vvOpacity?(n.constants.add(\"vvOpacityNumber\",\"int\",f),n.uniforms.add([new a(\"vvOpacityValues\",(e=>e.vvOpacityValues),f),new a(\"vvOpacityOpacities\",(e=>e.vvOpacityOpacities),f)]),n.code.add(l`vec4 applyOpacity(vec4 color) {\nfloat value = featureValue.z;\nif (value <= vvOpacityValues[0]) {\nreturn vec4( color.xyz, vvOpacityOpacities[0]);\n}\nfor (int i = 1; i < vvOpacityNumber; ++i) {\nif (vvOpacityValues[i] >= value) {\nfloat f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);\nreturn vec4( color.xyz, mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f));\n}\n}\nreturn vec4( color.xyz, vvOpacityOpacities[vvOpacityNumber - 1]);\n}`)):n.code.add(l`vec4 applyOpacity(vec4 color){\nreturn color;\n}`),c.vvColor?(n.constants.add(\"vvColorNumber\",\"int\",s),n.uniforms.add([new a(\"vvColorValues\",(e=>e.vvColorValues),s),new t(\"vvColorColors\",(e=>e.vvColorColors),s)]),n.code.add(l`vec4 getColor() {\nfloat value = featureValue.y;\nif (value <= vvColorValues[0]) {\nreturn applyOpacity(vvColorColors[0]);\n}\nfor (int i = 1; i < vvColorNumber; ++i) {\nif (vvColorValues[i] >= value) {\nfloat f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);\nreturn applyOpacity(mix(vvColorColors[i-1], vvColorColors[i], f));\n}\n}\nreturn applyOpacity(vvColorColors[vvColorNumber - 1]);\n}`)):n.code.add(l`vec4 getColor(){\nreturn applyOpacity(vec4(1, 1, 1, 1));\n}`),e.include(o),e.attributes.add(v.PROFILERIGHT,\"vec4\"),e.attributes.add(v.PROFILEUP,\"vec4\"),e.attributes.add(v.PROFILEVERTEXANDNORMAL,\"vec4\"),n.code.add(l`vec3 calculateVPos() {\nvec2 size = getSize();\nvec3 origin = position;\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileVertex = profileVertexAndNormal.xy * size;\nvec2 profileNormal = profileVertexAndNormal.zw;\nfloat positionOffsetAlongProfilePlaneNormal = 0.0;\nfloat normalOffsetAlongProfilePlaneNormal = 0.0;`),n.code.add(l`if(!isCapVertex()) {\nvec2 rotationRight = vec2(profileRight.w, profileUp.w);\nfloat maxDistance = length(rotationRight);`),n.code.add(l`rotationRight = maxDistance > 0.0 ? normalize(rotationRight) : vec2(0, 0);\nfloat rx = dot(profileVertex, rotationRight);\nif (abs(rx) > maxDistance) {\nvec2 rotationUp = vec2(-rotationRight.y, rotationRight.x);\nfloat ry = dot(profileVertex, rotationUp);\nprofileVertex = rotationRight * maxDistance * sign(rx) + rotationUp * ry;\n}\n}else{\npositionOffsetAlongProfilePlaneNormal = profileRight.w * size[0];\nnormalOffsetAlongProfilePlaneNormal = profileUp.w;\n}\nvec3 offset = right * profileVertex.x + up * profileVertex.y + forward * positionOffsetAlongProfilePlaneNormal;\nreturn origin + offset;\n}`),n.code.add(l`vec3 localNormal() {\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileNormal = profileVertexAndNormal.zw;\nvec3 normal = right * profileNormal.x + up * profileNormal.y;\nif(isCapVertex()) {\nnormal += forward * profileUp.w;\n}\nreturn normal;\n}`)}class p extends c{constructor(){super(...arguments),this.size=e(1,1)}}export{n as PathVertexPosition,p as PathVertexPositionPassParameters};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}