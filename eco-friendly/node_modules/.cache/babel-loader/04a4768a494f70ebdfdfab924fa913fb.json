{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport \"../../core/has.js\";\nimport { isPowerOfTwo as t } from \"../../core/mathUtils.js\";\nimport { isSome as e, unwrap as i } from \"../../core/maybe.js\";\nimport { checkWebGLError as r } from \"./checkWebGLError.js\";\nimport { ContextType as o } from \"./context-util.js\";\nimport { TextureType as s, TextureSamplingMode as a, TextureWrapMode as n, ResourceType as l, PixelType as h, PixelFormat as p, SizedPixelFormat as _, CompressedTextureFormat as m } from \"./enums.js\";\nimport d from \"./capabilities/isWebGL2Context.js\";\nconst u = {\n  target: s.TEXTURE_2D,\n  samplingMode: a.LINEAR,\n  wrapMode: n.REPEAT,\n  flipped: !1,\n  hasMipmap: !1,\n  isOpaque: !1,\n  unpackAlignment: 4,\n  preMultiplyAlpha: !1,\n  isImmutable: !1\n},\n      c = 4;\n\nclass E {\n  constructor(t, e, i = null) {\n    this._context = t, this.type = \"texture\", this._glName = null, this._samplingModeDirty = !1, this._wrapModeDirty = !1, this._wasImmutablyAllocated = !1, t.instanceCounter.increment(l.Texture, this), this._descriptor = { ...u,\n      ...e\n    };\n\n    for (const r in u) {\n      void 0 === this._descriptor[r] && (this._descriptor[r] = u[r]);\n    }\n\n    if (t.type !== o.WEBGL2 && (this._descriptor.isImmutable && (this._descriptor.isImmutable = !1), A(this._descriptor.target))) throw new Error(\"3D and array textures are not supported in WebGL1\");\n    this._descriptor.target === s.TEXTURE_CUBE_MAP ? this._setDataCubeMap(i) : this.setData(i);\n  }\n\n  get glName() {\n    return this._glName;\n  }\n\n  get descriptor() {\n    return this._descriptor;\n  }\n\n  get isDirty() {\n    return this._samplingModeDirty || this._wrapModeDirty;\n  }\n\n  dispose() {\n    this._context.gl && this._glName && (this._context.unbindTexture(this), this._context.gl.deleteTexture(this._glName), this._glName = null, this._context.instanceCounter.decrement(l.Texture, this));\n  }\n\n  release() {\n    this.dispose();\n  }\n\n  resize(t, e) {\n    const i = this._descriptor;\n\n    if (i.width !== t || i.height !== e) {\n      if (this._wasImmutablyAllocated) throw new Error(\"Immutable textures can't be resized!\");\n      i.width = t, i.height = e, this._descriptor.target === s.TEXTURE_CUBE_MAP ? this._setDataCubeMap(null) : this.setData(null);\n    }\n  }\n\n  _setDataCubeMap(t = null) {\n    for (let e = s.TEXTURE_CUBE_MAP_POSITIVE_X; e <= s.TEXTURE_CUBE_MAP_NEGATIVE_Z; e++) this._setData(t, e);\n  }\n\n  setData(t) {\n    this._setData(t);\n  }\n\n  _setData(t, i) {\n    if (!this._context || !this._context.gl) return;\n    const o = this._context.gl;\n    this._glName || (this._glName = o.createTexture()), void 0 === t && (t = null);\n    const s = this._descriptor,\n          a = i ?? s.target,\n          n = A(a);\n    null === t && (s.width = s.width || c, s.height = s.height || c, n && (s.depth = s.depth ?? 1));\n\n    const l = this._context.bindTexture(this, E.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES), E._validateTexture(this._context, s), this._configurePixelStorage(), r(o);\n    const h = s.pixelFormat;\n\n    let p = s.internalFormat ?? this._deriveInternalFormat(h, s.dataType);\n\n    if (f(t)) {\n      let e = t.width,\n          i = t.height;\n      const l = 1;\n      t instanceof HTMLVideoElement && (e = t.videoWidth, i = t.videoHeight), s.width && s.height, n && s.depth, s.isImmutable && !this._wasImmutablyAllocated && this._texStorage(a, p, s.hasMipmap, e, i, l), this._texImage(a, 0, p, e, i, l, t), r(o), s.hasMipmap && this.generateMipmap(), void 0 === s.width && (s.width = e), void 0 === s.height && (s.height = i), n && void 0 === s.depth && (s.depth = l);\n    } else {\n      const {\n        width: i,\n        height: l,\n        depth: h\n      } = s;\n      if (null == i || null == l) throw new Error(\"Width and height must be specified!\");\n      if (n && null == h) throw new Error(\"Depth must be specified!\");\n\n      if (s.isImmutable && !this._wasImmutablyAllocated && this._texStorage(a, p, s.hasMipmap, i, l, h), o.DEPTH24_STENCIL8 && p === o.DEPTH_STENCIL && (p = o.DEPTH24_STENCIL8), x(t)) {\n        const e = t.levels,\n              r = w(a, i, l, h),\n              n = Math.min(r - 1, e.length - 1);\n        d(o) ? o.texParameteri(s.target, o.TEXTURE_MAX_LEVEL, n) : s.hasMipmap = s.hasMipmap && r === e.length;\n        const _ = p;\n        if (!g(_)) throw new Error(\"Attempting to use compressed data with an umcompressed format!\");\n\n        this._forEachMipmapLevel((t, i, r, o) => {\n          const s = e[Math.min(t, e.length - 1)];\n\n          this._compressedTexImage(a, t, _, i, r, o, s);\n        }, n);\n      } else e(t) ? (this._texImage(a, 0, p, i, l, h, t), r(o), s.hasMipmap && this.generateMipmap()) : this._forEachMipmapLevel((t, e, i, s) => {\n        this._texImage(a, t, p, e, i, s, null), r(o);\n      });\n    }\n\n    E._applySamplingMode(o, this._descriptor), E._applyWrapMode(o, this._descriptor), E._applyAnisotropicFilteringParameters(this._context, this._descriptor), r(o), this._context.bindTexture(l, E.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  updateData(t, e, i, r, o, s, a = 0) {\n    s || console.error(\"An attempt to use uninitialized data!\"), this._glName || console.error(\"An attempt to update uninitialized texture!\");\n\n    const n = this._context.gl,\n          l = this._descriptor,\n          {\n      pixelFormat: h,\n      dataType: p,\n      target: _,\n      isImmutable: m\n    } = l,\n          u = l.internalFormat ?? this._deriveInternalFormat(h, p);\n\n    if (m && !this._wasImmutablyAllocated) throw new Error(\"Cannot update immutable texture before allocation!\");\n\n    const c = this._context.bindTexture(this, E.TEXTURE_UNIT_FOR_UPDATES, !0);\n\n    if ((e < 0 || i < 0 || r > l.width || o > l.height || e + r > l.width || i + o > l.height) && console.error(\"An attempt to update out of bounds of the texture!\"), this._configurePixelStorage(), a) {\n      if (!d(n)) return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");\n      n.pixelStorei(n.UNPACK_SKIP_ROWS, a);\n    }\n\n    if (f(s) ? d(n) ? n.texSubImage2D(_, t, e, i, r, o, h, p, s) : n.texSubImage2D(_, t, e, i, h, p, s) : x(s) ? n.compressedTexSubImage2D(_, t, e, i, r, o, u, s.levels[t]) : n.texSubImage2D(_, t, e, i, r, o, h, p, s), a) {\n      if (!d(n)) return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");\n      n.pixelStorei(n.UNPACK_SKIP_ROWS, 0);\n    }\n\n    this._context.bindTexture(c, E.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  updateData3D(t, e, i, r, o, s, a, n) {\n    n || console.error(\"An attempt to use uninitialized data!\"), this._glName || console.error(\"An attempt to update uninitialized texture!\");\n    const l = this._context.gl;\n    if (!d(l)) throw new Error(\"3D textures are not supported in WebGL1\");\n\n    const h = this._descriptor,\n          {\n      pixelFormat: p,\n      dataType: _,\n      isImmutable: m,\n      target: u\n    } = h,\n          c = h.internalFormat ?? this._deriveInternalFormat(p, _);\n\n    if (m && !this._wasImmutablyAllocated) throw new Error(\"Cannot update immutable texture before allocation!\");\n    A(u) || console.warn(\"Attempting to set 3D texture data on a non-3D texture\");\n\n    const T = this._context.bindTexture(this, E.TEXTURE_UNIT_FOR_UPDATES);\n\n    if (this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES), (e < 0 || i < 0 || r < 0 || o > h.width || s > h.height || a > h.depth || e + o > h.width || i + s > h.height || r + a > h.depth) && console.error(\"An attempt to update out of bounds of the texture!\"), this._configurePixelStorage(), x(n)) n = n.levels[t], l.compressedTexSubImage3D(u, t, e, i, r, o, s, a, c, n);else {\n      const h = n;\n      l.texSubImage3D(u, t, e, i, r, o, s, a, p, _, h);\n    }\n\n    this._context.bindTexture(T, E.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  generateMipmap() {\n    const t = this._descriptor;\n\n    if (!t.hasMipmap) {\n      if (this._wasImmutablyAllocated) throw new Error(\"Cannot add mipmaps to immutable texture after allocation\");\n      t.hasMipmap = !0, this._samplingModeDirty = !0, E._validateTexture(this._context, t);\n    }\n\n    t.samplingMode === a.LINEAR ? (this._samplingModeDirty = !0, t.samplingMode = a.LINEAR_MIPMAP_NEAREST) : t.samplingMode === a.NEAREST && (this._samplingModeDirty = !0, t.samplingMode = a.NEAREST_MIPMAP_NEAREST);\n\n    const e = this._context.bindTexture(this, E.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.gl.generateMipmap(t.target), this._context.bindTexture(e, E.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  setSamplingMode(t) {\n    t !== this._descriptor.samplingMode && (this._descriptor.samplingMode = t, this._samplingModeDirty = !0);\n  }\n\n  setWrapMode(t) {\n    t !== this._descriptor.wrapMode && (this._descriptor.wrapMode = t, E._validateTexture(this._context, this._descriptor), this._wrapModeDirty = !0);\n  }\n\n  applyChanges() {\n    const t = this._context.gl,\n          e = this._descriptor;\n    this._samplingModeDirty && (E._applySamplingMode(t, e), this._samplingModeDirty = !1), this._wrapModeDirty && (E._applyWrapMode(t, e), this._wrapModeDirty = !1);\n  }\n\n  _deriveInternalFormat(t, e) {\n    if (this._context.type === o.WEBGL1) return t;\n\n    switch (e) {\n      case h.FLOAT:\n        switch (t) {\n          case p.RGBA:\n            return _.RGBA32F;\n\n          case p.RGB:\n            return _.RGB32F;\n\n          default:\n            throw new Error(\"Unable to derive format\");\n        }\n\n      case h.UNSIGNED_BYTE:\n        switch (t) {\n          case p.RGBA:\n            return _.RGBA8;\n\n          case p.RGB:\n            return _.RGB8;\n        }\n\n      default:\n        return t;\n    }\n  }\n\n  _configurePixelStorage() {\n    const t = this._context.gl,\n          {\n      unpackAlignment: e,\n      flipped: i,\n      preMultiplyAlpha: r\n    } = this._descriptor;\n    t.pixelStorei(t.UNPACK_ALIGNMENT, e), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, i ? 1 : 0), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r ? 1 : 0);\n  }\n\n  _texStorage(t, e, i, r, o, s) {\n    const a = this._context.gl;\n    if (!d(a)) throw new Error(\"Immutable textures are not supported in WebGL1\");\n    if (!T(e)) throw new Error(\"Immutable textures must have a sized internal format\");\n    if (!this._descriptor.isImmutable) return;\n    const n = i ? w(t, r, o, s) : 1;\n\n    if (A(t)) {\n      if (null == s) throw new Error(\"Missing depth dimension for 3D texture upload\");\n      a.texStorage3D(t, n, e, r, o, s);\n    } else a.texStorage2D(t, n, e, r, o);\n\n    this._wasImmutablyAllocated = !0;\n  }\n\n  _texImage(t, r, s, a, n, l, h) {\n    const p = this._context.gl;\n    let _ = null;\n    const m = this._context.type === o.WEBGL2,\n          d = A(t),\n          {\n      isImmutable: u,\n      pixelFormat: c,\n      dataType: E\n    } = this._descriptor;\n    if (m && (_ = p), m || !f(h)) {\n      if (u) {\n        if (e(h)) {\n          const e = h;\n\n          if (d) {\n            if (null == l) throw new Error(\"Missing depth dimension for 3D texture upload\");\n\n            _.texSubImage3D(t, r, 0, 0, 0, a, n, l, c, E, e);\n          } else p.texSubImage2D(t, r, 0, 0, a, n, c, E, e);\n        }\n      } else {\n        const e = i(h);\n\n        if (d) {\n          if (null == l) throw new Error(\"Missing depth dimension for 3D texture upload\");\n\n          _.texImage3D(t, r, s, a, n, l, 0, c, E, e);\n        } else p.texImage2D(t, r, s, a, n, 0, c, E, e);\n      }\n    } else p.texImage2D(t, 0, s, c, E, h);\n  }\n\n  _compressedTexImage(t, i, r, s, a, n, l) {\n    const h = this._context.gl;\n    let p = null;\n\n    const _ = A(t),\n          m = this._descriptor.isImmutable;\n\n    if (_) {\n      if (this._context.type !== o.WEBGL2) throw new Error(\"3D textures are not supported in WebGL1\");\n      p = h;\n    }\n\n    if (m) {\n      if (e(l)) if (_) {\n        if (null == n) throw new Error(\"Missing depth dimension for 3D texture upload\");\n        p.compressedTexSubImage3D(t, i, 0, 0, 0, s, a, n, r, l);\n      } else h.compressedTexSubImage2D(t, i, 0, 0, s, a, r, l);\n    } else if (_) {\n      if (null == n) throw new Error(\"Missing depth dimension for 3D texture upload\");\n      p.compressedTexImage3D(t, i, r, s, a, n, 0, l);\n    } else h.compressedTexImage2D(t, i, r, s, a, 0, l);\n  }\n\n  _forEachMipmapLevel(t, e = 1 / 0) {\n    let {\n      width: i,\n      height: r,\n      depth: o,\n      hasMipmap: a,\n      target: n\n    } = this._descriptor;\n    const l = n === s.TEXTURE_3D;\n    if (null == i || null == r || l && null == o) throw new Error(\"Missing texture dimensions for mipmap calculation\");\n\n    for (let s = 0; t(s, i, r, o), a && (1 !== i || 1 !== r || l && 1 !== o) && !(s >= e); ++s) i = Math.max(1, i >> 1), r = Math.max(1, r >> 1), l && (o = Math.max(1, o >> 1));\n  }\n\n  static _validateTexture(e, i) {\n    (null != i.width && i.width < 0 || null != i.height && i.height < 0 || null != i.depth && i.depth < 0) && console.error(\"Negative dimension parameters are not allowed!\");\n    const r = d(e.gl),\n          o = null != i.width && t(i.width) && null != i.height && t(i.height);\n    r || !i.isImmutable && !A(i.target) || console.error(\"Immutable and 3D-like textures are not supported in WebGL1!\"), r || o || (\"number\" == typeof i.wrapMode ? i.wrapMode !== n.CLAMP_TO_EDGE && console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\") : i.wrapMode.s === n.CLAMP_TO_EDGE && i.wrapMode.t === n.CLAMP_TO_EDGE || console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"), i.hasMipmap && console.error(\"Mipmapping requires power-of-two textures!\"));\n  }\n\n  static _applySamplingMode(t, e) {\n    let i = e.samplingMode,\n        r = e.samplingMode;\n    i === a.LINEAR_MIPMAP_NEAREST || i === a.LINEAR_MIPMAP_LINEAR ? (i = a.LINEAR, e.hasMipmap || (r = a.LINEAR)) : i !== a.NEAREST_MIPMAP_NEAREST && i !== a.NEAREST_MIPMAP_LINEAR || (i = a.NEAREST, e.hasMipmap || (r = a.NEAREST)), t.texParameteri(e.target, t.TEXTURE_MAG_FILTER, i), t.texParameteri(e.target, t.TEXTURE_MIN_FILTER, r);\n  }\n\n  static _applyWrapMode(t, e) {\n    \"number\" == typeof e.wrapMode ? (t.texParameteri(e.target, t.TEXTURE_WRAP_S, e.wrapMode), t.texParameteri(e.target, t.TEXTURE_WRAP_T, e.wrapMode)) : (t.texParameteri(e.target, t.TEXTURE_WRAP_S, e.wrapMode.s), t.texParameteri(e.target, t.TEXTURE_WRAP_T, e.wrapMode.t));\n  }\n\n  static _applyAnisotropicFilteringParameters(t, e) {\n    const i = t.capabilities.textureFilterAnisotropic;\n    if (!i) return;\n    t.gl.texParameterf(e.target, i.TEXTURE_MAX_ANISOTROPY, e.maxAnisotropy ?? 1);\n  }\n\n}\n\nfunction T(t) {\n  return t in _;\n}\n\nfunction g(t) {\n  return t in m;\n}\n\nfunction x(t) {\n  return e(t) && \"type\" in t && \"compressed\" === t.type;\n}\n\nfunction M(t) {\n  return e(t) && \"byteLength\" in t;\n}\n\nfunction f(t) {\n  return e(t) && !x(t) && !M(t);\n}\n\nfunction A(t) {\n  return t === s.TEXTURE_3D || t === s.TEXTURE_2D_ARRAY;\n}\n\nfunction w(t, e, i, r = 1) {\n  let o = Math.max(e, i);\n  return t === s.TEXTURE_3D && (o = Math.max(o, r)), Math.round(Math.log(o) / Math.LN2) + 1;\n}\n\nE.TEXTURE_UNIT_FOR_UPDATES = 0;\nexport { E as Texture };","map":{"version":3,"names":["isPowerOfTwo","t","isSome","e","unwrap","i","checkWebGLError","r","ContextType","o","TextureType","s","TextureSamplingMode","a","TextureWrapMode","n","ResourceType","l","PixelType","h","PixelFormat","p","SizedPixelFormat","_","CompressedTextureFormat","m","d","u","target","TEXTURE_2D","samplingMode","LINEAR","wrapMode","REPEAT","flipped","hasMipmap","isOpaque","unpackAlignment","preMultiplyAlpha","isImmutable","c","E","constructor","_context","type","_glName","_samplingModeDirty","_wrapModeDirty","_wasImmutablyAllocated","instanceCounter","increment","Texture","_descriptor","WEBGL2","A","Error","TEXTURE_CUBE_MAP","_setDataCubeMap","setData","glName","descriptor","isDirty","dispose","gl","unbindTexture","deleteTexture","decrement","release","resize","width","height","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Z","_setData","createTexture","depth","bindTexture","TEXTURE_UNIT_FOR_UPDATES","setActiveTexture","_validateTexture","_configurePixelStorage","pixelFormat","internalFormat","_deriveInternalFormat","dataType","f","HTMLVideoElement","videoWidth","videoHeight","_texStorage","_texImage","generateMipmap","DEPTH24_STENCIL8","DEPTH_STENCIL","x","levels","w","Math","min","length","texParameteri","TEXTURE_MAX_LEVEL","g","_forEachMipmapLevel","_compressedTexImage","_applySamplingMode","_applyWrapMode","_applyAnisotropicFilteringParameters","updateData","console","error","pixelStorei","UNPACK_SKIP_ROWS","texSubImage2D","compressedTexSubImage2D","updateData3D","warn","T","compressedTexSubImage3D","texSubImage3D","LINEAR_MIPMAP_NEAREST","NEAREST","NEAREST_MIPMAP_NEAREST","setSamplingMode","setWrapMode","applyChanges","WEBGL1","FLOAT","RGBA","RGBA32F","RGB","RGB32F","UNSIGNED_BYTE","RGBA8","RGB8","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texStorage3D","texStorage2D","texImage3D","texImage2D","compressedTexImage3D","compressedTexImage2D","TEXTURE_3D","max","CLAMP_TO_EDGE","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","capabilities","textureFilterAnisotropic","texParameterf","TEXTURE_MAX_ANISOTROPY","maxAnisotropy","M","TEXTURE_2D_ARRAY","round","log","LN2"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/webgl/Texture.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport\"../../core/has.js\";import{isPowerOfTwo as t}from\"../../core/mathUtils.js\";import{isSome as e,unwrap as i}from\"../../core/maybe.js\";import{checkWebGLError as r}from\"./checkWebGLError.js\";import{ContextType as o}from\"./context-util.js\";import{TextureType as s,TextureSamplingMode as a,TextureWrapMode as n,ResourceType as l,PixelType as h,PixelFormat as p,SizedPixelFormat as _,CompressedTextureFormat as m}from\"./enums.js\";import d from\"./capabilities/isWebGL2Context.js\";const u={target:s.TEXTURE_2D,samplingMode:a.LINEAR,wrapMode:n.REPEAT,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,isImmutable:!1},c=4;class E{constructor(t,e,i=null){this._context=t,this.type=\"texture\",this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,t.instanceCounter.increment(l.Texture,this),this._descriptor={...u,...e};for(const r in u){void 0===this._descriptor[r]&&(this._descriptor[r]=u[r])}if(t.type!==o.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),A(this._descriptor.target)))throw new Error(\"3D and array textures are not supported in WebGL1\");this._descriptor.target===s.TEXTURE_CUBE_MAP?this._setDataCubeMap(i):this.setData(i)}get glName(){return this._glName}get descriptor(){return this._descriptor}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._context.gl&&this._glName&&(this._context.unbindTexture(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(l.Texture,this))}release(){this.dispose()}resize(t,e){const i=this._descriptor;if(i.width!==t||i.height!==e){if(this._wasImmutablyAllocated)throw new Error(\"Immutable textures can't be resized!\");i.width=t,i.height=e,this._descriptor.target===s.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(t=null){for(let e=s.TEXTURE_CUBE_MAP_POSITIVE_X;e<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z;e++)this._setData(t,e)}setData(t){this._setData(t)}_setData(t,i){if(!this._context||!this._context.gl)return;const o=this._context.gl;this._glName||(this._glName=o.createTexture()),void 0===t&&(t=null);const s=this._descriptor,a=i??s.target,n=A(a);null===t&&(s.width=s.width||c,s.height=s.height||c,n&&(s.depth=s.depth??1));const l=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES),E._validateTexture(this._context,s),this._configurePixelStorage(),r(o);const h=s.pixelFormat;let p=s.internalFormat??this._deriveInternalFormat(h,s.dataType);if(f(t)){let e=t.width,i=t.height;const l=1;t instanceof HTMLVideoElement&&(e=t.videoWidth,i=t.videoHeight),s.width&&s.height,n&&s.depth,s.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(a,p,s.hasMipmap,e,i,l),this._texImage(a,0,p,e,i,l,t),r(o),s.hasMipmap&&this.generateMipmap(),void 0===s.width&&(s.width=e),void 0===s.height&&(s.height=i),n&&void 0===s.depth&&(s.depth=l)}else{const{width:i,height:l,depth:h}=s;if(null==i||null==l)throw new Error(\"Width and height must be specified!\");if(n&&null==h)throw new Error(\"Depth must be specified!\");if(s.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(a,p,s.hasMipmap,i,l,h),o.DEPTH24_STENCIL8&&p===o.DEPTH_STENCIL&&(p=o.DEPTH24_STENCIL8),x(t)){const e=t.levels,r=w(a,i,l,h),n=Math.min(r-1,e.length-1);d(o)?o.texParameteri(s.target,o.TEXTURE_MAX_LEVEL,n):s.hasMipmap=s.hasMipmap&&r===e.length;const _=p;if(!g(_))throw new Error(\"Attempting to use compressed data with an umcompressed format!\");this._forEachMipmapLevel(((t,i,r,o)=>{const s=e[Math.min(t,e.length-1)];this._compressedTexImage(a,t,_,i,r,o,s)}),n)}else e(t)?(this._texImage(a,0,p,i,l,h,t),r(o),s.hasMipmap&&this.generateMipmap()):this._forEachMipmapLevel(((t,e,i,s)=>{this._texImage(a,t,p,e,i,s,null),r(o)}))}E._applySamplingMode(o,this._descriptor),E._applyWrapMode(o,this._descriptor),E._applyAnisotropicFilteringParameters(this._context,this._descriptor),r(o),this._context.bindTexture(l,E.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,e,i,r,o,s,a=0){s||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const n=this._context.gl,l=this._descriptor,{pixelFormat:h,dataType:p,target:_,isImmutable:m}=l,u=l.internalFormat??this._deriveInternalFormat(h,p);if(m&&!this._wasImmutablyAllocated)throw new Error(\"Cannot update immutable texture before allocation!\");const c=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES,!0);if((e<0||i<0||r>l.width||o>l.height||e+r>l.width||i+o>l.height)&&console.error(\"An attempt to update out of bounds of the texture!\"),this._configurePixelStorage(),a){if(!d(n))return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");n.pixelStorei(n.UNPACK_SKIP_ROWS,a)}if(f(s)?d(n)?n.texSubImage2D(_,t,e,i,r,o,h,p,s):n.texSubImage2D(_,t,e,i,h,p,s):x(s)?n.compressedTexSubImage2D(_,t,e,i,r,o,u,s.levels[t]):n.texSubImage2D(_,t,e,i,r,o,h,p,s),a){if(!d(n))return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");n.pixelStorei(n.UNPACK_SKIP_ROWS,0)}this._context.bindTexture(c,E.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(t,e,i,r,o,s,a,n){n||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const l=this._context.gl;if(!d(l))throw new Error(\"3D textures are not supported in WebGL1\");const h=this._descriptor,{pixelFormat:p,dataType:_,isImmutable:m,target:u}=h,c=h.internalFormat??this._deriveInternalFormat(p,_);if(m&&!this._wasImmutablyAllocated)throw new Error(\"Cannot update immutable texture before allocation!\");A(u)||console.warn(\"Attempting to set 3D texture data on a non-3D texture\");const T=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);if(this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES),(e<0||i<0||r<0||o>h.width||s>h.height||a>h.depth||e+o>h.width||i+s>h.height||r+a>h.depth)&&console.error(\"An attempt to update out of bounds of the texture!\"),this._configurePixelStorage(),x(n))n=n.levels[t],l.compressedTexSubImage3D(u,t,e,i,r,o,s,a,c,n);else{const h=n;l.texSubImage3D(u,t,e,i,r,o,s,a,p,_,h)}this._context.bindTexture(T,E.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;if(!t.hasMipmap){if(this._wasImmutablyAllocated)throw new Error(\"Cannot add mipmaps to immutable texture after allocation\");t.hasMipmap=!0,this._samplingModeDirty=!0,E._validateTexture(this._context,t)}t.samplingMode===a.LINEAR?(this._samplingModeDirty=!0,t.samplingMode=a.LINEAR_MIPMAP_NEAREST):t.samplingMode===a.NEAREST&&(this._samplingModeDirty=!0,t.samplingMode=a.NEAREST_MIPMAP_NEAREST);const e=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES);this._context.gl.generateMipmap(t.target),this._context.bindTexture(e,E.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(t){t!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=t,this._samplingModeDirty=!0)}setWrapMode(t){t!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=t,E._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const t=this._context.gl,e=this._descriptor;this._samplingModeDirty&&(E._applySamplingMode(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(E._applyWrapMode(t,e),this._wrapModeDirty=!1)}_deriveInternalFormat(t,e){if(this._context.type===o.WEBGL1)return t;switch(e){case h.FLOAT:switch(t){case p.RGBA:return _.RGBA32F;case p.RGB:return _.RGB32F;default:throw new Error(\"Unable to derive format\")}case h.UNSIGNED_BYTE:switch(t){case p.RGBA:return _.RGBA8;case p.RGB:return _.RGB8}default:return t}}_configurePixelStorage(){const t=this._context.gl,{unpackAlignment:e,flipped:i,preMultiplyAlpha:r}=this._descriptor;t.pixelStorei(t.UNPACK_ALIGNMENT,e),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i?1:0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r?1:0)}_texStorage(t,e,i,r,o,s){const a=this._context.gl;if(!d(a))throw new Error(\"Immutable textures are not supported in WebGL1\");if(!T(e))throw new Error(\"Immutable textures must have a sized internal format\");if(!this._descriptor.isImmutable)return;const n=i?w(t,r,o,s):1;if(A(t)){if(null==s)throw new Error(\"Missing depth dimension for 3D texture upload\");a.texStorage3D(t,n,e,r,o,s)}else a.texStorage2D(t,n,e,r,o);this._wasImmutablyAllocated=!0}_texImage(t,r,s,a,n,l,h){const p=this._context.gl;let _=null;const m=this._context.type===o.WEBGL2,d=A(t),{isImmutable:u,pixelFormat:c,dataType:E}=this._descriptor;if(m&&(_=p),m||!f(h))if(u){if(e(h)){const e=h;if(d){if(null==l)throw new Error(\"Missing depth dimension for 3D texture upload\");_.texSubImage3D(t,r,0,0,0,a,n,l,c,E,e)}else p.texSubImage2D(t,r,0,0,a,n,c,E,e)}}else{const e=i(h);if(d){if(null==l)throw new Error(\"Missing depth dimension for 3D texture upload\");_.texImage3D(t,r,s,a,n,l,0,c,E,e)}else p.texImage2D(t,r,s,a,n,0,c,E,e)}else p.texImage2D(t,0,s,c,E,h)}_compressedTexImage(t,i,r,s,a,n,l){const h=this._context.gl;let p=null;const _=A(t),m=this._descriptor.isImmutable;if(_){if(this._context.type!==o.WEBGL2)throw new Error(\"3D textures are not supported in WebGL1\");p=h}if(m){if(e(l))if(_){if(null==n)throw new Error(\"Missing depth dimension for 3D texture upload\");p.compressedTexSubImage3D(t,i,0,0,0,s,a,n,r,l)}else h.compressedTexSubImage2D(t,i,0,0,s,a,r,l)}else if(_){if(null==n)throw new Error(\"Missing depth dimension for 3D texture upload\");p.compressedTexImage3D(t,i,r,s,a,n,0,l)}else h.compressedTexImage2D(t,i,r,s,a,0,l)}_forEachMipmapLevel(t,e=1/0){let{width:i,height:r,depth:o,hasMipmap:a,target:n}=this._descriptor;const l=n===s.TEXTURE_3D;if(null==i||null==r||l&&null==o)throw new Error(\"Missing texture dimensions for mipmap calculation\");for(let s=0;t(s,i,r,o),a&&(1!==i||1!==r||l&&1!==o)&&!(s>=e);++s)i=Math.max(1,i>>1),r=Math.max(1,r>>1),l&&(o=Math.max(1,o>>1))}static _validateTexture(e,i){(null!=i.width&&i.width<0||null!=i.height&&i.height<0||null!=i.depth&&i.depth<0)&&console.error(\"Negative dimension parameters are not allowed!\");const r=d(e.gl),o=null!=i.width&&t(i.width)&&null!=i.height&&t(i.height);r||!i.isImmutable&&!A(i.target)||console.error(\"Immutable and 3D-like textures are not supported in WebGL1!\"),r||o||(\"number\"==typeof i.wrapMode?i.wrapMode!==n.CLAMP_TO_EDGE&&console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"):i.wrapMode.s===n.CLAMP_TO_EDGE&&i.wrapMode.t===n.CLAMP_TO_EDGE||console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"),i.hasMipmap&&console.error(\"Mipmapping requires power-of-two textures!\"))}static _applySamplingMode(t,e){let i=e.samplingMode,r=e.samplingMode;i===a.LINEAR_MIPMAP_NEAREST||i===a.LINEAR_MIPMAP_LINEAR?(i=a.LINEAR,e.hasMipmap||(r=a.LINEAR)):i!==a.NEAREST_MIPMAP_NEAREST&&i!==a.NEAREST_MIPMAP_LINEAR||(i=a.NEAREST,e.hasMipmap||(r=a.NEAREST)),t.texParameteri(e.target,t.TEXTURE_MAG_FILTER,i),t.texParameteri(e.target,t.TEXTURE_MIN_FILTER,r)}static _applyWrapMode(t,e){\"number\"==typeof e.wrapMode?(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode)):(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode.s),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode.t))}static _applyAnisotropicFilteringParameters(t,e){const i=t.capabilities.textureFilterAnisotropic;if(!i)return;t.gl.texParameterf(e.target,i.TEXTURE_MAX_ANISOTROPY,e.maxAnisotropy??1)}}function T(t){return t in _}function g(t){return t in m}function x(t){return e(t)&&\"type\"in t&&\"compressed\"===t.type}function M(t){return e(t)&&\"byteLength\"in t}function f(t){return e(t)&&!x(t)&&!M(t)}function A(t){return t===s.TEXTURE_3D||t===s.TEXTURE_2D_ARRAY}function w(t,e,i,r=1){let o=Math.max(e,i);return t===s.TEXTURE_3D&&(o=Math.max(o,r)),Math.round(Math.log(o)/Math.LN2)+1}E.TEXTURE_UNIT_FOR_UPDATES=0;export{E as Texture};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}