{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../../chunks/tslib.es6.js\";\nimport \"../../../../../intl.js\";\nimport t from \"../../../../../core/Accessor.js\";\nimport \"../../../../../core/has.js\";\nimport i from \"../../../../../core/Handles.js\";\nimport { nextHighestPowerOfTen as s } from \"../../../../../core/mathUtils.js\";\nimport { destroyMaybe as r, isNone as n, isSome as a, unwrap as o } from \"../../../../../core/maybe.js\";\nimport { formatDecimal as l } from \"../../../../../core/quantityFormatUtils.js\";\nimport { toUnit as h } from \"../../../../../core/quantityUtils.js\";\nimport { watch as c, syncAndInitial as m } from \"../../../../../core/reactiveUtils.js\";\nimport { convertUnit as d, preferredImperialAreaUnit as p, preferredMetricAreaUnit as u, preferredImperialLengthUnit as g, preferredMetricLengthUnit as L } from \"../../../../../core/unitUtils.js\";\nimport { property as _ } from \"../../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../../core/arrayUtils.js\";\nimport \"../../../../../core/accessorSupport/ensureType.js\";\nimport { subclass as b } from \"../../../../../core/accessorSupport/decorators/subclass.js\";\nimport { f as v } from \"../../../../../chunks/mat4.js\";\nimport { c as f } from \"../../../../../chunks/mat4f64.js\";\nimport { b as S } from \"../../../../../chunks/vec3.js\";\nimport { c as w } from \"../../../../../chunks/vec3f64.js\";\nimport { midpoint as y } from \"../../support/viewUtils.js\";\nimport { LabelVisualElement as j } from \"../../../interactive/visualElements/LabelVisualElement.js\";\nimport { LineVisualElement as C } from \"../../../interactive/visualElements/LineVisualElement.js\";\nimport { MeasurementAreaVisualElement as A } from \"../../../interactive/visualElements/MeasurementAreaVisualElement.js\";\nimport { GeodesicSegment as P, EuclideanSegment as D } from \"../../../interactive/visualElements/support/Segment.js\";\nimport { RenderOccludedFlag as V } from \"../../../webgl-engine/lib/Material.js\";\nimport { createStipplePatternSimple as M } from \"../../../webgl-engine/materials/lineStippleUtils.js\";\nimport { onLocaleChange as R } from \"../../../../../intl/locale.js\";\nimport { fetchMessageBundle as I } from \"../../../../../intl/messages.js\";\nlet O = class extends t {\n  constructor(e) {\n    super(e), this._handles = new i(), this._params = { ...z\n    }, this._path = null, this._intersectedPath = null, this._perimeter = null, this._intersectedPerimeter = null, this._projectionLines = null, this._measurementArea = null, this._areaLabel = null, this._pathLengthLabel = null, this._cursorSegmentLengthLabel = null, this._perimeterLengthLabel = null, this._pathSegments = [], this._perimeterSegments = [], this._cursorSegment = null, this._origin = w(), this._originTransform = f(), this._cursorPositionRenderSpace = w(), this.messages = null, this.viewData = q, this.areaLabel = null, this.perimeterLengthLabel = null, this.loadingMessages = !0;\n  }\n\n  get visible() {\n    return this.analysisViewData.visible;\n  }\n\n  get testData() {\n    return {\n      labels: {\n        area: this._areaLabel,\n        pathLength: this._pathLengthLabel,\n        cursorSegmentLength: this._cursorSegmentLengthLabel,\n        perimeterLength: this._perimeterLengthLabel\n      }\n    };\n  }\n\n  initialize() {\n    const {\n      analysisViewData: e,\n      _params: t,\n      view: i\n    } = this;\n    this._path = new C({\n      view: i,\n      attached: !0,\n      width: t.pathLineWidth,\n      color: t.pathLineColor,\n      polygonOffset: !0,\n      renderOccluded: V.OccludeAndTransparent\n    }), this._intersectedPath = new C({\n      view: i,\n      attached: !0,\n      width: t.pathLineWidth,\n      color: t.intersectingLineColor,\n      polygonOffset: !0,\n      renderOccluded: V.OccludeAndTransparent\n    }), this._perimeter = new C({\n      view: i,\n      attached: !0,\n      width: t.perimeterLineWidth,\n      color: t.perimeterLineColor,\n      polygonOffset: !0,\n      renderOccluded: V.OccludeAndTransparent\n    }), this._intersectedPerimeter = new C({\n      view: i,\n      attached: !0,\n      width: t.perimeterLineWidth,\n      color: t.intersectingLineColor,\n      polygonOffset: !0,\n      renderOccluded: V.OccludeAndTransparent\n    }), this._projectionLines = new C({\n      view: i,\n      attached: !0,\n      width: t.projectionLineWidth,\n      color: t.projectionLineColor,\n      stipplePattern: M(t.projectionLineStippleSize),\n      polygonOffset: !0,\n      renderOccluded: V.OccludeAndTransparent\n    }), this._measurementArea = new A({\n      view: i,\n      attached: !0,\n      color1: t.areaColor1,\n      color2: t.areaColor2\n    }), this._areaLabel = new j({\n      view: i,\n      attached: !0,\n      fontSize: U.Large\n    }), this._pathLengthLabel = new j({\n      view: i,\n      attached: !0,\n      fontSize: U.Small\n    }), this._cursorSegmentLengthLabel = new j({\n      view: i,\n      attached: !0,\n      fontSize: U.Small\n    }), this._perimeterLengthLabel = new j({\n      view: i,\n      attached: !0,\n      fontSize: U.Small\n    }), this._handles.add([c(() => [e.mode, this.visible, e.unit, e.measurementData, e.cursorPoint], () => this._update(), m), c(() => i.state?.camera, () => this._updateLabels(), m), R(async () => this._updateMessageBundle())]), this._updateMessageBundle();\n  }\n\n  destroy() {\n    this._measurementArea = r(this._measurementArea), this._path = r(this._path), this._intersectedPath = r(this._intersectedPath), this._perimeter = r(this._perimeter), this._intersectedPerimeter = r(this._intersectedPerimeter), this._areaLabel = r(this._areaLabel), this._pathLengthLabel = r(this._pathLengthLabel), this._cursorSegmentLengthLabel = r(this._cursorSegmentLengthLabel), this._perimeterLengthLabel = r(this._perimeterLengthLabel), this._projectionLines = r(this._projectionLines), this._handles = r(this._handles), this.set(\"view\", null);\n  }\n\n  _update() {\n    if (this.destroyed || !this.view.ready || !this.view.renderCoordsHelper) return;\n    const {\n      analysisViewData: {\n        measurementData: e\n      },\n      analysisViewData: t\n    } = this;\n    n(e) || (this._updateViewData(e, t.path, t.cursorPoint), this._updateOrigin(), this._updatePathSegments(), this._updatePerimeterSegments(), this._updateArea(), this._updateProjectionLines(), this._updateLabels());\n  }\n\n  _updateViewData(e, t, i) {\n    const r = t.isValidPolygon,\n          n = \"geodesic\" === e.actualMeasurementMode,\n          a = n ? e.geodesicArea : e.area;\n    let o = 1;\n\n    if (a) {\n      const t = this._toPreferredAreaUnit(a, this.analysisViewData.unit);\n\n      o = s(Math.sqrt(t.value) / Math.sqrt(300)), o *= Math.sqrt(d(1, t.unit, \"square-meters\")), o /= e.unitNormalizer.normalizeDistance(1);\n    }\n\n    const l = {\n      validMeasurement: r,\n      path: t,\n      pathVersion: t.version,\n      cursorPoint: i,\n      measurementData: e,\n      mode: e.actualMeasurementMode,\n      positionsGeographic: e.positionsGeographic,\n      positionsRenderCoords: e.positionsRenderCoords,\n      positionsProjected: e.positionsProjectedWorldCoords,\n      positionsFittedRenderCoords: e.positionsFittedRenderCoords,\n      intersectingSegments: n ? e.geodesicIntersectingSegments : e.intersectingSegments,\n      triangleIndices: n ? e.geodesicTriangleIndices : e.triangleIndices,\n      fittingMode: e.fittingMode,\n      areaCentroid: n ? e.geodesicAreaCentroidRenderCoords : e.areaCentroidRenderCoords,\n      pathLengthLabelSegmentIndex: r ? 0 : t.numVertices - 2,\n      perimeterLengthLabelSegmentIndex: 0,\n      checkerSize: o\n    };\n\n    this._set(\"viewData\", l);\n  }\n\n  _updateOrigin() {\n    const e = this.viewData;\n    y(e.positionsRenderCoords, this._origin), v(this._originTransform, this._origin), this._measurementArea.transform = this._originTransform, this._projectionLines.transform = this._originTransform;\n  }\n\n  _createSegments(e) {\n    const t = this.viewData,\n          i = t.path,\n          s = this.view.renderCoordsHelper.spatialReference,\n          r = t.mode,\n          n = [],\n          a = [],\n          o = [],\n          l = t.validMeasurement ? i.numVertices : i.numVertices - 1;\n\n    for (let h = 0; h < l; ++h) {\n      const l = t[e][h],\n            c = t[e][(h + 1) % i.numVertices];\n      let m = null;\n\n      switch (r) {\n        case \"euclidean\":\n          m = new D(l, c);\n          break;\n\n        case \"geodesic\":\n          m = new P(l, c, s);\n      }\n\n      t.intersectingSegments.has(h) ? o.push(m) : a.push(m), n.push(m);\n    }\n\n    return {\n      all: n,\n      nonIntersecting: a,\n      intersecting: o\n    };\n  }\n\n  _updatePathSegments() {\n    const {\n      view: {\n        renderCoordsHelper: e\n      },\n      viewData: t,\n      visible: i\n    } = this,\n          s = this._createSegments(\"positionsRenderCoords\"),\n          {\n      cursorPoint: r,\n      mode: n,\n      path: o\n    } = t,\n          l = !o.isValidPolygon,\n          h = e.spatialReference;\n\n    if (this._cursorSegment = null, o.numVertices > 0 && l && a(r)) {\n      if (e.toRenderCoords(r, this._cursorPositionRenderSpace)) {\n        const e = t.positionsRenderCoords[o.numVertices - 1],\n              i = this._cursorPositionRenderSpace;\n        let r = null;\n\n        switch (n) {\n          case \"euclidean\":\n            r = new D(e, i);\n            break;\n\n          case \"geodesic\":\n            r = new P(e, i, h);\n        }\n\n        s.nonIntersecting.push(r), this._cursorSegment = r;\n      }\n    }\n\n    this._path.setGeometryFromSegments(s.nonIntersecting, this._origin), this._path.visible = i, this._intersectedPath.setGeometryFromSegments(s.intersecting, this._origin), this._intersectedPath.visible = i, this._pathSegments = s.all;\n  }\n\n  _updatePerimeterSegments() {\n    const e = this.visible && \"euclidean\" === this.viewData.mode,\n          t = this._createSegments(\"positionsFittedRenderCoords\");\n\n    this._perimeter.setGeometryFromSegments(t.nonIntersecting, this._origin), this._perimeter.visible = e, this._intersectedPerimeter.setGeometryFromSegments(t.intersecting, this._origin), this._intersectedPerimeter.visible = e, this._perimeterSegments = t.all;\n  }\n\n  _updateArea() {\n    const e = this.viewData;\n\n    switch (e.mode) {\n      case \"euclidean\":\n        this._updateAreaEuclidean(e);\n\n        break;\n\n      case \"geodesic\":\n        this._updateAreaGeodesic();\n\n    }\n  }\n\n  _updateAreaEuclidean(e) {\n    const t = this.visible;\n    e.validMeasurement && 0 === e.intersectingSegments.size && e.triangleIndices ? (this._measurementArea.geometry = {\n      uv: e.positionsProjected,\n      position: e.positionsFittedRenderCoords,\n      triangleIndices: e.triangleIndices\n    }, this._measurementArea.size = [e.checkerSize, e.checkerSize], this._measurementArea.visible = t) : this._measurementArea.visible = !1;\n  }\n\n  _updateAreaGeodesic() {\n    this._measurementArea.visible = !1;\n  }\n\n  _updateProjectionLines() {\n    const e = this.viewData,\n          t = this.visible,\n          i = e.path,\n          s = e.mode;\n\n    if (i.numVertices > 0 && e.validMeasurement && \"euclidean\" === s) {\n      const s = [];\n\n      for (let t = 0; t < i.numVertices; ++t) {\n        const i = w();\n        S(i, e.positionsRenderCoords[t], this._origin);\n        const r = w();\n        S(r, e.positionsFittedRenderCoords[t], this._origin), s.push([i, r]);\n      }\n\n      this._projectionLines.geometry = s, this._projectionLines.visible = t;\n    } else this._projectionLines.geometry = null, this._projectionLines.visible = !1;\n  }\n\n  _updateLabels() {\n    if (this.destroyed) return;\n    const {\n      viewData: e\n    } = this,\n          {\n      measurementData: t,\n      mode: i,\n      path: s\n    } = e;\n    if (!s) return;\n\n    const r = !s.isValidPolygon,\n          n = this.visible,\n          l = this._formatAreaLabel(this.messages, \"geodesic\" === i ? t.geodesicArea : t.area, this.analysisViewData.unit);\n\n    a(l) ? (this._areaLabel.geometry = {\n      type: \"point\",\n      point: e.areaCentroid\n    }, this._areaLabel.text = l, this._areaLabel.visible = e.validMeasurement && 0 === e.intersectingSegments.size && n) : this._areaLabel.visible = !1, this._set(\"areaLabel\", o(l));\n\n    const h = this._formatLengthLabel(this.messages, \"geodesic\" === i ? t.geodesicPathLength : t.pathLength, this.analysisViewData.unit);\n\n    if (a(h) && e.pathLengthLabelSegmentIndex >= 0 && e.pathLengthLabelSegmentIndex < this._pathSegments.length) {\n      const t = this._pathSegments[e.pathLengthLabelSegmentIndex],\n            i = a(this._cursorSegment) ? this._cursorSegment : k;\n      this._pathLengthLabel.distance = this._params.labelDistance, this._pathLengthLabel.geometry = {\n        type: \"corner\",\n        left: t,\n        right: i\n      }, this._pathLengthLabel.text = h, this._pathLengthLabel.visible = r && s.numVertices > 0 && n;\n    } else this._pathLengthLabel.visible = !1;\n\n    const c = \"geodesic\" === i ? e.measurementData.geodesicCursorSegmentLength : e.measurementData.cursorSegmentLength;\n\n    if (a(c)) {\n      const e = this._formatLengthLabel(this.messages, c, this.analysisViewData.unit);\n\n      this._cursorSegmentLengthLabel.distance = this._params.labelDistance, this._cursorSegmentLengthLabel.geometry = a(this._cursorSegment) ? {\n        type: \"segment\",\n        segment: this._cursorSegment,\n        sampleLocation: \"end\"\n      } : null, this._cursorSegmentLengthLabel.anchor = \"bottom\", this._cursorSegmentLengthLabel.text = o(e), this._cursorSegmentLengthLabel.visible = r && 0 !== c.value && n;\n    } else this._cursorSegmentLengthLabel.visible = !1;\n\n    this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel) && (this._cursorSegmentLengthLabel.visible = !1), this._pathLengthLabel.overlaps(this._areaLabel) && (this._pathLengthLabel.visible = !1);\n\n    const m = \"geodesic\" === e.mode,\n          d = m ? t.geodesicPathLength : t.perimeterLength,\n          p = this._formatLengthLabel(this.messages, d, this.analysisViewData.unit);\n\n    if (this._set(\"perimeterLengthLabel\", o(p)), e.validMeasurement && 0 === e.intersectingSegments.size) {\n      this._perimeterLengthLabel.distance = this._params.labelDistance, this._perimeterLengthLabel.anchor = \"top\", this._perimeterLengthLabel.text = o(p), this._perimeterLengthLabel.visible = !0;\n      let t = !0;\n\n      for (let i = 0; i < e.path.numVertices; ++i) {\n        const s = (e.perimeterLengthLabelSegmentIndex + i) % e.path.numVertices,\n              r = m ? this._pathSegments[s] : this._perimeterSegments[s];\n        if (t = !0, this._perimeterLengthLabel.geometry = {\n          type: \"segment\",\n          segment: r,\n          sampleLocation: \"center\"\n        }, !this._perimeterLengthLabel.overlaps(this._areaLabel)) break;\n        t = !1;\n      }\n\n      this._perimeterLengthLabel.visible = t && n;\n    } else this._perimeterLengthLabel.visible = !1;\n  }\n\n  _toPreferredAreaUnit(e, t) {\n    return h(e, this._preferredAreaUnit(e, t));\n  }\n\n  _preferredAreaUnit(e, t) {\n    switch (t) {\n      case \"metric\":\n        return u(e.value, e.unit);\n\n      case \"imperial\":\n        return p(e.value, e.unit);\n\n      default:\n        return t;\n    }\n  }\n\n  _preferredLengthUnit(e, t) {\n    const i = this._deriveLengthUnitFromAreaUnit(t);\n\n    switch (i) {\n      case \"metric\":\n        return L(e.value, e.unit);\n\n      case \"imperial\":\n        return g(e.value, e.unit);\n\n      default:\n        return i;\n    }\n  }\n\n  _deriveLengthUnitFromAreaUnit(e) {\n    switch (e) {\n      case \"metric\":\n      case \"ares\":\n      case \"hectares\":\n        return \"metric\";\n\n      case \"imperial\":\n      case \"acres\":\n        return \"imperial\";\n\n      case \"square-inches\":\n        return \"inches\";\n\n      case \"square-feet\":\n        return \"feet\";\n\n      case \"square-yards\":\n        return \"yards\";\n\n      case \"square-miles\":\n        return \"miles\";\n\n      case \"square-us-feet\":\n        return \"us-feet\";\n\n      case \"square-millimeters\":\n        return \"millimeters\";\n\n      case \"square-centimeters\":\n        return \"centimeters\";\n\n      case \"square-decimeters\":\n        return \"decimeters\";\n\n      case \"square-meters\":\n        return \"meters\";\n\n      case \"square-kilometers\":\n        return \"kilometers\";\n    }\n\n    throw new Error(\"unhandled area unit\");\n  }\n\n  _formatAreaLabel(e, t, i) {\n    return e && t && l(e, t, this._preferredAreaUnit(t, i));\n  }\n\n  _formatLengthLabel(e, t, i) {\n    return e && t && l(e, t, this._preferredLengthUnit(t, i));\n  }\n\n  _updateMessageBundle() {\n    this.loadingMessages = !0, I(\"esri/core/t9n/Units\").then(e => {\n      this.messages = e, this.view && this._update();\n    }).finally(() => {\n      this.loadingMessages = !1;\n    });\n  }\n\n};\nvar U;\ne([_()], O.prototype, \"view\", void 0), e([_()], O.prototype, \"messages\", void 0), e([_()], O.prototype, \"analysis\", void 0), e([_()], O.prototype, \"viewData\", void 0), e([_()], O.prototype, \"analysisViewData\", void 0), e([_({\n  readOnly: !0\n})], O.prototype, \"areaLabel\", void 0), e([_({\n  readOnly: !0\n})], O.prototype, \"perimeterLengthLabel\", void 0), e([_()], O.prototype, \"loadingMessages\", void 0), e([_()], O.prototype, \"visible\", null), O = e([b(\"esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization\")], O), function (e) {\n  e[e.Small = 12] = \"Small\", e[e.Large = 16] = \"Large\";\n}(U || (U = {}));\nconst z = {\n  laserLineGlowColor: [1, .5, 0],\n  laserLineGlowWidth: 8,\n  laserLineGlowFalloff: 8,\n  laserLineInnerColor: [1, 1, 1],\n  laserLineInnerWidth: 1,\n  laserLineGlobalAlpha: .75,\n  laserLineEnabled: !0,\n  handleColor: [1, .5, 0],\n  handleOpacity: .5,\n  handleRadius: 5,\n  handleRadiusHovered: 10,\n  handleRadiusMouse: 10,\n  handleRadiusTouch: 25,\n  pathLineColor: [1, .5, 0, 1],\n  pathLineWidth: 3,\n  intersectingLineColor: [1, .2, 0, 1],\n  perimeterLineColor: [1, .5, 0, 1],\n  perimeterLineWidth: 2,\n  projectionLineColor: [1, .5, 0, 1],\n  projectionLineWidth: 2,\n  projectionLineStippleSize: 5,\n  areaColor1: [1, .5, 0, .5],\n  areaColor2: [1, 1, 1, .5],\n  fillColor: [1, .5, 0, .5],\n  lineSubdivisions: 64,\n  labelDistance: 25\n},\n      q = {\n  validMeasurement: !1,\n  path: null,\n  pathVersion: -1,\n  cursorPoint: null,\n  measurementData: null,\n  mode: null,\n  positionsGeographic: null,\n  positionsRenderCoords: null,\n  positionsProjected: null,\n  positionsFittedRenderCoords: null,\n  intersectingSegments: null,\n  triangleIndices: null,\n  fittingMode: null,\n  areaCentroid: null,\n  pathLengthLabelSegmentIndex: null,\n  perimeterLengthLabelSegmentIndex: null,\n  checkerSize: null\n},\n      k = new D(w(), w());\nexport { O as AreaMeasurementVisualization };","map":{"version":3,"names":["_","e","t","i","nextHighestPowerOfTen","s","destroyMaybe","r","isNone","n","isSome","a","unwrap","o","formatDecimal","l","toUnit","h","watch","c","syncAndInitial","m","convertUnit","d","preferredImperialAreaUnit","p","preferredMetricAreaUnit","u","preferredImperialLengthUnit","g","preferredMetricLengthUnit","L","property","subclass","b","f","v","S","w","midpoint","y","LabelVisualElement","j","LineVisualElement","C","MeasurementAreaVisualElement","A","GeodesicSegment","P","EuclideanSegment","D","RenderOccludedFlag","V","createStipplePatternSimple","M","onLocaleChange","R","fetchMessageBundle","I","O","constructor","_handles","_params","z","_path","_intersectedPath","_perimeter","_intersectedPerimeter","_projectionLines","_measurementArea","_areaLabel","_pathLengthLabel","_cursorSegmentLengthLabel","_perimeterLengthLabel","_pathSegments","_perimeterSegments","_cursorSegment","_origin","_originTransform","_cursorPositionRenderSpace","messages","viewData","q","areaLabel","perimeterLengthLabel","loadingMessages","visible","analysisViewData","testData","labels","area","pathLength","cursorSegmentLength","perimeterLength","initialize","view","attached","width","pathLineWidth","color","pathLineColor","polygonOffset","renderOccluded","OccludeAndTransparent","intersectingLineColor","perimeterLineWidth","perimeterLineColor","projectionLineWidth","projectionLineColor","stipplePattern","projectionLineStippleSize","color1","areaColor1","color2","areaColor2","fontSize","U","Large","Small","add","mode","unit","measurementData","cursorPoint","_update","state","camera","_updateLabels","_updateMessageBundle","destroy","set","destroyed","ready","renderCoordsHelper","_updateViewData","path","_updateOrigin","_updatePathSegments","_updatePerimeterSegments","_updateArea","_updateProjectionLines","isValidPolygon","actualMeasurementMode","geodesicArea","_toPreferredAreaUnit","Math","sqrt","value","unitNormalizer","normalizeDistance","validMeasurement","pathVersion","version","positionsGeographic","positionsRenderCoords","positionsProjected","positionsProjectedWorldCoords","positionsFittedRenderCoords","intersectingSegments","geodesicIntersectingSegments","triangleIndices","geodesicTriangleIndices","fittingMode","areaCentroid","geodesicAreaCentroidRenderCoords","areaCentroidRenderCoords","pathLengthLabelSegmentIndex","numVertices","perimeterLengthLabelSegmentIndex","checkerSize","_set","transform","_createSegments","spatialReference","has","push","all","nonIntersecting","intersecting","toRenderCoords","setGeometryFromSegments","_updateAreaEuclidean","_updateAreaGeodesic","size","geometry","uv","position","_formatAreaLabel","type","point","text","_formatLengthLabel","geodesicPathLength","length","k","distance","labelDistance","left","right","geodesicCursorSegmentLength","segment","sampleLocation","anchor","overlaps","_preferredAreaUnit","_preferredLengthUnit","_deriveLengthUnitFromAreaUnit","Error","then","finally","prototype","readOnly","laserLineGlowColor","laserLineGlowWidth","laserLineGlowFalloff","laserLineInnerColor","laserLineInnerWidth","laserLineGlobalAlpha","laserLineEnabled","handleColor","handleOpacity","handleRadius","handleRadiusHovered","handleRadiusMouse","handleRadiusTouch","fillColor","lineSubdivisions","AreaMeasurementVisualization"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/analysis/AreaMeasurement/support/AreaMeasurementVisualization.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../../chunks/tslib.es6.js\";import\"../../../../../intl.js\";import t from\"../../../../../core/Accessor.js\";import\"../../../../../core/has.js\";import i from\"../../../../../core/Handles.js\";import{nextHighestPowerOfTen as s}from\"../../../../../core/mathUtils.js\";import{destroyMaybe as r,isNone as n,isSome as a,unwrap as o}from\"../../../../../core/maybe.js\";import{formatDecimal as l}from\"../../../../../core/quantityFormatUtils.js\";import{toUnit as h}from\"../../../../../core/quantityUtils.js\";import{watch as c,syncAndInitial as m}from\"../../../../../core/reactiveUtils.js\";import{convertUnit as d,preferredImperialAreaUnit as p,preferredMetricAreaUnit as u,preferredImperialLengthUnit as g,preferredMetricLengthUnit as L}from\"../../../../../core/unitUtils.js\";import{property as _}from\"../../../../../core/accessorSupport/decorators/property.js\";import\"../../../../../core/arrayUtils.js\";import\"../../../../../core/accessorSupport/ensureType.js\";import{subclass as b}from\"../../../../../core/accessorSupport/decorators/subclass.js\";import{f as v}from\"../../../../../chunks/mat4.js\";import{c as f}from\"../../../../../chunks/mat4f64.js\";import{b as S}from\"../../../../../chunks/vec3.js\";import{c as w}from\"../../../../../chunks/vec3f64.js\";import{midpoint as y}from\"../../support/viewUtils.js\";import{LabelVisualElement as j}from\"../../../interactive/visualElements/LabelVisualElement.js\";import{LineVisualElement as C}from\"../../../interactive/visualElements/LineVisualElement.js\";import{MeasurementAreaVisualElement as A}from\"../../../interactive/visualElements/MeasurementAreaVisualElement.js\";import{GeodesicSegment as P,EuclideanSegment as D}from\"../../../interactive/visualElements/support/Segment.js\";import{RenderOccludedFlag as V}from\"../../../webgl-engine/lib/Material.js\";import{createStipplePatternSimple as M}from\"../../../webgl-engine/materials/lineStippleUtils.js\";import{onLocaleChange as R}from\"../../../../../intl/locale.js\";import{fetchMessageBundle as I}from\"../../../../../intl/messages.js\";let O=class extends t{constructor(e){super(e),this._handles=new i,this._params={...z},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=w(),this._originTransform=f(),this._cursorPositionRenderSpace=w(),this.messages=null,this.viewData=q,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const{analysisViewData:e,_params:t,view:i}=this;this._path=new C({view:i,attached:!0,width:t.pathLineWidth,color:t.pathLineColor,polygonOffset:!0,renderOccluded:V.OccludeAndTransparent}),this._intersectedPath=new C({view:i,attached:!0,width:t.pathLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:V.OccludeAndTransparent}),this._perimeter=new C({view:i,attached:!0,width:t.perimeterLineWidth,color:t.perimeterLineColor,polygonOffset:!0,renderOccluded:V.OccludeAndTransparent}),this._intersectedPerimeter=new C({view:i,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:V.OccludeAndTransparent}),this._projectionLines=new C({view:i,attached:!0,width:t.projectionLineWidth,color:t.projectionLineColor,stipplePattern:M(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:V.OccludeAndTransparent}),this._measurementArea=new A({view:i,attached:!0,color1:t.areaColor1,color2:t.areaColor2}),this._areaLabel=new j({view:i,attached:!0,fontSize:U.Large}),this._pathLengthLabel=new j({view:i,attached:!0,fontSize:U.Small}),this._cursorSegmentLengthLabel=new j({view:i,attached:!0,fontSize:U.Small}),this._perimeterLengthLabel=new j({view:i,attached:!0,fontSize:U.Small}),this._handles.add([c((()=>[e.mode,this.visible,e.unit,e.measurementData,e.cursorPoint]),(()=>this._update()),m),c((()=>i.state?.camera),(()=>this._updateLabels()),m),R((async()=>this._updateMessageBundle()))]),this._updateMessageBundle()}destroy(){this._measurementArea=r(this._measurementArea),this._path=r(this._path),this._intersectedPath=r(this._intersectedPath),this._perimeter=r(this._perimeter),this._intersectedPerimeter=r(this._intersectedPerimeter),this._areaLabel=r(this._areaLabel),this._pathLengthLabel=r(this._pathLengthLabel),this._cursorSegmentLengthLabel=r(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=r(this._perimeterLengthLabel),this._projectionLines=r(this._projectionLines),this._handles=r(this._handles),this.set(\"view\",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:e},analysisViewData:t}=this;n(e)||(this._updateViewData(e,t.path,t.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t,i){const r=t.isValidPolygon,n=\"geodesic\"===e.actualMeasurementMode,a=n?e.geodesicArea:e.area;let o=1;if(a){const t=this._toPreferredAreaUnit(a,this.analysisViewData.unit);o=s(Math.sqrt(t.value)/Math.sqrt(300)),o*=Math.sqrt(d(1,t.unit,\"square-meters\")),o/=e.unitNormalizer.normalizeDistance(1)}const l={validMeasurement:r,path:t,pathVersion:t.version,cursorPoint:i,measurementData:e,mode:e.actualMeasurementMode,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:n?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:n?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:n?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:r?0:t.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set(\"viewData\",l)}_updateOrigin(){const e=this.viewData;y(e.positionsRenderCoords,this._origin),v(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,i=t.path,s=this.view.renderCoordsHelper.spatialReference,r=t.mode,n=[],a=[],o=[],l=t.validMeasurement?i.numVertices:i.numVertices-1;for(let h=0;h<l;++h){const l=t[e][h],c=t[e][(h+1)%i.numVertices];let m=null;switch(r){case\"euclidean\":m=new D(l,c);break;case\"geodesic\":m=new P(l,c,s)}t.intersectingSegments.has(h)?o.push(m):a.push(m),n.push(m)}return{all:n,nonIntersecting:a,intersecting:o}}_updatePathSegments(){const{view:{renderCoordsHelper:e},viewData:t,visible:i}=this,s=this._createSegments(\"positionsRenderCoords\"),{cursorPoint:r,mode:n,path:o}=t,l=!o.isValidPolygon,h=e.spatialReference;if(this._cursorSegment=null,o.numVertices>0&&l&&a(r)){if(e.toRenderCoords(r,this._cursorPositionRenderSpace)){const e=t.positionsRenderCoords[o.numVertices-1],i=this._cursorPositionRenderSpace;let r=null;switch(n){case\"euclidean\":r=new D(e,i);break;case\"geodesic\":r=new P(e,i,h)}s.nonIntersecting.push(r),this._cursorSegment=r}}this._path.setGeometryFromSegments(s.nonIntersecting,this._origin),this._path.visible=i,this._intersectedPath.setGeometryFromSegments(s.intersecting,this._origin),this._intersectedPath.visible=i,this._pathSegments=s.all}_updatePerimeterSegments(){const e=this.visible&&\"euclidean\"===this.viewData.mode,t=this._createSegments(\"positionsFittedRenderCoords\");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case\"euclidean\":this._updateAreaEuclidean(e);break;case\"geodesic\":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,i=e.path,s=e.mode;if(i.numVertices>0&&e.validMeasurement&&\"euclidean\"===s){const s=[];for(let t=0;t<i.numVertices;++t){const i=w();S(i,e.positionsRenderCoords[t],this._origin);const r=w();S(r,e.positionsFittedRenderCoords[t],this._origin),s.push([i,r])}this._projectionLines.geometry=s,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:e}=this,{measurementData:t,mode:i,path:s}=e;if(!s)return;const r=!s.isValidPolygon,n=this.visible,l=this._formatAreaLabel(this.messages,\"geodesic\"===i?t.geodesicArea:t.area,this.analysisViewData.unit);a(l)?(this._areaLabel.geometry={type:\"point\",point:e.areaCentroid},this._areaLabel.text=l,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&n):this._areaLabel.visible=!1,this._set(\"areaLabel\",o(l));const h=this._formatLengthLabel(this.messages,\"geodesic\"===i?t.geodesicPathLength:t.pathLength,this.analysisViewData.unit);if(a(h)&&e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const t=this._pathSegments[e.pathLengthLabelSegmentIndex],i=a(this._cursorSegment)?this._cursorSegment:k;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:\"corner\",left:t,right:i},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&s.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const c=\"geodesic\"===i?e.measurementData.geodesicCursorSegmentLength:e.measurementData.cursorSegmentLength;if(a(c)){const e=this._formatLengthLabel(this.messages,c,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=a(this._cursorSegment)?{type:\"segment\",segment:this._cursorSegment,sampleLocation:\"end\"}:null,this._cursorSegmentLengthLabel.anchor=\"bottom\",this._cursorSegmentLengthLabel.text=o(e),this._cursorSegmentLengthLabel.visible=r&&0!==c.value&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const m=\"geodesic\"===e.mode,d=m?t.geodesicPathLength:t.perimeterLength,p=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);if(this._set(\"perimeterLengthLabel\",o(p)),e.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor=\"top\",this._perimeterLengthLabel.text=o(p),this._perimeterLengthLabel.visible=!0;let t=!0;for(let i=0;i<e.path.numVertices;++i){const s=(e.perimeterLengthLabelSegmentIndex+i)%e.path.numVertices,r=m?this._pathSegments[s]:this._perimeterSegments[s];if(t=!0,this._perimeterLengthLabel.geometry={type:\"segment\",segment:r,sampleLocation:\"center\"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;t=!1}this._perimeterLengthLabel.visible=t&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(e,t){return h(e,this._preferredAreaUnit(e,t))}_preferredAreaUnit(e,t){switch(t){case\"metric\":return u(e.value,e.unit);case\"imperial\":return p(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const i=this._deriveLengthUnitFromAreaUnit(t);switch(i){case\"metric\":return L(e.value,e.unit);case\"imperial\":return g(e.value,e.unit);default:return i}}_deriveLengthUnitFromAreaUnit(e){switch(e){case\"metric\":case\"ares\":case\"hectares\":return\"metric\";case\"imperial\":case\"acres\":return\"imperial\";case\"square-inches\":return\"inches\";case\"square-feet\":return\"feet\";case\"square-yards\":return\"yards\";case\"square-miles\":return\"miles\";case\"square-us-feet\":return\"us-feet\";case\"square-millimeters\":return\"millimeters\";case\"square-centimeters\":return\"centimeters\";case\"square-decimeters\":return\"decimeters\";case\"square-meters\":return\"meters\";case\"square-kilometers\":return\"kilometers\"}throw new Error(\"unhandled area unit\")}_formatAreaLabel(e,t,i){return e&&t&&l(e,t,this._preferredAreaUnit(t,i))}_formatLengthLabel(e,t,i){return e&&t&&l(e,t,this._preferredLengthUnit(t,i))}_updateMessageBundle(){this.loadingMessages=!0,I(\"esri/core/t9n/Units\").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};var U;e([_()],O.prototype,\"view\",void 0),e([_()],O.prototype,\"messages\",void 0),e([_()],O.prototype,\"analysis\",void 0),e([_()],O.prototype,\"viewData\",void 0),e([_()],O.prototype,\"analysisViewData\",void 0),e([_({readOnly:!0})],O.prototype,\"areaLabel\",void 0),e([_({readOnly:!0})],O.prototype,\"perimeterLengthLabel\",void 0),e([_()],O.prototype,\"loadingMessages\",void 0),e([_()],O.prototype,\"visible\",null),O=e([b(\"esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization\")],O),function(e){e[e.Small=12]=\"Small\",e[e.Large=16]=\"Large\"}(U||(U={}));const z={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},q={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},k=new D(w(),w());export{O as AreaMeasurementVisualization};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}