{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { a as e } from \"../../../../../../chunks/vec2.js\";\nimport { a as t } from \"../../../../../../chunks/vec2f64.js\";\nimport { s as r } from \"../../../../../../chunks/vec4.js\";\nimport { c as a } from \"../../../../../../chunks/vec4f64.js\";\nimport { FoamIntensity as o } from \"./FoamRendering.glsl.js\";\nimport { Float2PassUniform as m } from \"../../shaderModules/Float2PassUniform.js\";\nimport { Float4PassUniform as s } from \"../../shaderModules/Float4PassUniform.js\";\nimport { glsl as v } from \"../../shaderModules/interfaces.js\";\nimport { Texture2DUniform as u } from \"../../shaderModules/Texture2DUniform.js\";\n\nfunction l(t) {\n  t.fragment.uniforms.add(new u(\"texWaveNormal\")), t.fragment.uniforms.add(new u(\"texWavePerturbation\")), t.fragment.uniforms.add([new s(\"waveParams\", e => r(i, e.waveStrength, e.waveTextureRepeat, e.flowStrength, e.flowOffset)), new m(\"waveDirection\", t => e(f, t.waveDirection[0] * t.waveVelocity, t.waveDirection[1] * t.waveVelocity))]), t.include(o), t.fragment.code.add(v`const vec2  FLOW_JUMP = vec2(6.0/25.0, 5.0/24.0);\nvec2 textureDenormalized2D(sampler2D _tex, vec2 _uv) {\nreturn 2.0 * texture2D(_tex, _uv).rg - 1.0;\n}\nfloat sampleNoiseTexture(vec2 _uv) {\nreturn texture2D(texWavePerturbation, _uv).b;\n}\nvec3 textureDenormalized3D(sampler2D _tex, vec2 _uv) {\nreturn 2.0 * texture2D(_tex, _uv).rgb - 1.0;\n}\nfloat computeProgress(vec2 uv, float time) {\nreturn fract(time);\n}\nfloat computeWeight(vec2 uv, float time) {\nfloat progress = computeProgress(uv, time);\nreturn 1.0 - abs(1.0 - 2.0 * progress);\n}\nvec3 computeUVPerturbedWeigth(sampler2D texFlow, vec2 uv, float time, float phaseOffset) {\nfloat flowStrength = waveParams[2];\nfloat flowOffset = waveParams[3];\nvec2 flowVector = textureDenormalized2D(texFlow, uv) * flowStrength;\nfloat progress = computeProgress(uv, time + phaseOffset);\nfloat weight = computeWeight(uv, time + phaseOffset);\nvec2 result = uv;\nresult -= flowVector * (progress + flowOffset);\nresult += phaseOffset;\nresult += (time - progress) * FLOW_JUMP;\nreturn vec3(result, weight);\n}\nconst float TIME_NOISE_TEXTURE_REPEAT = 0.3737;\nconst float TIME_NOISE_STRENGTH = 7.77;\nvec3 getWaveLayer(sampler2D _texNormal, sampler2D _dudv, vec2 _uv, vec2 _waveDir, float time) {\nfloat waveStrength = waveParams[0];\nvec2 waveMovement = time * -_waveDir;\nfloat timeNoise = sampleNoiseTexture(_uv * TIME_NOISE_TEXTURE_REPEAT) * TIME_NOISE_STRENGTH;\nvec3 uv_A = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.0);\nvec3 uv_B = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.5);\nvec3 normal_A = textureDenormalized3D(_texNormal, uv_A.xy) * uv_A.z;\nvec3 normal_B = textureDenormalized3D(_texNormal, uv_B.xy) * uv_B.z;\nvec3 mixNormal = normalize(normal_A + normal_B);\nmixNormal.xy *= waveStrength;\nmixNormal.z = sqrt(1.0 - dot(mixNormal.xy, mixNormal.xy));\nreturn mixNormal;\n}\nvec4 getSurfaceNormalAndFoam(vec2 _uv, float _time) {\nfloat waveTextureRepeat = waveParams[1];\nvec3 normal = getWaveLayer(texWaveNormal, texWavePerturbation, _uv * waveTextureRepeat, waveDirection, _time);\nfloat foam  = normals2FoamIntensity(normal, waveParams[0]);\nreturn vec4(normal, foam);\n}`);\n}\n\nconst i = a(),\n      f = t();\nexport { l as WaterDistortion };","map":{"version":3,"names":["a","e","t","s","r","c","FoamIntensity","o","Float2PassUniform","m","Float4PassUniform","glsl","v","Texture2DUniform","u","l","fragment","uniforms","add","i","waveStrength","waveTextureRepeat","flowStrength","flowOffset","f","waveDirection","waveVelocity","include","code","WaterDistortion"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/WaterDistortion.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{a as e}from\"../../../../../../chunks/vec2.js\";import{a as t}from\"../../../../../../chunks/vec2f64.js\";import{s as r}from\"../../../../../../chunks/vec4.js\";import{c as a}from\"../../../../../../chunks/vec4f64.js\";import{FoamIntensity as o}from\"./FoamRendering.glsl.js\";import{Float2PassUniform as m}from\"../../shaderModules/Float2PassUniform.js\";import{Float4PassUniform as s}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as v}from\"../../shaderModules/interfaces.js\";import{Texture2DUniform as u}from\"../../shaderModules/Texture2DUniform.js\";function l(t){t.fragment.uniforms.add(new u(\"texWaveNormal\")),t.fragment.uniforms.add(new u(\"texWavePerturbation\")),t.fragment.uniforms.add([new s(\"waveParams\",(e=>r(i,e.waveStrength,e.waveTextureRepeat,e.flowStrength,e.flowOffset))),new m(\"waveDirection\",(t=>e(f,t.waveDirection[0]*t.waveVelocity,t.waveDirection[1]*t.waveVelocity)))]),t.include(o),t.fragment.code.add(v`const vec2  FLOW_JUMP = vec2(6.0/25.0, 5.0/24.0);\nvec2 textureDenormalized2D(sampler2D _tex, vec2 _uv) {\nreturn 2.0 * texture2D(_tex, _uv).rg - 1.0;\n}\nfloat sampleNoiseTexture(vec2 _uv) {\nreturn texture2D(texWavePerturbation, _uv).b;\n}\nvec3 textureDenormalized3D(sampler2D _tex, vec2 _uv) {\nreturn 2.0 * texture2D(_tex, _uv).rgb - 1.0;\n}\nfloat computeProgress(vec2 uv, float time) {\nreturn fract(time);\n}\nfloat computeWeight(vec2 uv, float time) {\nfloat progress = computeProgress(uv, time);\nreturn 1.0 - abs(1.0 - 2.0 * progress);\n}\nvec3 computeUVPerturbedWeigth(sampler2D texFlow, vec2 uv, float time, float phaseOffset) {\nfloat flowStrength = waveParams[2];\nfloat flowOffset = waveParams[3];\nvec2 flowVector = textureDenormalized2D(texFlow, uv) * flowStrength;\nfloat progress = computeProgress(uv, time + phaseOffset);\nfloat weight = computeWeight(uv, time + phaseOffset);\nvec2 result = uv;\nresult -= flowVector * (progress + flowOffset);\nresult += phaseOffset;\nresult += (time - progress) * FLOW_JUMP;\nreturn vec3(result, weight);\n}\nconst float TIME_NOISE_TEXTURE_REPEAT = 0.3737;\nconst float TIME_NOISE_STRENGTH = 7.77;\nvec3 getWaveLayer(sampler2D _texNormal, sampler2D _dudv, vec2 _uv, vec2 _waveDir, float time) {\nfloat waveStrength = waveParams[0];\nvec2 waveMovement = time * -_waveDir;\nfloat timeNoise = sampleNoiseTexture(_uv * TIME_NOISE_TEXTURE_REPEAT) * TIME_NOISE_STRENGTH;\nvec3 uv_A = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.0);\nvec3 uv_B = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.5);\nvec3 normal_A = textureDenormalized3D(_texNormal, uv_A.xy) * uv_A.z;\nvec3 normal_B = textureDenormalized3D(_texNormal, uv_B.xy) * uv_B.z;\nvec3 mixNormal = normalize(normal_A + normal_B);\nmixNormal.xy *= waveStrength;\nmixNormal.z = sqrt(1.0 - dot(mixNormal.xy, mixNormal.xy));\nreturn mixNormal;\n}\nvec4 getSurfaceNormalAndFoam(vec2 _uv, float _time) {\nfloat waveTextureRepeat = waveParams[1];\nvec3 normal = getWaveLayer(texWaveNormal, texWavePerturbation, _uv * waveTextureRepeat, waveDirection, _time);\nfloat foam  = normals2FoamIntensity(normal, waveParams[0]);\nreturn vec4(normal, foam);\n}`)}const i=a(),f=t();export{l as WaterDistortion};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,kCAAlB;AAAqD,SAAOD,CAAC,IAAIE,CAAZ,QAAkB,qCAAlB;AAAwD,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,kCAAlB;AAAqD,SAAOC,CAAC,IAAIL,CAAZ,QAAkB,qCAAlB;AAAwD,SAAOM,aAAa,IAAIC,CAAxB,QAA8B,yBAA9B;AAAwD,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,0CAAlC;AAA6E,SAAOC,iBAAiB,IAAIP,CAA5B,QAAkC,0CAAlC;AAA6E,SAAOQ,IAAI,IAAIC,CAAf,QAAqB,mCAArB;AAAyD,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,yCAAjC;;AAA2E,SAASC,CAAT,CAAWb,CAAX,EAAa;EAACA,CAAC,CAACc,QAAF,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,IAAIJ,CAAJ,CAAM,eAAN,CAAxB,GAAgDZ,CAAC,CAACc,QAAF,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,IAAIJ,CAAJ,CAAM,qBAAN,CAAxB,CAAhD,EAAsGZ,CAAC,CAACc,QAAF,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,CAAC,IAAIf,CAAJ,CAAM,YAAN,EAAoBF,CAAC,IAAEG,CAAC,CAACe,CAAD,EAAGlB,CAAC,CAACmB,YAAL,EAAkBnB,CAAC,CAACoB,iBAApB,EAAsCpB,CAAC,CAACqB,YAAxC,EAAqDrB,CAAC,CAACsB,UAAvD,CAAxB,CAAD,EAA8F,IAAId,CAAJ,CAAM,eAAN,EAAuBP,CAAC,IAAED,CAAC,CAACuB,CAAD,EAAGtB,CAAC,CAACuB,aAAF,CAAgB,CAAhB,IAAmBvB,CAAC,CAACwB,YAAxB,EAAqCxB,CAAC,CAACuB,aAAF,CAAgB,CAAhB,IAAmBvB,CAAC,CAACwB,YAA1D,CAA3B,CAA9F,CAAxB,CAAtG,EAAmUxB,CAAC,CAACyB,OAAF,CAAUpB,CAAV,CAAnU,EAAgVL,CAAC,CAACc,QAAF,CAAWY,IAAX,CAAgBV,GAAhB,CAAoBN,CAAE;AACp6B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAjD84B,CAAhV;AAiD1jB;;AAAA,MAAMO,CAAC,GAACnB,CAAC,EAAT;AAAA,MAAYwB,CAAC,GAACtB,CAAC,EAAf;AAAkB,SAAOa,CAAC,IAAIc,eAAZ"},"metadata":{},"sourceType":"module"}