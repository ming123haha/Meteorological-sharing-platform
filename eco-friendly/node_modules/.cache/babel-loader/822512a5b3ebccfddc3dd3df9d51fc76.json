{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { a as e } from \"./vec2.js\";\nimport { a as i } from \"./vec2f64.js\";\nimport { SliceDraw as o } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { multipassTerrainTest as s } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { Float2PassUniform as n } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float4PassUniform as t } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as d } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as a } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4Uniform as l } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4Uniform.js\";\nimport { ShaderBuilder as r } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { VertexAttribute as c } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nimport { AdjustProjectedPosition as p } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js\";\nimport { DiscardByCoverage as P } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js\";\nimport { DiscardNonSilhouetteEdges as u } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js\";\nimport { DiscardShortEdges as g } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardShortEdges.glsl.js\";\nimport { EdgeUtil as v } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js\";\nimport { LineAmplitude as f } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js\";\nimport { LineOffset as m } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js\";\nimport { UnpackAttributes as x } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js\";\n\nfunction w(i) {\n  const w = new r(),\n        A = w.vertex,\n        L = w.fragment;\n  return i.legacy && A.uniforms.add(new l(\"model\")), i.antialiasing && (A.code.add(a`#define ANTIALIASING 1`), L.code.add(a`#define ANTIALIASING 1`)), w.include(p, i), w.include(v, i), w.include(f, i), w.include(x, i), w.include(m, i), w.include(o, i), w.include(u, i), w.include(P, i), w.include(g, i), w.include(s, i), w.varyings.add(\"vColor\", \"vec4\"), w.varyings.add(\"vRadius\", \"float\"), w.varyings.add(\"vPosition\", \"vec3\"), w.varyings.add(\"vWorldPosition\", \"vec3\"), w.varyings.add(\"vViewPos\", \"vec3\"), w.varyings.add(\"vLineLengthPixels\", \"float\"), w.varyings.add(\"vSizeFalloffFactor\", \"float\"), A.uniforms.add(new n(\"pixelToNDC\", (i, o) => e(h, 2 / o.camera.fullViewport[2], 2 / o.camera.fullViewport[3]))), A.uniforms.add(new t(\"viewport\", (e, i) => i.camera.fullViewport)), A.uniforms.add(new d(\"pixelRatio\", (e, i) => i.camera.pixelRatio)), w.attributes.add(c.POSITION0, \"vec3\"), w.attributes.add(c.POSITION1, \"vec3\"), w.attributes.add(c.VARIANTOFFSET, \"float\"), w.attributes.add(c.VARIANTSTROKE, \"float\"), w.attributes.add(c.VARIANTEXTENSION, \"float\"), A.code.add(a`const float opaqueCutoff = 1.0 / 255.0;\nvoid calculateGeometricOutputs(vec3 viewPosV0, vec3 viewPosV1, vec3 worldPosV0, vec3 worldPosV1, vec3 worldNormal, UnpackedAttributes unpackedAttributes) {\nvec2 sideness = unpackedAttributes.sideness;\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nvWorldPosition = mix(worldPosV0, worldPosV1, sidenessNorm.y).xyz;\nvec3 viewPos = mix(viewPosV0, viewPosV1, sidenessNorm.y);\nvViewPos = viewPos;\nvec4 projPosV0 = projFromViewPosition(viewPosV0);\nvec4 projPosV1 = projFromViewPosition(viewPosV1);\nvec4 projPos = projFromViewPosition(viewPos);\nvec3 screenSpaceLineNDC = (projPosV1.xyz / projPosV1.w - projPosV0.xyz / projPosV0.w);\nvec2 ndcToPixel = viewport.zw * 0.5;\nvec2 screenSpaceLinePixels = screenSpaceLineNDC.xy * ndcToPixel;\nfloat lineLengthPixels = length(screenSpaceLinePixels);\nfloat dzPerPixel = screenSpaceLineNDC.z / lineLengthPixels;\nvec2 screenSpaceDirection = screenSpaceLinePixels / lineLengthPixels;\nvec2 perpendicularScreenSpaceDirection = vec2(screenSpaceDirection.y, -screenSpaceDirection.x) * sideness.x;\nfloat falloffFactor = distanceBasedPerspectiveFactor(-viewPos.z) * pixelRatio;\nfloat lineWidthPixels = unpackedAttributes.lineWidthPixels * falloffFactor;\nfloat extensionLengthPixels = calculateExtensionLength(unpackedAttributes.extensionLengthPixels, lineLengthPixels) * falloffFactor;\nfloat lineAmplitudePixels = calculateLineAmplitude(unpackedAttributes) * pixelRatio;\nvSizeFalloffFactor = falloffFactor;\nfloat lineWidthAndAmplitudePixels = lineWidthPixels + lineAmplitudePixels + lineAmplitudePixels;\nfloat extendedLineLengthPixels = lineLengthPixels + extensionLengthPixels + extensionLengthPixels;\n#ifdef ANTIALIASING\nconst float aaPaddingPixels = 1.0;\nfloat halfAAPaddedLineWidthAndAmplitudePixels = lineWidthAndAmplitudePixels * 0.5 + aaPaddingPixels;\nfloat aaPaddedRoundedCapSizePixels = lineWidthPixels * 0.5 + aaPaddingPixels;\n#else\nfloat halfAAPaddedLineWidthAndAmplitudePixels = max(lineWidthAndAmplitudePixels, 1.0) * 0.5;\nfloat aaPaddedRoundedCapSizePixels = max(lineWidthPixels, 1.0) * 0.5;\n#endif\nvec2 halfAAPaddedLineWidthAndAmplitudeNDC = halfAAPaddedLineWidthAndAmplitudePixels * pixelToNDC;\nvec2 aaPaddedRoundedCapSizeNDC = aaPaddedRoundedCapSizePixels * pixelToNDC;\nvec2 extensionLengthNDC = extensionLengthPixels * pixelToNDC;\nvec2 ndcOffset = (\nscreenSpaceDirection * sideness.y * (aaPaddedRoundedCapSizeNDC + extensionLengthNDC)\n+ perpendicularScreenSpaceDirection * halfAAPaddedLineWidthAndAmplitudeNDC\n);\nprojPos.xy += ndcOffset * projPos.w;\nprojPos.z += (dzPerPixel * (aaPaddedRoundedCapSizePixels + extensionLengthPixels)) * sideness.y * projPos.w;\nprojPos = adjustProjectedPosition(projPos, worldNormal, 1.0 + max((lineWidthAndAmplitudePixels - 1.0) * 0.5, 0.0));\nfloat aaPaddedLineWithCapsLengthPixels = extendedLineLengthPixels + aaPaddedRoundedCapSizePixels + aaPaddedRoundedCapSizePixels;\nfloat pixelPositionAlongLine = aaPaddedLineWithCapsLengthPixels * sidenessNorm.y - aaPaddedRoundedCapSizePixels;\nvPosition = vec3(\nhalfAAPaddedLineWidthAndAmplitudePixels * sideness.x,\npixelPositionAlongLine,\npixelPositionAlongLine / extendedLineLengthPixels\n);\nvRadius = lineWidthPixels * 0.5;\nvLineLengthPixels = extendedLineLengthPixels;\ndiscardShortEdges(unpackedAttributes, lineLengthPixels);\ngl_Position = projPos;\n}\nvoid main() {\nComponentData component = readComponentData();\nUnpackedAttributes unpackedAttributes = unpackAttributes(component);\nvec3 worldPosV0, worldPosV1, viewPosV0, viewPosV1;\nworldAndViewFromModelPosition(position0, component.verticalOffset, worldPosV0, viewPosV0);\nworldAndViewFromModelPosition(position1, component.verticalOffset, worldPosV1, viewPosV1);\nvColor = component.color;\nif (vColor.a < opaqueCutoff) {\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn;\n}\nif (discardNonSilhouetteEdges(viewPosV0, worldPosV0)) {\nreturn;\n}\ncalculateGeometricOutputs(viewPosV0, viewPosV1, worldPosV0, worldPosV1, worldNormal(), unpackedAttributes);\ncalculateStyleOutputs(unpackedAttributes);\n}`), w.fragment.code.add(a`\n    vec2 lineWithCapsDistance(float radius, vec2 position, float lineLength) {\n      float lineOffset = calculateLineOffset();\n      float positionX = position.x - lineOffset;\n\n      if (radius < 1.0) {\n        // Handle this specifically for subpixel sizes:\n        // 1. Compute correct coverage (note coverage is computed by\n        //    0.5 - dist, so we make sure that that will lead to correct\n        //    subpixel coverage\n        // 2. Ignore rounded caps\n        float coverageX = clamp(min(radius, positionX + 0.5) - max(-radius, positionX - 0.5), 0.0, 1.0);\n        float coverageY = clamp(min(lineLength, position.y + 0.5) - max(0.0, position.y - 0.5), 0.0, 1.0);\n\n        float coverage = min(coverageX, coverageY);\n\n        return vec2(0.5 - coverage, 0.0);\n      }\n      else {\n        // Between -radius -> 0 for start cap, 0 for line, 0 -> radius\n        float positionOnCap = position.y - clamp(position.y, 0.0, lineLength);\n\n        vec2 lineToPosition = vec2(positionX, positionOnCap);\n        return vec2(length(lineToPosition) - radius, positionOnCap / radius);\n      }\n    }\n\n    void main() {\n      ${i.hasMultipassTerrain ? \"terrainDepthTest(gl_FragCoord, vViewPos.z);\" : \"\"}\n      float radius = vRadius * calculateLinePressure();\n\n      vec2 distance = lineWithCapsDistance(radius, vPosition.xy, vLineLengthPixels);\n      float coverage = clamp(0.5 - distance.x, 0.0, 1.0);\n\n      discardByCoverage(radius, coverage);\n      discardBySlice(vWorldPosition);\n\n      float alpha = vColor.a * coverage;\n\n      gl_FragColor = vec4(vColor.rgb, alpha);\n\n    }\n  `), w;\n}\n\nconst h = i(),\n      A = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: w\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { A as E, w as b };","map":{"version":3,"names":["a","e","i","SliceDraw","o","multipassTerrainTest","s","Float2PassUniform","n","Float4PassUniform","t","FloatPassUniform","d","glsl","Matrix4Uniform","l","ShaderBuilder","r","VertexAttribute","c","AdjustProjectedPosition","p","DiscardByCoverage","P","DiscardNonSilhouetteEdges","u","DiscardShortEdges","g","EdgeUtil","v","LineAmplitude","f","LineOffset","m","UnpackAttributes","x","w","A","vertex","L","fragment","legacy","uniforms","add","antialiasing","code","include","varyings","h","camera","fullViewport","pixelRatio","attributes","POSITION0","POSITION1","VARIANTOFFSET","VARIANTSTROKE","VARIANTEXTENSION","hasMultipassTerrain","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value","E","b"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/chunks/EdgeShader.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{a as e}from\"./vec2.js\";import{a as i}from\"./vec2f64.js\";import{SliceDraw as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{multipassTerrainTest as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Float2PassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as a}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4Uniform as l}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4Uniform.js\";import{ShaderBuilder as r}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{VertexAttribute as c}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{AdjustProjectedPosition as p}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js\";import{DiscardByCoverage as P}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js\";import{DiscardNonSilhouetteEdges as u}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js\";import{DiscardShortEdges as g}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardShortEdges.glsl.js\";import{EdgeUtil as v}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js\";import{LineAmplitude as f}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js\";import{LineOffset as m}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js\";import{UnpackAttributes as x}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js\";function w(i){const w=new r,A=w.vertex,L=w.fragment;return i.legacy&&A.uniforms.add(new l(\"model\")),i.antialiasing&&(A.code.add(a`#define ANTIALIASING 1`),L.code.add(a`#define ANTIALIASING 1`)),w.include(p,i),w.include(v,i),w.include(f,i),w.include(x,i),w.include(m,i),w.include(o,i),w.include(u,i),w.include(P,i),w.include(g,i),w.include(s,i),w.varyings.add(\"vColor\",\"vec4\"),w.varyings.add(\"vRadius\",\"float\"),w.varyings.add(\"vPosition\",\"vec3\"),w.varyings.add(\"vWorldPosition\",\"vec3\"),w.varyings.add(\"vViewPos\",\"vec3\"),w.varyings.add(\"vLineLengthPixels\",\"float\"),w.varyings.add(\"vSizeFalloffFactor\",\"float\"),A.uniforms.add(new n(\"pixelToNDC\",((i,o)=>e(h,2/o.camera.fullViewport[2],2/o.camera.fullViewport[3])))),A.uniforms.add(new t(\"viewport\",((e,i)=>i.camera.fullViewport))),A.uniforms.add(new d(\"pixelRatio\",((e,i)=>i.camera.pixelRatio))),w.attributes.add(c.POSITION0,\"vec3\"),w.attributes.add(c.POSITION1,\"vec3\"),w.attributes.add(c.VARIANTOFFSET,\"float\"),w.attributes.add(c.VARIANTSTROKE,\"float\"),w.attributes.add(c.VARIANTEXTENSION,\"float\"),A.code.add(a`const float opaqueCutoff = 1.0 / 255.0;\nvoid calculateGeometricOutputs(vec3 viewPosV0, vec3 viewPosV1, vec3 worldPosV0, vec3 worldPosV1, vec3 worldNormal, UnpackedAttributes unpackedAttributes) {\nvec2 sideness = unpackedAttributes.sideness;\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nvWorldPosition = mix(worldPosV0, worldPosV1, sidenessNorm.y).xyz;\nvec3 viewPos = mix(viewPosV0, viewPosV1, sidenessNorm.y);\nvViewPos = viewPos;\nvec4 projPosV0 = projFromViewPosition(viewPosV0);\nvec4 projPosV1 = projFromViewPosition(viewPosV1);\nvec4 projPos = projFromViewPosition(viewPos);\nvec3 screenSpaceLineNDC = (projPosV1.xyz / projPosV1.w - projPosV0.xyz / projPosV0.w);\nvec2 ndcToPixel = viewport.zw * 0.5;\nvec2 screenSpaceLinePixels = screenSpaceLineNDC.xy * ndcToPixel;\nfloat lineLengthPixels = length(screenSpaceLinePixels);\nfloat dzPerPixel = screenSpaceLineNDC.z / lineLengthPixels;\nvec2 screenSpaceDirection = screenSpaceLinePixels / lineLengthPixels;\nvec2 perpendicularScreenSpaceDirection = vec2(screenSpaceDirection.y, -screenSpaceDirection.x) * sideness.x;\nfloat falloffFactor = distanceBasedPerspectiveFactor(-viewPos.z) * pixelRatio;\nfloat lineWidthPixels = unpackedAttributes.lineWidthPixels * falloffFactor;\nfloat extensionLengthPixels = calculateExtensionLength(unpackedAttributes.extensionLengthPixels, lineLengthPixels) * falloffFactor;\nfloat lineAmplitudePixels = calculateLineAmplitude(unpackedAttributes) * pixelRatio;\nvSizeFalloffFactor = falloffFactor;\nfloat lineWidthAndAmplitudePixels = lineWidthPixels + lineAmplitudePixels + lineAmplitudePixels;\nfloat extendedLineLengthPixels = lineLengthPixels + extensionLengthPixels + extensionLengthPixels;\n#ifdef ANTIALIASING\nconst float aaPaddingPixels = 1.0;\nfloat halfAAPaddedLineWidthAndAmplitudePixels = lineWidthAndAmplitudePixels * 0.5 + aaPaddingPixels;\nfloat aaPaddedRoundedCapSizePixels = lineWidthPixels * 0.5 + aaPaddingPixels;\n#else\nfloat halfAAPaddedLineWidthAndAmplitudePixels = max(lineWidthAndAmplitudePixels, 1.0) * 0.5;\nfloat aaPaddedRoundedCapSizePixels = max(lineWidthPixels, 1.0) * 0.5;\n#endif\nvec2 halfAAPaddedLineWidthAndAmplitudeNDC = halfAAPaddedLineWidthAndAmplitudePixels * pixelToNDC;\nvec2 aaPaddedRoundedCapSizeNDC = aaPaddedRoundedCapSizePixels * pixelToNDC;\nvec2 extensionLengthNDC = extensionLengthPixels * pixelToNDC;\nvec2 ndcOffset = (\nscreenSpaceDirection * sideness.y * (aaPaddedRoundedCapSizeNDC + extensionLengthNDC)\n+ perpendicularScreenSpaceDirection * halfAAPaddedLineWidthAndAmplitudeNDC\n);\nprojPos.xy += ndcOffset * projPos.w;\nprojPos.z += (dzPerPixel * (aaPaddedRoundedCapSizePixels + extensionLengthPixels)) * sideness.y * projPos.w;\nprojPos = adjustProjectedPosition(projPos, worldNormal, 1.0 + max((lineWidthAndAmplitudePixels - 1.0) * 0.5, 0.0));\nfloat aaPaddedLineWithCapsLengthPixels = extendedLineLengthPixels + aaPaddedRoundedCapSizePixels + aaPaddedRoundedCapSizePixels;\nfloat pixelPositionAlongLine = aaPaddedLineWithCapsLengthPixels * sidenessNorm.y - aaPaddedRoundedCapSizePixels;\nvPosition = vec3(\nhalfAAPaddedLineWidthAndAmplitudePixels * sideness.x,\npixelPositionAlongLine,\npixelPositionAlongLine / extendedLineLengthPixels\n);\nvRadius = lineWidthPixels * 0.5;\nvLineLengthPixels = extendedLineLengthPixels;\ndiscardShortEdges(unpackedAttributes, lineLengthPixels);\ngl_Position = projPos;\n}\nvoid main() {\nComponentData component = readComponentData();\nUnpackedAttributes unpackedAttributes = unpackAttributes(component);\nvec3 worldPosV0, worldPosV1, viewPosV0, viewPosV1;\nworldAndViewFromModelPosition(position0, component.verticalOffset, worldPosV0, viewPosV0);\nworldAndViewFromModelPosition(position1, component.verticalOffset, worldPosV1, viewPosV1);\nvColor = component.color;\nif (vColor.a < opaqueCutoff) {\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn;\n}\nif (discardNonSilhouetteEdges(viewPosV0, worldPosV0)) {\nreturn;\n}\ncalculateGeometricOutputs(viewPosV0, viewPosV1, worldPosV0, worldPosV1, worldNormal(), unpackedAttributes);\ncalculateStyleOutputs(unpackedAttributes);\n}`),w.fragment.code.add(a`\n    vec2 lineWithCapsDistance(float radius, vec2 position, float lineLength) {\n      float lineOffset = calculateLineOffset();\n      float positionX = position.x - lineOffset;\n\n      if (radius < 1.0) {\n        // Handle this specifically for subpixel sizes:\n        // 1. Compute correct coverage (note coverage is computed by\n        //    0.5 - dist, so we make sure that that will lead to correct\n        //    subpixel coverage\n        // 2. Ignore rounded caps\n        float coverageX = clamp(min(radius, positionX + 0.5) - max(-radius, positionX - 0.5), 0.0, 1.0);\n        float coverageY = clamp(min(lineLength, position.y + 0.5) - max(0.0, position.y - 0.5), 0.0, 1.0);\n\n        float coverage = min(coverageX, coverageY);\n\n        return vec2(0.5 - coverage, 0.0);\n      }\n      else {\n        // Between -radius -> 0 for start cap, 0 for line, 0 -> radius\n        float positionOnCap = position.y - clamp(position.y, 0.0, lineLength);\n\n        vec2 lineToPosition = vec2(positionX, positionOnCap);\n        return vec2(length(lineToPosition) - radius, positionOnCap / radius);\n      }\n    }\n\n    void main() {\n      ${i.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, vViewPos.z);\":\"\"}\n      float radius = vRadius * calculateLinePressure();\n\n      vec2 distance = lineWithCapsDistance(radius, vPosition.xy, vLineLengthPixels);\n      float coverage = clamp(0.5 - distance.x, 0.0, 1.0);\n\n      discardByCoverage(radius, coverage);\n      discardBySlice(vWorldPosition);\n\n      float alpha = vColor.a * coverage;\n\n      gl_FragColor = vec4(vColor.rgb, alpha);\n\n    }\n  `),w}const h=i(),A=Object.freeze(Object.defineProperty({__proto__:null,build:w},Symbol.toStringTag,{value:\"Module\"}));export{A as E,w as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}