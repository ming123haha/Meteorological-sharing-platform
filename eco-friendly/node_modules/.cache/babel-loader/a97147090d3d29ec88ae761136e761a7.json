{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport { isSome as r, unwrap as e } from \"../../core/maybe.js\";\nimport t from \"../../geometry/support/GeographicTransformation.js\";\nimport s from \"./PixelBlock.js\";\nimport { decode as o } from \"./rasterFormats/RasterCodec.js\";\nimport { split as i, mosaic as a, approximateTransform as n, getLocalArithmeticNorthRotations as m } from \"./rasterFunctions/pixelUtils.js\";\nimport { requirePE as l, load as c, getProjectionOffsetGrid as f } from \"./rasterFunctions/rasterProjectionHelper.js\";\nimport { estimateStatisticsHistograms as p } from \"./rasterFunctions/stretchUtils.js\";\nimport { convertVectorFieldData as u, convertToLocalDirections as d } from \"./rasterFunctions/vectorFieldUtils.js\";\nimport { readTransform as S } from \"./rasterTransforms/utils.js\";\nimport h from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as y } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport x from \"../../geometry/Extent.js\";\n\nclass O {\n  convertVectorFieldData(e) {\n    const t = s.fromJSON(e.pixelBlock),\n          o = u(t, e.type);\n    return Promise.resolve(r(o) && o.toJSON());\n  }\n\n  async decode(r) {\n    const e = await o(r.data, r.options);\n    return e && e.toJSON();\n  }\n\n  symbolize(e) {\n    e.pixelBlock = s.fromJSON(e.pixelBlock), e.extent = e.extent ? x.fromJSON(e.extent) : null;\n    const t = this.symbolizer.symbolize(e);\n    return Promise.resolve(r(t) && t.toJSON());\n  }\n\n  async updateSymbolizer(r) {\n    this.symbolizer = h.fromJSON(r.symbolizerJSON), r.histograms && \"rasterStretch\" === this.symbolizer?.rendererJSON.type && (this.symbolizer.rendererJSON.histograms = r.histograms);\n  }\n\n  stretch(e) {\n    const t = this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock), e.stretchParams);\n    return Promise.resolve(r(t) && t.toJSON());\n  }\n\n  estimateStatisticsHistograms(r) {\n    const e = p(s.fromJSON(r.srcPixelBlock));\n    return Promise.resolve(e);\n  }\n\n  split(r) {\n    const e = i(s.fromJSON(r.srcPixelBlock), r.tileSize, r.maximumPyramidLevel);\n    return e && e.forEach((r, t) => {\n      e.set(t, r?.toJSON());\n    }), Promise.resolve(e);\n  }\n\n  async mosaicAndTransform(r) {\n    const t = r.srcPixelBlocks.map(r => r ? new s(r) : null),\n          o = a(t, r.srcMosaicSize, {\n      blockWidths: r.blockWidths,\n      alignmentInfo: r.alignmentInfo,\n      clipOffset: r.clipOffset,\n      clipSize: r.clipSize\n    });\n    let i,\n        l = o;\n    return r.coefs && (l = n(o, r.destDimension, r.coefs, r.sampleSpacing, r.interpolation)), r.projectDirections && r.gcsGrid && (i = m(r.destDimension, r.gcsGrid), l = e(d(l, r.isUV ? \"vector-uv\" : \"vector-magdir\", i))), {\n      pixelBlock: l?.toJSON(),\n      localNorthDirections: i\n    };\n  }\n\n  async createFlowMesh(r, e) {\n    const t = {\n      data: new Float32Array(r.flowData.buffer),\n      mask: new Uint8Array(r.flowData.maskBuffer),\n      width: r.flowData.width,\n      height: r.flowData.height\n    },\n          {\n      vertexData: s,\n      indexData: o\n    } = await y(r.meshType, r.simulationSettings, t, e.signal);\n    return {\n      result: {\n        vertexBuffer: s.buffer,\n        indexBuffer: o.buffer\n      },\n      transferList: [s.buffer, o.buffer]\n    };\n  }\n\n  async getProjectionOffsetGrid(r) {\n    const e = x.fromJSON(r.projectedExtent),\n          s = x.fromJSON(r.srcBufferExtent);\n    let o = null;\n    r.datumTransformationSteps && (o = new t({\n      steps: r.datumTransformationSteps\n    })), (r.includeGCSGrid || l(e.spatialReference, s.spatialReference, o)) && (await c());\n    const i = r.rasterTransform ? S(r.rasterTransform) : null;\n    return f({ ...r,\n      projectedExtent: e,\n      srcBufferExtent: s,\n      datumTransformation: o,\n      rasterTransform: i\n    });\n  }\n\n}\n\nexport { O as default };","map":{"version":3,"names":["isSome","r","unwrap","e","t","s","decode","o","split","i","mosaic","a","approximateTransform","n","getLocalArithmeticNorthRotations","m","requirePE","l","load","c","getProjectionOffsetGrid","f","estimateStatisticsHistograms","p","convertVectorFieldData","u","convertToLocalDirections","d","readTransform","S","h","createFlowMesh","y","x","O","fromJSON","pixelBlock","type","Promise","resolve","toJSON","data","options","symbolize","extent","symbolizer","updateSymbolizer","symbolizerJSON","histograms","rendererJSON","stretch","simpleStretch","srcPixelBlock","stretchParams","tileSize","maximumPyramidLevel","forEach","set","mosaicAndTransform","srcPixelBlocks","map","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","isUV","localNorthDirections","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","rasterTransform","datumTransformation","default"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r,unwrap as e}from\"../../core/maybe.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import s from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{split as i,mosaic as a,approximateTransform as n,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{requirePE as l,load as c,getProjectionOffsetGrid as f}from\"./rasterFunctions/rasterProjectionHelper.js\";import{estimateStatisticsHistograms as p}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as u,convertToLocalDirections as d}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as S}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as y}from\"../../views/2d/engine/flow/dataUtils.js\";import x from\"../../geometry/Extent.js\";class O{convertVectorFieldData(e){const t=s.fromJSON(e.pixelBlock),o=u(t,e.type);return Promise.resolve(r(o)&&o.toJSON())}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=s.fromJSON(e.pixelBlock),e.extent=e.extent?x.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(r(t)&&t.toJSON())}async updateSymbolizer(r){this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(e){const t=this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(t)&&t.toJSON())}estimateStatisticsHistograms(r){const e=p(s.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,r?.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new s(r):null)),o=a(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let i,l=o;return r.coefs&&(l=n(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(i=m(r.destDimension,r.gcsGrid),l=e(d(l,r.isUV?\"vector-uv\":\"vector-magdir\",i))),{pixelBlock:l?.toJSON(),localNorthDirections:i}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await y(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(r){const e=x.fromJSON(r.projectedExtent),s=x.fromJSON(r.srcBufferExtent);let o=null;r.datumTransformationSteps&&(o=new t({steps:r.datumTransformationSteps})),(r.includeGCSGrid||l(e.spatialReference,s.spatialReference,o))&&await c();const i=r.rasterTransform?S(r.rasterTransform):null;return f({...r,projectedExtent:e,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{O as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}