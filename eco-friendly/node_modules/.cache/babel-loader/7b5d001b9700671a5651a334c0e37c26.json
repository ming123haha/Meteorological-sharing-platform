{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport e from \"../../../request.js\";\nimport i from \"../../../core/Error.js\";\nimport { JSONSupport as o } from \"../../../core/JSONSupport.js\";\nimport r from \"../../../core/Logger.js\";\nimport { isSome as n, unwrap as s, isNone as a } from \"../../../core/maybe.js\";\nimport { EsriPromiseMixin as l } from \"../../../core/Promise.js\";\nimport { onAbort as c } from \"../../../core/promiseUtils.js\";\nimport { property as m } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as f } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { sanitizeUrl as h } from \"../arcgisLayerUrl.js\";\nimport { url as u } from \"../commonProperties.js\";\nimport p from \"../RasterStorageInfo.js\";\nimport d from \"../TileInfo.js\";\nimport { isMultiSliceOrRangeDefinition as x, getSliceIndex as g, createSlices as y, getSliceIds as I } from \"./multidimensionalUtils.js\";\nimport { getRasterId as R, getBlock as w, putBlock as k, deleteBlock as b, decreaseRefCount as v } from \"./RawBlockCache.js\";\nimport { decode as S } from \"../rasterFormats/RasterCodec.js\";\nimport { mosaic as T, approximateTransform as B, getLocalArithmeticNorthRotations as P } from \"../rasterFunctions/pixelUtils.js\";\nimport { load as W, getWorldWidth as M, projectPoint as C, snapPyramid as _, snapExtent as j, getWorldWrapCount as H, projectExtent as E, getProjectionOffsetGrid as L, getRasterDatasetAlignmentInfo as D, projectResolution as z } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport { convertToLocalDirections as A, uvComponentToVector as F } from \"../rasterFunctions/vectorFieldUtils.js\";\nimport O from \"../../../geometry/Extent.js\";\nimport N from \"../../../geometry/Point.js\";\nconst q = 8;\nlet G = class extends l(o) {\n  constructor() {\n    super(...arguments), this.rasterJobHandler = null, this.datasetName = null, this.datasetFormat = null, this.rasterInfo = null, this.ioConfig = {\n      sampling: \"closest\"\n    };\n  }\n\n  async init() {\n    const t = W();\n    this.addResolvingPromise(t), await this.when();\n  }\n\n  normalizeCtorArgs(t) {\n    return t && t.ioConfig && (t = { ...t,\n      ioConfig: {\n        resolution: null,\n        bandIds: null,\n        sampling: \"closest\",\n        tileInfo: d.create(),\n        ...t.ioConfig\n      }\n    }), t;\n  }\n\n  get _isGlobalWrappableSource() {\n    const {\n      rasterInfo: t\n    } = this,\n          e = M(t.spatialReference);\n    return n(e) && t.extent.width >= e / 2;\n  }\n\n  set url(t) {\n    this._set(\"url\", h(t, r.getLogger(this.declaredClass)));\n  }\n\n  async open(t) {\n    throw new i(\"BaseRaster:open-not-implemented\", \"open() is not implemented\");\n  }\n\n  async fetchTile(t, e, i, o = {}) {\n    const r = o.tileInfo || this.rasterInfo.storageInfo.tileInfo,\n          n = this.getTileExtentFromTileInfo(t, e, i, r);\n    return this.fetchPixels(n, r.size[0], r.size[1], o);\n  }\n\n  async identify(t, e = {}) {\n    const {\n      multidimensionalDefinition: i,\n      timeExtent: o\n    } = e,\n          {\n      hasMultidimensionalTranspose: r,\n      multidimensionalInfo: l\n    } = this.rasterInfo;\n    let {\n      transposedVariableName: c\n    } = e;\n    const m = n(l) && r && (null != o || x(i));\n\n    if (m && !c) {\n      c = n(i) && i.length > 0 ? i[0].variableName : l.variables[0].name, e = { ...e,\n        transposedVariableName: c\n      };\n    }\n\n    e = this._getRequestOptionsWithSliceId(e);\n    const {\n      spatialReference: f,\n      extent: h\n    } = this.rasterInfo,\n          {\n      datumTransformation: u\n    } = e;\n    let p = C(t, f, u);\n    if (!h.intersects(p)) return {\n      location: p,\n      value: null\n    };\n\n    if (n(this.rasterInfo.transform)) {\n      const t = this.rasterInfo.transform.inverseTransform(p);\n      if (!this.rasterInfo.nativeExtent.intersects(t)) return {\n        location: t,\n        value: null\n      };\n      p = t;\n    }\n\n    let d = 0;\n    const g = c && n(l) && this.rasterInfo.hasMultidimensionalTranspose;\n    if (!g) if (e.srcResolution) {\n      d = _(e.srcResolution, this.rasterInfo, this.ioConfig.sampling).pyramidLevel;\n    } else if (d = await this.computeBestPyramidLevelForLocation(t, e), null == d) return {\n      location: p,\n      value: null\n    };\n    const y = this.identifyPixelLocation(p, d, null, g);\n    if (null === y) return {\n      location: p,\n      value: null\n    };\n    const {\n      row: I,\n      col: b,\n      rowOffset: v,\n      colOffset: S,\n      blockWidth: T\n    } = y,\n          B = c ?? s(e.sliceId),\n          P = R(this.url, B),\n          W = `${d}/${I}/${b}`;\n    let M = w(P, null, W);\n    a(M) && (M = this.fetchRawTile(d, I, b, e), k(P, null, W, M));\n    const j = await M;\n    if (a(j) || !j.pixels?.length) return {\n      location: p,\n      value: null\n    };\n    const H = v * T + S;\n    return this._processIdentifyResult(j, {\n      srcLocation: p,\n      position: H,\n      pyramidLevel: d,\n      useTransposedTile: g,\n      requestSomeSlices: m,\n      identifyOptions: e\n    });\n  }\n\n  async fetchPixels(t, e, i, o = {}) {\n    if (t = j(t), (o = this._getRequestOptionsWithSliceId(o)).requestRawData) return this._fetchPixels(t, e, i, o);\n    const r = M(t.spatialReference),\n          n = H(t);\n    if (a(r) || 0 === n || 1 === n && this._isGlobalWrappableSource) return this._fetchPixels(t, e, i, o);\n    if (n >= 3) return {\n      extent: t,\n      pixelBlock: null\n    };\n    const s = [],\n          {\n      xmin: l,\n      xmax: c\n    } = t,\n          m = Math.round(r / (c - l) * e),\n          f = m - Math.round((r / 2 - l) / (c - l) * e);\n    let h = 0;\n    const u = [];\n\n    for (let a = 0; a <= n; a++) {\n      const p = new O({\n        xmin: 0 === a ? l : -r / 2,\n        xmax: a === n ? c - r * a : r / 2,\n        ymin: t.ymin,\n        ymax: t.ymax,\n        spatialReference: t.spatialReference\n      }),\n            d = 0 === a ? m - f : a === n ? e - h : m;\n      h += d, u.push(d);\n      const x = o.disableWrapAround && a > 0 ? null : this._fetchPixels(p, d, i, o);\n      s.push(x);\n    }\n\n    const p = (await Promise.all(s)).map(t => t?.pixelBlock);\n    let d = null;\n    const x = {\n      width: e,\n      height: i\n    };\n\n    if (this.rasterJobHandler) {\n      d = (await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: p,\n        srcMosaicSize: x,\n        destDimension: null,\n        coefs: null,\n        sampleSpacing: null,\n        interpolation: \"nearest\",\n        alignmentInfo: null,\n        blockWidths: u\n      }, o)).pixelBlock;\n    } else d = T(p, x, {\n      blockWidths: u\n    });\n\n    return {\n      extent: t,\n      srcExtent: E(t, this.rasterInfo.spatialReference, o.datumTransformation),\n      pixelBlock: d\n    };\n  }\n\n  async fetchRawPixels(t, e, i, o = {}) {\n    e = {\n      x: Math.floor(e.x),\n      y: Math.floor(e.y)\n    };\n    const r = await this._fetchRawTiles(t, e, i, o),\n          {\n      nativeExtent: s,\n      nativePixelSize: a,\n      storageInfo: l\n    } = this.rasterInfo,\n          c = 2 ** t,\n          m = a.x * c,\n          f = a.y * c,\n          h = new O({\n      xmin: s.xmin + m * e.x,\n      xmax: s.xmin + m * (e.x + i.width - 1),\n      ymin: s.ymax - f * (e.y + i.height - 1),\n      ymax: s.ymax - f * e.y,\n      spatialReference: s.spatialReference\n    });\n    if (!r) return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: null\n    };\n    const {\n      pixelBlocks: u,\n      mosaicSize: p\n    } = r;\n    if (1 === u.length && n(u[0]) && u[0].width === i.width && u[0].height === i.height) return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: r.pixelBlocks[0]\n    };\n    const d = t > 0 ? l.pyramidBlockWidth : l.blockWidth,\n          x = t > 0 ? l.pyramidBlockHeight : l.blockHeight,\n          g = {\n      x: e.x % d,\n      y: e.y % x\n    };\n    let y;\n\n    if (this.rasterJobHandler) {\n      y = (await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: u,\n        srcMosaicSize: p,\n        destDimension: i,\n        clipOffset: g,\n        clipSize: i,\n        coefs: null,\n        sampleSpacing: null,\n        interpolation: o.interpolation,\n        alignmentInfo: null,\n        blockWidths: null\n      }, o)).pixelBlock;\n    } else y = T(u, p, {\n      clipOffset: g,\n      clipSize: i\n    });\n\n    return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: y\n    };\n  }\n\n  fetchRawTile(t, e, o, r) {\n    throw new i(\"BaseRaster:read-not-implemented\", \"fetchRawTile() is not implemented\");\n  }\n\n  computeExtent(t) {\n    return E(this.rasterInfo.extent, t);\n  }\n\n  decodePixelBlock(t, e) {\n    return !this.rasterJobHandler || e.useCanvas ? S(t, e) : this.rasterJobHandler.decode({\n      data: t,\n      options: e\n    });\n  }\n\n  async request(t, i, o) {\n    const {\n      customFetchParameters: r\n    } = this.ioConfig,\n          {\n      range: n,\n      query: s,\n      headers: a\n    } = i;\n    o = o ?? i.retryCount ?? this.ioConfig.retryCount;\n    const l = n ? {\n      Range: `bytes=${n.from}-${n.to}`\n    } : null;\n\n    try {\n      return await e(t, { ...i,\n        query: { ...s,\n          ...r\n        },\n        headers: { ...a,\n          ...l\n        }\n      });\n    } catch (c) {\n      if (o > 0) return o--, this.request(t, i, o);\n      throw c;\n    }\n  }\n\n  getSliceIndex(t) {\n    const {\n      multidimensionalInfo: e\n    } = this.rasterInfo;\n    return a(e) || a(t) || 0 === t.length ? null : g(t, e);\n  }\n\n  getTileExtentFromTileInfo(t, e, i, o) {\n    const r = o.lodAt(t);\n    return this.getTileExtent({\n      x: r.resolution,\n      y: r.resolution\n    }, e, i, o.origin, o.spatialReference, o.size);\n  }\n\n  updateTileInfo() {\n    const {\n      storageInfo: t,\n      spatialReference: e,\n      extent: i,\n      pixelSize: o\n    } = this.rasterInfo;\n\n    if (!t.tileInfo) {\n      const r = [],\n            n = t.maximumPyramidLevel || 0;\n      let s = Math.max(o.x, o.y),\n          a = 1 / .0254 * 96 * s;\n\n      for (let t = 0; t <= n; t++) r.push({\n        level: n - t,\n        resolution: s,\n        scale: a\n      }), s *= 2, a *= 2;\n\n      const l = new N({\n        x: i.xmin,\n        y: i.ymax,\n        spatialReference: e\n      });\n      t.tileInfo = new d({\n        origin: l,\n        size: [t.blockWidth, t.blockHeight],\n        spatialReference: e,\n        lods: r\n      }), t.isVirtualTileInfo = !0;\n    }\n  }\n\n  createRemoteDatasetStorageInfo(t, e = 512, i = 512, o) {\n    const {\n      width: r,\n      height: n,\n      nativeExtent: s,\n      pixelSize: a,\n      spatialReference: l\n    } = t,\n          c = new N({\n      x: s.xmin,\n      y: s.ymax,\n      spatialReference: l\n    });\n    null == o && (o = Math.max(0, Math.round(Math.log(Math.max(r, n)) / Math.LN2 - 8)));\n    const m = this.computeBlockBoundary(s, 512, 512, {\n      x: s.xmin,\n      y: s.ymax\n    }, [a], o);\n    t.storageInfo = new p({\n      blockWidth: e,\n      blockHeight: i,\n      pyramidBlockWidth: e,\n      pyramidBlockHeight: i,\n      origin: c,\n      firstPyramidLevel: 1,\n      maximumPyramidLevel: o,\n      blockBoundary: m\n    });\n  }\n\n  async computeBestPyramidLevelForLocation(t, e = {}) {\n    return 0;\n  }\n\n  computeBlockBoundary(t, e, i, o, r, n = 0, s = 2) {\n    if (1 === r.length && n > 0) {\n      r = [...r];\n      let {\n        x: t,\n        y: e\n      } = r[0];\n\n      for (let i = 0; i < n; i++) t *= s, e *= s, r.push({\n        x: t,\n        y: e\n      });\n    }\n\n    const a = [],\n          {\n      x: l,\n      y: c\n    } = o;\n\n    for (let m = 0; m < r.length; m++) {\n      const {\n        x: o,\n        y: n\n      } = r[m];\n      a.push({\n        minCol: Math.floor((t.xmin - l + .1 * o) / e / o),\n        maxCol: Math.floor((t.xmax - l - .1 * o) / e / o),\n        minRow: Math.floor((c - t.ymax + .1 * n) / i / n),\n        maxRow: Math.floor((c - t.ymin - .1 * n) / i / n)\n      });\n    }\n\n    return a;\n  }\n\n  getPyramidPixelSize(t) {\n    const {\n      nativePixelSize: e\n    } = this.rasterInfo,\n          {\n      pyramidResolutions: i,\n      pyramidScalingFactor: o\n    } = this.rasterInfo.storageInfo;\n    if (0 === t) return e;\n    if (n(i) && i.length) return i[t - 1];\n    const r = o ** t;\n    return {\n      x: e.x * r,\n      y: e.y * r\n    };\n  }\n\n  identifyPixelLocation(t, e, i, o) {\n    const {\n      spatialReference: r,\n      nativeExtent: s,\n      storageInfo: a\n    } = this.rasterInfo,\n          {\n      maximumPyramidLevel: l,\n      origin: c,\n      transposeInfo: m\n    } = a,\n          f = o && n(m) ? m.tileSize[0] : a.blockWidth,\n          h = o && n(m) ? m.tileSize[1] : a.blockHeight,\n          u = C(t, r, i);\n    if (!s.intersects(u)) return null;\n    if (e < 0 || e > l) return null;\n    const p = this.getPyramidPixelSize(e),\n          {\n      x: d,\n      y: x\n    } = p,\n          g = (c.y - u.y) / x / h,\n          y = (u.x - c.x) / d / f,\n          I = Math.min(h - 1, Math.floor((g - Math.floor(g)) * h)),\n          R = Math.min(f - 1, Math.floor((y - Math.floor(y)) * f));\n    return {\n      pyramidLevel: e,\n      row: Math.floor(g),\n      col: Math.floor(y),\n      rowOffset: I,\n      colOffset: R,\n      blockWidth: f,\n      srcLocation: u\n    };\n  }\n\n  getTileExtent(t, e, i, o, r, n) {\n    const [s, a] = n,\n          l = o.x + i * s * t.x,\n          c = l + s * t.x,\n          m = o.y - e * a * t.y,\n          f = m - a * t.y;\n    return new O({\n      xmin: l,\n      xmax: c,\n      ymin: f,\n      ymax: m,\n      spatialReference: r\n    });\n  }\n\n  getBlockWidthHeight(t) {\n    return {\n      blockWidth: t > 0 ? this.rasterInfo.storageInfo.pyramidBlockWidth : this.rasterInfo.storageInfo.blockWidth,\n      blockHeight: t > 0 ? this.rasterInfo.storageInfo.pyramidBlockHeight : this.rasterInfo.storageInfo.blockHeight\n    };\n  }\n\n  isBlockOutside(t, e, i) {\n    const o = this.rasterInfo.storageInfo.blockBoundary[t];\n    return !o || o.maxRow < e || o.maxCol < i || o.minRow > e || o.minCol > i;\n  }\n\n  async _fetchPixels(t, e, i, o = {}) {\n    let r = H(t);\n    if (r >= 2) return {\n      extent: t,\n      pixelBlock: null\n    };\n\n    const a = this._getSourceDataInfo(t, e, i, o),\n          {\n      pyramidLevel: l,\n      pyramidResolution: c,\n      srcResolution: m,\n      srcExtent: f,\n      srcWidth: h,\n      srcHeight: u\n    } = a;\n\n    if (0 === h || 0 === u) return {\n      extent: t,\n      srcExtent: f,\n      pixelBlock: null\n    };\n    const p = s(this.rasterInfo.transform),\n          d = \"gcs-shift\" === p?.type,\n          x = n(M(t.spatialReference));\n    !d && x || (r = H(a.srcExtent, d));\n    const g = this.rasterInfo.storageInfo,\n          y = {\n      x: Math.floor((f.xmin - g.origin.x) / c.x + .1),\n      y: Math.floor((g.origin.y - f.ymax) / c.y + .1)\n    },\n          I = await this._fetchRawTiles(l, y, {\n      width: h,\n      height: u,\n      wrapCount: r\n    }, o);\n    if (!I) return {\n      extent: t,\n      srcExtent: f,\n      pixelBlock: null\n    };\n    const R = l > 0 ? g.pyramidBlockWidth : g.blockWidth,\n          w = l > 0 ? g.pyramidBlockHeight : g.blockHeight,\n          k = R === h && w === u && y.x % R == 0 && y.y % w == 0,\n          b = new N({\n      x: (t.xmax - t.xmin) / e,\n      y: (t.ymax - t.ymin) / i,\n      spatialReference: t.spatialReference\n    }),\n          v = !t.spatialReference.equals(this.rasterInfo.spatialReference),\n          {\n      datumTransformation: S\n    } = o;\n    if (!v && k && 1 === I.pixelBlocks.length && R === e && w === i && m.x === b.x && m.y === b.y) return {\n      extent: t,\n      srcExtent: f,\n      pixelBlock: I.pixelBlocks[0]\n    };\n\n    const C = x && n(M(f.spatialReference)),\n          _ = o.requestProjectedLocalDirections && this.rasterInfo.dataType.startsWith(\"vector\");\n\n    _ && !this.rasterJobHandler && (await W());\n    const j = this.rasterJobHandler ? await this.rasterJobHandler.getProjectionOffsetGrid({\n      projectedExtent: t,\n      srcBufferExtent: I.extent,\n      pixelSize: b.toJSON(),\n      datumTransformation: S,\n      rasterTransform: p,\n      hasWrapAround: r > 0 || C,\n      isAdaptive: !1 !== this.ioConfig.optimizeProjectionAccuracy,\n      includeGCSGrid: _\n    }, o) : L({\n      projectedExtent: t,\n      srcBufferExtent: I.extent,\n      pixelSize: b,\n      datumTransformation: S,\n      rasterTransform: p,\n      hasWrapAround: r > 0 || C,\n      isAdaptive: !1,\n      includeGCSGrid: _\n    });\n    let E;\n    const D = !o.requestRawData,\n          z = {\n      rows: j.spacing[0],\n      cols: j.spacing[1]\n    },\n          F = s(this._getRasterTileAlignmentInfo(l, I.extent.xmin)),\n          {\n      pixelBlocks: O,\n      mosaicSize: q,\n      isPartiallyFilled: G\n    } = I;\n    let J = null;\n\n    if (this.rasterJobHandler) {\n      const t = await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: O,\n        srcMosaicSize: q,\n        destDimension: D ? {\n          width: e,\n          height: i\n        } : null,\n        coefs: D ? j.coefficients : null,\n        sampleSpacing: D ? z : null,\n        projectDirections: _,\n        gcsGrid: _ ? j.gcsGrid : null,\n        isUV: \"vector-uv\" === this.rasterInfo.dataType,\n        interpolation: o.interpolation,\n        alignmentInfo: F,\n        blockWidths: null\n      }, o);\n      ({\n        pixelBlock: E,\n        localNorthDirections: J\n      } = t);\n    } else {\n      const t = T(O, q, {\n        alignmentInfo: F\n      });\n      E = D ? B(t, {\n        width: e,\n        height: i\n      }, j.coefficients, z, o.interpolation) : t, _ && j.gcsGrid && (J = P({\n        width: e,\n        height: i\n      }, j.gcsGrid), E = A(E, this.rasterInfo.dataType, J));\n    }\n\n    return o.requestRawData || _ ? {\n      srcExtent: f,\n      pixelBlock: E,\n      transformGrid: j,\n      localNorthDirections: J,\n      extent: t,\n      isPartiallyFilled: G\n    } : {\n      srcExtent: f,\n      extent: t,\n      pixelBlock: E\n    };\n  }\n\n  async _fetchRawTiles(t, e, i, o) {\n    const {\n      origin: r,\n      blockBoundary: s\n    } = this.rasterInfo.storageInfo,\n          {\n      blockWidth: a,\n      blockHeight: l\n    } = this.getBlockWidthHeight(t);\n    let {\n      x: c,\n      y: m\n    } = e,\n        {\n      width: f,\n      height: h,\n      wrapCount: u\n    } = i;\n\n    const p = this._getRasterTileAlignmentInfo(t, 0);\n\n    o.buffer && (c -= o.buffer.cols, m -= o.buffer.rows, f += 2 * o.buffer.cols, h += 2 * o.buffer.rows);\n    let d = 0,\n        x = 0,\n        g = 0;\n\n    if (u && n(p)) {\n      ({\n        worldColumnCountFromOrigin: x,\n        originColumnOffset: g,\n        rightPadding: d\n      } = p);\n      x * p.blockWidth - d >= c + f && (d = 0);\n    }\n\n    const y = Math.floor(c / a),\n          I = Math.floor(m / l),\n          R = Math.floor((c + f + d - 1) / a),\n          w = Math.floor((m + h + d - 1) / l),\n          k = s[t];\n    if (!k) return null;\n    const {\n      minRow: b,\n      minCol: v,\n      maxCol: S,\n      maxRow: T\n    } = k;\n    if (0 === u && (w < b || R < v || I > T || y > S)) return null;\n    const B = new Array();\n    let P = !1;\n    const W = null == this.ioConfig.allowPartialFill ? o.allowPartialFill : this.ioConfig.allowPartialFill;\n\n    for (let L = I; L <= w; L++) for (let e = y; e <= R; e++) {\n      let i = e;\n\n      if (!o.disableWrapAround && u && n(p) && x <= e && (i = e - x - g), L >= b && i >= v && T >= L && S >= i) {\n        const e = this._fetchRawTile(t, L, i, o);\n\n        W ? B.push(new Promise(t => {\n          e.then(e => t(e)).catch(() => {\n            P = !0, t(null);\n          });\n        })) : B.push(e);\n      } else B.push(null);\n    }\n\n    if (0 === B.length) return null;\n    const M = await Promise.all(B),\n          C = {\n      height: (w - I + 1) * l,\n      width: (R - y + 1) * a\n    },\n          {\n      spatialReference: _\n    } = this.rasterInfo,\n          j = this.getPyramidPixelSize(t),\n          {\n      x: H,\n      y: E\n    } = j;\n    return {\n      extent: new O({\n        xmin: r.x + y * a * H,\n        xmax: r.x + (R + 1) * a * H,\n        ymin: r.y - (w + 1) * l * E,\n        ymax: r.y - I * l * E,\n        spatialReference: _\n      }),\n      pixelBlocks: M,\n      mosaicSize: C,\n      isPartiallyFilled: P\n    };\n  }\n\n  _fetchRawTile(t, e, i, o) {\n    const r = this.rasterInfo.storageInfo.blockBoundary[t];\n    if (!r) return Promise.resolve(null);\n    const {\n      minRow: n,\n      minCol: s,\n      maxCol: l,\n      maxRow: m\n    } = r;\n    if (e < n || i < s || e > m || i > l) return Promise.resolve(null);\n    const f = R(this.url, o.sliceId),\n          h = `${t}/${e}/${i}`;\n    let u = w(f, o.registryId, h);\n\n    if (a(u)) {\n      const r = new AbortController();\n      u = this.fetchRawTile(t, e, i, { ...o,\n        signal: r.signal\n      }), k(f, o.registryId, h, u, r), u.catch(() => b(f, o.registryId, h));\n    }\n\n    return o.signal && c(o, () => {\n      v(f, o.registryId, h);\n    }), u;\n  }\n\n  _computeMagDirValues(t) {\n    const {\n      bandCount: e,\n      dataType: i\n    } = this.rasterInfo;\n    if (!(2 === e && \"vector-magdir\" === i || \"vector-uv\" === i) || 2 !== t?.length || !t[0]?.length) return null;\n    const o = t[0].length;\n\n    if (\"vector-magdir\" === i) {\n      const e = t[1].map(t => (t + 360) % 360);\n      return [t[0], e];\n    }\n\n    const [r, n] = t,\n          s = [],\n          a = [];\n\n    for (let l = 0; l < o; l++) {\n      const [t, e] = F([r[l], n[l]]);\n      s.push(t), a.push(e);\n    }\n\n    return [s, a];\n  }\n\n  _getRasterTileAlignmentInfo(t, e) {\n    return null == this._rasterTileAlighmentInfo && (this._rasterTileAlighmentInfo = D(this.rasterInfo)), a(this._rasterTileAlighmentInfo.pyramidsInfo) ? null : {\n      startX: e,\n      halfWorldWidth: this._rasterTileAlighmentInfo.halfWorldWidth,\n      hasGCSSShiftTransform: this._rasterTileAlighmentInfo.hasGCSSShiftTransform,\n      ...this._rasterTileAlighmentInfo.pyramidsInfo[t]\n    };\n  }\n\n  _getSourceDataInfo(t, e, i, o = {}) {\n    const r = {\n      datumTransformation: o.datumTransformation,\n      pyramidLevel: 0,\n      pyramidResolution: null,\n      srcExtent: null,\n      srcHeight: 0,\n      srcResolution: null,\n      srcWidth: 0\n    };\n    o.srcResolution && (r.srcResolution = o.srcResolution, this._updateSourceDataInfo(t, r));\n    const n = this.rasterInfo.storageInfo.maximumPyramidLevel || 0,\n          {\n      srcWidth: s,\n      srcHeight: a,\n      pyramidLevel: l\n    } = r,\n          c = s / e,\n          m = a / i,\n          f = l < n && c * m >= 16;\n\n    if (f || l === n && (c > q || m > q) || 0 === s || 0 === a) {\n      const s = new N({\n        x: (t.xmax - t.xmin) / e,\n        y: (t.ymax - t.ymin) / i,\n        spatialReference: t.spatialReference\n      });\n      let a = z(s, this.rasterInfo.spatialReference, t, r.datumTransformation);\n      const h = !a || o.srcResolution && a.x + a.y < o.srcResolution.x + o.srcResolution.y;\n\n      if (f && o.srcResolution && h) {\n        const t = Math.round(Math.log(Math.max(c, m)) / Math.LN2) - 1;\n\n        if (n - l + 3 >= t) {\n          const e = 2 ** t;\n          a = {\n            x: o.srcResolution.x * e,\n            y: o.srcResolution.y * e\n          };\n        }\n      }\n\n      a && (r.srcResolution = a, this._updateSourceDataInfo(t, r));\n    }\n\n    return (r.srcWidth / e > q || r.srcHeight / i > q) && (r.srcWidth = 0, r.srcHeight = 0), r;\n  }\n\n  _updateSourceDataInfo(t, e) {\n    e.srcWidth = 0, e.srcHeight = 0;\n\n    const i = this.rasterInfo.spatialReference,\n          {\n      srcResolution: o,\n      datumTransformation: r\n    } = e,\n          {\n      pyramidLevel: n,\n      pyramidResolution: a,\n      excessiveReading: l\n    } = _(o, this.rasterInfo, this.ioConfig.sampling);\n\n    if (l) return;\n    let c = e.srcExtent || E(t, i, r);\n    if (null == c) return;\n    const m = s(this.rasterInfo.transform);\n    m && (c = m.inverseTransform(c)), e.srcExtent = c;\n    const f = Math.ceil((c.xmax - c.xmin) / a.x - .1),\n          h = Math.ceil((c.ymax - c.ymin) / a.y - .1);\n    e.pyramidLevel = n, e.pyramidResolution = a, e.srcWidth = f, e.srcHeight = h;\n  }\n\n  _getRequestOptionsWithSliceId(t) {\n    return n(this.rasterInfo.multidimensionalInfo) && null == t.sliceId && (t = { ...t,\n      sliceId: this.getSliceIndex(t.multidimensionalDefinition)\n    }), t;\n  }\n\n  _processIdentifyResult(t, e) {\n    const {\n      srcLocation: i,\n      position: o,\n      pyramidLevel: r,\n      useTransposedTile: n\n    } = e,\n          l = t.pixels[0].length / t.width / t.height;\n    if (!(!t.mask || t.mask[o])) return {\n      location: i,\n      value: null\n    };\n    const {\n      multidimensionalInfo: c\n    } = this.rasterInfo;\n\n    if (a(c) || !n) {\n      const e = t.pixels.map(t => t[o]),\n            n = {\n        location: i,\n        value: e,\n        pyramidLevel: r\n      },\n            s = this._computeMagDirValues(e.map(t => [t]));\n\n      return s?.length && (n.magdirValue = s.map(t => t[0])), n;\n    }\n\n    let m = t.pixels.map(t => Array.prototype.slice.call(t, o * l, o * l + l)),\n        f = this._computeMagDirValues(m);\n\n    const {\n      requestSomeSlices: h,\n      identifyOptions: u\n    } = e;\n    let p = y(c, u.transposedVariableName);\n\n    if (h) {\n      const t = I(p, s(u.multidimensionalDefinition), s(u.timeExtent));\n      m = m.map(e => t.map(t => e[t])), f = f?.map(e => t.map(t => e[t])), p = t.map(t => p[t]);\n    }\n\n    return {\n      location: i,\n      value: null,\n      dataSeries: p.map((t, e) => {\n        const i = {\n          value: m.map(t => t[e]),\n          multidimensionalDefinition: t.multidimensionalDefinition,\n          variableName: t.multidimensionalDefinition[0].variableName,\n          dimensionValues: {}\n        };\n        return f?.length && (i.magdirValue = [f[0][e], f[1][e]]), t.multidimensionalDefinition.forEach(t => i.dimensionValues[t.dimensionName] = t.values[0]), i;\n      }),\n      pyramidLevel: r\n    };\n  }\n\n};\nt([m()], G.prototype, \"_rasterTileAlighmentInfo\", void 0), t([m({\n  readOnly: !0\n})], G.prototype, \"_isGlobalWrappableSource\", null), t([m(u)], G.prototype, \"url\", null), t([m({\n  type: String,\n  json: {\n    write: !0\n  }\n})], G.prototype, \"datasetName\", void 0), t([m({\n  type: String,\n  json: {\n    write: !0\n  }\n})], G.prototype, \"datasetFormat\", void 0), t([m()], G.prototype, \"rasterInfo\", void 0), t([m()], G.prototype, \"ioConfig\", void 0), t([m()], G.prototype, \"sourceJSON\", void 0), G = t([f(\"esri.layers.support.rasterDatasets.BaseRaster\")], G);\nconst J = G;\nexport { J as default };","map":{"version":3,"names":["_","t","e","i","JSONSupport","o","r","isSome","n","unwrap","s","isNone","a","EsriPromiseMixin","l","onAbort","c","property","m","subclass","f","sanitizeUrl","h","url","u","p","d","isMultiSliceOrRangeDefinition","x","getSliceIndex","g","createSlices","y","getSliceIds","I","getRasterId","R","getBlock","w","putBlock","k","deleteBlock","b","decreaseRefCount","v","decode","S","mosaic","T","approximateTransform","B","getLocalArithmeticNorthRotations","P","load","W","getWorldWidth","M","projectPoint","C","snapPyramid","snapExtent","j","getWorldWrapCount","H","projectExtent","E","getProjectionOffsetGrid","L","getRasterDatasetAlignmentInfo","D","projectResolution","z","convertToLocalDirections","A","uvComponentToVector","F","O","N","q","G","constructor","arguments","rasterJobHandler","datasetName","datasetFormat","rasterInfo","ioConfig","sampling","init","addResolvingPromise","when","normalizeCtorArgs","resolution","bandIds","tileInfo","create","_isGlobalWrappableSource","spatialReference","extent","width","_set","getLogger","declaredClass","open","fetchTile","storageInfo","getTileExtentFromTileInfo","fetchPixels","size","identify","multidimensionalDefinition","timeExtent","hasMultidimensionalTranspose","multidimensionalInfo","transposedVariableName","length","variableName","variables","name","_getRequestOptionsWithSliceId","datumTransformation","intersects","location","value","transform","inverseTransform","nativeExtent","srcResolution","pyramidLevel","computeBestPyramidLevelForLocation","identifyPixelLocation","row","col","rowOffset","colOffset","blockWidth","sliceId","fetchRawTile","pixels","_processIdentifyResult","srcLocation","position","useTransposedTile","requestSomeSlices","identifyOptions","requestRawData","_fetchPixels","pixelBlock","xmin","xmax","Math","round","ymin","ymax","push","disableWrapAround","Promise","all","map","height","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","destDimension","coefs","sampleSpacing","interpolation","alignmentInfo","blockWidths","srcExtent","fetchRawPixels","floor","_fetchRawTiles","nativePixelSize","pixelBlocks","mosaicSize","pyramidBlockWidth","pyramidBlockHeight","blockHeight","clipOffset","clipSize","computeExtent","decodePixelBlock","useCanvas","data","options","request","customFetchParameters","range","query","headers","retryCount","Range","from","to","lodAt","getTileExtent","origin","updateTileInfo","pixelSize","maximumPyramidLevel","max","level","scale","lods","isVirtualTileInfo","createRemoteDatasetStorageInfo","log","LN2","computeBlockBoundary","firstPyramidLevel","blockBoundary","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","pyramidResolutions","pyramidScalingFactor","transposeInfo","tileSize","min","getBlockWidthHeight","isBlockOutside","_getSourceDataInfo","pyramidResolution","srcWidth","srcHeight","type","wrapCount","equals","requestProjectedLocalDirections","dataType","startsWith","projectedExtent","srcBufferExtent","toJSON","rasterTransform","hasWrapAround","isAdaptive","optimizeProjectionAccuracy","includeGCSGrid","rows","spacing","cols","_getRasterTileAlignmentInfo","isPartiallyFilled","J","coefficients","projectDirections","gcsGrid","isUV","localNorthDirections","transformGrid","buffer","worldColumnCountFromOrigin","originColumnOffset","rightPadding","Array","allowPartialFill","_fetchRawTile","then","catch","resolve","registryId","AbortController","signal","_computeMagDirValues","bandCount","_rasterTileAlighmentInfo","pyramidsInfo","startX","halfWorldWidth","hasGCSSShiftTransform","_updateSourceDataInfo","excessiveReading","ceil","mask","magdirValue","prototype","slice","call","dataSeries","dimensionValues","forEach","dimensionName","values","readOnly","String","json","write","default"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import e from\"../../../request.js\";import i from\"../../../core/Error.js\";import{JSONSupport as o}from\"../../../core/JSONSupport.js\";import r from\"../../../core/Logger.js\";import{isSome as n,unwrap as s,isNone as a}from\"../../../core/maybe.js\";import{EsriPromiseMixin as l}from\"../../../core/Promise.js\";import{onAbort as c}from\"../../../core/promiseUtils.js\";import{property as m}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as f}from\"../../../core/accessorSupport/decorators/subclass.js\";import{sanitizeUrl as h}from\"../arcgisLayerUrl.js\";import{url as u}from\"../commonProperties.js\";import p from\"../RasterStorageInfo.js\";import d from\"../TileInfo.js\";import{isMultiSliceOrRangeDefinition as x,getSliceIndex as g,createSlices as y,getSliceIds as I}from\"./multidimensionalUtils.js\";import{getRasterId as R,getBlock as w,putBlock as k,deleteBlock as b,decreaseRefCount as v}from\"./RawBlockCache.js\";import{decode as S}from\"../rasterFormats/RasterCodec.js\";import{mosaic as T,approximateTransform as B,getLocalArithmeticNorthRotations as P}from\"../rasterFunctions/pixelUtils.js\";import{load as W,getWorldWidth as M,projectPoint as C,snapPyramid as _,snapExtent as j,getWorldWrapCount as H,projectExtent as E,getProjectionOffsetGrid as L,getRasterDatasetAlignmentInfo as D,projectResolution as z}from\"../rasterFunctions/rasterProjectionHelper.js\";import{convertToLocalDirections as A,uvComponentToVector as F}from\"../rasterFunctions/vectorFieldUtils.js\";import O from\"../../../geometry/Extent.js\";import N from\"../../../geometry/Point.js\";const q=8;let G=class extends(l(o)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:\"closest\"}}async init(){const t=W();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:\"closest\",tileInfo:d.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=M(t.spatialReference);return n(e)&&t.extent.width>=e/2}set url(t){this._set(\"url\",h(t,r.getLogger(this.declaredClass)))}async open(t){throw new i(\"BaseRaster:open-not-implemented\",\"open() is not implemented\")}async fetchTile(t,e,i,o={}){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(t,e,i,r);return this.fetchPixels(n,r.size[0],r.size[1],o)}async identify(t,e={}){const{multidimensionalDefinition:i,timeExtent:o}=e,{hasMultidimensionalTranspose:r,multidimensionalInfo:l}=this.rasterInfo;let{transposedVariableName:c}=e;const m=n(l)&&r&&(null!=o||x(i));if(m&&!c){c=n(i)&&i.length>0?i[0].variableName:l.variables[0].name,e={...e,transposedVariableName:c}}e=this._getRequestOptionsWithSliceId(e);const{spatialReference:f,extent:h}=this.rasterInfo,{datumTransformation:u}=e;let p=C(t,f,u);if(!h.intersects(p))return{location:p,value:null};if(n(this.rasterInfo.transform)){const t=this.rasterInfo.transform.inverseTransform(p);if(!this.rasterInfo.nativeExtent.intersects(t))return{location:t,value:null};p=t}let d=0;const g=c&&n(l)&&this.rasterInfo.hasMultidimensionalTranspose;if(!g)if(e.srcResolution){d=_(e.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel}else if(d=await this.computeBestPyramidLevelForLocation(t,e),null==d)return{location:p,value:null};const y=this.identifyPixelLocation(p,d,null,g);if(null===y)return{location:p,value:null};const{row:I,col:b,rowOffset:v,colOffset:S,blockWidth:T}=y,B=c??s(e.sliceId),P=R(this.url,B),W=`${d}/${I}/${b}`;let M=w(P,null,W);a(M)&&(M=this.fetchRawTile(d,I,b,e),k(P,null,W,M));const j=await M;if(a(j)||!j.pixels?.length)return{location:p,value:null};const H=v*T+S;return this._processIdentifyResult(j,{srcLocation:p,position:H,pyramidLevel:d,useTransposedTile:g,requestSomeSlices:m,identifyOptions:e})}async fetchPixels(t,e,i,o={}){if(t=j(t),(o=this._getRequestOptionsWithSliceId(o)).requestRawData)return this._fetchPixels(t,e,i,o);const r=M(t.spatialReference),n=H(t);if(a(r)||0===n||1===n&&this._isGlobalWrappableSource)return this._fetchPixels(t,e,i,o);if(n>=3)return{extent:t,pixelBlock:null};const s=[],{xmin:l,xmax:c}=t,m=Math.round(r/(c-l)*e),f=m-Math.round((r/2-l)/(c-l)*e);let h=0;const u=[];for(let a=0;a<=n;a++){const p=new O({xmin:0===a?l:-r/2,xmax:a===n?c-r*a:r/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),d=0===a?m-f:a===n?e-h:m;h+=d,u.push(d);const x=o.disableWrapAround&&a>0?null:this._fetchPixels(p,d,i,o);s.push(x)}const p=(await Promise.all(s)).map((t=>t?.pixelBlock));let d=null;const x={width:e,height:i};if(this.rasterJobHandler){d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:\"nearest\",alignmentInfo:null,blockWidths:u},o)).pixelBlock}else d=T(p,x,{blockWidths:u});return{extent:t,srcExtent:E(t,this.rasterInfo.spatialReference,o.datumTransformation),pixelBlock:d}}async fetchRawPixels(t,e,i,o={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const r=await this._fetchRawTiles(t,e,i,o),{nativeExtent:s,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**t,m=a.x*c,f=a.y*c,h=new O({xmin:s.xmin+m*e.x,xmax:s.xmin+m*(e.x+i.width-1),ymin:s.ymax-f*(e.y+i.height-1),ymax:s.ymax-f*e.y,spatialReference:s.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:u,mosaicSize:p}=r;if(1===u.length&&n(u[0])&&u[0].width===i.width&&u[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const d=t>0?l.pyramidBlockWidth:l.blockWidth,x=t>0?l.pyramidBlockHeight:l.blockHeight,g={x:e.x%d,y:e.y%x};let y;if(this.rasterJobHandler){y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:p,destDimension:i,clipOffset:g,clipSize:i,coefs:null,sampleSpacing:null,interpolation:o.interpolation,alignmentInfo:null,blockWidths:null},o)).pixelBlock}else y=T(u,p,{clipOffset:g,clipSize:i});return{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(t,e,o,r){throw new i(\"BaseRaster:read-not-implemented\",\"fetchRawTile() is not implemented\")}computeExtent(t){return E(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?S(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,i,o){const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:a}=i;o=o??i.retryCount??this.ioConfig.retryCount;const l=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await e(t,{...i,query:{...s,...r},headers:{...a,...l}})}catch(c){if(o>0)return o--,this.request(t,i,o);throw c}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return a(e)||a(t)||0===t.length?null:g(t,e)}getTileExtentFromTileInfo(t,e,i,o){const r=o.lodAt(t);return this.getTileExtent({x:r.resolution,y:r.resolution},e,i,o.origin,o.spatialReference,o.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:i,pixelSize:o}=this.rasterInfo;if(!t.tileInfo){const r=[],n=t.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let t=0;t<=n;t++)r.push({level:n-t,resolution:s,scale:a}),s*=2,a*=2;const l=new N({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new d({origin:l,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:r}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,o){const{width:r,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=t,c=new N({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const m=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[a],o);t.storageInfo=new p({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,i,o,r,n=0,s=2){if(1===r.length&&n>0){r=[...r];let{x:t,y:e}=r[0];for(let i=0;i<n;i++)t*=s,e*=s,r.push({x:t,y:e})}const a=[],{x:l,y:c}=o;for(let m=0;m<r.length;m++){const{x:o,y:n}=r[m];a.push({minCol:Math.floor((t.xmin-l+.1*o)/e/o),maxCol:Math.floor((t.xmax-l-.1*o)/e/o),minRow:Math.floor((c-t.ymax+.1*n)/i/n),maxRow:Math.floor((c-t.ymin-.1*n)/i/n)})}return a}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===t)return e;if(n(i)&&i.length)return i[t-1];const r=o**t;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(t,e,i,o){const{spatialReference:r,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:m}=a,f=o&&n(m)?m.tileSize[0]:a.blockWidth,h=o&&n(m)?m.tileSize[1]:a.blockHeight,u=C(t,r,i);if(!s.intersects(u))return null;if(e<0||e>l)return null;const p=this.getPyramidPixelSize(e),{x:d,y:x}=p,g=(c.y-u.y)/x/h,y=(u.x-c.x)/d/f,I=Math.min(h-1,Math.floor((g-Math.floor(g))*h)),R=Math.min(f-1,Math.floor((y-Math.floor(y))*f));return{pyramidLevel:e,row:Math.floor(g),col:Math.floor(y),rowOffset:I,colOffset:R,blockWidth:f,srcLocation:u}}getTileExtent(t,e,i,o,r,n){const[s,a]=n,l=o.x+i*s*t.x,c=l+s*t.x,m=o.y-e*a*t.y,f=m-a*t.y;return new O({xmin:l,xmax:c,ymin:f,ymax:m,spatialReference:r})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,i){const o=this.rasterInfo.storageInfo.blockBoundary[t];return!o||o.maxRow<e||o.maxCol<i||o.minRow>e||o.minCol>i}async _fetchPixels(t,e,i,o={}){let r=H(t);if(r>=2)return{extent:t,pixelBlock:null};const a=this._getSourceDataInfo(t,e,i,o),{pyramidLevel:l,pyramidResolution:c,srcResolution:m,srcExtent:f,srcWidth:h,srcHeight:u}=a;if(0===h||0===u)return{extent:t,srcExtent:f,pixelBlock:null};const p=s(this.rasterInfo.transform),d=\"gcs-shift\"===p?.type,x=n(M(t.spatialReference));!d&&x||(r=H(a.srcExtent,d));const g=this.rasterInfo.storageInfo,y={x:Math.floor((f.xmin-g.origin.x)/c.x+.1),y:Math.floor((g.origin.y-f.ymax)/c.y+.1)},I=await this._fetchRawTiles(l,y,{width:h,height:u,wrapCount:r},o);if(!I)return{extent:t,srcExtent:f,pixelBlock:null};const R=l>0?g.pyramidBlockWidth:g.blockWidth,w=l>0?g.pyramidBlockHeight:g.blockHeight,k=R===h&&w===u&&y.x%R==0&&y.y%w==0,b=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),v=!t.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:S}=o;if(!v&&k&&1===I.pixelBlocks.length&&R===e&&w===i&&m.x===b.x&&m.y===b.y)return{extent:t,srcExtent:f,pixelBlock:I.pixelBlocks[0]};const C=x&&n(M(f.spatialReference)),_=o.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith(\"vector\");_&&!this.rasterJobHandler&&await W();const j=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:b.toJSON(),datumTransformation:S,rasterTransform:p,hasWrapAround:r>0||C,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:_},o):L({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:b,datumTransformation:S,rasterTransform:p,hasWrapAround:r>0||C,isAdaptive:!1,includeGCSGrid:_});let E;const D=!o.requestRawData,z={rows:j.spacing[0],cols:j.spacing[1]},F=s(this._getRasterTileAlignmentInfo(l,I.extent.xmin)),{pixelBlocks:O,mosaicSize:q,isPartiallyFilled:G}=I;let J=null;if(this.rasterJobHandler){const t=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:O,srcMosaicSize:q,destDimension:D?{width:e,height:i}:null,coefs:D?j.coefficients:null,sampleSpacing:D?z:null,projectDirections:_,gcsGrid:_?j.gcsGrid:null,isUV:\"vector-uv\"===this.rasterInfo.dataType,interpolation:o.interpolation,alignmentInfo:F,blockWidths:null},o);({pixelBlock:E,localNorthDirections:J}=t)}else{const t=T(O,q,{alignmentInfo:F});E=D?B(t,{width:e,height:i},j.coefficients,z,o.interpolation):t,_&&j.gcsGrid&&(J=P({width:e,height:i},j.gcsGrid),E=A(E,this.rasterInfo.dataType,J))}return o.requestRawData||_?{srcExtent:f,pixelBlock:E,transformGrid:j,localNorthDirections:J,extent:t,isPartiallyFilled:G}:{srcExtent:f,extent:t,pixelBlock:E}}async _fetchRawTiles(t,e,i,o){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(t);let{x:c,y:m}=e,{width:f,height:h,wrapCount:u}=i;const p=this._getRasterTileAlignmentInfo(t,0);o.buffer&&(c-=o.buffer.cols,m-=o.buffer.rows,f+=2*o.buffer.cols,h+=2*o.buffer.rows);let d=0,x=0,g=0;if(u&&n(p)){({worldColumnCountFromOrigin:x,originColumnOffset:g,rightPadding:d}=p);x*p.blockWidth-d>=c+f&&(d=0)}const y=Math.floor(c/a),I=Math.floor(m/l),R=Math.floor((c+f+d-1)/a),w=Math.floor((m+h+d-1)/l),k=s[t];if(!k)return null;const{minRow:b,minCol:v,maxCol:S,maxRow:T}=k;if(0===u&&(w<b||R<v||I>T||y>S))return null;const B=new Array;let P=!1;const W=null==this.ioConfig.allowPartialFill?o.allowPartialFill:this.ioConfig.allowPartialFill;for(let L=I;L<=w;L++)for(let e=y;e<=R;e++){let i=e;if(!o.disableWrapAround&&u&&n(p)&&x<=e&&(i=e-x-g),L>=b&&i>=v&&T>=L&&S>=i){const e=this._fetchRawTile(t,L,i,o);W?B.push(new Promise((t=>{e.then((e=>t(e))).catch((()=>{P=!0,t(null)}))}))):B.push(e)}else B.push(null)}if(0===B.length)return null;const M=await Promise.all(B),C={height:(w-I+1)*l,width:(R-y+1)*a},{spatialReference:_}=this.rasterInfo,j=this.getPyramidPixelSize(t),{x:H,y:E}=j;return{extent:new O({xmin:r.x+y*a*H,xmax:r.x+(R+1)*a*H,ymin:r.y-(w+1)*l*E,ymax:r.y-I*l*E,spatialReference:_}),pixelBlocks:M,mosaicSize:C,isPartiallyFilled:P}}_fetchRawTile(t,e,i,o){const r=this.rasterInfo.storageInfo.blockBoundary[t];if(!r)return Promise.resolve(null);const{minRow:n,minCol:s,maxCol:l,maxRow:m}=r;if(e<n||i<s||e>m||i>l)return Promise.resolve(null);const f=R(this.url,o.sliceId),h=`${t}/${e}/${i}`;let u=w(f,o.registryId,h);if(a(u)){const r=new AbortController;u=this.fetchRawTile(t,e,i,{...o,signal:r.signal}),k(f,o.registryId,h,u,r),u.catch((()=>b(f,o.registryId,h)))}return o.signal&&c(o,(()=>{v(f,o.registryId,h)})),u}_computeMagDirValues(t){const{bandCount:e,dataType:i}=this.rasterInfo;if(!(2===e&&\"vector-magdir\"===i||\"vector-uv\"===i)||2!==t?.length||!t[0]?.length)return null;const o=t[0].length;if(\"vector-magdir\"===i){const e=t[1].map((t=>(t+360)%360));return[t[0],e]}const[r,n]=t,s=[],a=[];for(let l=0;l<o;l++){const[t,e]=F([r[l],n[l]]);s.push(t),a.push(e)}return[s,a]}_getRasterTileAlignmentInfo(t,e){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=D(this.rasterInfo)),a(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,i,o={}){const r={datumTransformation:o.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};o.srcResolution&&(r.srcResolution=o.srcResolution,this._updateSourceDataInfo(t,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:a,pyramidLevel:l}=r,c=s/e,m=a/i,f=l<n&&c*m>=16;if(f||l===n&&(c>q||m>q)||(0===s||0===a)){const s=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference});let a=z(s,this.rasterInfo.spatialReference,t,r.datumTransformation);const h=!a||o.srcResolution&&a.x+a.y<o.srcResolution.x+o.srcResolution.y;if(f&&o.srcResolution&&h){const t=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(n-l+3>=t){const e=2**t;a={x:o.srcResolution.x*e,y:o.srcResolution.y*e}}}a&&(r.srcResolution=a,this._updateSourceDataInfo(t,r))}return(r.srcWidth/e>q||r.srcHeight/i>q)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:o,datumTransformation:r}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:l}=_(o,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||E(t,i,r);if(null==c)return;const m=s(this.rasterInfo.transform);m&&(c=m.inverseTransform(c)),e.srcExtent=c;const f=Math.ceil((c.xmax-c.xmin)/a.x-.1),h=Math.ceil((c.ymax-c.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=f,e.srcHeight=h}_getRequestOptionsWithSliceId(t){return n(this.rasterInfo.multidimensionalInfo)&&null==t.sliceId&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:i,position:o,pyramidLevel:r,useTransposedTile:n}=e,l=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[o]))return{location:i,value:null};const{multidimensionalInfo:c}=this.rasterInfo;if(a(c)||!n){const e=t.pixels.map((t=>t[o])),n={location:i,value:e,pyramidLevel:r},s=this._computeMagDirValues(e.map((t=>[t])));return s?.length&&(n.magdirValue=s.map((t=>t[0]))),n}let m=t.pixels.map((t=>Array.prototype.slice.call(t,o*l,o*l+l))),f=this._computeMagDirValues(m);const{requestSomeSlices:h,identifyOptions:u}=e;let p=y(c,u.transposedVariableName);if(h){const t=I(p,s(u.multidimensionalDefinition),s(u.timeExtent));m=m.map((e=>t.map((t=>e[t])))),f=f?.map((e=>t.map((t=>e[t])))),p=t.map((t=>p[t]))}return{location:i,value:null,dataSeries:p.map(((t,e)=>{const i={value:m.map((t=>t[e])),multidimensionalDefinition:t.multidimensionalDefinition,variableName:t.multidimensionalDefinition[0].variableName,dimensionValues:{}};return f?.length&&(i.magdirValue=[f[0][e],f[1][e]]),t.multidimensionalDefinition.forEach((t=>i.dimensionValues[t.dimensionName]=t.values[0])),i})),pyramidLevel:r}}};t([m()],G.prototype,\"_rasterTileAlighmentInfo\",void 0),t([m({readOnly:!0})],G.prototype,\"_isGlobalWrappableSource\",null),t([m(u)],G.prototype,\"url\",null),t([m({type:String,json:{write:!0}})],G.prototype,\"datasetName\",void 0),t([m({type:String,json:{write:!0}})],G.prototype,\"datasetFormat\",void 0),t([m()],G.prototype,\"rasterInfo\",void 0),t([m()],G.prototype,\"ioConfig\",void 0),t([m()],G.prototype,\"sourceJSON\",void 0),G=t([f(\"esri.layers.support.rasterDatasets.BaseRaster\")],G);const J=G;export{J as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}