{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport has from \"../../../../core/has.js\";\nimport { isNone as e, isSome as s } from \"../../../../core/maybe.js\";\nimport { diff as t, hasDiff as i } from \"../../../../core/accessorSupport/diffUtils.js\";\nimport { createRendererExpression as r } from \"../../../../support/arcadeOnDemand.js\";\nimport a from \"../../arcade/callExpressionWithCursor.js\";\nconst o = import(\"../../../../layers/support/labelFormatUtils.js\");\n\nclass c {\n  constructor(e, s) {\n    this._canCacheExpressionValue = !1, this._sourceInfo = e, this._storage = s, this._bitsets = {\n      computed: s.getBitset(s.createBitset())\n    };\n  }\n\n  get storage() {\n    return this._storage;\n  }\n\n  invalidate() {\n    this._bitsets.computed.clear();\n  }\n\n  async updateSchema(r, a) {\n    const o = t(this._schema, a);\n    if (this._schema = a, !a || e(o) || !i(o, \"attributes\")) return;\n    has(\"esri-2d-update-debug\") && console.debug(\"Applying Update - Store:\", o), this._bitsets.computed.clear(), r.targets[a.name] = !0;\n    const c = a.attributes,\n          n = [],\n          p = [];\n\n    for (const e in c) {\n      const s = c[e];\n\n      switch (s.type) {\n        case \"field\":\n          break;\n\n        case \"expression\":\n          n.push(this._createArcadeComputedField(s));\n          break;\n\n        case \"label-expression\":\n          n.push(this._createLabelArcadeComputedField(s));\n          break;\n\n        case \"statistic\":\n          p.push(s);\n      }\n    }\n\n    this._computedFields = await Promise.all(n), this._canCacheExpressionValue = !this._computedFields.some(e => \"expression\" === e.type && s(e.expression) && e.expression.referencesScale()), this._statisticFields = p;\n  }\n\n  setComputedAttributes(e, s, t, i) {\n    const r = this._bitsets.computed;\n\n    if (!this._canCacheExpressionValue || !r.has(t)) {\n      r.set(t);\n\n      for (const r of this._computedFields) {\n        const a = this._evaluateField(s, r, i);\n\n        switch (r.resultType) {\n          case \"numeric\":\n            e.setComputedNumericAtIndex(t, r.fieldIndex, a);\n            break;\n\n          case \"string\":\n            e.setComputedStringAtIndex(t, r.fieldIndex, a);\n        }\n      }\n    }\n  }\n\n  async _createArcadeComputedField(e) {\n    const s = this._sourceInfo.spatialReference,\n          t = this._sourceInfo.fieldsIndex;\n    return { ...e,\n      expression: await r(e.valueExpression, s, t)\n    };\n  }\n\n  async _createLabelArcadeComputedField(e) {\n    const s = this._sourceInfo.spatialReference,\n          t = this._sourceInfo.fieldsIndex,\n          {\n      createLabelFunction: i\n    } = await o,\n          r = await i(e.label, t, s);\n    return { ...e,\n      builder: r\n    };\n  }\n\n  _evaluateField(e, s, t) {\n    switch (s.type) {\n      case \"label-expression\":\n        {\n          const t = e.readArcadeFeature();\n          return s.builder.evaluate(t) || \"\";\n        }\n\n      case \"expression\":\n        {\n          const {\n            expression: i\n          } = s;\n          return a(i, e, {\n            $view: {\n              scale: t\n            }\n          });\n        }\n    }\n  }\n\n}\n\nexport { c as Store2D };","map":{"version":3,"names":["has","isNone","e","isSome","s","diff","t","hasDiff","i","createRendererExpression","r","a","o","c","constructor","_canCacheExpressionValue","_sourceInfo","_storage","_bitsets","computed","getBitset","createBitset","storage","invalidate","clear","updateSchema","_schema","console","debug","targets","name","attributes","n","p","type","push","_createArcadeComputedField","_createLabelArcadeComputedField","_computedFields","Promise","all","some","expression","referencesScale","_statisticFields","setComputedAttributes","set","_evaluateField","resultType","setComputedNumericAtIndex","fieldIndex","setComputedStringAtIndex","spatialReference","fieldsIndex","valueExpression","createLabelFunction","label","builder","readArcadeFeature","evaluate","$view","scale","Store2D"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/layers/features/Store2D.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{isNone as e,isSome as s}from\"../../../../core/maybe.js\";import{diff as t,hasDiff as i}from\"../../../../core/accessorSupport/diffUtils.js\";import{createRendererExpression as r}from\"../../../../support/arcadeOnDemand.js\";import a from\"../../arcade/callExpressionWithCursor.js\";const o=import(\"../../../../layers/support/labelFormatUtils.js\");class c{constructor(e,s){this._canCacheExpressionValue=!1,this._sourceInfo=e,this._storage=s,this._bitsets={computed:s.getBitset(s.createBitset())}}get storage(){return this._storage}invalidate(){this._bitsets.computed.clear()}async updateSchema(r,a){const o=t(this._schema,a);if(this._schema=a,!a||e(o)||!i(o,\"attributes\"))return;has(\"esri-2d-update-debug\")&&console.debug(\"Applying Update - Store:\",o),this._bitsets.computed.clear(),r.targets[a.name]=!0;const c=a.attributes,n=[],p=[];for(const e in c){const s=c[e];switch(s.type){case\"field\":break;case\"expression\":n.push(this._createArcadeComputedField(s));break;case\"label-expression\":n.push(this._createLabelArcadeComputedField(s));break;case\"statistic\":p.push(s)}}this._computedFields=await Promise.all(n),this._canCacheExpressionValue=!this._computedFields.some((e=>\"expression\"===e.type&&s(e.expression)&&e.expression.referencesScale())),this._statisticFields=p}setComputedAttributes(e,s,t,i){const r=this._bitsets.computed;if(!this._canCacheExpressionValue||!r.has(t)){r.set(t);for(const r of this._computedFields){const a=this._evaluateField(s,r,i);switch(r.resultType){case\"numeric\":e.setComputedNumericAtIndex(t,r.fieldIndex,a);break;case\"string\":e.setComputedStringAtIndex(t,r.fieldIndex,a)}}}}async _createArcadeComputedField(e){const s=this._sourceInfo.spatialReference,t=this._sourceInfo.fieldsIndex;return{...e,expression:await r(e.valueExpression,s,t)}}async _createLabelArcadeComputedField(e){const s=this._sourceInfo.spatialReference,t=this._sourceInfo.fieldsIndex,{createLabelFunction:i}=await o,r=await i(e.label,t,s);return{...e,builder:r}}_evaluateField(e,s,t){switch(s.type){case\"label-expression\":{const t=e.readArcadeFeature();return s.builder.evaluate(t)||\"\"}case\"expression\":{const{expression:i}=s;return a(i,e,{$view:{scale:t}})}}}}export{c as Store2D};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}