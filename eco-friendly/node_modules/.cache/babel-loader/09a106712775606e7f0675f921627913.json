{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../chunks/tslib.es6.js\";\nimport e from \"../../core/Error.js\";\nimport { JSONSupport as s } from \"../../core/JSONSupport.js\";\nimport { clone as i } from \"../../core/lang.js\";\nimport r from \"../../core/Logger.js\";\nimport { isSome as l, isNone as a } from \"../../core/maybe.js\";\nimport { property as o } from \"../../core/accessorSupport/decorators/property.js\";\nimport { cast as h } from \"../../core/accessorSupport/decorators/cast.js\";\nimport { subclass as n } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { SimpleBandStatistics as c } from \"./SimpleBandStatistics.js\";\nvar p;\nlet u = p = class extends s {\n  constructor(t) {\n    super(t), this.width = null, this.height = null, this.pixelType = \"f32\", this.validPixelCount = null, this.mask = null, this.maskIsAlpha = !1, this.statistics = null;\n  }\n\n  static createEmptyBand(t, e) {\n    return new (p.getPixelArrayConstructor(t))(e);\n  }\n\n  static getPixelArrayConstructor(t) {\n    let e;\n\n    switch (t) {\n      case \"u1\":\n      case \"u2\":\n      case \"u4\":\n      case \"u8\":\n        e = Uint8Array;\n        break;\n\n      case \"u16\":\n        e = Uint16Array;\n        break;\n\n      case \"u32\":\n        e = Uint32Array;\n        break;\n\n      case \"s8\":\n        e = Int8Array;\n        break;\n\n      case \"s16\":\n        e = Int16Array;\n        break;\n\n      case \"s32\":\n        e = Int32Array;\n        break;\n\n      case \"f32\":\n      case \"c64\":\n      case \"c128\":\n      case \"unknown\":\n        e = Float32Array;\n        break;\n\n      case \"f64\":\n        e = Float64Array;\n    }\n\n    return e;\n  }\n\n  castPixelType(t) {\n    if (!t) return \"f32\";\n    let e = t.toLowerCase();\n    return [\"u1\", \"u2\", \"u4\"].includes(e) ? e = \"u8\" : [\"unknown\", \"u8\", \"s8\", \"u16\", \"s16\", \"u32\", \"s32\", \"f32\", \"f64\"].includes(e) || (e = \"f32\"), e;\n  }\n\n  getPlaneCount() {\n    return this.pixels?.length;\n  }\n\n  addData(t) {\n    if (!t.pixels || t.pixels.length !== this.width * this.height) throw new e(\"pixelblock:invalid-or-missing-pixels\", \"add data requires valid pixels array that has same length defined by pixel block width * height\");\n    this.pixels || (this.pixels = []), this.statistics || (this.statistics = []), this.pixels.push(t.pixels), this.statistics.push(t.statistics ?? new c());\n  }\n\n  getAsRGBA() {\n    const t = new ArrayBuffer(this.width * this.height * 4);\n\n    switch (this.pixelType) {\n      case \"s8\":\n      case \"s16\":\n      case \"u16\":\n      case \"s32\":\n      case \"u32\":\n      case \"f32\":\n      case \"f64\":\n        this._fillFromNon8Bit(t);\n\n        break;\n\n      default:\n        this._fillFrom8Bit(t);\n\n    }\n\n    return new Uint8ClampedArray(t);\n  }\n\n  getAsRGBAFloat() {\n    const t = new Float32Array(this.width * this.height * 4);\n    return this._fillFrom32Bit(t), t;\n  }\n\n  updateStatistics() {\n    if (!this.pixels) return;\n    this.statistics = this.pixels.map(t => this._calculateBandStatistics(t, this.mask));\n    const t = this.mask;\n    let e = 0;\n    if (l(t)) for (let s = 0; s < t.length; s++) t[s] && e++;else e = this.width * this.height;\n    this.validPixelCount = e;\n  }\n\n  clamp(t) {\n    if (!t || \"f64\" === t || \"f32\" === t || !this.pixels) return;\n    let e;\n\n    switch (t) {\n      case \"u8\":\n        e = [0, 255];\n        break;\n\n      case \"u16\":\n        e = [0, 65535];\n        break;\n\n      case \"u32\":\n        e = [0, 4294967295];\n        break;\n\n      case \"s8\":\n        e = [-128, 127];\n        break;\n\n      case \"s16\":\n        e = [-32768, 32767];\n        break;\n\n      case \"s32\":\n        e = [-2147483648, 2147483647];\n        break;\n\n      default:\n        e = [-34e38, 34e38];\n    }\n\n    const [s, i] = e,\n          r = this.pixels,\n          l = this.width * this.height,\n          a = r.length;\n    let o, h, n;\n    const c = [];\n\n    for (let u = 0; u < a; u++) {\n      n = p.createEmptyBand(t, l), o = r[u];\n\n      for (let t = 0; t < l; t++) h = o[t], n[t] = h > i ? i : h < s ? s : h;\n\n      c.push(n);\n    }\n\n    this.pixels = c, this.pixelType = t;\n  }\n\n  extractBands(t) {\n    const {\n      pixels: e,\n      statistics: s\n    } = this;\n    if (a(t) || 0 === t.length || !e || 0 === e.length) return this;\n    const i = e.length,\n          r = t.some(t => t >= e.length),\n          l = i === t.length && !t.some((t, e) => t !== e);\n    return r || l ? this : new p({\n      pixelType: this.pixelType,\n      width: this.width,\n      height: this.height,\n      mask: this.mask,\n      validPixelCount: this.validPixelCount,\n      maskIsAlpha: this.maskIsAlpha,\n      pixels: t.map(t => e[t]),\n      statistics: s && t.map(t => s[t])\n    });\n  }\n\n  clone() {\n    const t = new p({\n      width: this.width,\n      height: this.height,\n      pixelType: this.pixelType,\n      maskIsAlpha: this.maskIsAlpha,\n      validPixelCount: this.validPixelCount\n    });\n    let e;\n    l(this.mask) && (this.mask instanceof Uint8Array ? t.mask = new Uint8Array(this.mask) : t.mask = this.mask.slice(0));\n    const s = p.getPixelArrayConstructor(this.pixelType);\n\n    if (this.pixels && this.pixels.length > 0) {\n      t.pixels = [];\n      const i = !!this.pixels[0].slice;\n\n      for (e = 0; e < this.pixels.length; e++) t.pixels[e] = i ? this.pixels[e].slice(0, this.pixels[e].length) : new s(this.pixels[e]);\n    }\n\n    if (this.statistics) for (t.statistics = [], e = 0; e < this.statistics.length; e++) t.statistics[e] = i(this.statistics[e]);\n    return t;\n  }\n\n  _fillFrom8Bit(t) {\n    const {\n      mask: e,\n      maskIsAlpha: s,\n      pixels: i\n    } = this;\n    if (!t || !i || !i.length) return void r.getLogger(this.declaredClass).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n    let a, o, h, n;\n    a = o = h = i[0], i.length >= 3 ? (o = i[1], h = i[2]) : 2 === i.length && (o = i[1]);\n    const c = new Uint32Array(t),\n          p = this.width * this.height;\n    if (a.length === p) {\n      if (l(e) && e.length === p) {\n        if (s) for (n = 0; n < p; n++) e[n] && (c[n] = e[n] << 24 | h[n] << 16 | o[n] << 8 | a[n]);else for (n = 0; n < p; n++) e[n] && (c[n] = 255 << 24 | h[n] << 16 | o[n] << 8 | a[n]);\n      } else for (n = 0; n < p; n++) c[n] = 255 << 24 | h[n] << 16 | o[n] << 8 | a[n];\n    } else r.getLogger(this.declaredClass).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n  }\n\n  _fillFromNon8Bit(t) {\n    const {\n      pixels: e,\n      mask: s,\n      statistics: i\n    } = this;\n    if (!t || !e || !e.length) return void r.getLogger(this.declaredClass).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n    const a = this.pixelType;\n    let o = 1,\n        h = 0,\n        n = 1;\n\n    if (i && i.length > 0) {\n      for (const t of i) if (null != t.minValue && (h = Math.min(h, t.minValue)), null != t.maxValue && null != t.minValue) {\n        const e = t.maxValue - t.minValue;\n        n = Math.max(n, e);\n      }\n\n      o = 255 / n;\n    } else {\n      let t = 255;\n      \"s8\" === a ? (h = -128, t = 127) : \"u16\" === a ? t = 65535 : \"s16\" === a ? (h = -32768, t = 32767) : \"u32\" === a ? t = 4294967295 : \"s32\" === a ? (h = -2147483648, t = 2147483647) : \"f32\" === a ? (h = -34e38, t = 34e38) : \"f64\" === a && (h = -Number.MAX_VALUE, t = Number.MAX_VALUE), o = 255 / (t - h);\n    }\n\n    const c = new Uint32Array(t),\n          p = this.width * this.height;\n    let u, g, f, m, d;\n    if (u = g = f = e[0], u.length !== p) return r.getLogger(this.declaredClass).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n    if (e.length >= 2) {\n      if (g = e[1], e.length >= 3 && (f = e[2]), l(s) && s.length === p) for (m = 0; m < p; m++) s[m] && (c[m] = 255 << 24 | (f[m] - h) * o << 16 | (g[m] - h) * o << 8 | (u[m] - h) * o);else for (m = 0; m < p; m++) c[m] = 255 << 24 | (f[m] - h) * o << 16 | (g[m] - h) * o << 8 | (u[m] - h) * o;\n    } else if (l(s) && s.length === p) for (m = 0; m < p; m++) d = (u[m] - h) * o, s[m] && (c[m] = 255 << 24 | d << 16 | d << 8 | d);else for (m = 0; m < p; m++) d = (u[m] - h) * o, c[m] = 255 << 24 | d << 16 | d << 8 | d;\n  }\n\n  _fillFrom32Bit(t) {\n    const {\n      pixels: e,\n      mask: s\n    } = this;\n    if (!t || !e || !e.length) return r.getLogger(this.declaredClass).error(\"getAsRGBAFloat()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n    let i, a, o, h;\n    i = a = o = e[0], e.length >= 3 ? (a = e[1], o = e[2]) : 2 === e.length && (a = e[1]);\n    const n = this.width * this.height;\n    if (i.length !== n) return r.getLogger(this.declaredClass).error(\"getAsRGBAFloat()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n    let c = 0;\n    if (l(s) && s.length === n) for (h = 0; h < n; h++) t[c++] = i[h], t[c++] = a[h], t[c++] = o[h], t[c++] = 1 & s[h];else for (h = 0; h < n; h++) t[c++] = i[h], t[c++] = a[h], t[c++] = o[h], t[c++] = 1;\n  }\n\n  _calculateBandStatistics(t, e) {\n    let s = 1 / 0,\n        i = -1 / 0;\n    const r = t.length;\n    let a,\n        o = 0;\n    if (l(e)) for (a = 0; a < r; a++) e[a] && (o = t[a], s = o < s ? o : s, i = o > i ? o : i);else for (a = 0; a < r; a++) o = t[a], s = o < s ? o : s, i = o > i ? o : i;\n    return new c(s, i);\n  }\n\n};\nt([o({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"width\", void 0), t([o({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"height\", void 0), t([o({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"pixelType\", void 0), t([h(\"pixelType\")], u.prototype, \"castPixelType\", null), t([o({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"validPixelCount\", void 0), t([o({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"mask\", void 0), t([o({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"maskIsAlpha\", void 0), t([o({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"pixels\", void 0), t([o({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"statistics\", void 0), u = p = t([n(\"esri.layers.support.PixelBlock\")], u);\nconst g = u;\nexport { g as default };","map":{"version":3,"names":["_","t","e","JSONSupport","s","clone","i","r","isSome","l","isNone","a","property","o","cast","h","subclass","n","SimpleBandStatistics","c","p","u","constructor","width","height","pixelType","validPixelCount","mask","maskIsAlpha","statistics","createEmptyBand","getPixelArrayConstructor","Uint8Array","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","castPixelType","toLowerCase","includes","getPlaneCount","pixels","length","addData","push","getAsRGBA","ArrayBuffer","_fillFromNon8Bit","_fillFrom8Bit","Uint8ClampedArray","getAsRGBAFloat","_fillFrom32Bit","updateStatistics","map","_calculateBandStatistics","clamp","extractBands","some","slice","getLogger","declaredClass","error","minValue","Math","min","maxValue","max","Number","MAX_VALUE","g","f","m","d","json","write","prototype","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/PixelBlock.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../chunks/tslib.es6.js\";import e from\"../../core/Error.js\";import{JSONSupport as s}from\"../../core/JSONSupport.js\";import{clone as i}from\"../../core/lang.js\";import r from\"../../core/Logger.js\";import{isSome as l,isNone as a}from\"../../core/maybe.js\";import{property as o}from\"../../core/accessorSupport/decorators/property.js\";import{cast as h}from\"../../core/accessorSupport/decorators/cast.js\";import{subclass as n}from\"../../core/accessorSupport/decorators/subclass.js\";import{SimpleBandStatistics as c}from\"./SimpleBandStatistics.js\";var p;let u=p=class extends s{constructor(t){super(t),this.width=null,this.height=null,this.pixelType=\"f32\",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.statistics=null}static createEmptyBand(t,e){return new(p.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case\"u1\":case\"u2\":case\"u4\":case\"u8\":e=Uint8Array;break;case\"u16\":e=Uint16Array;break;case\"u32\":e=Uint32Array;break;case\"s8\":e=Int8Array;break;case\"s16\":e=Int16Array;break;case\"s32\":e=Int32Array;break;case\"f32\":case\"c64\":case\"c128\":case\"unknown\":e=Float32Array;break;case\"f64\":e=Float64Array}return e}castPixelType(t){if(!t)return\"f32\";let e=t.toLowerCase();return[\"u1\",\"u2\",\"u4\"].includes(e)?e=\"u8\":[\"unknown\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"].includes(e)||(e=\"f32\"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new e(\"pixelblock:invalid-or-missing-pixels\",\"add data requires valid pixels array that has same length defined by pixel block width * height\");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new c)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case\"s8\":case\"s16\":case\"u16\":case\"s32\":case\"u32\":case\"f32\":case\"f64\":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(l(t))for(let s=0;s<t.length;s++)t[s]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||\"f64\"===t||\"f32\"===t||!this.pixels)return;let e;switch(t){case\"u8\":e=[0,255];break;case\"u16\":e=[0,65535];break;case\"u32\":e=[0,4294967295];break;case\"s8\":e=[-128,127];break;case\"s16\":e=[-32768,32767];break;case\"s32\":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[s,i]=e,r=this.pixels,l=this.width*this.height,a=r.length;let o,h,n;const c=[];for(let u=0;u<a;u++){n=p.createEmptyBand(t,l),o=r[u];for(let t=0;t<l;t++)h=o[t],n[t]=h>i?i:h<s?s:h;c.push(n)}this.pixels=c,this.pixelType=t}extractBands(t){const{pixels:e,statistics:s}=this;if(a(t)||0===t.length||!e||0===e.length)return this;const i=e.length,r=t.some((t=>t>=e.length)),l=i===t.length&&!t.some(((t,e)=>t!==e));return r||l?this:new p({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:s&&t.map((t=>s[t]))})}clone(){const t=new p({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;l(this.mask)&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const s=p.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice(0,this.pixels[e].length):new s(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=i(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:s,pixels:i}=this;if(!t||!i||!i.length)return void r.getLogger(this.declaredClass).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The input pixel block is empty.\");let a,o,h,n;a=o=h=i[0],i.length>=3?(o=i[1],h=i[2]):2===i.length&&(o=i[1]);const c=new Uint32Array(t),p=this.width*this.height;if(a.length===p)if(l(e)&&e.length===p)if(s)for(n=0;n<p;n++)e[n]&&(c[n]=e[n]<<24|h[n]<<16|o[n]<<8|a[n]);else for(n=0;n<p;n++)e[n]&&(c[n]=255<<24|h[n]<<16|o[n]<<8|a[n]);else for(n=0;n<p;n++)c[n]=255<<24|h[n]<<16|o[n]<<8|a[n];else r.getLogger(this.declaredClass).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The pixelblock is invalid.\")}_fillFromNon8Bit(t){const{pixels:e,mask:s,statistics:i}=this;if(!t||!e||!e.length)return void r.getLogger(this.declaredClass).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The input pixel block is empty.\");const a=this.pixelType;let o=1,h=0,n=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(h=Math.min(h,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;n=Math.max(n,e)}o=255/n}else{let t=255;\"s8\"===a?(h=-128,t=127):\"u16\"===a?t=65535:\"s16\"===a?(h=-32768,t=32767):\"u32\"===a?t=4294967295:\"s32\"===a?(h=-2147483648,t=2147483647):\"f32\"===a?(h=-34e38,t=34e38):\"f64\"===a&&(h=-Number.MAX_VALUE,t=Number.MAX_VALUE),o=255/(t-h)}const c=new Uint32Array(t),p=this.width*this.height;let u,g,f,m,d;if(u=g=f=e[0],u.length!==p)return r.getLogger(this.declaredClass).error(\"getAsRGBA()\",\"Unable to convert to RGBA. The pixelblock is invalid.\");if(e.length>=2)if(g=e[1],e.length>=3&&(f=e[2]),l(s)&&s.length===p)for(m=0;m<p;m++)s[m]&&(c[m]=255<<24|(f[m]-h)*o<<16|(g[m]-h)*o<<8|(u[m]-h)*o);else for(m=0;m<p;m++)c[m]=255<<24|(f[m]-h)*o<<16|(g[m]-h)*o<<8|(u[m]-h)*o;else if(l(s)&&s.length===p)for(m=0;m<p;m++)d=(u[m]-h)*o,s[m]&&(c[m]=255<<24|d<<16|d<<8|d);else for(m=0;m<p;m++)d=(u[m]-h)*o,c[m]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:s}=this;if(!t||!e||!e.length)return r.getLogger(this.declaredClass).error(\"getAsRGBAFloat()\",\"Unable to convert to RGBA. The input pixel block is empty.\");let i,a,o,h;i=a=o=e[0],e.length>=3?(a=e[1],o=e[2]):2===e.length&&(a=e[1]);const n=this.width*this.height;if(i.length!==n)return r.getLogger(this.declaredClass).error(\"getAsRGBAFloat()\",\"Unable to convert to RGBA. The pixelblock is invalid.\");let c=0;if(l(s)&&s.length===n)for(h=0;h<n;h++)t[c++]=i[h],t[c++]=a[h],t[c++]=o[h],t[c++]=1&s[h];else for(h=0;h<n;h++)t[c++]=i[h],t[c++]=a[h],t[c++]=o[h],t[c++]=1}_calculateBandStatistics(t,e){let s=1/0,i=-1/0;const r=t.length;let a,o=0;if(l(e))for(a=0;a<r;a++)e[a]&&(o=t[a],s=o<s?o:s,i=o>i?o:i);else for(a=0;a<r;a++)o=t[a],s=o<s?o:s,i=o>i?o:i;return new c(s,i)}};t([o({json:{write:!0}})],u.prototype,\"width\",void 0),t([o({json:{write:!0}})],u.prototype,\"height\",void 0),t([o({json:{write:!0}})],u.prototype,\"pixelType\",void 0),t([h(\"pixelType\")],u.prototype,\"castPixelType\",null),t([o({json:{write:!0}})],u.prototype,\"validPixelCount\",void 0),t([o({json:{write:!0}})],u.prototype,\"mask\",void 0),t([o({json:{write:!0}})],u.prototype,\"maskIsAlpha\",void 0),t([o({json:{write:!0}})],u.prototype,\"pixels\",void 0),t([o({json:{write:!0}})],u.prototype,\"statistics\",void 0),u=p=t([n(\"esri.layers.support.PixelBlock\")],u);const g=u;export{g as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}