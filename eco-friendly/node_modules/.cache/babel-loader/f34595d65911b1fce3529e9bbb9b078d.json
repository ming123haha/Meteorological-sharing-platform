{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { ForwardLinearDepth as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { Offset as o } from \"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";\nimport { ShaderOutput as r } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";\nimport { SliceDraw as i } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { InstancedDoublePrecision as t } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";\nimport { NormalAttribute as l } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { PositionAttribute as s } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";\nimport { SymbolColor as n } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";\nimport { TextureCoordinateAttribute as d } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexColor as c } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";\nimport { VerticalOffset as g } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";\nimport { DefaultMaterialAuxiliaryPasses as m } from \"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";\nimport { EvaluateAmbientOcclusion as v } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as p } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { multipassTerrainTest as b } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { PhysicallyBasedRendering as h } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";\nimport { PhysicallyBasedRenderingParameters as u, PBRMode as w } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadShadowMapPass as f, ReadShadowMapDraw as x } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { VisualVariables as y } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";\nimport { symbolAlphaCutoff as C } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { DiscardOrAdjustAlphaPass as L } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";\nimport { MixExternalColor as M } from \"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";\nimport { addProjViewLocalOrigin as j, addCameraPosition as O } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float3PassUniform as A } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as P } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as F } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as S } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4Uniform as E } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4Uniform.js\";\nimport { ShaderBuilder as _ } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as $ } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { TransparencyPassType as T } from \"../views/3d/webgl-engine/lib/basicInterfaces.js\";\nimport { VertexAttribute as N } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nimport { ambientBoost as D } from \"../views/3d/webgl-engine/lighting/SceneLighting.js\";\n\nfunction B(B) {\n  const V = new _(),\n        I = V.vertex.code,\n        R = V.fragment.code,\n        z = j(V, B);\n  return V.include(s), V.varyings.add(\"vpos\", \"vec3\"), V.include(y, B), V.include(t, B), V.include(g, B), B.output !== r.Color && B.output !== r.Alpha || (O(V.vertex, B), V.include(l, B), V.include(a), B.offsetBackfaces && V.include(o), B.instancedColor && V.attributes.add(N.INSTANCECOLOR, \"vec4\"), V.varyings.add(\"vNormalWorld\", \"vec3\"), V.varyings.add(\"localvpos\", \"vec3\"), B.hasMultipassTerrain && V.varyings.add(\"depth\", \"float\"), V.include(d, B), V.include(e, B), V.include(n, B), V.include(c, B), V.vertex.uniforms.add(new P(\"externalColor\", e => e.externalColor)), V.varyings.add(\"vcolorExt\", \"vec4\"), I.add(S`\n        void main(void) {\n          forwardNormalizedVertexColor();\n          vcolorExt = externalColor;\n          ${B.instancedColor ? \"vcolorExt *= instanceColor;\" : \"\"}\n          vcolorExt *= vvColor();\n          vcolorExt *= getSymbolColor();\n          forwardColorMixMode();\n\n          if (vcolorExt.a < ${S.float(C)}) {\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          } else {\n            vpos = calculateVPos();\n            localvpos = vpos - view[3].xyz;\n            vpos = subtractOrigin(vpos);\n            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, vpos);\n            ${B.offsetBackfaces ? \"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\" : \"\"}\n          }\n          ${B.hasMultipassTerrain ? S`depth = (view * vec4(vpos, 1.0)).z;` : \"\"}\n          forwardLinearDepth();\n          forwardTextureCoordinates();\n        }\n      `)), B.output === r.Alpha && (V.include(i, B), V.include(L, B), V.include(b, B), V.fragment.uniforms.add([new F(\"opacity\", e => e.opacity), new F(\"layerOpacity\", e => e.layerOpacity), new E(\"view\")]), B.hasColorTexture && V.fragment.uniforms.add(new $(\"tex\", e => e.texture)), V.fragment.include(M), R.add(S`\n      void main() {\n        discardBySlice(vpos);\n        ${B.hasMultipassTerrain ? S`terrainDepthTest(gl_FragCoord, depth);` : \"\"}\n        ${B.hasColorTexture ? S`\n                vec4 texColor = texture2D(tex, vuv0);\n                ${B.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\"}\n                discardOrAdjustAlpha(texColor);` : S`vec4 texColor = vec4(1.0);`}\n        ${B.hasVertexColors ? S`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));` : S`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n\n        gl_FragColor = vec4(opacity_);\n      }\n    `)), B.output === r.Color && (V.include(i, B), V.include(p, B), V.include(v, B), V.include(L, B), V.include(B.instancedDoublePrecision ? f : x, B), V.include(b, B), O(V.fragment, B), V.fragment.uniforms.add([z, new A(\"ambient\", e => e.ambient), new A(\"diffuse\", e => e.diffuse), new F(\"opacity\", e => e.opacity), new F(\"layerOpacity\", e => e.layerOpacity), new E(\"view\"), new F(\"lightingGlobalFactor\", (e, o) => o.lighting.globalFactor), new A(\"lightingMainIntensity\", (e, o) => o.lighting.mainLight.intensity)]), V.fragment.constants.add(\"ambientBoostFactor\", \"float\", D), B.hasColorTexture && V.fragment.uniforms.add(new $(\"tex\", e => e.texture)), V.include(u, B), V.include(h, B), V.fragment.include(M), V.extensions.add(\"GL_OES_standard_derivatives\"), R.add(S`\n      void main() {\n        discardBySlice(vpos);\n        ${B.hasMultipassTerrain ? S`terrainDepthTest(gl_FragCoord, depth);` : \"\"}\n        ${B.hasColorTexture ? S`\n                vec4 texColor = texture2D(tex, vuv0);\n                ${B.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\"}\n                discardOrAdjustAlpha(texColor);` : S`vec4 texColor = vec4(1.0);`}\n        vec3 viewDirection = normalize(vpos - cameraPosition);\n        ${B.pbrMode === w.Normal ? \"applyPBRFactors();\" : \"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n        ${B.receiveShadows ? \"float shadow = readShadowMap(vpos, linearDepth);\" : B.spherical ? \"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\" : \"float shadow = 0.0;\"}\n        vec3 matColor = max(ambient, diffuse);\n        ${B.hasVertexColors ? S`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));` : S`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${B.snowCover ? S`albedo = mix(albedo, vec3(1), 0.9);` : S``}\n        ${S`\n            vec3 shadingNormal = normalize(vNormalWorld);\n            albedo *= 1.2;\n            vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\n            float alignmentLightView = clamp(dot(viewForward, -lightingMainDirection), 0.0, 1.0);\n            float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\n            float treeRadialFalloff = vColor.r;\n            float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\n            additionalLight += backLightFactor * lightingMainIntensity;`}\n        ${B.pbrMode === w.Normal || B.pbrMode === w.Schematic ? B.spherical ? S`vec3 normalGround = normalize(vpos + localOrigin);` : S`vec3 normalGround = vec3(0.0, 0.0, 1.0);` : S``}\n        ${B.pbrMode === w.Normal || B.pbrMode === w.Schematic ? S`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * lightingMainIntensity[2];\n                ${B.snowCover ? S`\n                        mrr = vec3(0.0, 1.0, 0.04);\n                        emission = vec3(0.0);` : \"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);` : S`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${B.transparencyPassType === T.Color ? S`gl_FragColor = premultiplyAlpha(gl_FragColor);` : S``}\n      }\n    `)), V.include(m, B), V;\n}\n\nconst V = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: B\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { V as R, B as b };","map":{"version":3,"names":["ForwardLinearDepth","e","Offset","o","ShaderOutput","r","SliceDraw","i","Transform","a","InstancedDoublePrecision","t","NormalAttribute","l","PositionAttribute","s","SymbolColor","n","TextureCoordinateAttribute","d","VertexColor","c","VerticalOffset","g","DefaultMaterialAuxiliaryPasses","m","EvaluateAmbientOcclusion","v","EvaluateSceneLighting","p","multipassTerrainTest","b","PhysicallyBasedRendering","h","PhysicallyBasedRenderingParameters","u","PBRMode","w","ReadShadowMapPass","f","ReadShadowMapDraw","x","VisualVariables","y","symbolAlphaCutoff","C","DiscardOrAdjustAlphaPass","L","MixExternalColor","M","addProjViewLocalOrigin","j","addCameraPosition","O","Float3PassUniform","A","Float4PassUniform","P","FloatPassUniform","F","glsl","S","Matrix4Uniform","E","ShaderBuilder","_","Texture2DPassUniform","$","TransparencyPassType","T","VertexAttribute","N","ambientBoost","D","B","V","I","vertex","code","R","fragment","z","include","varyings","add","output","Color","Alpha","offsetBackfaces","instancedColor","attributes","INSTANCECOLOR","hasMultipassTerrain","uniforms","externalColor","float","opacity","layerOpacity","hasColorTexture","texture","textureAlphaPremultiplied","hasVertexColors","instancedDoublePrecision","ambient","diffuse","lighting","globalFactor","mainLight","intensity","constants","extensions","pbrMode","Normal","receiveShadows","spherical","snowCover","Schematic","transparencyPassType","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/chunks/RealisticTree.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as s}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VerticalOffset as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as m}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{EvaluateAmbientOcclusion as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{multipassTerrainTest as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{PhysicallyBasedRendering as h}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as u,PBRMode as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as f,ReadShadowMapDraw as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{VisualVariables as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as C}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as L}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as M}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as j,addCameraPosition as O}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as A}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as S}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4Uniform as E}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4Uniform.js\";import{ShaderBuilder as _}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as $}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as T}from\"../views/3d/webgl-engine/lib/basicInterfaces.js\";import{VertexAttribute as N}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{ambientBoost as D}from\"../views/3d/webgl-engine/lighting/SceneLighting.js\";function B(B){const V=new _,I=V.vertex.code,R=V.fragment.code,z=j(V,B);return V.include(s),V.varyings.add(\"vpos\",\"vec3\"),V.include(y,B),V.include(t,B),V.include(g,B),B.output!==r.Color&&B.output!==r.Alpha||(O(V.vertex,B),V.include(l,B),V.include(a),B.offsetBackfaces&&V.include(o),B.instancedColor&&V.attributes.add(N.INSTANCECOLOR,\"vec4\"),V.varyings.add(\"vNormalWorld\",\"vec3\"),V.varyings.add(\"localvpos\",\"vec3\"),B.hasMultipassTerrain&&V.varyings.add(\"depth\",\"float\"),V.include(d,B),V.include(e,B),V.include(n,B),V.include(c,B),V.vertex.uniforms.add(new P(\"externalColor\",(e=>e.externalColor))),V.varyings.add(\"vcolorExt\",\"vec4\"),I.add(S`\n        void main(void) {\n          forwardNormalizedVertexColor();\n          vcolorExt = externalColor;\n          ${B.instancedColor?\"vcolorExt *= instanceColor;\":\"\"}\n          vcolorExt *= vvColor();\n          vcolorExt *= getSymbolColor();\n          forwardColorMixMode();\n\n          if (vcolorExt.a < ${S.float(C)}) {\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          } else {\n            vpos = calculateVPos();\n            localvpos = vpos - view[3].xyz;\n            vpos = subtractOrigin(vpos);\n            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, vpos);\n            ${B.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n          }\n          ${B.hasMultipassTerrain?S`depth = (view * vec4(vpos, 1.0)).z;`:\"\"}\n          forwardLinearDepth();\n          forwardTextureCoordinates();\n        }\n      `)),B.output===r.Alpha&&(V.include(i,B),V.include(L,B),V.include(b,B),V.fragment.uniforms.add([new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity)),new E(\"view\")]),B.hasColorTexture&&V.fragment.uniforms.add(new $(\"tex\",(e=>e.texture))),V.fragment.include(M),R.add(S`\n      void main() {\n        discardBySlice(vpos);\n        ${B.hasMultipassTerrain?S`terrainDepthTest(gl_FragCoord, depth);`:\"\"}\n        ${B.hasColorTexture?S`\n                vec4 texColor = texture2D(tex, vuv0);\n                ${B.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:S`vec4 texColor = vec4(1.0);`}\n        ${B.hasVertexColors?S`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:S`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n\n        gl_FragColor = vec4(opacity_);\n      }\n    `)),B.output===r.Color&&(V.include(i,B),V.include(p,B),V.include(v,B),V.include(L,B),V.include(B.instancedDoublePrecision?f:x,B),V.include(b,B),O(V.fragment,B),V.fragment.uniforms.add([z,new A(\"ambient\",(e=>e.ambient)),new A(\"diffuse\",(e=>e.diffuse)),new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity)),new E(\"view\"),new F(\"lightingGlobalFactor\",((e,o)=>o.lighting.globalFactor)),new A(\"lightingMainIntensity\",((e,o)=>o.lighting.mainLight.intensity))]),V.fragment.constants.add(\"ambientBoostFactor\",\"float\",D),B.hasColorTexture&&V.fragment.uniforms.add(new $(\"tex\",(e=>e.texture))),V.include(u,B),V.include(h,B),V.fragment.include(M),V.extensions.add(\"GL_OES_standard_derivatives\"),R.add(S`\n      void main() {\n        discardBySlice(vpos);\n        ${B.hasMultipassTerrain?S`terrainDepthTest(gl_FragCoord, depth);`:\"\"}\n        ${B.hasColorTexture?S`\n                vec4 texColor = texture2D(tex, vuv0);\n                ${B.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:S`vec4 texColor = vec4(1.0);`}\n        vec3 viewDirection = normalize(vpos - cameraPosition);\n        ${B.pbrMode===w.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n        ${B.receiveShadows?\"float shadow = readShadowMap(vpos, linearDepth);\":B.spherical?\"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\":\"float shadow = 0.0;\"}\n        vec3 matColor = max(ambient, diffuse);\n        ${B.hasVertexColors?S`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:S`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${B.snowCover?S`albedo = mix(albedo, vec3(1), 0.9);`:S``}\n        ${S`\n            vec3 shadingNormal = normalize(vNormalWorld);\n            albedo *= 1.2;\n            vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\n            float alignmentLightView = clamp(dot(viewForward, -lightingMainDirection), 0.0, 1.0);\n            float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\n            float treeRadialFalloff = vColor.r;\n            float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\n            additionalLight += backLightFactor * lightingMainIntensity;`}\n        ${B.pbrMode===w.Normal||B.pbrMode===w.Schematic?B.spherical?S`vec3 normalGround = normalize(vpos + localOrigin);`:S`vec3 normalGround = vec3(0.0, 0.0, 1.0);`:S``}\n        ${B.pbrMode===w.Normal||B.pbrMode===w.Schematic?S`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * lightingMainIntensity[2];\n                ${B.snowCover?S`\n                        mrr = vec3(0.0, 1.0, 0.04);\n                        emission = vec3(0.0);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:S`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${B.transparencyPassType===T.Color?S`gl_FragColor = premultiplyAlpha(gl_FragColor);`:S``}\n      }\n    `)),V.include(m,B),V}const V=Object.freeze(Object.defineProperty({__proto__:null,build:B},Symbol.toStringTag,{value:\"Module\"}));export{V as R,B as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}