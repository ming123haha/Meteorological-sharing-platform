{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../core/maybe.js\";\nimport { a as o, c as i } from \"./vec2.js\";\nimport { O as r, a as l } from \"./vec2f64.js\";\nimport { Z as t } from \"./vec4f64.js\";\nimport { DEFAULT_TEX_SIZE as a } from \"../views/3d/layers/graphics/sdfPrimitives.js\";\nimport { ShaderOutput as s } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";\nimport { SliceDraw as n } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { AlignPixel as c } from \"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";\nimport { HUD as d } from \"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";\nimport { HUDOcclusionPass as u } from \"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";\nimport { OutputHighlight as p } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { VisualVariables as v } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";\nimport { symbolAlphaCutoff as g, defaultMaskAlphaCutoff as f } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { ColorConversion as m } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";\nimport { RgbaFloatEncoding as b } from \"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";\nimport { ScreenSizePerspective as h, addScreenSizePerspective as w, addScreenSizePerspectiveAlignment as x } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";\nimport { Float2PassUniform as C } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float4PassUniform as P } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { Float4sPassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/Float4sPassUniform.js\";\nimport { FloatPassUniform as j } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { FloatsPassUniform as z } from \"../views/3d/webgl-engine/core/shaderModules/FloatsPassUniform.js\";\nimport { glsl as y } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as F } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as O } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { TransparencyPassType as A } from \"../views/3d/webgl-engine/lib/basicInterfaces.js\";\nimport { VertexAttribute as $ } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nimport { vvColorNumber as D } from \"../views/3d/webgl-engine/materials/VisualVariablePassParameters.js\";\n\nfunction B(i) {\n  const l = new F(),\n        B = i.signedDistanceFieldEnabled;\n  if (l.include(c), l.include(d, i), l.include(n, i), i.output === s.Occlusion) return l.include(u, i), l;\n  const {\n    vertex: H,\n    fragment: V\n  } = l;\n  l.include(h), V.include(b), V.include(m), l.include(v, i), l.varyings.add(\"vcolor\", \"vec4\"), l.varyings.add(\"vtc\", \"vec2\"), l.varyings.add(\"vsize\", \"vec2\"), i.binaryHighlightOcclusionEnabled && l.varyings.add(\"voccluded\", \"float\"), H.uniforms.add([new P(\"viewport\", (e, o) => o.camera.fullViewport), new C(\"screenOffset\", (e, i) => o(U, 2 * e.screenOffset[0] * i.camera.pixelRatio, 2 * e.screenOffset[1] * i.camera.pixelRatio)), new C(\"anchorPosition\", e => L(e)), new P(\"materialColor\", e => e.color), new j(\"pixelRatio\", (e, o) => o.camera.pixelRatio)]), B && (H.uniforms.add(new P(\"outlineColor\", e => e.outlineColor)), V.uniforms.add([new P(\"outlineColor\", e => _(e) ? e.outlineColor : t), new j(\"outlineSize\", e => _(e) ? e.outlineSize : 0)])), i.hasScreenSizePerspective && (w(H), x(H)), (i.debugDrawLabelBorder || i.binaryHighlightOcclusionEnabled) && l.varyings.add(\"debugBorderCoords\", \"vec4\"), l.attributes.add($.UV0, \"vec2\"), l.attributes.add($.COLOR, \"vec4\"), l.attributes.add($.SIZE, \"vec2\"), l.attributes.add($.AUXPOS2, \"vec4\"), H.code.add(y`\n    void main(void) {\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n      vec2 inputSize;\n      ${i.hasScreenSizePerspective ? y`\n      inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n      vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);\n         ` : y`\n      inputSize = size;\n      vec2 screenOffsetScaled = screenOffset;`}\n\n      ${i.vvSize ? \"inputSize *= vvScale(auxpos2).xx;\" : \"\"}\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n\n      ${i.occlusionTestEnabled || i.binaryHighlightOcclusionEnabled ? \"bool visible = testVisibilityHUD(posProj);\" : \"\"}\n\n      ${i.binaryHighlightOcclusionEnabled ? \"voccluded = visible ? 0.0 : 1.0;\" : \"\"}\n    `);\n  const E = y`vec2 uv01 = floor(uv0);\nvec2 uv = uv0 - uv01;\nquadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`,\n        T = i.pixelSnappingEnabled ? B ? y`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;` : y`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}` : y`posProj += quadOffset;`;\n  i.vvColor && H.uniforms.add([new S(\"vvColorColors\", e => e.vvColorColors, D), new z(\"vvColorValues\", e => e.vvColorValues, D)]), H.uniforms.add(new C(\"textureCoordinateScaleFactor\", o => e(o.texture) && e(o.texture.descriptor.textureCoordinateScaleFactor) ? o.texture.descriptor.textureCoordinateScaleFactor : r)), H.code.add(y`\n    ${i.occlusionTestEnabled ? \"if (visible) {\" : \"\"}\n    ${E}\n    ${i.vvColor ? \"vcolor = vvGetColor(auxpos2, vvColorValues, vvColorColors) * materialColor;\" : \"vcolor = color / 255.0 * materialColor;\"}\n\n    bool alphaDiscard = vcolor.a < ${y.float(g)};\n    ${B ? `alphaDiscard = alphaDiscard && outlineColor.a < ${y.float(g)};` : \"\"}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${T}\n      gl_Position = posProj;\n    }\n\n    vtc = uv * textureCoordinateScaleFactor;\n\n    ${i.debugDrawLabelBorder ? \"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);\" : \"\"}\n    vsize = inputSize;\n    ${i.occlusionTestEnabled ? y`} else { vtc = vec2(0.0);\n      ${i.debugDrawLabelBorder ? \"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}\" : \"}\"}` : \"\"}\n  }\n  `), V.uniforms.add(new O(\"tex\", e => e.texture));\n  const M = i.debugDrawLabelBorder ? y`(isBorder > 0.0 ? 0.0 : ${y.float(f)})` : y.float(f),\n        R = y`\n    ${i.debugDrawLabelBorder ? y`\n      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));` : \"\"}\n\n    ${B ? y`\n      vec4 fillPixelColor = vcolor;\n\n      // Attempt to sample texel centers to avoid that thin cross outlines\n      // disappear with large symbol sizes.\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041\n      const float txSize = ${y.float(a)};\n      const float texelSize = 1.0 / txSize;\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgba2float(texture2D(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${M} ||\n          fillPixelColor.a + outlinePixelColor.a < ${y.float(g)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        gl_FragColor = vec4(compositeColor, compositeAlpha);\n      } else {\n        if (fillAlphaFactor < ${M}) {\n          discard;\n        }\n\n        gl_FragColor = premultiplyAlpha(fillPixelColor);\n      }\n\n      // visualize SDF:\n      // gl_FragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      ` : y`\n          vec4 texColor = texture2D(tex, vtc, -0.5);\n          if (texColor.a < ${M}) {\n            discard;\n          }\n          gl_FragColor = texColor * premultiplyAlpha(vcolor);\n          `}\n\n    // Draw debug border with transparency, so that original texels along border are still partially visible\n    ${i.debugDrawLabelBorder ? y`gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);` : \"\"}\n  `;\n  return i.output === s.Alpha && V.code.add(y`\n      void main() {\n        ${R}\n        gl_FragColor = vec4(gl_FragColor.a);\n      }\n      `), i.output === s.Color && V.code.add(y`\n    void main() {\n      ${R}\n      ${i.transparencyPassType === A.FrontFace ? \"gl_FragColor.rgb /= gl_FragColor.a;\" : \"\"}\n    }\n    `), i.output === s.Highlight && (l.include(p), V.code.add(y`\n    void main() {\n      ${R}\n      ${i.binaryHighlightOcclusionEnabled ? y`\n          if (voccluded == 1.0) {\n            gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\n          } else {\n            gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n          }` : \"outputHighlight();\"}\n    }\n    `)), l;\n}\n\nfunction _(e) {\n  return e.outlineColor[3] > 0 && e.outlineSize > 0;\n}\n\nfunction L(e, o = U) {\n  return e.textureIsSignedDistanceField ? H(e.anchorPosition, e.distanceFieldBoundingBox, o) : i(o, e.anchorPosition), o;\n}\n\nfunction H(i, r, l) {\n  e(r) ? o(l, i[0] * (r[2] - r[0]) + r[0], i[1] * (r[3] - r[1]) + r[1]) : o(l, 0, 0);\n}\n\nconst U = l(),\n      V = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: B,\n  calculateAnchorPosForRendering: L\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { V as H, B as b, L as c };","map":{"version":3,"names":["isSome","e","a","o","c","i","O","r","l","Z","t","DEFAULT_TEX_SIZE","ShaderOutput","s","SliceDraw","n","AlignPixel","HUD","d","HUDOcclusionPass","u","OutputHighlight","p","VisualVariables","v","symbolAlphaCutoff","g","defaultMaskAlphaCutoff","f","ColorConversion","m","RgbaFloatEncoding","b","ScreenSizePerspective","h","addScreenSizePerspective","w","addScreenSizePerspectiveAlignment","x","Float2PassUniform","C","Float4PassUniform","P","Float4sPassUniform","S","FloatPassUniform","j","FloatsPassUniform","z","glsl","y","ShaderBuilder","F","Texture2DPassUniform","TransparencyPassType","A","VertexAttribute","$","vvColorNumber","D","B","signedDistanceFieldEnabled","include","output","Occlusion","vertex","H","fragment","V","varyings","add","binaryHighlightOcclusionEnabled","uniforms","camera","fullViewport","U","screenOffset","pixelRatio","L","color","outlineColor","_","outlineSize","hasScreenSizePerspective","debugDrawLabelBorder","attributes","UV0","COLOR","SIZE","AUXPOS2","code","vvSize","occlusionTestEnabled","E","T","pixelSnappingEnabled","vvColor","vvColorColors","vvColorValues","texture","descriptor","textureCoordinateScaleFactor","float","M","R","Alpha","Color","transparencyPassType","FrontFace","Highlight","textureIsSignedDistanceField","anchorPosition","distanceFieldBoundingBox","Object","freeze","defineProperty","__proto__","build","calculateAnchorPosForRendering","Symbol","toStringTag","value"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/chunks/HUDMaterial.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../core/maybe.js\";import{a as o,c as i}from\"./vec2.js\";import{O as r,a as l}from\"./vec2f64.js\";import{Z as t}from\"./vec4f64.js\";import{DEFAULT_TEX_SIZE as a}from\"../views/3d/layers/graphics/sdfPrimitives.js\";import{ShaderOutput as s}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";import{SliceDraw as n}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{AlignPixel as c}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";import{HUD as d}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";import{HUDOcclusionPass as u}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";import{OutputHighlight as p}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{VisualVariables as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as g,defaultMaskAlphaCutoff as f}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as m}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{RgbaFloatEncoding as b}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{ScreenSizePerspective as h,addScreenSizePerspective as w,addScreenSizePerspectiveAlignment as x}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";import{Float2PassUniform as C}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{Float4sPassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float4sPassUniform.js\";import{FloatPassUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{FloatsPassUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/FloatsPassUniform.js\";import{glsl as y}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as F}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as O}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as A}from\"../views/3d/webgl-engine/lib/basicInterfaces.js\";import{VertexAttribute as $}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{vvColorNumber as D}from\"../views/3d/webgl-engine/materials/VisualVariablePassParameters.js\";function B(i){const l=new F,B=i.signedDistanceFieldEnabled;if(l.include(c),l.include(d,i),l.include(n,i),i.output===s.Occlusion)return l.include(u,i),l;const{vertex:H,fragment:V}=l;l.include(h),V.include(b),V.include(m),l.include(v,i),l.varyings.add(\"vcolor\",\"vec4\"),l.varyings.add(\"vtc\",\"vec2\"),l.varyings.add(\"vsize\",\"vec2\"),i.binaryHighlightOcclusionEnabled&&l.varyings.add(\"voccluded\",\"float\"),H.uniforms.add([new P(\"viewport\",((e,o)=>o.camera.fullViewport)),new C(\"screenOffset\",((e,i)=>o(U,2*e.screenOffset[0]*i.camera.pixelRatio,2*e.screenOffset[1]*i.camera.pixelRatio))),new C(\"anchorPosition\",(e=>L(e))),new P(\"materialColor\",(e=>e.color)),new j(\"pixelRatio\",((e,o)=>o.camera.pixelRatio))]),B&&(H.uniforms.add(new P(\"outlineColor\",(e=>e.outlineColor))),V.uniforms.add([new P(\"outlineColor\",(e=>_(e)?e.outlineColor:t)),new j(\"outlineSize\",(e=>_(e)?e.outlineSize:0))])),i.hasScreenSizePerspective&&(w(H),x(H)),(i.debugDrawLabelBorder||i.binaryHighlightOcclusionEnabled)&&l.varyings.add(\"debugBorderCoords\",\"vec4\"),l.attributes.add($.UV0,\"vec2\"),l.attributes.add($.COLOR,\"vec4\"),l.attributes.add($.SIZE,\"vec2\"),l.attributes.add($.AUXPOS2,\"vec4\"),H.code.add(y`\n    void main(void) {\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n      vec2 inputSize;\n      ${i.hasScreenSizePerspective?y`\n      inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n      vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);\n         `:y`\n      inputSize = size;\n      vec2 screenOffsetScaled = screenOffset;`}\n\n      ${i.vvSize?\"inputSize *= vvScale(auxpos2).xx;\":\"\"}\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n\n      ${i.occlusionTestEnabled||i.binaryHighlightOcclusionEnabled?\"bool visible = testVisibilityHUD(posProj);\":\"\"}\n\n      ${i.binaryHighlightOcclusionEnabled?\"voccluded = visible ? 0.0 : 1.0;\":\"\"}\n    `);const E=y`vec2 uv01 = floor(uv0);\nvec2 uv = uv0 - uv01;\nquadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`,T=i.pixelSnappingEnabled?B?y`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:y`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}`:y`posProj += quadOffset;`;i.vvColor&&H.uniforms.add([new S(\"vvColorColors\",(e=>e.vvColorColors),D),new z(\"vvColorValues\",(e=>e.vvColorValues),D)]),H.uniforms.add(new C(\"textureCoordinateScaleFactor\",(o=>e(o.texture)&&e(o.texture.descriptor.textureCoordinateScaleFactor)?o.texture.descriptor.textureCoordinateScaleFactor:r))),H.code.add(y`\n    ${i.occlusionTestEnabled?\"if (visible) {\":\"\"}\n    ${E}\n    ${i.vvColor?\"vcolor = vvGetColor(auxpos2, vvColorValues, vvColorColors) * materialColor;\":\"vcolor = color / 255.0 * materialColor;\"}\n\n    bool alphaDiscard = vcolor.a < ${y.float(g)};\n    ${B?`alphaDiscard = alphaDiscard && outlineColor.a < ${y.float(g)};`:\"\"}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${T}\n      gl_Position = posProj;\n    }\n\n    vtc = uv * textureCoordinateScaleFactor;\n\n    ${i.debugDrawLabelBorder?\"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);\":\"\"}\n    vsize = inputSize;\n    ${i.occlusionTestEnabled?y`} else { vtc = vec2(0.0);\n      ${i.debugDrawLabelBorder?\"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}\":\"}\"}`:\"\"}\n  }\n  `),V.uniforms.add(new O(\"tex\",(e=>e.texture)));const M=i.debugDrawLabelBorder?y`(isBorder > 0.0 ? 0.0 : ${y.float(f)})`:y.float(f),R=y`\n    ${i.debugDrawLabelBorder?y`\n      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`:\"\"}\n\n    ${B?y`\n      vec4 fillPixelColor = vcolor;\n\n      // Attempt to sample texel centers to avoid that thin cross outlines\n      // disappear with large symbol sizes.\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041\n      const float txSize = ${y.float(a)};\n      const float texelSize = 1.0 / txSize;\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgba2float(texture2D(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${M} ||\n          fillPixelColor.a + outlinePixelColor.a < ${y.float(g)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        gl_FragColor = vec4(compositeColor, compositeAlpha);\n      } else {\n        if (fillAlphaFactor < ${M}) {\n          discard;\n        }\n\n        gl_FragColor = premultiplyAlpha(fillPixelColor);\n      }\n\n      // visualize SDF:\n      // gl_FragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      `:y`\n          vec4 texColor = texture2D(tex, vtc, -0.5);\n          if (texColor.a < ${M}) {\n            discard;\n          }\n          gl_FragColor = texColor * premultiplyAlpha(vcolor);\n          `}\n\n    // Draw debug border with transparency, so that original texels along border are still partially visible\n    ${i.debugDrawLabelBorder?y`gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`:\"\"}\n  `;return i.output===s.Alpha&&V.code.add(y`\n      void main() {\n        ${R}\n        gl_FragColor = vec4(gl_FragColor.a);\n      }\n      `),i.output===s.Color&&V.code.add(y`\n    void main() {\n      ${R}\n      ${i.transparencyPassType===A.FrontFace?\"gl_FragColor.rgb /= gl_FragColor.a;\":\"\"}\n    }\n    `),i.output===s.Highlight&&(l.include(p),V.code.add(y`\n    void main() {\n      ${R}\n      ${i.binaryHighlightOcclusionEnabled?y`\n          if (voccluded == 1.0) {\n            gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\n          } else {\n            gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n          }`:\"outputHighlight();\"}\n    }\n    `)),l}function _(e){return e.outlineColor[3]>0&&e.outlineSize>0}function L(e,o=U){return e.textureIsSignedDistanceField?H(e.anchorPosition,e.distanceFieldBoundingBox,o):i(o,e.anchorPosition),o}function H(i,r,l){e(r)?o(l,i[0]*(r[2]-r[0])+r[0],i[1]*(r[3]-r[1])+r[1]):o(l,0,0)}const U=l(),V=Object.freeze(Object.defineProperty({__proto__:null,build:B,calculateAnchorPosForRendering:L},Symbol.toStringTag,{value:\"Module\"}));export{V as H,B as b,L as c};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,MAAM,IAAIC,CAAjB,QAAuB,kBAAvB;AAA0C,SAAOC,CAAC,IAAIC,CAAZ,EAAcC,CAAC,IAAIC,CAAnB,QAAyB,WAAzB;AAAqC,SAAOC,CAAC,IAAIC,CAAZ,EAAcL,CAAC,IAAIM,CAAnB,QAAyB,cAAzB;AAAwC,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,cAAlB;AAAiC,SAAOC,gBAAgB,IAAIT,CAA3B,QAAiC,8CAAjC;AAAgF,SAAOU,YAAY,IAAIC,CAAvB,QAA6B,oEAA7B;AAAkG,SAAOC,SAAS,IAAIC,CAApB,QAA0B,2DAA1B;AAAsF,SAAOC,UAAU,IAAIZ,CAArB,QAA2B,oEAA3B;AAAgG,SAAOa,GAAG,IAAIC,CAAd,QAAoB,6DAApB;AAAkF,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,0EAAjC;AAA4G,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,4EAAhC;AAA6G,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,6EAAhC;AAA8G,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,sBAAsB,IAAIC,CAAxD,QAA8D,iEAA9D;AAAgI,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,0EAAhC;AAA2G,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,4EAAlC;AAA+G,SAAOC,qBAAqB,IAAIC,CAAhC,EAAkCC,wBAAwB,IAAIC,CAA9D,EAAgEC,iCAAiC,IAAIC,CAArG,QAA2G,gFAA3G;AAA4L,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,kEAAlC;AAAqG,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,kEAAlC;AAAqG,SAAOC,kBAAkB,IAAIC,CAA7B,QAAmC,mEAAnC;AAAuG,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,iEAAjC;AAAmG,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,kEAAlC;AAAqG,SAAOC,IAAI,IAAIC,CAAf,QAAqB,2DAArB;AAAiF,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,8DAA9B;AAA6F,SAAOC,oBAAoB,IAAI/C,CAA/B,QAAqC,qEAArC;AAA2G,SAAOgD,oBAAoB,IAAIC,CAA/B,QAAqC,iDAArC;AAAuF,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,iDAAhC;AAAkF,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,oEAA9B;;AAAmG,SAASC,CAAT,CAAWvD,CAAX,EAAa;EAAC,MAAMG,CAAC,GAAC,IAAI4C,CAAJ,EAAR;EAAA,MAAcQ,CAAC,GAACvD,CAAC,CAACwD,0BAAlB;EAA6C,IAAGrD,CAAC,CAACsD,OAAF,CAAU1D,CAAV,GAAaI,CAAC,CAACsD,OAAF,CAAU5C,CAAV,EAAYb,CAAZ,CAAb,EAA4BG,CAAC,CAACsD,OAAF,CAAU/C,CAAV,EAAYV,CAAZ,CAA5B,EAA2CA,CAAC,CAAC0D,MAAF,KAAWlD,CAAC,CAACmD,SAA3D,EAAqE,OAAOxD,CAAC,CAACsD,OAAF,CAAU1C,CAAV,EAAYf,CAAZ,GAAeG,CAAtB;EAAwB,MAAK;IAACyD,MAAM,EAACC,CAAR;IAAUC,QAAQ,EAACC;EAAnB,IAAsB5D,CAA3B;EAA6BA,CAAC,CAACsD,OAAF,CAAU5B,CAAV,GAAakC,CAAC,CAACN,OAAF,CAAU9B,CAAV,CAAb,EAA0BoC,CAAC,CAACN,OAAF,CAAUhC,CAAV,CAA1B,EAAuCtB,CAAC,CAACsD,OAAF,CAAUtC,CAAV,EAAYnB,CAAZ,CAAvC,EAAsDG,CAAC,CAAC6D,QAAF,CAAWC,GAAX,CAAe,QAAf,EAAwB,MAAxB,CAAtD,EAAsF9D,CAAC,CAAC6D,QAAF,CAAWC,GAAX,CAAe,KAAf,EAAqB,MAArB,CAAtF,EAAmH9D,CAAC,CAAC6D,QAAF,CAAWC,GAAX,CAAe,OAAf,EAAuB,MAAvB,CAAnH,EAAkJjE,CAAC,CAACkE,+BAAF,IAAmC/D,CAAC,CAAC6D,QAAF,CAAWC,GAAX,CAAe,WAAf,EAA2B,OAA3B,CAArL,EAAyNJ,CAAC,CAACM,QAAF,CAAWF,GAAX,CAAe,CAAC,IAAI5B,CAAJ,CAAM,UAAN,EAAkB,CAACzC,CAAD,EAAGE,CAAH,KAAOA,CAAC,CAACsE,MAAF,CAASC,YAAlC,CAAD,EAAkD,IAAIlC,CAAJ,CAAM,cAAN,EAAsB,CAACvC,CAAD,EAAGI,CAAH,KAAOF,CAAC,CAACwE,CAAD,EAAG,IAAE1E,CAAC,CAAC2E,YAAF,CAAe,CAAf,CAAF,GAAoBvE,CAAC,CAACoE,MAAF,CAASI,UAAhC,EAA2C,IAAE5E,CAAC,CAAC2E,YAAF,CAAe,CAAf,CAAF,GAAoBvE,CAAC,CAACoE,MAAF,CAASI,UAAxE,CAA9B,CAAlD,EAAsK,IAAIrC,CAAJ,CAAM,gBAAN,EAAwBvC,CAAC,IAAE6E,CAAC,CAAC7E,CAAD,CAA5B,CAAtK,EAAwM,IAAIyC,CAAJ,CAAM,eAAN,EAAuBzC,CAAC,IAAEA,CAAC,CAAC8E,KAA5B,CAAxM,EAA4O,IAAIjC,CAAJ,CAAM,YAAN,EAAoB,CAAC7C,CAAD,EAAGE,CAAH,KAAOA,CAAC,CAACsE,MAAF,CAASI,UAApC,CAA5O,CAAf,CAAzN,EAAugBjB,CAAC,KAAGM,CAAC,CAACM,QAAF,CAAWF,GAAX,CAAe,IAAI5B,CAAJ,CAAM,cAAN,EAAsBzC,CAAC,IAAEA,CAAC,CAAC+E,YAA3B,CAAf,GAA0DZ,CAAC,CAACI,QAAF,CAAWF,GAAX,CAAe,CAAC,IAAI5B,CAAJ,CAAM,cAAN,EAAsBzC,CAAC,IAAEgF,CAAC,CAAChF,CAAD,CAAD,GAAKA,CAAC,CAAC+E,YAAP,GAAoBtE,CAA7C,CAAD,EAAkD,IAAIoC,CAAJ,CAAM,aAAN,EAAqB7C,CAAC,IAAEgF,CAAC,CAAChF,CAAD,CAAD,GAAKA,CAAC,CAACiF,WAAP,GAAmB,CAA3C,CAAlD,CAAf,CAA7D,CAAxgB,EAAwrB7E,CAAC,CAAC8E,wBAAF,KAA6B/C,CAAC,CAAC8B,CAAD,CAAD,EAAK5B,CAAC,CAAC4B,CAAD,CAAnC,CAAxrB,EAAguB,CAAC7D,CAAC,CAAC+E,oBAAF,IAAwB/E,CAAC,CAACkE,+BAA3B,KAA6D/D,CAAC,CAAC6D,QAAF,CAAWC,GAAX,CAAe,mBAAf,EAAmC,MAAnC,CAA7xB,EAAw0B9D,CAAC,CAAC6E,UAAF,CAAaf,GAAb,CAAiBb,CAAC,CAAC6B,GAAnB,EAAuB,MAAvB,CAAx0B,EAAu2B9E,CAAC,CAAC6E,UAAF,CAAaf,GAAb,CAAiBb,CAAC,CAAC8B,KAAnB,EAAyB,MAAzB,CAAv2B,EAAw4B/E,CAAC,CAAC6E,UAAF,CAAaf,GAAb,CAAiBb,CAAC,CAAC+B,IAAnB,EAAwB,MAAxB,CAAx4B,EAAw6BhF,CAAC,CAAC6E,UAAF,CAAaf,GAAb,CAAiBb,CAAC,CAACgC,OAAnB,EAA2B,MAA3B,CAAx6B,EAA28BvB,CAAC,CAACwB,IAAF,CAAOpB,GAAP,CAAWpB,CAAE;AAC1lH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ7C,CAAC,CAAC8E,wBAAF,GAA2BjC,CAAE;AACrC;AACA;AACA,UAHQ,GAGGA,CAAE;AACb;AACA,8CAA+C;AAC/C;AACA,QAAQ7C,CAAC,CAACsF,MAAF,GAAS,mCAAT,GAA6C,EAAG;AACxD;AACA;AACA;AACA;AACA,QAAQtF,CAAC,CAACuF,oBAAF,IAAwBvF,CAAC,CAACkE,+BAA1B,GAA0D,4CAA1D,GAAuG,EAAG;AAClH;AACA,QAAQlE,CAAC,CAACkE,+BAAF,GAAkC,kCAAlC,GAAqE,EAAG;AAChF,KA1B6kH,CAA38B;EA0B3nF,MAAMsB,CAAC,GAAC3C,CAAE;AACjB;AACA,+GAFO;EAAA,MAEyG4C,CAAC,GAACzF,CAAC,CAAC0F,oBAAF,GAAuBnC,CAAC,GAACV,CAAE,kEAAH,GAAqEA,CAAE;AACjN;AACA;AACA,EAHkH,GAG/GA,CAAE,wBALE;EAKsB7C,CAAC,CAAC2F,OAAF,IAAW9B,CAAC,CAACM,QAAF,CAAWF,GAAX,CAAe,CAAC,IAAI1B,CAAJ,CAAM,eAAN,EAAuB3C,CAAC,IAAEA,CAAC,CAACgG,aAA5B,EAA2CtC,CAA3C,CAAD,EAA+C,IAAIX,CAAJ,CAAM,eAAN,EAAuB/C,CAAC,IAAEA,CAAC,CAACiG,aAA5B,EAA2CvC,CAA3C,CAA/C,CAAf,CAAX,EAAyHO,CAAC,CAACM,QAAF,CAAWF,GAAX,CAAe,IAAI9B,CAAJ,CAAM,8BAAN,EAAsCrC,CAAC,IAAEF,CAAC,CAACE,CAAC,CAACgG,OAAH,CAAD,IAAclG,CAAC,CAACE,CAAC,CAACgG,OAAF,CAAUC,UAAV,CAAqBC,4BAAtB,CAAf,GAAmElG,CAAC,CAACgG,OAAF,CAAUC,UAAV,CAAqBC,4BAAxF,GAAqH9F,CAA9J,CAAf,CAAzH,EAA2S2D,CAAC,CAACwB,IAAF,CAAOpB,GAAP,CAAWpB,CAAE;AACrV,MAAM7C,CAAC,CAACuF,oBAAF,GAAuB,gBAAvB,GAAwC,EAAG;AACjD,MAAMC,CAAE;AACR,MAAMxF,CAAC,CAAC2F,OAAF,GAAU,6EAAV,GAAwF,yCAA0C;AACxI;AACA,qCAAqC9C,CAAC,CAACoD,KAAF,CAAQ5E,CAAR,CAAW;AAChD,MAAMkC,CAAC,GAAE,mDAAkDV,CAAC,CAACoD,KAAF,CAAQ5E,CAAR,CAAW,GAA/D,GAAkE,EAAG;AAC5E;AACA;AACA;AACA;AACA;AACA,QAAQoE,CAAE;AACV;AACA;AACA;AACA;AACA;AACA,MAAMzF,CAAC,CAAC+E,oBAAF,GAAuB,qDAAvB,GAA6E,EAAG;AACtF;AACA,MAAM/E,CAAC,CAACuF,oBAAF,GAAuB1C,CAAE;AAC/B,QAAQ7C,CAAC,CAAC+E,oBAAF,GAAuB,0DAAvB,GAAkF,GAAI,EADxF,GAC0F,EAAG;AACnG;AACA,GAvBwU,CAA3S,EAuBxBhB,CAAC,CAACI,QAAF,CAAWF,GAAX,CAAe,IAAIhE,CAAJ,CAAM,KAAN,EAAaL,CAAC,IAAEA,CAAC,CAACkG,OAAlB,CAAf,CAvBwB;EAuBoB,MAAMI,CAAC,GAAClG,CAAC,CAAC+E,oBAAF,GAAuBlC,CAAE,2BAA0BA,CAAC,CAACoD,KAAF,CAAQ1E,CAAR,CAAW,GAA9D,GAAiEsB,CAAC,CAACoD,KAAF,CAAQ1E,CAAR,CAAzE;EAAA,MAAoF4E,CAAC,GAACtD,CAAE;AACzI,MAAM7C,CAAC,CAAC+E,oBAAF,GAAuBlC,CAAE;AAC/B,+JADM,GAC0J,EAAG;AACnK;AACA,MAAMU,CAAC,GAACV,CAAE;AACV;AACA;AACA;AACA;AACA;AACA,6BAA6BA,CAAC,CAACoD,KAAF,CAAQpG,CAAR,CAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmDqG,CAAE;AACrD,qDAAqDrD,CAAC,CAACoD,KAAF,CAAQ5E,CAAR,CAAW;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC6E,CAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OArDO,GAqDCrD,CAAE;AACV;AACA,6BAA6BqD,CAAE;AAC/B;AACA;AACA;AACA,WAAY;AACZ;AACA;AACA,MAAMlG,CAAC,CAAC+E,oBAAF,GAAuBlC,CAAE,6EAAzB,GAAsG,EAAG;AAC/G,GAnEiD;EAmE7C,OAAO7C,CAAC,CAAC0D,MAAF,KAAWlD,CAAC,CAAC4F,KAAb,IAAoBrC,CAAC,CAACsB,IAAF,CAAOpB,GAAP,CAAWpB,CAAE;AAC5C;AACA,UAAUsD,CAAE;AACZ;AACA;AACA,OAL+B,CAApB,EAKFnG,CAAC,CAAC0D,MAAF,KAAWlD,CAAC,CAAC6F,KAAb,IAAoBtC,CAAC,CAACsB,IAAF,CAAOpB,GAAP,CAAWpB,CAAE;AAC1C;AACA,QAAQsD,CAAE;AACV,QAAQnG,CAAC,CAACsG,oBAAF,KAAyBpD,CAAC,CAACqD,SAA3B,GAAqC,qCAArC,GAA2E,EAAG;AACtF;AACA,KAL6B,CALlB,EAUJvG,CAAC,CAAC0D,MAAF,KAAWlD,CAAC,CAACgG,SAAb,KAAyBrG,CAAC,CAACsD,OAAF,CAAUxC,CAAV,GAAa8C,CAAC,CAACsB,IAAF,CAAOpB,GAAP,CAAWpB,CAAE;AAC1D;AACA,QAAQsD,CAAE;AACV,QAAQnG,CAAC,CAACkE,+BAAF,GAAkCrB,CAAE;AAC5C;AACA;AACA;AACA;AACA,YALQ,GAKK,oBAAqB;AAClC;AACA,KAV6C,CAAtC,CAVI,EAoBH1C,CApBJ;AAoBM;;AAAA,SAASyE,CAAT,CAAWhF,CAAX,EAAa;EAAC,OAAOA,CAAC,CAAC+E,YAAF,CAAe,CAAf,IAAkB,CAAlB,IAAqB/E,CAAC,CAACiF,WAAF,GAAc,CAA1C;AAA4C;;AAAA,SAASJ,CAAT,CAAW7E,CAAX,EAAaE,CAAC,GAACwE,CAAf,EAAiB;EAAC,OAAO1E,CAAC,CAAC6G,4BAAF,GAA+B5C,CAAC,CAACjE,CAAC,CAAC8G,cAAH,EAAkB9G,CAAC,CAAC+G,wBAApB,EAA6C7G,CAA7C,CAAhC,GAAgFE,CAAC,CAACF,CAAD,EAAGF,CAAC,CAAC8G,cAAL,CAAjF,EAAsG5G,CAA7G;AAA+G;;AAAA,SAAS+D,CAAT,CAAW7D,CAAX,EAAaE,CAAb,EAAeC,CAAf,EAAiB;EAACP,CAAC,CAACM,CAAD,CAAD,GAAKJ,CAAC,CAACK,CAAD,EAAGH,CAAC,CAAC,CAAD,CAAD,IAAME,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAZ,IAAiBA,CAAC,CAAC,CAAD,CAArB,EAAyBF,CAAC,CAAC,CAAD,CAAD,IAAME,CAAC,CAAC,CAAD,CAAD,GAAKA,CAAC,CAAC,CAAD,CAAZ,IAAiBA,CAAC,CAAC,CAAD,CAA3C,CAAN,GAAsDJ,CAAC,CAACK,CAAD,EAAG,CAAH,EAAK,CAAL,CAAvD;AAA+D;;AAAA,MAAMmE,CAAC,GAACnE,CAAC,EAAT;AAAA,MAAY4D,CAAC,GAAC6C,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,cAAP,CAAsB;EAACC,SAAS,EAAC,IAAX;EAAgBC,KAAK,EAACzD,CAAtB;EAAwB0D,8BAA8B,EAACxC;AAAvD,CAAtB,EAAgFyC,MAAM,CAACC,WAAvF,EAAmG;EAACC,KAAK,EAAC;AAAP,CAAnG,CAAd,CAAd;AAAkJ,SAAOrD,CAAC,IAAIF,CAAZ,EAAcN,CAAC,IAAI5B,CAAnB,EAAqB8C,CAAC,IAAI1E,CAA1B"},"metadata":{},"sourceType":"module"}