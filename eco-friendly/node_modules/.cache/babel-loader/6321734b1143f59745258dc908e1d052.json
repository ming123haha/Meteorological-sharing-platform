{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport BrushController from '../helper/BrushController.js';\nimport * as brushHelper from '../helper/brushHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport ComponentView from '../../view/Component.js';\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar ParallelAxisView =\n/** @class */\nfunction (_super) {\n  __extends(ParallelAxisView, _super);\n\n  function ParallelAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelAxisView.type;\n    return _this;\n  }\n\n  ParallelAxisView.prototype.init = function (ecModel, api) {\n    _super.prototype.init.apply(this, arguments);\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  };\n\n  ParallelAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n  }; // /**\n  //  * @override\n  //  */\n  // updateVisual(axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // }\n\n\n  ParallelAxisView.prototype._refreshBrushController = function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      x: builderOpt.position[0],\n      y: builderOpt.position[1]\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  };\n\n  ParallelAxisView.prototype._onBrush = function (eventParam) {\n    var coverInfoList = eventParam.areas; // Do not cache these object, because the mey be changed.\n\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === eventParam.isEnd || eventParam.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  };\n\n  ParallelAxisView.prototype.dispose = function () {\n    this._brushController.dispose();\n  };\n\n  ParallelAxisView.type = 'parallelAxis';\n  return ParallelAxisView;\n}(ComponentView);\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nexport default ParallelAxisView;","map":{"version":3,"names":["__extends","zrUtil","AxisBuilder","BrushController","brushHelper","graphic","ComponentView","elementList","ParallelAxisView","_super","_this","apply","arguments","type","prototype","init","ecModel","api","_brushController","getZr","on","bind","_onBrush","render","axisModel","payload","fromAxisAreaSelect","group","removeAll","oldAxisGroup","_axisGroup","Group","add","get","coordSysModel","getCoordSysModel","coordSys","coordinateSystem","areaSelectStyle","getAreaSelectStyle","areaWidth","width","dim","axis","axisLayout","getAxisLayout","builderOpt","extend","strokeContainThreshold","axisBuilder","each","getGroup","_refreshBrushController","groupTransition","extent","getExtent","extentLen","extra","Math","min","abs","rect","BoundingRect","create","x","y","height","mount","enableGlobalPan","rotation","position","setPanels","panelId","clipPath","makeRectPanelClipPath","isTargetByCursor","makeRectIsTargetByCursor","getLinearBrushOtherExtent","makeLinearBrushOtherExtent","enableBrush","brushType","brushStyle","removeOnClick","updateCovers","getCoverInfoList","eventParam","coverInfoList","areas","intervals","map","coverInfo","coordToData","range","option","realtime","isEnd","dispatchAction","parallelAxisId","id","dispose","findComponents","mainType","query","activeIntervals","interval","dataToCoord","getComponent"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/echarts/lib/component/axis/ParallelAxisView.js"],"sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport AxisBuilder from './AxisBuilder.js';\r\nimport BrushController from '../helper/BrushController.js';\r\nimport * as brushHelper from '../helper/brushHelper.js';\r\nimport * as graphic from '../../util/graphic.js';\r\nimport ComponentView from '../../view/Component.js';\r\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\r\n\r\nvar ParallelAxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ParallelAxisView, _super);\r\n\r\n  function ParallelAxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ParallelAxisView.type;\r\n    return _this;\r\n  }\r\n\r\n  ParallelAxisView.prototype.init = function (ecModel, api) {\r\n    _super.prototype.init.apply(this, arguments);\r\n\r\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\r\n  };\r\n\r\n  ParallelAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\r\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\r\n      return;\r\n    }\r\n\r\n    this.axisModel = axisModel;\r\n    this.api = api;\r\n    this.group.removeAll();\r\n    var oldAxisGroup = this._axisGroup;\r\n    this._axisGroup = new graphic.Group();\r\n    this.group.add(this._axisGroup);\r\n\r\n    if (!axisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\r\n    var coordSys = coordSysModel.coordinateSystem;\r\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\r\n    var areaWidth = areaSelectStyle.width;\r\n    var dim = axisModel.axis.dim;\r\n    var axisLayout = coordSys.getAxisLayout(dim);\r\n    var builderOpt = zrUtil.extend({\r\n      strokeContainThreshold: areaWidth\r\n    }, axisLayout);\r\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\r\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\r\n\r\n    this._axisGroup.add(axisBuilder.getGroup());\r\n\r\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\r\n\r\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n  }; // /**\r\n  //  * @override\r\n  //  */\r\n  // updateVisual(axisModel, ecModel, api, payload) {\r\n  //     this._brushController && this._brushController\r\n  //         .updateCovers(getCoverInfoList(axisModel));\r\n  // }\r\n\r\n\r\n  ParallelAxisView.prototype._refreshBrushController = function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\r\n    // After filtering, axis may change, select area needs to be update.\r\n    var extent = axisModel.axis.getExtent();\r\n    var extentLen = extent[1] - extent[0];\r\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\r\n    // width/height might be negative, which will be\r\n    // normalized in BoundingRect.\r\n\r\n    var rect = graphic.BoundingRect.create({\r\n      x: extent[0],\r\n      y: -areaWidth / 2,\r\n      width: extentLen,\r\n      height: areaWidth\r\n    });\r\n    rect.x -= extra;\r\n    rect.width += 2 * extra;\r\n\r\n    this._brushController.mount({\r\n      enableGlobalPan: true,\r\n      rotation: builderOpt.rotation,\r\n      x: builderOpt.position[0],\r\n      y: builderOpt.position[1]\r\n    }).setPanels([{\r\n      panelId: 'pl',\r\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\r\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\r\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\r\n    }]).enableBrush({\r\n      brushType: 'lineX',\r\n      brushStyle: areaSelectStyle,\r\n      removeOnClick: true\r\n    }).updateCovers(getCoverInfoList(axisModel));\r\n  };\r\n\r\n  ParallelAxisView.prototype._onBrush = function (eventParam) {\r\n    var coverInfoList = eventParam.areas; // Do not cache these object, because the mey be changed.\r\n\r\n    var axisModel = this.axisModel;\r\n    var axis = axisModel.axis;\r\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\r\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\r\n    }); // If realtime is true, action is not dispatched on drag end, because\r\n    // the drag end emits the same params with the last drag move event,\r\n    // and may have some delay when using touch pad.\r\n\r\n    if (!axisModel.option.realtime === eventParam.isEnd || eventParam.removeOnClick) {\r\n      // jshint ignore:line\r\n      this.api.dispatchAction({\r\n        type: 'axisAreaSelect',\r\n        parallelAxisId: axisModel.id,\r\n        intervals: intervals\r\n      });\r\n    }\r\n  };\r\n\r\n  ParallelAxisView.prototype.dispose = function () {\r\n    this._brushController.dispose();\r\n  };\r\n\r\n  ParallelAxisView.type = 'parallelAxis';\r\n  return ParallelAxisView;\r\n}(ComponentView);\r\n\r\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\r\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\r\n    mainType: 'parallelAxis',\r\n    query: payload\r\n  })[0] === axisModel;\r\n}\r\n\r\nfunction getCoverInfoList(axisModel) {\r\n  var axis = axisModel.axis;\r\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\r\n    return {\r\n      brushType: 'lineX',\r\n      panelId: 'pl',\r\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\r\n    };\r\n  });\r\n}\r\n\r\nfunction getCoordSysModel(axisModel, ecModel) {\r\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\r\n}\r\n\r\nexport default ParallelAxisView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}