{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../core/Logger.js\";\nimport { getOrCreateMapValue as t } from \"../../../../../core/MapUtils.js\";\nimport { isSome as s, isNone as i } from \"../../../../../core/maybe.js\";\nimport { j as r } from \"../../../../../chunks/quat.js\";\nimport { I as a, b as o } from \"../../../../../chunks/quatf64.js\";\nimport { k as n } from \"../../../../../chunks/vec3.js\";\nimport { Z as l, a as c, O as h } from \"../../../../../chunks/vec3f64.js\";\nimport u from \"../../../MeshMaterialMetallicRoughness.js\";\nimport { ungeoreferenceByTransform as f } from \"../../georeference.js\";\nimport { Buffer as d } from \"./buffer.js\";\nimport { computeOrigin as p, smoothNormals as m } from \"./geometry.js\";\nimport { BufferOutputType as g, ImageOutputType as _, AttributeType as A, TargetBuffer as x, AlphaMode as R } from \"./types.js\";\nimport { imageToArrayBuffer as T, imageToDataURI as E } from \"./imageutils.js\";\nimport { DataType as b, TextureWrapMode as M } from \"../../../../../views/webgl/enums.js\";\nconst O = e.getLogger(\"gltf\");\n\nclass w {\n  constructor(e, t, s) {\n    this.params = {}, this._materialMap = new Array(), this._imageMap = new Map(), this._textureMap = new Map(), this.gltf = {\n      asset: {\n        version: \"2.0\",\n        copyright: e.copyright,\n        generator: e.generator\n      },\n      extras: {\n        options: t,\n        binChunkBuffer: null,\n        promises: []\n      }\n    }, s && (this.params = s), this._addScenes(e);\n  }\n\n  _addScenes(e) {\n    this.gltf.scene = e.defaultScene;\n    const t = this.gltf.extras,\n          s = t.options.bufferOutputType === g.GLB || t.options.imageOutputType === _.GLB;\n    s && (t.binChunkBuffer = new d(this.gltf)), e.forEachScene(e => {\n      this._addScene(e);\n    }), s && t.binChunkBuffer.finalize();\n  }\n\n  _addScene(e) {\n    this.gltf.scenes || (this.gltf.scenes = []);\n    const t = {};\n    e.name && (t.name = e.name), e.forEachNode(e => {\n      t.nodes || (t.nodes = []);\n\n      const s = this._addNode(e);\n\n      t.nodes.push(s);\n    }), this.gltf.scenes.push(t);\n  }\n\n  _addNode(e) {\n    this.gltf.nodes || (this.gltf.nodes = []);\n    const t = {};\n    e.name && (t.name = e.name);\n    const s = e.translation;\n    n(s, l) || (t.translation = c(s));\n    const i = e.rotation;\n    r(i, a) || (t.rotation = o(i));\n    const u = e.scale;\n    n(u, h) || (t.scale = c(u)), e.mesh && e.mesh.vertexAttributes.position ? t.mesh = this._addMesh(e.mesh) : e.forEachNode(e => {\n      t.children || (t.children = []);\n\n      const s = this._addNode(e);\n\n      t.children.push(s);\n    });\n    const f = this.gltf.nodes.length;\n    return this.gltf.nodes.push(t), f;\n  }\n\n  _addMesh(e) {\n    this.gltf.meshes || (this.gltf.meshes = []);\n    const t = {\n      primitives: []\n    },\n          i = this.gltf.extras,\n          r = i.options.bufferOutputType === g.GLB;\n    let a;\n    a = r ? i.binChunkBuffer : new d(this.gltf), this.params.origin || (this.params.origin = p(e));\n    const o = f(e.vertexAttributes, e.transform, this.params.origin, {\n      geographic: this.params.geographic,\n      unit: \"meters\"\n    });\n    m(e, o), this._flipYZAxis(o);\n    const n = a.addBufferView(b.FLOAT, A.VEC3, x.ARRAY_BUFFER);\n    let l, c, h, u;\n    o.normal && (l = a.addBufferView(b.FLOAT, A.VEC3, x.ARRAY_BUFFER)), e.vertexAttributes.uv && (c = a.addBufferView(b.FLOAT, A.VEC2, x.ARRAY_BUFFER)), o.tangent && (h = a.addBufferView(b.FLOAT, A.VEC4, x.ARRAY_BUFFER)), e.vertexAttributes.color && (u = a.addBufferView(b.UNSIGNED_BYTE, A.VEC4, x.ARRAY_BUFFER)), n.startAccessor(\"POSITION\"), l && l.startAccessor(\"NORMAL\"), c && c.startAccessor(\"TEXCOORD_0\"), h && h.startAccessor(\"TANGENT\"), u && u.startAccessor(\"COLOR_0\");\n\n    const _ = o.position.length / 3,\n          {\n      position: R,\n      normal: T,\n      tangent: E\n    } = o,\n          {\n      color: M,\n      uv: O\n    } = e.vertexAttributes;\n\n    for (let f = 0; f < _; ++f) n.push(R[3 * f + 0]), n.push(R[3 * f + 1]), n.push(R[3 * f + 2]), l && s(T) && (l.push(T[3 * f + 0]), l.push(T[3 * f + 1]), l.push(T[3 * f + 2])), c && s(O) && (c.push(O[2 * f + 0]), c.push(O[2 * f + 1])), h && s(E) && (h.push(E[4 * f + 0]), h.push(E[4 * f + 1]), h.push(E[4 * f + 2]), h.push(E[4 * f + 3])), u && s(M) && (u.push(M[4 * f + 0]), u.push(M[4 * f + 1]), u.push(M[4 * f + 2]), u.push(M[4 * f + 3]));\n\n    const w = n.endAccessor(),\n          N = this._addAccessor(n.index, w);\n\n    let C, B, L, y, I;\n\n    if (l) {\n      const e = l.endAccessor();\n      C = this._addAccessor(l.index, e);\n    }\n\n    if (c) {\n      const e = c.endAccessor();\n      B = this._addAccessor(c.index, e);\n    }\n\n    if (h) {\n      const e = h.endAccessor();\n      L = this._addAccessor(h.index, e);\n    }\n\n    if (u) {\n      const e = u.endAccessor();\n      y = this._addAccessor(u.index, e);\n    }\n\n    e.components && e.components.length > 0 && e.components[0].faces ? (I = a.addBufferView(b.UNSIGNED_INT, A.SCALAR, x.ELEMENT_ARRAY_BUFFER), this._addMeshVertexIndexed(I, e.components, t, N, C, B, L, y)) : this._addMeshVertexNonIndexed(e.components, t, N, C, B, L, y), n.finalize(), l && l.finalize(), c && c.finalize(), h && h.finalize(), I && I.finalize(), u && u.finalize(), r || a.finalize();\n    const S = this.gltf.meshes.length;\n    return this.gltf.meshes.push(t), S;\n  }\n\n  _flipYZAxis({\n    position: e,\n    normal: t,\n    tangent: s\n  }) {\n    this._flipYZBuffer(e, 3), this._flipYZBuffer(t, 3), this._flipYZBuffer(s, 4);\n  }\n\n  _flipYZBuffer(e, t) {\n    if (!i(e)) for (let s = 1, i = 2; s < e.length; s += t, i += t) {\n      const t = e[s],\n            r = e[i];\n      e[s] = r, e[i] = -t;\n    }\n  }\n\n  _addMaterial(e) {\n    if (null === e) return;\n\n    const t = this._materialMap.indexOf(e);\n\n    if (-1 !== t) return t;\n    this.gltf.materials || (this.gltf.materials = []);\n    const i = {};\n\n    switch (e.alphaMode) {\n      case \"mask\":\n        i.alphaMode = R.MASK;\n        break;\n\n      case \"auto\":\n      case \"blend\":\n        i.alphaMode = R.BLEND;\n    }\n\n    .5 !== e.alphaCutoff && (i.alphaCutoff = e.alphaCutoff), e.doubleSided && (i.doubleSided = e.doubleSided), i.pbrMetallicRoughness = {};\n\n    const r = e => e ** 2.1,\n          a = e => {\n      const t = e.toRgba();\n      return t[0] = r(t[0] / 255), t[1] = r(t[1] / 255), t[2] = r(t[2] / 255), t;\n    };\n\n    if (s(e.color) && (i.pbrMetallicRoughness.baseColorFactor = a(e.color)), s(e.colorTexture) && (i.pbrMetallicRoughness.baseColorTexture = {\n      index: this._addTexture(e.colorTexture)\n    }), s(e.normalTexture) && (i.normalTexture = {\n      index: this._addTexture(e.normalTexture)\n    }), e instanceof u) {\n      if (s(e.emissiveTexture) && (i.emissiveTexture = {\n        index: this._addTexture(e.emissiveTexture)\n      }), s(e.emissiveColor)) {\n        const t = a(e.emissiveColor);\n        i.emissiveFactor = [t[0], t[1], t[2]];\n      }\n\n      s(e.occlusionTexture) && (i.occlusionTexture = {\n        index: this._addTexture(e.occlusionTexture)\n      }), s(e.metallicRoughnessTexture) && (i.pbrMetallicRoughness.metallicRoughnessTexture = {\n        index: this._addTexture(e.metallicRoughnessTexture)\n      }), i.pbrMetallicRoughness.metallicFactor = e.metallic, i.pbrMetallicRoughness.roughnessFactor = e.roughness;\n    } else i.pbrMetallicRoughness.metallicFactor = 1, i.pbrMetallicRoughness.roughnessFactor = 1, O.warnOnce(\"Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.\");\n\n    const o = this.gltf.materials.length;\n    return this.gltf.materials.push(i), this._materialMap.push(e), o;\n  }\n\n  _addTexture(e) {\n    const s = this.gltf.textures ?? [];\n    return this.gltf.textures = s, t(this._textureMap, e, () => {\n      const t = {\n        sampler: this._addSampler(e),\n        source: this._addImage(e)\n      },\n            i = s.length;\n      return s.push(t), i;\n    });\n  }\n\n  _addImage(e) {\n    const t = this._imageMap.get(e);\n\n    if (null != t) return t;\n    this.gltf.images || (this.gltf.images = []);\n    const s = {};\n    if (e.url) s.uri = e.url;else {\n      const t = e.data;\n      s.extras = t;\n\n      for (let e = 0; e < this.gltf.images.length; ++e) if (t === this.gltf.images[e].extras) return e;\n\n      const i = this.gltf.extras;\n\n      switch (i.options.imageOutputType) {\n        case _.GLB:\n          {\n            const e = i.binChunkBuffer.addBufferView(b.UNSIGNED_BYTE, A.SCALAR),\n                  r = T(t).then(({\n              data: e,\n              type: t\n            }) => (s.mimeType = t, e));\n            e.writeAsync(r).then(() => {\n              e.finalize();\n            }), s.bufferView = e.index;\n            break;\n          }\n\n        case _.DataURI:\n          s.uri = E(t);\n          break;\n\n        default:\n          i.promises.push(T(t).then(({\n            data: e,\n            type: t\n          }) => {\n            s.uri = e, s.mimeType = t;\n          }));\n      }\n    }\n    const i = this.gltf.images.length;\n    return this.gltf.images.push(s), this._imageMap.set(e, i), i;\n  }\n\n  _addSampler(e) {\n    this.gltf.samplers || (this.gltf.samplers = []);\n    let t = M.REPEAT,\n        s = M.REPEAT;\n    if (\"string\" == typeof e.wrap) switch (e.wrap) {\n      case \"clamp\":\n        t = M.CLAMP_TO_EDGE, s = M.CLAMP_TO_EDGE;\n        break;\n\n      case \"mirror\":\n        t = M.MIRRORED_REPEAT, s = M.MIRRORED_REPEAT;\n    } else {\n      switch (e.wrap.vertical) {\n        case \"clamp\":\n          s = M.CLAMP_TO_EDGE;\n          break;\n\n        case \"mirror\":\n          s = M.MIRRORED_REPEAT;\n      }\n\n      switch (e.wrap.horizontal) {\n        case \"clamp\":\n          t = M.CLAMP_TO_EDGE;\n          break;\n\n        case \"mirror\":\n          t = M.MIRRORED_REPEAT;\n      }\n    }\n    const i = {\n      wrapS: t,\n      wrapT: s\n    };\n\n    for (let a = 0; a < this.gltf.samplers.length; ++a) if (JSON.stringify(i) === JSON.stringify(this.gltf.samplers[a])) return a;\n\n    const r = this.gltf.samplers.length;\n    return this.gltf.samplers.push(i), r;\n  }\n\n  _addAccessor(e, t) {\n    this.gltf.accessors || (this.gltf.accessors = []);\n    const s = {\n      bufferView: e,\n      byteOffset: t.byteOffset,\n      componentType: t.componentType,\n      count: t.count,\n      type: t.type,\n      min: t.min,\n      max: t.max,\n      name: t.name\n    };\n    t.normalized && (s.normalized = !0);\n    const i = this.gltf.accessors.length;\n    return this.gltf.accessors.push(s), i;\n  }\n\n  _addMeshVertexIndexed(e, t, s, i, r, a, o, n) {\n    for (const l of t) {\n      e.startAccessor(\"INDICES\");\n\n      for (let s = 0; s < l.faces.length; ++s) e.push(l.faces[s]);\n\n      const t = e.endAccessor(),\n            c = {\n        attributes: {\n          POSITION: i\n        },\n        indices: this._addAccessor(e.index, t),\n        material: this._addMaterial(l.material)\n      };\n      r && \"flat\" !== l.shading && (c.attributes.NORMAL = r), a && (c.attributes.TEXCOORD_0 = a), o && \"flat\" !== l.shading && (c.attributes.TANGENT = o), n && (c.attributes.COLOR_0 = n), s.primitives.push(c);\n    }\n  }\n\n  _addMeshVertexNonIndexed(e, t, s, i, r, a, o) {\n    const n = {\n      attributes: {\n        POSITION: s\n      }\n    };\n    i && (n.attributes.NORMAL = i), r && (n.attributes.TEXCOORD_0 = r), a && (n.attributes.TANGENT = a), o && (n.attributes.COLOR_0 = o), e && (n.material = this._addMaterial(e[0].material)), t.primitives.push(n);\n  }\n\n}\n\nexport { w as GLTF };","map":{"version":3,"names":["e","getOrCreateMapValue","t","isSome","s","isNone","i","j","r","I","a","b","o","k","n","Z","l","c","O","h","u","ungeoreferenceByTransform","f","Buffer","d","computeOrigin","p","smoothNormals","m","BufferOutputType","g","ImageOutputType","_","AttributeType","A","TargetBuffer","x","AlphaMode","R","imageToArrayBuffer","T","imageToDataURI","E","DataType","TextureWrapMode","M","getLogger","w","constructor","params","_materialMap","Array","_imageMap","Map","_textureMap","gltf","asset","version","copyright","generator","extras","options","binChunkBuffer","promises","_addScenes","scene","defaultScene","bufferOutputType","GLB","imageOutputType","forEachScene","_addScene","finalize","scenes","name","forEachNode","nodes","_addNode","push","translation","rotation","scale","mesh","vertexAttributes","position","_addMesh","children","length","meshes","primitives","origin","transform","geographic","unit","_flipYZAxis","addBufferView","FLOAT","VEC3","ARRAY_BUFFER","normal","uv","VEC2","tangent","VEC4","color","UNSIGNED_BYTE","startAccessor","endAccessor","N","_addAccessor","index","C","B","L","y","components","faces","UNSIGNED_INT","SCALAR","ELEMENT_ARRAY_BUFFER","_addMeshVertexIndexed","_addMeshVertexNonIndexed","S","_flipYZBuffer","_addMaterial","indexOf","materials","alphaMode","MASK","BLEND","alphaCutoff","doubleSided","pbrMetallicRoughness","toRgba","baseColorFactor","colorTexture","baseColorTexture","_addTexture","normalTexture","emissiveTexture","emissiveColor","emissiveFactor","occlusionTexture","metallicRoughnessTexture","metallicFactor","metallic","roughnessFactor","roughness","warnOnce","textures","sampler","_addSampler","source","_addImage","get","images","url","uri","data","then","type","mimeType","writeAsync","bufferView","DataURI","set","samplers","REPEAT","wrap","CLAMP_TO_EDGE","MIRRORED_REPEAT","vertical","horizontal","wrapS","wrapT","JSON","stringify","accessors","byteOffset","componentType","count","min","max","normalized","attributes","POSITION","indices","material","shading","NORMAL","TEXCOORD_0","TANGENT","COLOR_0","GLTF"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/geometry/support/meshUtils/exporters/gltf/gltf.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Logger.js\";import{getOrCreateMapValue as t}from\"../../../../../core/MapUtils.js\";import{isSome as s,isNone as i}from\"../../../../../core/maybe.js\";import{j as r}from\"../../../../../chunks/quat.js\";import{I as a,b as o}from\"../../../../../chunks/quatf64.js\";import{k as n}from\"../../../../../chunks/vec3.js\";import{Z as l,a as c,O as h}from\"../../../../../chunks/vec3f64.js\";import u from\"../../../MeshMaterialMetallicRoughness.js\";import{ungeoreferenceByTransform as f}from\"../../georeference.js\";import{Buffer as d}from\"./buffer.js\";import{computeOrigin as p,smoothNormals as m}from\"./geometry.js\";import{BufferOutputType as g,ImageOutputType as _,AttributeType as A,TargetBuffer as x,AlphaMode as R}from\"./types.js\";import{imageToArrayBuffer as T,imageToDataURI as E}from\"./imageutils.js\";import{DataType as b,TextureWrapMode as M}from\"../../../../../views/webgl/enums.js\";const O=e.getLogger(\"gltf\");class w{constructor(e,t,s){this.params={},this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:\"2.0\",copyright:e.copyright,generator:e.generator},extras:{options:t,binChunkBuffer:null,promises:[]}},s&&(this.params=s),this._addScenes(e)}_addScenes(e){this.gltf.scene=e.defaultScene;const t=this.gltf.extras,s=t.options.bufferOutputType===g.GLB||t.options.imageOutputType===_.GLB;s&&(t.binChunkBuffer=new d(this.gltf)),e.forEachScene((e=>{this._addScene(e)})),s&&t.binChunkBuffer.finalize()}_addScene(e){this.gltf.scenes||(this.gltf.scenes=[]);const t={};e.name&&(t.name=e.name),e.forEachNode((e=>{t.nodes||(t.nodes=[]);const s=this._addNode(e);t.nodes.push(s)})),this.gltf.scenes.push(t)}_addNode(e){this.gltf.nodes||(this.gltf.nodes=[]);const t={};e.name&&(t.name=e.name);const s=e.translation;n(s,l)||(t.translation=c(s));const i=e.rotation;r(i,a)||(t.rotation=o(i));const u=e.scale;n(u,h)||(t.scale=c(u)),e.mesh&&e.mesh.vertexAttributes.position?t.mesh=this._addMesh(e.mesh):e.forEachNode((e=>{t.children||(t.children=[]);const s=this._addNode(e);t.children.push(s)}));const f=this.gltf.nodes.length;return this.gltf.nodes.push(t),f}_addMesh(e){this.gltf.meshes||(this.gltf.meshes=[]);const t={primitives:[]},i=this.gltf.extras,r=i.options.bufferOutputType===g.GLB;let a;a=r?i.binChunkBuffer:new d(this.gltf),this.params.origin||(this.params.origin=p(e));const o=f(e.vertexAttributes,e.transform,this.params.origin,{geographic:this.params.geographic,unit:\"meters\"});m(e,o),this._flipYZAxis(o);const n=a.addBufferView(b.FLOAT,A.VEC3,x.ARRAY_BUFFER);let l,c,h,u;o.normal&&(l=a.addBufferView(b.FLOAT,A.VEC3,x.ARRAY_BUFFER)),e.vertexAttributes.uv&&(c=a.addBufferView(b.FLOAT,A.VEC2,x.ARRAY_BUFFER)),o.tangent&&(h=a.addBufferView(b.FLOAT,A.VEC4,x.ARRAY_BUFFER)),e.vertexAttributes.color&&(u=a.addBufferView(b.UNSIGNED_BYTE,A.VEC4,x.ARRAY_BUFFER)),n.startAccessor(\"POSITION\"),l&&l.startAccessor(\"NORMAL\"),c&&c.startAccessor(\"TEXCOORD_0\"),h&&h.startAccessor(\"TANGENT\"),u&&u.startAccessor(\"COLOR_0\");const _=o.position.length/3,{position:R,normal:T,tangent:E}=o,{color:M,uv:O}=e.vertexAttributes;for(let f=0;f<_;++f)n.push(R[3*f+0]),n.push(R[3*f+1]),n.push(R[3*f+2]),l&&s(T)&&(l.push(T[3*f+0]),l.push(T[3*f+1]),l.push(T[3*f+2])),c&&s(O)&&(c.push(O[2*f+0]),c.push(O[2*f+1])),h&&s(E)&&(h.push(E[4*f+0]),h.push(E[4*f+1]),h.push(E[4*f+2]),h.push(E[4*f+3])),u&&s(M)&&(u.push(M[4*f+0]),u.push(M[4*f+1]),u.push(M[4*f+2]),u.push(M[4*f+3]));const w=n.endAccessor(),N=this._addAccessor(n.index,w);let C,B,L,y,I;if(l){const e=l.endAccessor();C=this._addAccessor(l.index,e)}if(c){const e=c.endAccessor();B=this._addAccessor(c.index,e)}if(h){const e=h.endAccessor();L=this._addAccessor(h.index,e)}if(u){const e=u.endAccessor();y=this._addAccessor(u.index,e)}e.components&&e.components.length>0&&e.components[0].faces?(I=a.addBufferView(b.UNSIGNED_INT,A.SCALAR,x.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(I,e.components,t,N,C,B,L,y)):this._addMeshVertexNonIndexed(e.components,t,N,C,B,L,y),n.finalize(),l&&l.finalize(),c&&c.finalize(),h&&h.finalize(),I&&I.finalize(),u&&u.finalize(),r||a.finalize();const S=this.gltf.meshes.length;return this.gltf.meshes.push(t),S}_flipYZAxis({position:e,normal:t,tangent:s}){this._flipYZBuffer(e,3),this._flipYZBuffer(t,3),this._flipYZBuffer(s,4)}_flipYZBuffer(e,t){if(!i(e))for(let s=1,i=2;s<e.length;s+=t,i+=t){const t=e[s],r=e[i];e[s]=r,e[i]=-t}}_addMaterial(e){if(null===e)return;const t=this._materialMap.indexOf(e);if(-1!==t)return t;this.gltf.materials||(this.gltf.materials=[]);const i={};switch(e.alphaMode){case\"mask\":i.alphaMode=R.MASK;break;case\"auto\":case\"blend\":i.alphaMode=R.BLEND}.5!==e.alphaCutoff&&(i.alphaCutoff=e.alphaCutoff),e.doubleSided&&(i.doubleSided=e.doubleSided),i.pbrMetallicRoughness={};const r=e=>e**2.1,a=e=>{const t=e.toRgba();return t[0]=r(t[0]/255),t[1]=r(t[1]/255),t[2]=r(t[2]/255),t};if(s(e.color)&&(i.pbrMetallicRoughness.baseColorFactor=a(e.color)),s(e.colorTexture)&&(i.pbrMetallicRoughness.baseColorTexture={index:this._addTexture(e.colorTexture)}),s(e.normalTexture)&&(i.normalTexture={index:this._addTexture(e.normalTexture)}),e instanceof u){if(s(e.emissiveTexture)&&(i.emissiveTexture={index:this._addTexture(e.emissiveTexture)}),s(e.emissiveColor)){const t=a(e.emissiveColor);i.emissiveFactor=[t[0],t[1],t[2]]}s(e.occlusionTexture)&&(i.occlusionTexture={index:this._addTexture(e.occlusionTexture)}),s(e.metallicRoughnessTexture)&&(i.pbrMetallicRoughness.metallicRoughnessTexture={index:this._addTexture(e.metallicRoughnessTexture)}),i.pbrMetallicRoughness.metallicFactor=e.metallic,i.pbrMetallicRoughness.roughnessFactor=e.roughness}else i.pbrMetallicRoughness.metallicFactor=1,i.pbrMetallicRoughness.roughnessFactor=1,O.warnOnce(\"Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.\");const o=this.gltf.materials.length;return this.gltf.materials.push(i),this._materialMap.push(e),o}_addTexture(e){const s=this.gltf.textures??[];return this.gltf.textures=s,t(this._textureMap,e,(()=>{const t={sampler:this._addSampler(e),source:this._addImage(e)},i=s.length;return s.push(t),i}))}_addImage(e){const t=this._imageMap.get(e);if(null!=t)return t;this.gltf.images||(this.gltf.images=[]);const s={};if(e.url)s.uri=e.url;else{const t=e.data;s.extras=t;for(let e=0;e<this.gltf.images.length;++e)if(t===this.gltf.images[e].extras)return e;const i=this.gltf.extras;switch(i.options.imageOutputType){case _.GLB:{const e=i.binChunkBuffer.addBufferView(b.UNSIGNED_BYTE,A.SCALAR),r=T(t).then((({data:e,type:t})=>(s.mimeType=t,e)));e.writeAsync(r).then((()=>{e.finalize()})),s.bufferView=e.index;break}case _.DataURI:s.uri=E(t);break;default:i.promises.push(T(t).then((({data:e,type:t})=>{s.uri=e,s.mimeType=t})))}}const i=this.gltf.images.length;return this.gltf.images.push(s),this._imageMap.set(e,i),i}_addSampler(e){this.gltf.samplers||(this.gltf.samplers=[]);let t=M.REPEAT,s=M.REPEAT;if(\"string\"==typeof e.wrap)switch(e.wrap){case\"clamp\":t=M.CLAMP_TO_EDGE,s=M.CLAMP_TO_EDGE;break;case\"mirror\":t=M.MIRRORED_REPEAT,s=M.MIRRORED_REPEAT}else{switch(e.wrap.vertical){case\"clamp\":s=M.CLAMP_TO_EDGE;break;case\"mirror\":s=M.MIRRORED_REPEAT}switch(e.wrap.horizontal){case\"clamp\":t=M.CLAMP_TO_EDGE;break;case\"mirror\":t=M.MIRRORED_REPEAT}}const i={wrapS:t,wrapT:s};for(let a=0;a<this.gltf.samplers.length;++a)if(JSON.stringify(i)===JSON.stringify(this.gltf.samplers[a]))return a;const r=this.gltf.samplers.length;return this.gltf.samplers.push(i),r}_addAccessor(e,t){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:e,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type,min:t.min,max:t.max,name:t.name};t.normalized&&(s.normalized=!0);const i=this.gltf.accessors.length;return this.gltf.accessors.push(s),i}_addMeshVertexIndexed(e,t,s,i,r,a,o,n){for(const l of t){e.startAccessor(\"INDICES\");for(let s=0;s<l.faces.length;++s)e.push(l.faces[s]);const t=e.endAccessor(),c={attributes:{POSITION:i},indices:this._addAccessor(e.index,t),material:this._addMaterial(l.material)};r&&\"flat\"!==l.shading&&(c.attributes.NORMAL=r),a&&(c.attributes.TEXCOORD_0=a),o&&\"flat\"!==l.shading&&(c.attributes.TANGENT=o),n&&(c.attributes.COLOR_0=n),s.primitives.push(c)}}_addMeshVertexNonIndexed(e,t,s,i,r,a,o){const n={attributes:{POSITION:s}};i&&(n.attributes.NORMAL=i),r&&(n.attributes.TEXCOORD_0=r),a&&(n.attributes.TANGENT=a),o&&(n.attributes.COLOR_0=o),e&&(n.material=this._addMaterial(e[0].material)),t.primitives.push(n)}}export{w as GLTF};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}