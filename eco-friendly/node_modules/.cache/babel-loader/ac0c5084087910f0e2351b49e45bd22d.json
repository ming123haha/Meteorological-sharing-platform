{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { j as e } from \"./mat4.js\";\nimport { c as i } from \"./mat4f64.js\";\nimport { a as o } from \"./vec2.js\";\nimport { a as r } from \"./vec2f64.js\";\nimport { Laserline as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";\nimport { Float2PassUniform as t } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { FloatPassUniform as s } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as n } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4PassUniform as l } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as d } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { VertexAttribute as c } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\n\nfunction v(i) {\n  const r = new d();\n  r.include(a, i);\n  const {\n    vertex: v,\n    fragment: w\n  } = r;\n  return v.uniforms.add([new l(\"modelView\", (i, o) => e(m, o.camera.viewMatrix, i.origin)), new l(\"proj\", (e, i) => i.camera.projectionMatrix), new s(\"glowWidth\", (e, i) => e.glowWidth * i.camera.pixelRatio), new t(\"pixelToNDC\", (e, i) => o(p, 2 / i.camera.fullViewport[2], 2 / i.camera.fullViewport[3]))]), r.attributes.add(c.START, \"vec3\"), r.attributes.add(c.END, \"vec3\"), r.attributes.add(c.UP, \"vec3\"), r.attributes.add(c.EXTRUDE, \"vec2\"), r.varyings.add(\"uv\", \"vec2\"), r.varyings.add(\"vViewStart\", \"vec3\"), r.varyings.add(\"vViewEnd\", \"vec3\"), r.varyings.add(\"vViewPlane\", \"vec4\"), v.code.add(n`void main() {\nvec3 pos = mix(start, end, extrude.x);\nvec4 viewPos = modelView * vec4(pos, 1);\nvec4 projPos = proj * viewPos;\nvec2 ndcPos = projPos.xy / projPos.w;\nvec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;\nvec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);\nvec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);\nvec2 lxy = abs(sign(projExtrudeDir) - ndcPos);\nndcPos += length(lxy) * projExtrudeDir;\nvec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));\nvec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;\nvViewStart = (modelView * vec4(start, 1)).xyz;\nvViewEnd = (modelView * vec4(end, 1)).xyz;\nvViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));\nfloat xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;\nndcPos.x += xPaddingPixels * pixelToNDC.x;\nuv = ndcPos * 0.5 + 0.5;\ngl_Position = vec4(ndcPos, 0, 1);\n}`), w.uniforms.add(new s(\"perScreenPixelRatio\", (e, i) => i.camera.perScreenPixelRatio)), w.code.add(n`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {\nvec3 origin = mix(start, end, 0.5);\nvec3 basis = end - origin;\nvec3 posAtOrigin = pos - origin;\nfloat x = dot(normalize(basis), posAtOrigin);\nfloat y = dot(plane.xyz, posAtOrigin);\nfloat dx = max(abs(x) - length(basis), 0.0);\nfloat dy = y;\nfloat dist = length(vec2(dx, dy));\nfloat width = fwidth(y);\nfloat maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;\nfloat pixelDist = dist / min(width, maxPixelDistance);\nreturn abs(pixelDist);\n}\nvoid main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nfloat distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);\nvec4 color = laserlineProfile(distance);\nfloat alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));\ngl_FragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);\n}`), r;\n}\n\nconst p = r(),\n      m = i(),\n      w = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: v\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { w as L, v as b };","map":{"version":3,"names":["j","e","c","i","a","o","r","Laserline","Float2PassUniform","t","FloatPassUniform","s","glsl","n","Matrix4PassUniform","l","ShaderBuilder","d","VertexAttribute","v","include","vertex","fragment","w","uniforms","add","m","camera","viewMatrix","origin","projectionMatrix","glowWidth","pixelRatio","p","fullViewport","attributes","START","END","UP","EXTRUDE","varyings","code","perScreenPixelRatio","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value","L","b"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/chunks/LaserlinePath.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{j as e}from\"./mat4.js\";import{c as i}from\"./mat4f64.js\";import{a as o}from\"./vec2.js\";import{a as r}from\"./vec2f64.js\";import{Laserline as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";import{Float2PassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{FloatPassUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as n}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as l}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as d}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{VertexAttribute as c}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function v(i){const r=new d;r.include(a,i);const{vertex:v,fragment:w}=r;return v.uniforms.add([new l(\"modelView\",((i,o)=>e(m,o.camera.viewMatrix,i.origin))),new l(\"proj\",((e,i)=>i.camera.projectionMatrix)),new s(\"glowWidth\",((e,i)=>e.glowWidth*i.camera.pixelRatio)),new t(\"pixelToNDC\",((e,i)=>o(p,2/i.camera.fullViewport[2],2/i.camera.fullViewport[3])))]),r.attributes.add(c.START,\"vec3\"),r.attributes.add(c.END,\"vec3\"),r.attributes.add(c.UP,\"vec3\"),r.attributes.add(c.EXTRUDE,\"vec2\"),r.varyings.add(\"uv\",\"vec2\"),r.varyings.add(\"vViewStart\",\"vec3\"),r.varyings.add(\"vViewEnd\",\"vec3\"),r.varyings.add(\"vViewPlane\",\"vec4\"),v.code.add(n`void main() {\nvec3 pos = mix(start, end, extrude.x);\nvec4 viewPos = modelView * vec4(pos, 1);\nvec4 projPos = proj * viewPos;\nvec2 ndcPos = projPos.xy / projPos.w;\nvec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;\nvec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);\nvec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);\nvec2 lxy = abs(sign(projExtrudeDir) - ndcPos);\nndcPos += length(lxy) * projExtrudeDir;\nvec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));\nvec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;\nvViewStart = (modelView * vec4(start, 1)).xyz;\nvViewEnd = (modelView * vec4(end, 1)).xyz;\nvViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));\nfloat xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;\nndcPos.x += xPaddingPixels * pixelToNDC.x;\nuv = ndcPos * 0.5 + 0.5;\ngl_Position = vec4(ndcPos, 0, 1);\n}`),w.uniforms.add(new s(\"perScreenPixelRatio\",((e,i)=>i.camera.perScreenPixelRatio))),w.code.add(n`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {\nvec3 origin = mix(start, end, 0.5);\nvec3 basis = end - origin;\nvec3 posAtOrigin = pos - origin;\nfloat x = dot(normalize(basis), posAtOrigin);\nfloat y = dot(plane.xyz, posAtOrigin);\nfloat dx = max(abs(x) - length(basis), 0.0);\nfloat dy = y;\nfloat dist = length(vec2(dx, dy));\nfloat width = fwidth(y);\nfloat maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;\nfloat pixelDist = dist / min(width, maxPixelDistance);\nreturn abs(pixelDist);\n}\nvoid main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nfloat distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);\nvec4 color = laserlineProfile(distance);\nfloat alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));\ngl_FragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);\n}`),r}const p=r(),m=i(),w=Object.freeze(Object.defineProperty({__proto__:null,build:v},Symbol.toStringTag,{value:\"Module\"}));export{w as L,v as b};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,WAAlB;AAA8B,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,cAAlB;AAAiC,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,WAAlB;AAA8B,SAAOD,CAAC,IAAIE,CAAZ,QAAkB,cAAlB;AAAiC,SAAOC,SAAS,IAAIH,CAApB,QAA0B,+DAA1B;AAA0F,SAAOI,iBAAiB,IAAIC,CAA5B,QAAkC,kEAAlC;AAAqG,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,iEAAjC;AAAmG,SAAOC,IAAI,IAAIC,CAAf,QAAqB,2DAArB;AAAiF,SAAOC,kBAAkB,IAAIC,CAA7B,QAAmC,mEAAnC;AAAuG,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,8DAA9B;AAA6F,SAAOC,eAAe,IAAIhB,CAA1B,QAAgC,iDAAhC;;AAAkF,SAASiB,CAAT,CAAWhB,CAAX,EAAa;EAAC,MAAMG,CAAC,GAAC,IAAIW,CAAJ,EAAR;EAAcX,CAAC,CAACc,OAAF,CAAUhB,CAAV,EAAYD,CAAZ;EAAe,MAAK;IAACkB,MAAM,EAACF,CAAR;IAAUG,QAAQ,EAACC;EAAnB,IAAsBjB,CAA3B;EAA6B,OAAOa,CAAC,CAACK,QAAF,CAAWC,GAAX,CAAe,CAAC,IAAIV,CAAJ,CAAM,WAAN,EAAmB,CAACZ,CAAD,EAAGE,CAAH,KAAOJ,CAAC,CAACyB,CAAD,EAAGrB,CAAC,CAACsB,MAAF,CAASC,UAAZ,EAAuBzB,CAAC,CAAC0B,MAAzB,CAA3B,CAAD,EAA+D,IAAId,CAAJ,CAAM,MAAN,EAAc,CAACd,CAAD,EAAGE,CAAH,KAAOA,CAAC,CAACwB,MAAF,CAASG,gBAA9B,CAA/D,EAAgH,IAAInB,CAAJ,CAAM,WAAN,EAAmB,CAACV,CAAD,EAAGE,CAAH,KAAOF,CAAC,CAAC8B,SAAF,GAAY5B,CAAC,CAACwB,MAAF,CAASK,UAA/C,CAAhH,EAA4K,IAAIvB,CAAJ,CAAM,YAAN,EAAoB,CAACR,CAAD,EAAGE,CAAH,KAAOE,CAAC,CAAC4B,CAAD,EAAG,IAAE9B,CAAC,CAACwB,MAAF,CAASO,YAAT,CAAsB,CAAtB,CAAL,EAA8B,IAAE/B,CAAC,CAACwB,MAAF,CAASO,YAAT,CAAsB,CAAtB,CAAhC,CAA5B,CAA5K,CAAf,GAAqR5B,CAAC,CAAC6B,UAAF,CAAaV,GAAb,CAAiBvB,CAAC,CAACkC,KAAnB,EAAyB,MAAzB,CAArR,EAAsT9B,CAAC,CAAC6B,UAAF,CAAaV,GAAb,CAAiBvB,CAAC,CAACmC,GAAnB,EAAuB,MAAvB,CAAtT,EAAqV/B,CAAC,CAAC6B,UAAF,CAAaV,GAAb,CAAiBvB,CAAC,CAACoC,EAAnB,EAAsB,MAAtB,CAArV,EAAmXhC,CAAC,CAAC6B,UAAF,CAAaV,GAAb,CAAiBvB,CAAC,CAACqC,OAAnB,EAA2B,MAA3B,CAAnX,EAAsZjC,CAAC,CAACkC,QAAF,CAAWf,GAAX,CAAe,IAAf,EAAoB,MAApB,CAAtZ,EAAkbnB,CAAC,CAACkC,QAAF,CAAWf,GAAX,CAAe,YAAf,EAA4B,MAA5B,CAAlb,EAAsdnB,CAAC,CAACkC,QAAF,CAAWf,GAAX,CAAe,UAAf,EAA0B,MAA1B,CAAtd,EAAwfnB,CAAC,CAACkC,QAAF,CAAWf,GAAX,CAAe,YAAf,EAA4B,MAA5B,CAAxf,EAA4hBN,CAAC,CAACsB,IAAF,CAAOhB,GAAP,CAAWZ,CAAE;AAC/3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAnBk3C,CAA5hB,EAmBl1BU,CAAC,CAACC,QAAF,CAAWC,GAAX,CAAe,IAAId,CAAJ,CAAM,qBAAN,EAA6B,CAACV,CAAD,EAAGE,CAAH,KAAOA,CAAC,CAACwB,MAAF,CAASe,mBAA7C,CAAf,CAnBk1B,EAmB/vBnB,CAAC,CAACkB,IAAF,CAAOhB,GAAP,CAAWZ,CAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAzBuF,CAnB+vB,EA4Cl1BP,CA5C20B;AA4Cz0B;;AAAA,MAAM2B,CAAC,GAAC3B,CAAC,EAAT;AAAA,MAAYoB,CAAC,GAACvB,CAAC,EAAf;AAAA,MAAkBoB,CAAC,GAACoB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,cAAP,CAAsB;EAACC,SAAS,EAAC,IAAX;EAAgBC,KAAK,EAAC5B;AAAtB,CAAtB,EAA+C6B,MAAM,CAACC,WAAtD,EAAkE;EAACC,KAAK,EAAC;AAAP,CAAlE,CAAd,CAApB;AAAuH,SAAO3B,CAAC,IAAI4B,CAAZ,EAAchC,CAAC,IAAIiC,CAAnB"},"metadata":{},"sourceType":"module"}