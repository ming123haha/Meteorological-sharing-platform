{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { _parseInfo as e } from \"../../../../core/number.js\";\nimport { parseRows as t } from \"../csv/csv.js\";\n\nfunction r(e) {\n  const t = e.map(e => e.toLowerCase());\n  return {\n    longitudeFieldName: e[t.indexOf(d.find(e => t.includes(e)))],\n    latitudeFieldName: e[t.indexOf(s.find(e => t.includes(e)))]\n  };\n}\n\nfunction n(e, r, n, l) {\n  const o = [],\n        a = t(e, n, r),\n        u = [];\n\n  for (const t of a) {\n    if (10 === u.length) break;\n    u.push(t);\n  }\n\n  for (const t of n) if (t === l.longitudeFieldName || t === l.latitudeFieldName) o.push({\n    name: t,\n    type: \"esriFieldTypeDouble\",\n    alias: t\n  });else {\n    const e = i(u.map(e => e[t])),\n          r = {\n      name: t,\n      type: null,\n      alias: t\n    };\n\n    switch (e) {\n      case \"integer\":\n        r.type = \"esriFieldTypeInteger\";\n        break;\n\n      case \"double\":\n        r.type = \"esriFieldTypeDouble\";\n        break;\n\n      case \"date\":\n        r.type = \"esriFieldTypeDate\", r.length = 36;\n        break;\n\n      default:\n        r.type = \"esriFieldTypeString\", r.length = 255;\n    }\n\n    o.push(r);\n  }\n\n  return o;\n}\n\nfunction i(e) {\n  if (!e.length) return \"string\";\n  const t = /[^+-.,0-9]/;\n  return e.map(e => {\n    let r = !1;\n\n    if (\"\" !== e) {\n      if (t.test(e)) r = !0;else {\n        let t = o(e);\n        if (!isNaN(t)) return /[.,]/.test(e) || !Number.isInteger(t) || t > 214783647 || t < -214783648 ? \"double\" : \"integer\";\n\n        if (e.includes(\"E\")) {\n          if (t = Number(e), !isNaN(t)) return \"double\";\n\n          if (e.includes(\",\")) {\n            if (e = e.replace(\",\", \".\"), t = Number(e), !isNaN(t)) return \"double\";\n            r = !0;\n          } else r = !0;\n        } else r = !0;\n      }\n\n      if (r) {\n        if (!/^[-]?\\d*[.,]?\\d*$/.test(e)) {\n          return l(new Date(e), e) ? \"date\" : \"string\";\n        }\n\n        return \"string\";\n      }\n\n      return \"string\";\n    }\n  }).reduce((e, t) => void 0 === e || e === t ? t : \"string\" === e || \"string\" === t ? \"string\" : \"double\" === e || \"double\" === t ? \"double\" : void 0);\n}\n\nfunction l(e, t) {\n  if (!e || \"[object Date]\" !== Object.prototype.toString.call(e) || isNaN(e.getTime())) return !1;\n  let r = !0;\n\n  if (!u && /\\d+\\W*$/.test(t)) {\n    const e = t.match(/[a-zA-Z]{2,}/);\n\n    if (e) {\n      let t = !1,\n          n = 0;\n\n      for (; !t && n <= e.length;) t = !a.test(e[n]), n++;\n\n      r = !t;\n    }\n  }\n\n  return r;\n}\n\nconst o = function () {\n  const t = e(),\n        r = new RegExp(\"^\" + t.regexp + \"$\"),\n        n = new RegExp(\"[\" + t.group + \"\\\\s\\\\xa0]\", \"g\"),\n        i = t.factor;\n  return e => {\n    const l = r.exec(e);\n    if (t.factor = i, !l) return NaN;\n    let o = l[1];\n\n    if (!l[1]) {\n      if (!l[2]) return NaN;\n      o = l[2], t.factor *= -1;\n    }\n\n    return o = o.replace(n, \"\").replace(t.decimal, \".\"), +o * t.factor;\n  };\n}(),\n      a = /^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,\n      u = Number.isNaN(new Date(\"technology 10\").getTime()),\n      s = [\"lat\", \"latitude\", \"latitude83\", \"latdecdeg\", \"lat_dd\", \"y\", \"ycenter\", \"point-y\"],\n      d = [\"lon\", \"lng\", \"long\", \"longitude\", \"longitude83\", \"longdecdeg\", \"long_dd\", \"x\", \"xcenter\", \"point-x\"];\n\nexport { i as inferFieldType, n as inferFields, r as inferLocationInfo, l as isValidDate, o as parseNumber };","map":{"version":3,"names":["_parseInfo","e","parseRows","t","r","map","toLowerCase","longitudeFieldName","indexOf","d","find","includes","latitudeFieldName","s","n","l","o","a","u","length","push","name","type","alias","i","test","isNaN","Number","isInteger","replace","Date","reduce","Object","prototype","toString","call","getTime","match","RegExp","regexp","group","factor","exec","NaN","decimal","inferFieldType","inferFields","inferLocationInfo","isValidDate","parseNumber"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/graphics/sources/support/inferenceUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_parseInfo as e}from\"../../../../core/number.js\";import{parseRows as t}from\"../csv/csv.js\";function r(e){const t=e.map((e=>e.toLowerCase()));return{longitudeFieldName:e[t.indexOf(d.find((e=>t.includes(e))))],latitudeFieldName:e[t.indexOf(s.find((e=>t.includes(e))))]}}function n(e,r,n,l){const o=[],a=t(e,n,r),u=[];for(const t of a){if(10===u.length)break;u.push(t)}for(const t of n)if(t===l.longitudeFieldName||t===l.latitudeFieldName)o.push({name:t,type:\"esriFieldTypeDouble\",alias:t});else{const e=i(u.map((e=>e[t]))),r={name:t,type:null,alias:t};switch(e){case\"integer\":r.type=\"esriFieldTypeInteger\";break;case\"double\":r.type=\"esriFieldTypeDouble\";break;case\"date\":r.type=\"esriFieldTypeDate\",r.length=36;break;default:r.type=\"esriFieldTypeString\",r.length=255}o.push(r)}return o}function i(e){if(!e.length)return\"string\";const t=/[^+-.,0-9]/;return e.map((e=>{let r=!1;if(\"\"!==e){if(t.test(e))r=!0;else{let t=o(e);if(!isNaN(t))return/[.,]/.test(e)||!Number.isInteger(t)||t>214783647||t<-214783648?\"double\":\"integer\";if(e.includes(\"E\")){if(t=Number(e),!isNaN(t))return\"double\";if(e.includes(\",\")){if(e=e.replace(\",\",\".\"),t=Number(e),!isNaN(t))return\"double\";r=!0}else r=!0}else r=!0}if(r){if(!/^[-]?\\d*[.,]?\\d*$/.test(e)){return l(new Date(e),e)?\"date\":\"string\"}return\"string\"}return\"string\"}})).reduce(((e,t)=>void 0===e||e===t?t:\"string\"===e||\"string\"===t?\"string\":\"double\"===e||\"double\"===t?\"double\":void 0))}function l(e,t){if(!e||\"[object Date]\"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let r=!0;if(!u&&/\\d+\\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,n=0;for(;!t&&n<=e.length;)t=!a.test(e[n]),n++;r=!t}}return r}const o=function(){const t=e(),r=new RegExp(\"^\"+t.regexp+\"$\"),n=new RegExp(\"[\"+t.group+\"\\\\s\\\\xa0]\",\"g\"),i=t.factor;return e=>{const l=r.exec(e);if(t.factor=i,!l)return NaN;let o=l[1];if(!l[1]){if(!l[2])return NaN;o=l[2],t.factor*=-1}return o=o.replace(n,\"\").replace(t.decimal,\".\"),+o*t.factor}}(),a=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,u=Number.isNaN(new Date(\"technology 10\").getTime()),s=[\"lat\",\"latitude\",\"latitude83\",\"latdecdeg\",\"lat_dd\",\"y\",\"ycenter\",\"point-y\"],d=[\"lon\",\"lng\",\"long\",\"longitude\",\"longitude83\",\"longdecdeg\",\"long_dd\",\"x\",\"xcenter\",\"point-x\"];export{i as inferFieldType,n as inferFields,r as inferLocationInfo,l as isValidDate,o as parseNumber};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}