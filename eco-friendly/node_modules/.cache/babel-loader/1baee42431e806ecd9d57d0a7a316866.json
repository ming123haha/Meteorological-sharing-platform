{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { a as e } from \"../../../chunks/Clouds.glsl.js\";\nimport { ReloadableShaderModule as r } from \"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as i } from \"../webgl-engine/core/shaderTechnique/ShaderTechnique.js\";\nimport { Default3D as o } from \"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";\nimport { Program as t } from \"../webgl-engine/lib/Program.js\";\nimport { BlendFactor as n, CompareFunction as s } from \"../../webgl/enums.js\";\nimport { makePipelineState as l, separateBlendingParams as a, defaultColorWriteParams as m } from \"../../webgl/renderState.js\";\n\nclass g extends i {\n  constructor(e, r) {\n    super(e, r, () => this.destroy());\n  }\n\n  initializeProgram(e) {\n    const r = g.shader.get().build(this.configuration);\n    return new t(e.rctx, r, o);\n  }\n\n  initializePipeline() {\n    return l({\n      blending: a(n.ONE, n.ONE, n.ZERO, n.ZERO),\n      depthTest: {\n        func: s.LEQUAL\n      },\n      colorWrite: m\n    });\n  }\n\n}\n\ng.shader = new r(e, () => import(\"./Clouds.glsl.js\"));\nexport { g as CloudsTechnique };","map":{"version":3,"names":["a","e","ReloadableShaderModule","r","ShaderTechnique","i","Default3D","o","Program","t","BlendFactor","n","CompareFunction","s","makePipelineState","l","separateBlendingParams","defaultColorWriteParams","m","g","constructor","destroy","initializeProgram","shader","get","build","configuration","rctx","initializePipeline","blending","ONE","ZERO","depthTest","func","LEQUAL","colorWrite","CloudsTechnique"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/environment/CloudsTechnique.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{a as e}from\"../../../chunks/Clouds.glsl.js\";import{ReloadableShaderModule as r}from\"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js\";import{ShaderTechnique as i}from\"../webgl-engine/core/shaderTechnique/ShaderTechnique.js\";import{Default3D as o}from\"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";import{Program as t}from\"../webgl-engine/lib/Program.js\";import{BlendFactor as n,CompareFunction as s}from\"../../webgl/enums.js\";import{makePipelineState as l,separateBlendingParams as a,defaultColorWriteParams as m}from\"../../webgl/renderState.js\";class g extends i{constructor(e,r){super(e,r,(()=>this.destroy()))}initializeProgram(e){const r=g.shader.get().build(this.configuration);return new t(e.rctx,r,o)}initializePipeline(){return l({blending:a(n.ONE,n.ONE,n.ZERO,n.ZERO),depthTest:{func:s.LEQUAL},colorWrite:m})}}g.shader=new r(e,(()=>import(\"./Clouds.glsl.js\")));export{g as CloudsTechnique};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,gCAAlB;AAAmD,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,gEAAvC;AAAwG,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,yDAAhC;AAA0F,SAAOC,SAAS,IAAIC,CAApB,QAA0B,wDAA1B;AAAmF,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,gCAAxB;AAAyD,SAAOC,WAAW,IAAIC,CAAtB,EAAwBC,eAAe,IAAIC,CAA3C,QAAiD,sBAAjD;AAAwE,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,sBAAsB,IAAIhB,CAAxD,EAA0DiB,uBAAuB,IAAIC,CAArF,QAA2F,4BAA3F;;AAAwH,MAAMC,CAAN,SAAgBd,CAAhB,CAAiB;EAACe,WAAW,CAACnB,CAAD,EAAGE,CAAH,EAAK;IAAC,MAAMF,CAAN,EAAQE,CAAR,EAAW,MAAI,KAAKkB,OAAL,EAAf;EAAgC;;EAAAC,iBAAiB,CAACrB,CAAD,EAAG;IAAC,MAAME,CAAC,GAACgB,CAAC,CAACI,MAAF,CAASC,GAAT,GAAeC,KAAf,CAAqB,KAAKC,aAA1B,CAAR;IAAiD,OAAO,IAAIjB,CAAJ,CAAMR,CAAC,CAAC0B,IAAR,EAAaxB,CAAb,EAAeI,CAAf,CAAP;EAAyB;;EAAAqB,kBAAkB,GAAE;IAAC,OAAOb,CAAC,CAAC;MAACc,QAAQ,EAAC7B,CAAC,CAACW,CAAC,CAACmB,GAAH,EAAOnB,CAAC,CAACmB,GAAT,EAAanB,CAAC,CAACoB,IAAf,EAAoBpB,CAAC,CAACoB,IAAtB,CAAX;MAAuCC,SAAS,EAAC;QAACC,IAAI,EAACpB,CAAC,CAACqB;MAAR,CAAjD;MAAiEC,UAAU,EAACjB;IAA5E,CAAD,CAAR;EAAyF;;AAA/P;;AAAgQC,CAAC,CAACI,MAAF,GAAS,IAAIpB,CAAJ,CAAMF,CAAN,EAAS,MAAI,OAAO,kBAAP,CAAb,CAAT;AAAmD,SAAOkB,CAAC,IAAIiB,eAAZ"},"metadata":{},"sourceType":"module"}