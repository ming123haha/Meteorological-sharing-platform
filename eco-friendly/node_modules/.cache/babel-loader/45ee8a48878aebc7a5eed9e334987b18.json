{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { _ as r } from \"../../../../chunks/tslib.es6.js\";\nimport e from \"../../../../core/Logger.js\";\nimport { property as i } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/arrayUtils.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/accessorSupport/ensureType.js\";\nimport { subclass as s } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { WhereClause as o } from \"../../../../core/sql/WhereClause.js\";\nimport { findFieldsCaseInsensitive as n } from \"../i3s/I3SUtil.js\";\n\nconst t = e.getLogger(\"esri.views.3d.layers.support.DefinitionExpressionSceneLayerView\"),\n      p = e => {\n  let p = class extends e {\n    constructor() {\n      super(...arguments), this._definitionExpressionErrors = 0, this._maxDefinitionExpressionErrors = 20, this.logError = r => {\n        this._definitionExpressionErrors < this._maxDefinitionExpressionErrors && t.error(\"Error while evaluating definitionExpression: \" + r), this._definitionExpressionErrors++, this._definitionExpressionErrors === this._maxDefinitionExpressionErrors && t.error(\"Further errors are ignored\");\n      };\n    }\n\n    get parsedDefinitionExpression() {\n      if (!this.i3slayer || !this.i3slayer.definitionExpression) return null;\n\n      try {\n        const r = o.create(this.i3slayer.definitionExpression, this.i3slayer.fieldsIndex);\n        if (!r.isStandardized) return t.error(\"definitionExpression is using non standard function\"), null;\n        const e = [],\n              i = r.fieldNames;\n        return n(i, this.i3slayer.fields, {\n          missingFields: e\n        }), e.length > 0 ? (t.error(`definitionExpression references unknown fields: ${e.join(\", \")}`), null) : (this._definitionExpressionErrors = 0, r);\n      } catch (r) {\n        return t.error(\"Failed to parse definitionExpression: \" + r), null;\n      }\n    }\n\n    get definitionExpressionFields() {\n      return this.parsedDefinitionExpression ? this.parsedDefinitionExpression.fieldNames : null;\n    }\n\n    _evaluateClause(r, e) {\n      try {\n        return r.testFeature(e);\n      } catch (i) {\n        return this.logError(i), !1;\n      }\n    }\n\n    _addDefinitionExpressionToQuery(r) {\n      if (!this.parsedDefinitionExpression) return r;\n      const e = this.i3slayer.definitionExpression,\n            i = r.clone();\n      return i.where ? i.where = `(${e}) AND (${i.where})` : i.where = e, i;\n    }\n\n  };\n  return r([i()], p.prototype, \"i3slayer\", void 0), r([i({\n    readOnly: !0\n  })], p.prototype, \"parsedDefinitionExpression\", null), r([i({\n    readOnly: !0\n  })], p.prototype, \"definitionExpressionFields\", null), p = r([s(\"esri.views.3d.layers.support.DefinitionExpressionSceneLayerView\")], p), p;\n};\n\nexport { p as DefinitionExpressionSceneLayerView };","map":{"version":3,"names":["_","r","e","property","i","subclass","s","WhereClause","o","findFieldsCaseInsensitive","n","t","getLogger","p","constructor","arguments","_definitionExpressionErrors","_maxDefinitionExpressionErrors","logError","error","parsedDefinitionExpression","i3slayer","definitionExpression","create","fieldsIndex","isStandardized","fieldNames","fields","missingFields","length","join","definitionExpressionFields","_evaluateClause","testFeature","_addDefinitionExpressionToQuery","clone","where","prototype","readOnly","DefinitionExpressionSceneLayerView"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/layers/support/DefinitionExpressionSceneLayerView.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../../../chunks/tslib.es6.js\";import e from\"../../../../core/Logger.js\";import{property as i}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/arrayUtils.js\";import\"../../../../core/has.js\";import\"../../../../core/accessorSupport/ensureType.js\";import{subclass as s}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{WhereClause as o}from\"../../../../core/sql/WhereClause.js\";import{findFieldsCaseInsensitive as n}from\"../i3s/I3SUtil.js\";const t=e.getLogger(\"esri.views.3d.layers.support.DefinitionExpressionSceneLayerView\"),p=e=>{let p=class extends e{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=r=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&t.error(\"Error while evaluating definitionExpression: \"+r),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&t.error(\"Further errors are ignored\")}}get parsedDefinitionExpression(){if(!this.i3slayer||!this.i3slayer.definitionExpression)return null;try{const r=o.create(this.i3slayer.definitionExpression,this.i3slayer.fieldsIndex);if(!r.isStandardized)return t.error(\"definitionExpression is using non standard function\"),null;const e=[],i=r.fieldNames;return n(i,this.i3slayer.fields,{missingFields:e}),e.length>0?(t.error(`definitionExpression references unknown fields: ${e.join(\", \")}`),null):(this._definitionExpressionErrors=0,r)}catch(r){return t.error(\"Failed to parse definitionExpression: \"+r),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:null}_evaluateClause(r,e){try{return r.testFeature(e)}catch(i){return this.logError(i),!1}}_addDefinitionExpressionToQuery(r){if(!this.parsedDefinitionExpression)return r;const e=this.i3slayer.definitionExpression,i=r.clone();return i.where?i.where=`(${e}) AND (${i.where})`:i.where=e,i}};return r([i()],p.prototype,\"i3slayer\",void 0),r([i({readOnly:!0})],p.prototype,\"parsedDefinitionExpression\",null),r([i({readOnly:!0})],p.prototype,\"definitionExpressionFields\",null),p=r([s(\"esri.views.3d.layers.support.DefinitionExpressionSceneLayerView\")],p),p};export{p as DefinitionExpressionSceneLayerView};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}