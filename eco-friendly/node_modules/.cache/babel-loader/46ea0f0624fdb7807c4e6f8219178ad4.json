{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport { rasterRendererTypes as t } from \"../../rasterRenderers.js\";\nimport r from \"../../request.js\";\nimport i from \"../../core/Error.js\";\nimport s from \"../../core/Logger.js\";\nimport { isNone as n, isSome as o } from \"../../core/maybe.js\";\nimport { property as a } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/arrayUtils.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport { subclass as l } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { getInfo as m } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { sanitizeUrl as u } from \"../support/arcgisLayerUrl.js\";\nimport { url as d } from \"../support/commonProperties.js\";\nimport h from \"../support/DimensionalDefinition.js\";\nimport c from \"../support/MultidimensionalSubset.js\";\nimport p from \"../support/RasterFunction.js\";\nimport f from \"../support/RasterJobHandler.js\";\nimport y from \"../support/TileInfo.js\";\nimport b from \"../support/rasterDatasets/FunctionRaster.js\";\nimport { getDefaultMultidimensionalDefinition as g, hasExcludedVariableOrDimension as I, isMultiSliceOrRangeDefinition as J, getSubsetVariablesFromMdInfo as _ } from \"../support/rasterDatasets/multidimensionalUtils.js\";\nimport { create as S } from \"../support/rasterFunctions/rasterFunctionHelper.js\";\nimport { convertVectorFieldData as R } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { normalizeRendererJSON as F, getDefaultInterpolation as x, getDefaultBandCombination as v, createDefaultRenderer as H } from \"../../renderers/support/rasterRendererHelper.js\";\nimport j from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as T } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport D from \"../../geometry/SpatialReference.js\";\n\nconst w = s.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),\n      N = s => {\n  let N = class extends s {\n    constructor() {\n      super(...arguments), this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this.bandIds = null, this.copyright = null, this.interpolation = \"nearest\", this.multidimensionalDefinition = null, this.multidimensionalSubset = null, this.raster = null, this.rasterFunction = null, this.sourceJSON = null, this.symbolizer = null;\n    }\n\n    get fullExtent() {\n      return this.rasterInfo?.extent;\n    }\n\n    get rasterInfo() {\n      return this.raster?.rasterInfo;\n    }\n\n    get spatialReference() {\n      return this.rasterInfo?.spatialReference ?? D.WGS84;\n    }\n\n    get tileInfo() {\n      return this.rasterInfo?.storageInfo.tileInfo;\n    }\n\n    set url(e) {\n      this._set(\"url\", u(e, w));\n    }\n\n    set renderer(e) {\n      this._set(\"renderer\", e), this.updateRenderer();\n    }\n\n    async convertVectorFieldData(e, t) {\n      if (n(e) || !this.rasterInfo) return null;\n      const r = this._rasterJobHandler.instance,\n            i = this.rasterInfo.dataType;\n      return r ? r.convertVectorFieldData({\n        pixelBlock: e,\n        dataType: i\n      }, t) : R(e, i);\n    }\n\n    async createFlowMesh(e, t) {\n      const r = this._rasterJobHandler.instance;\n      return r ? r.createFlowMesh(e, t) : T(e.meshType, e.simulationSettings, e.flowData, o(t.signal) ? t.signal : new AbortController().signal);\n    }\n\n    normalizeRasterFetchOptions(e) {\n      const {\n        multidimensionalInfo: t\n      } = this.rasterInfo ?? {};\n      if (n(t)) return e;\n      let r = e.multidimensionalDefinition || this.multidimensionalDefinition;\n      !n(r) && r.length || (r = g(this.raster.rasterInfo, {\n        multidimensionalSubset: this.multidimensionalSubset\n      }));\n      const i = e.timeExtent || this.timeExtent;\n\n      if (o(r) && o(i) && (o(i.start) || o(i.end))) {\n        r = r.map(e => e.clone());\n        const s = t.variables.find(({\n          name: e\n        }) => e === r[0].variableName)?.dimensions?.find(({\n          name: e\n        }) => \"StdTime\" === e),\n              a = r.find(({\n          dimensionName: e\n        }) => \"StdTime\" === e);\n        if (!s || !a) return { ...e,\n          multidimensionalDefinition: null\n        };\n        const {\n          start: l,\n          end: m\n        } = i,\n              u = n(l) ? null : l.getTime(),\n              d = n(m) ? null : m.getTime(),\n              h = u ?? d,\n              c = d ?? u;\n\n        if (o(s.values)) {\n          const e = s.values.filter(e => {\n            if (Array.isArray(e)) {\n              if (h === c) return e[0] <= h && e[1] >= h;\n              const t = e[0] <= h && e[1] > h || e[0] < c && e[1] >= c,\n                    r = e[0] >= h && e[1] <= c || e[0] < h && e[1] > c;\n              return t || r;\n            }\n\n            return h === c ? e === h : e >= h && e <= c;\n          });\n\n          if (e.length) {\n            const t = e.sort((e, t) => {\n              if (h === c) return (e[0] ?? e) - (t[0] ?? t);\n              return Math.abs((e[1] ?? e) - c) - Math.abs((t[1] ?? t) - c);\n            })[0];\n            a.values = [t];\n          } else r = null;\n        } else if (s.hasRegularIntervals && s.extent) {\n          const [e, t] = s.extent;\n          h > t || c < e ? r = null : a.values = h === c ? [h] : [Math.max(e, h), Math.min(t, c)];\n        }\n      }\n\n      return o(r) && I(r, this.multidimensionalSubset) ? { ...e,\n        multidimensionalDefinition: null\n      } : { ...e,\n        multidimensionalDefinition: r\n      };\n    }\n\n    async updateRenderer() {\n      const {\n        loaded: e,\n        symbolizer: t\n      } = this;\n      if (!e || !t) return;\n      if (JSON.stringify(this._cachedRendererJson) === JSON.stringify(this.renderer)) return;\n      const r = this._rasterJobHandler.instance;\n      r && (t.rendererJSON = F(this.renderer.toJSON()), t.bind(), await r.updateSymbolizer(t), this._cachedRendererJson = this.renderer.toJSON());\n    }\n\n    async applyRenderer(e, t) {\n      const r = e && e.pixelBlock;\n      if (!(o(r) && r.pixels && r.pixels.length > 0)) return null;\n      let i;\n      await this.updateRenderer();\n      const s = this._rasterJobHandler.instance,\n            n = this.bandIds ?? [];\n      return i = s ? await s.symbolize({ ...e,\n        simpleStretchParams: t,\n        bandIds: n\n      }) : this.symbolizer.symbolize({ ...e,\n        simpleStretchParams: t,\n        bandIds: n\n      }), i;\n    }\n\n    getTileUrl(e, t, r) {\n      return \"RasterTileServer\" === this.raster?.datasetFormat ? `${this.url}/tile/${e}/${t}/${r}` : \"\";\n    }\n\n    getCompatibleTileInfo(e, t, r = !1) {\n      if (!this.loaded || n(t)) return null;\n      if (r && e.equals(this.spatialReference)) return this.tileInfo;\n      const i = m(e);\n      return y.create({\n        size: 256,\n        spatialReference: e,\n        origin: i ? {\n          x: i.origin[0],\n          y: i.origin[1]\n        } : {\n          x: t.xmin,\n          y: t.ymax\n        }\n      });\n    }\n\n    getCompatibleFullExtent(e) {\n      return this.loaded ? (this._compatibleFullExtent && this._compatibleFullExtent.spatialReference.equals(e) || (this._compatibleFullExtent = this.raster.computeExtent(e)), this._compatibleFullExtent) : null;\n    }\n\n    async fetchTile(e, t, i, s = {}) {\n      if (O(this), s.requestAsImageElement) {\n        const n = this.getTileUrl(e, t, i);\n        return r(n, {\n          responseType: \"image\",\n          query: { ...this.refreshParameters,\n            ...this.raster.ioConfig.customFetchParameters\n          },\n          signal: s.signal\n        }).then(e => e.data);\n      }\n\n      if (o(this.rasterInfo.multidimensionalInfo) && (s = this.normalizeRasterFetchOptions(s), n(s.multidimensionalDefinition))) {\n        const r = s.tileInfo || this.rasterInfo.storageInfo.tileInfo;\n        return {\n          extent: this.raster.getTileExtentFromTileInfo(e, t, i, r),\n          pixelBlock: null\n        };\n      }\n\n      return await this._initJobHandler(), await this._updateRasterFunction(), \"raster-shaded-relief\" === this.renderer.type && (s = { ...s,\n        buffer: {\n          cols: 1,\n          rows: 1\n        }\n      }), this.raster.fetchTile(e, t, i, s);\n    }\n\n    async fetchPixels(e, t, r, i = {}) {\n      return o(this.rasterInfo.multidimensionalInfo) && (i = this.normalizeRasterFetchOptions(i), n(i.multidimensionalDefinition)) ? {\n        extent: e,\n        pixelBlock: null\n      } : (await this._initJobHandler(), await this._updateRasterFunction(), this.raster.fetchPixels(e, t, r, i));\n    }\n\n    async identify(e, t = {}) {\n      if (O(this), o(this.rasterInfo.multidimensionalInfo)) {\n        if (!(this.rasterInfo.hasMultidimensionalTranspose && !!(J(t.multidimensionalDefinition) || t.transposedVariableName || t.timeExtent)) && (t = this.normalizeRasterFetchOptions(t), n(t.multidimensionalDefinition))) return {\n          location: e,\n          value: null\n        };\n      }\n\n      return this.raster.identify(e, t);\n    }\n\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n\n    hasStandardTime() {\n      const e = this.rasterInfo?.multidimensionalInfo;\n      if (n(e) || \"standard-time\" !== this.rasterInfo?.dataType) return !1;\n      const t = this.multidimensionalDefinition,\n            r = t?.[0]?.variableName;\n      return e.variables.some(e => e.name === r && (!t?.[0].dimensionName || e.dimensions.some(e => \"StdTime\" === e.name)));\n    }\n\n    getStandardTimeValue(e) {\n      return new Date(24 * (e - 25569) * 3600 * 1e3).toString();\n    }\n\n    getMultidimensionalSubsetVariables(e) {\n      const t = e ?? this.rasterInfo.multidimensionalInfo;\n      return _(this.multidimensionalSubset, t);\n    }\n\n    _configDefaultSettings() {\n      this._configDefaultInterpolation(), this.multidimensionalDefinition || (this.multidimensionalDefinition = g(this.raster.rasterInfo, {\n        multidimensionalSubset: this.multidimensionalSubset\n      })), this._configDefaultRenderer();\n    }\n\n    _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new f();\n      return this._rasterJobHandler.connectionPromise = e.initialize().then(() => {\n        O(this), this._rasterJobHandler.instance = e, this.raster.rasterJobHandler = e, this.renderer && this.updateRenderer(), \"Function\" === this.raster.datasetFormat && this.raster.syncJobHandler();\n      }).catch(() => {}), this._rasterJobHandler.connectionPromise;\n    }\n\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this._cachedRendererJson = null, this.raster && (this.raster.rasterJobHandler = null);\n    }\n\n    _configDefaultInterpolation() {\n      if (null == this.interpolation) {\n        O(this);\n        const e = x(this.rasterInfo, this.raster.tileType, this.sourceJSON?.defaultResamplingMethod);\n\n        this._set(\"interpolation\", e);\n      }\n    }\n\n    _configDefaultRenderer() {\n      O(this);\n      const e = this.raster.rasterInfo;\n\n      if (this.bandIds || (this.bandIds = v(e)), !this.renderer) {\n        const t = H(e, {\n          bandIds: this.bandIds,\n          variableName: o(this.multidimensionalDefinition) ? this.multidimensionalDefinition[0]?.variableName : null\n        });\n        \"WCSServer\" === this.raster.datasetFormat && \"raster-stretch\" === t.type && ((e.statistics?.[0].max ?? 0) > 1e24 || (e.statistics?.[0].min ?? 0) < -1e24) && (t.dynamicRangeAdjustment = !0, t.statistics = null, \"none\" === t.stretchType && (t.stretchType = \"min-max\")), this.renderer = t;\n      }\n\n      this.symbolizer ? (this.symbolizer.rendererJSON = F(this.renderer.toJSON()), this.symbolizer.rasterInfo = e) : this.symbolizer = new j({\n        rendererJSON: this.renderer.toJSON(),\n        rasterInfo: e\n      });\n      const t = this.symbolizer.bind();\n      t.success || w.warn(\"imagery-tile-mixin\", t.error || \"The given renderer is not supported by the layer.\");\n    }\n\n    async _updateRasterFunction() {\n      if (\"imagery-tile\" !== this.type || JSON.stringify(this.rasterFunction) === JSON.stringify(this._cachedRasterFunctionJson)) return;\n      let e = this.raster;\n\n      if (\"Function\" === e?.datasetFormat) {\n        const t = e.rasterFunction.getPrimaryRasters();\n        e = t.rasters[0];\n      }\n\n      const {\n        rasterFunction: t\n      } = this;\n\n      if (t) {\n        const r = S(t.toJSON(), {\n          raster: e\n        }),\n              i = new b({\n          rasterFunction: r\n        });\n        i.rasterJobHandler = this._rasterJobHandler.instance, await i.open(), this._cachedRasterFunctionJson = this.rasterFunction?.toJSON(), this.raster = i;\n      } else this.raster = e;\n    }\n\n  };\n\n  function O(e) {\n    if (!e.raster || !e.rasterInfo) throw new i(\"imagery-tile\", \"no raster\");\n  }\n\n  return e([a()], N.prototype, \"_cachedRendererJson\", void 0), e([a()], N.prototype, \"_cachedRasterFunctionJson\", void 0), e([a()], N.prototype, \"_compatibleFullExtent\", void 0), e([a()], N.prototype, \"_rasterJobHandler\", void 0), e([a()], N.prototype, \"bandIds\", void 0), e([a({\n    json: {\n      origins: {\n        service: {\n          read: {\n            source: \"copyrightText\"\n          }\n        }\n      }\n    }\n  })], N.prototype, \"copyright\", void 0), e([a({\n    json: {\n      read: !1\n    }\n  })], N.prototype, \"fullExtent\", null), e([a()], N.prototype, \"interpolation\", void 0), e([a()], N.prototype, \"ioConfig\", void 0), e([a({\n    type: [h]\n  })], N.prototype, \"multidimensionalDefinition\", void 0), e([a({\n    type: c,\n    json: {\n      write: !0\n    }\n  })], N.prototype, \"multidimensionalSubset\", void 0), e([a()], N.prototype, \"raster\", void 0), e([a({\n    type: p\n  })], N.prototype, \"rasterFunction\", void 0), e([a()], N.prototype, \"rasterInfo\", null), e([a()], N.prototype, \"sourceJSON\", void 0), e([a({\n    json: {\n      read: !1\n    }\n  })], N.prototype, \"spatialReference\", null), e([a({\n    json: {\n      read: !1\n    }\n  })], N.prototype, \"tileInfo\", null), e([a(d)], N.prototype, \"url\", null), e([a({\n    types: t\n  })], N.prototype, \"renderer\", null), e([a()], N.prototype, \"symbolizer\", void 0), N = e([l(\"esri.layers.ImageryTileMixin\")], N), N;\n};\n\nexport { N as ImageryTileMixin };","map":{"version":3,"names":["_","e","rasterRendererTypes","t","r","i","s","isNone","n","isSome","o","property","a","subclass","l","getInfo","m","sanitizeUrl","u","url","d","h","c","p","f","y","b","getDefaultMultidimensionalDefinition","g","hasExcludedVariableOrDimension","I","isMultiSliceOrRangeDefinition","J","getSubsetVariablesFromMdInfo","create","S","convertVectorFieldData","R","normalizeRendererJSON","F","getDefaultInterpolation","x","getDefaultBandCombination","v","createDefaultRenderer","H","j","createFlowMesh","T","D","w","getLogger","N","constructor","arguments","_rasterJobHandler","instance","refCount","connectionPromise","bandIds","copyright","interpolation","multidimensionalDefinition","multidimensionalSubset","raster","rasterFunction","sourceJSON","symbolizer","fullExtent","rasterInfo","extent","spatialReference","WGS84","tileInfo","storageInfo","_set","renderer","updateRenderer","dataType","pixelBlock","meshType","simulationSettings","flowData","signal","AbortController","normalizeRasterFetchOptions","multidimensionalInfo","length","timeExtent","start","end","map","clone","variables","find","name","variableName","dimensions","dimensionName","getTime","values","filter","Array","isArray","sort","Math","abs","hasRegularIntervals","max","min","loaded","JSON","stringify","_cachedRendererJson","rendererJSON","toJSON","bind","updateSymbolizer","applyRenderer","pixels","symbolize","simpleStretchParams","getTileUrl","datasetFormat","getCompatibleTileInfo","equals","size","origin","xmin","ymax","getCompatibleFullExtent","_compatibleFullExtent","computeExtent","fetchTile","O","requestAsImageElement","responseType","query","refreshParameters","ioConfig","customFetchParameters","then","data","getTileExtentFromTileInfo","_initJobHandler","_updateRasterFunction","type","buffer","cols","rows","fetchPixels","identify","hasMultidimensionalTranspose","transposedVariableName","location","value","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_shutdownJobHandler","hasStandardTime","some","getStandardTimeValue","Date","toString","getMultidimensionalSubsetVariables","_configDefaultSettings","_configDefaultInterpolation","_configDefaultRenderer","initialize","rasterJobHandler","syncJobHandler","catch","destroy","tileType","defaultResamplingMethod","statistics","dynamicRangeAdjustment","stretchType","success","warn","error","_cachedRasterFunctionJson","getPrimaryRasters","rasters","open","prototype","json","origins","service","read","source","write","types","ImageryTileMixin"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import{rasterRendererTypes as t}from\"../../rasterRenderers.js\";import r from\"../../request.js\";import i from\"../../core/Error.js\";import s from\"../../core/Logger.js\";import{isNone as n,isSome as o}from\"../../core/maybe.js\";import{property as a}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/arrayUtils.js\";import\"../../core/accessorSupport/ensureType.js\";import{subclass as l}from\"../../core/accessorSupport/decorators/subclass.js\";import{getInfo as m}from\"../../geometry/support/spatialReferenceUtils.js\";import{sanitizeUrl as u}from\"../support/arcgisLayerUrl.js\";import{url as d}from\"../support/commonProperties.js\";import h from\"../support/DimensionalDefinition.js\";import c from\"../support/MultidimensionalSubset.js\";import p from\"../support/RasterFunction.js\";import f from\"../support/RasterJobHandler.js\";import y from\"../support/TileInfo.js\";import b from\"../support/rasterDatasets/FunctionRaster.js\";import{getDefaultMultidimensionalDefinition as g,hasExcludedVariableOrDimension as I,isMultiSliceOrRangeDefinition as J,getSubsetVariablesFromMdInfo as _}from\"../support/rasterDatasets/multidimensionalUtils.js\";import{create as S}from\"../support/rasterFunctions/rasterFunctionHelper.js\";import{convertVectorFieldData as R}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{normalizeRendererJSON as F,getDefaultInterpolation as x,getDefaultBandCombination as v,createDefaultRenderer as H}from\"../../renderers/support/rasterRendererHelper.js\";import j from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as T}from\"../../views/2d/engine/flow/dataUtils.js\";import D from\"../../geometry/SpatialReference.js\";const w=s.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),N=s=>{let N=class extends s{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=\"nearest\",this.multidimensionalDefinition=null,this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.sourceJSON=null,this.symbolizer=null}get fullExtent(){return this.rasterInfo?.extent}get rasterInfo(){return this.raster?.rasterInfo}get spatialReference(){return this.rasterInfo?.spatialReference??D.WGS84}get tileInfo(){return this.rasterInfo?.storageInfo.tileInfo}set url(e){this._set(\"url\",u(e,w))}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}async convertVectorFieldData(e,t){if(n(e)||!this.rasterInfo)return null;const r=this._rasterJobHandler.instance,i=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:i},t):R(e,i)}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):T(e.meshType,e.simulationSettings,e.flowData,o(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo??{};if(n(t))return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;!n(r)&&r.length||(r=g(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const i=e.timeExtent||this.timeExtent;if(o(r)&&o(i)&&(o(i.start)||o(i.end))){r=r.map((e=>e.clone()));const s=t.variables.find((({name:e})=>e===r[0].variableName))?.dimensions?.find((({name:e})=>\"StdTime\"===e)),a=r.find((({dimensionName:e})=>\"StdTime\"===e));if(!s||!a)return{...e,multidimensionalDefinition:null};const{start:l,end:m}=i,u=n(l)?null:l.getTime(),d=n(m)?null:m.getTime(),h=u??d,c=d??u;if(o(s.values)){const e=s.values.filter((e=>{if(Array.isArray(e)){if(h===c)return e[0]<=h&&e[1]>=h;const t=e[0]<=h&&e[1]>h||e[0]<c&&e[1]>=c,r=e[0]>=h&&e[1]<=c||e[0]<h&&e[1]>c;return t||r}return h===c?e===h:e>=h&&e<=c}));if(e.length){const t=e.sort(((e,t)=>{if(h===c)return(e[0]??e)-(t[0]??t);return Math.abs((e[1]??e)-c)-Math.abs((t[1]??t)-c)}))[0];a.values=[t]}else r=null}else if(s.hasRegularIntervals&&s.extent){const[e,t]=s.extent;h>t||c<e?r=null:a.values=h===c?[h]:[Math.max(e,h),Math.min(t,c)]}}return o(r)&&I(r,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:r}}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const r=this._rasterJobHandler.instance;r&&(t.rendererJSON=F(this.renderer.toJSON()),t.bind(),await r.updateSymbolizer(t),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!(o(r)&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const s=this._rasterJobHandler.instance,n=this.bandIds??[];return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),i}getTileUrl(e,t,r){return\"RasterTileServer\"===this.raster?.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:\"\"}getCompatibleTileInfo(e,t,r=!1){if(!this.loaded||n(t))return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const i=m(e);return y.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,s={}){if(O(this),s.requestAsImageElement){const n=this.getTileUrl(e,t,i);return r(n,{responseType:\"image\",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:s.signal}).then((e=>e.data))}if(o(this.rasterInfo.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),n(s.multidimensionalDefinition))){const r=s.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,r),pixelBlock:null}}return await this._initJobHandler(),await this._updateRasterFunction(),\"raster-shaded-relief\"===this.renderer.type&&(s={...s,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,s)}async fetchPixels(e,t,r,i={}){return o(this.rasterInfo.multidimensionalInfo)&&(i=this.normalizeRasterFetchOptions(i),n(i.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this._updateRasterFunction(),this.raster.fetchPixels(e,t,r,i))}async identify(e,t={}){if(O(this),o(this.rasterInfo.multidimensionalInfo)){if(!(this.rasterInfo.hasMultidimensionalTranspose&&!!(J(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&(t=this.normalizeRasterFetchOptions(t),n(t.multidimensionalDefinition)))return{location:e,value:null}}return this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.rasterInfo?.multidimensionalInfo;if(n(e)||\"standard-time\"!==this.rasterInfo?.dataType)return!1;const t=this.multidimensionalDefinition,r=t?.[0]?.variableName;return e.variables.some((e=>e.name===r&&(!t?.[0].dimensionName||e.dimensions.some((e=>\"StdTime\"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(e){const t=e??this.rasterInfo.multidimensionalInfo;return _(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=g(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new f;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{O(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer(),\"Function\"===this.raster.datasetFormat&&this.raster.syncJobHandler()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){O(this);const e=x(this.rasterInfo,this.raster.tileType,this.sourceJSON?.defaultResamplingMethod);this._set(\"interpolation\",e)}}_configDefaultRenderer(){O(this);const e=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=v(e)),!this.renderer){const t=H(e,{bandIds:this.bandIds,variableName:o(this.multidimensionalDefinition)?this.multidimensionalDefinition[0]?.variableName:null});\"WCSServer\"===this.raster.datasetFormat&&\"raster-stretch\"===t.type&&((e.statistics?.[0].max??0)>1e24||(e.statistics?.[0].min??0)<-1e24)&&(t.dynamicRangeAdjustment=!0,t.statistics=null,\"none\"===t.stretchType&&(t.stretchType=\"min-max\")),this.renderer=t}this.symbolizer?(this.symbolizer.rendererJSON=F(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new j({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const t=this.symbolizer.bind();t.success||w.warn(\"imagery-tile-mixin\",t.error||\"The given renderer is not supported by the layer.\")}async _updateRasterFunction(){if(\"imagery-tile\"!==this.type||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;let e=this.raster;if(\"Function\"===e?.datasetFormat){const t=e.rasterFunction.getPrimaryRasters();e=t.rasters[0]}const{rasterFunction:t}=this;if(t){const r=S(t.toJSON(),{raster:e}),i=new b({rasterFunction:r});i.rasterJobHandler=this._rasterJobHandler.instance,await i.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=i}else this.raster=e}};function O(e){if(!e.raster||!e.rasterInfo)throw new i(\"imagery-tile\",\"no raster\")}return e([a()],N.prototype,\"_cachedRendererJson\",void 0),e([a()],N.prototype,\"_cachedRasterFunctionJson\",void 0),e([a()],N.prototype,\"_compatibleFullExtent\",void 0),e([a()],N.prototype,\"_rasterJobHandler\",void 0),e([a()],N.prototype,\"bandIds\",void 0),e([a({json:{origins:{service:{read:{source:\"copyrightText\"}}}}})],N.prototype,\"copyright\",void 0),e([a({json:{read:!1}})],N.prototype,\"fullExtent\",null),e([a()],N.prototype,\"interpolation\",void 0),e([a()],N.prototype,\"ioConfig\",void 0),e([a({type:[h]})],N.prototype,\"multidimensionalDefinition\",void 0),e([a({type:c,json:{write:!0}})],N.prototype,\"multidimensionalSubset\",void 0),e([a()],N.prototype,\"raster\",void 0),e([a({type:p})],N.prototype,\"rasterFunction\",void 0),e([a()],N.prototype,\"rasterInfo\",null),e([a()],N.prototype,\"sourceJSON\",void 0),e([a({json:{read:!1}})],N.prototype,\"spatialReference\",null),e([a({json:{read:!1}})],N.prototype,\"tileInfo\",null),e([a(d)],N.prototype,\"url\",null),e([a({types:t})],N.prototype,\"renderer\",null),e([a()],N.prototype,\"symbolizer\",void 0),N=e([l(\"esri.layers.ImageryTileMixin\")],N),N};export{N as ImageryTileMixin};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}