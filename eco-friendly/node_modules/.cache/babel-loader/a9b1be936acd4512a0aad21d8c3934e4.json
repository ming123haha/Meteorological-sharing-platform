{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { acosClamped as t, reciprocalClamped as e } from \"../../../../core/mathUtils.js\";\nimport { s as i } from \"../../../../chunks/mat2.js\";\nimport { c as s } from \"../../../../chunks/mat2f64.js\";\nimport { j as r, d as o } from \"../../../../chunks/mat4.js\";\nimport { c as h } from \"../../../../chunks/mat4f64.js\";\nimport { a as n, h as a, p as l, g as u, f as p, b as f, i as c, o as x } from \"../../../../chunks/vec2.js\";\nimport { a as d, d as v, f as m } from \"../../../../chunks/vec2f64.js\";\nimport { e as g, c as V, a as A, n as b, g as C, b as D, f as I, o as R, s as N, l as P, m as S } from \"../../../../chunks/vec3.js\";\nimport { c as U } from \"../../../../chunks/vec3f64.js\";\nimport { create as _, fromPositionAndNormal as y, intersectRay as T } from \"../../../../geometry/support/plane.js\";\nimport { wrap as L } from \"../../../../geometry/support/ray.js\";\nimport F from \"./GeometryUtil.js\";\nimport { VertexAttribute as O } from \"./VertexAttribute.js\";\nimport { intersectTriangles as M } from \"../materials/internal/MaterialUtil.js\";\n\nfunction k() {\n  return {\n    up: U(),\n    right: U()\n  };\n}\n\nfunction E(t, e, i) {\n  S(t.up, e.up, i), S(t.right, e.right, i);\n}\n\nfunction B(t, e, i) {\n  t[0] = i[0] * e.right[0] + i[1] * e.up[0], t[1] = i[0] * e.right[1] + i[1] * e.up[1], t[2] = i[0] * e.right[2] + i[1] * e.up[2];\n}\n\nfunction w(t, e, i) {\n  n(t, g(i, e.right), g(i, e.up));\n}\n\nclass G {\n  constructor() {\n    this.pos = U(), this.posES = U(), this.posGS = U(), this.vRight = U(), this.vLeft = U(), this.frame = k(), this.rotationFrame = k(), this.rotationRight = d(), this.rotationAngle = 0, this.miterStretch = s();\n  }\n\n  setFrameFromUpVector(t) {\n    V(this.frame.up, t), A(at, this.vLeft, this.vRight), b(at, at), C(nt, this.frame.up, g(at, this.frame.up)), D(pt, at, nt), b(pt, pt), I(this.frame.right, pt, this.frame.up);\n  }\n\n  computeRotationAxisAndAngleFromUpVector() {\n    V(this.rotationFrame.up, this.frame.up), V(this.rotationFrame.right, this.frame.right), n(this.rotationRight, 1, 0), C(nt, this.frame.up, g(this.frame.up, this.vLeft)), D(nt, this.vLeft, nt), R(nt, nt), b(nt, nt), C(at, this.frame.up, g(this.frame.up, this.vRight)), D(at, this.vRight, at), b(at, at), I(lt, this.rotationFrame.up, this.vLeft);\n    const s = Math.sign(g(lt, this.vRight));\n\n    if (this.rotationAngle = s * (Math.PI - t(g(nt, at))), Math.abs(this.rotationAngle) > 0) {\n      const t = e(Math.cos(.5 * this.rotationAngle));\n      i(this.miterStretch, t - 1 + 1, 0, 0, 1);\n    }\n\n    const r = Math.PI - this.rotationAngle;\n    this.maxStretchDistance = Math.abs(Math.min(this.vLeftLength, this.vRightLength) / Math.cos(.5 * r));\n  }\n\n}\n\nclass j {\n  constructor() {\n    this.vertices = [], this.vertexIndices = [], this.vertexNormals = [], this.poles = [], this.poleIndices = [], this.uvs = null, this.uvIndices = null;\n  }\n\n  addVertex(t, e) {\n    return this.vertices.push(v(t)), this.vertexNormals.push(v(e)), this.vertices.length - 1;\n  }\n\n  addUV(t) {\n    return this.uvs || (this.uvs = [], this.uvIndices = []), this.uvs.push(t), this.uvs.length - 1;\n  }\n\n  addPole(t, e = null) {\n    return this.poles.push({\n      position: v(t),\n      normal: e ? v(e) : null\n    }), this.poles.length - 1;\n  }\n\n  addSegment(t, e = null, i = null) {\n    this.vertexIndices.push(t.v0), this.vertexIndices.push(t.v1), e && (this.uvIndices.push(e.v0), this.uvIndices.push(e.v1)), i && (this.poleIndices.push(i.v0), this.poleIndices.push(i.v1));\n  }\n\n  get numSegments() {\n    return this.vertexIndices.length / 2;\n  }\n\n  hasUV() {\n    return null != this.uvs;\n  }\n\n  translate(t, e) {\n    for (const i of this.vertices) i[0] += t, i[1] += e;\n\n    for (const i of this.poles) i.position[0] += t, i.position[1] += e;\n  }\n\n  static circle(t = 20) {\n    const e = .5,\n          i = new j(),\n          s = {\n      v0: 0,\n      v1: 0\n    };\n    i.addPole(m(0, 0));\n\n    for (let h = 0; h < t; ++h) {\n      const s = 2 * h * Math.PI / t,\n            r = Math.cos(s),\n            o = Math.sin(s),\n            n = m(r * e, o * e),\n            a = m(r, o);\n      i.addVertex(n, a), i.addUV(h / t);\n    }\n\n    i.addUV(1);\n\n    for (let h = 0; h < t - 1; ++h) {\n      const t = {\n        v0: h,\n        v1: h + 1\n      },\n            e = t;\n      i.addSegment(t, e, s);\n    }\n\n    const r = {\n      v0: t - 1,\n      v1: 0\n    },\n          o = {\n      v0: t - 1,\n      v1: t\n    };\n    return i.addSegment(r, o, s), i;\n  }\n\n  static rect() {\n    const t = 1,\n          e = 1,\n          i = new j(),\n          s = m(.5 * -t, .5 * -e),\n          r = m(.5 * t, .5 * -e),\n          o = m(.5 * t, .5 * e),\n          h = m(.5 * -t, .5 * e),\n          n = m(0, -1),\n          a = m(1, 0),\n          l = m(0, 1),\n          u = m(-1, 0);\n    i.addUV(0), i.addUV(1), i.addPole(m(0, .5 * e), l), i.addPole(m(0, .5 * e)), i.addPole(m(0, .5 * -e)), i.addPole(m(0, .5 * -e), n);\n    const p = {\n      v0: 0,\n      v1: 1\n    };\n    return i.addVertex(s, n), i.addVertex(r, n), i.addSegment({\n      v0: 0,\n      v1: 1\n    }, p, {\n      v0: 3,\n      v1: 3\n    }), i.addVertex(r, a), i.addVertex(o, a), i.addSegment({\n      v0: 2,\n      v1: 3\n    }, p, {\n      v0: 2,\n      v1: 1\n    }), i.addVertex(o, l), i.addVertex(h, l), i.addSegment({\n      v0: 4,\n      v1: 5\n    }, p, {\n      v0: 0,\n      v1: 0\n    }), i.addVertex(h, u), i.addVertex(s, u), i.addSegment({\n      v0: 6,\n      v1: 7\n    }, p, {\n      v0: 1,\n      v1: 2\n    }), i;\n  }\n\n}\n\nclass z {\n  constructor(t) {\n    this.vertices = [], this.offset = U(), this.xform = h(), this.vertices = t;\n    const e = Math.floor((t.length - 1) / 2);\n    V(this.offset, this.vertices[e].pos);\n\n    for (const i of this.vertices) D(i.pos, i.pos, this.offset);\n\n    r(this.xform, this.xform, this.offset), this.updatePathVertexInformation();\n  }\n\n  updatePathVertexInformation() {\n    const t = this.vertices.length;\n    let e = this.vertices[0];\n    e.index = 0, N(e.vLeft, 0, 0, 0), e.vLeftLength = 0, D(e.vRight, this.vertices[1].pos, e.pos), e.vRightLength = P(e.vRight), b(e.vRight, e.vRight);\n    let i = e;\n\n    for (let s = 1; s < t; ++s) e = this.vertices[s], e.index = s, V(e.vLeft, i.vRight), e.vLeftLength = i.vRightLength, s < t - 1 ? (D(e.vRight, this.vertices[s + 1].pos, e.pos), e.vRightLength = P(e.vRight), b(e.vRight, e.vRight)) : (V(e.vRight, e.vLeft), e.vRightLength = e.vLeftLength), i = e;\n  }\n\n}\n\nfunction J(t, e) {\n  let i = null;\n\n  const s = t.vertices.length,\n        r = .99619469809,\n        o = U(),\n        h = U(),\n        n = U(),\n        a = U(),\n        l = U(),\n        u = U(),\n        p = _();\n\n  let f = t.vertices[0];\n  V(h, e), N(o, 0, 1, 0), F.makeOrthoBasisDirUpFallback(f.vRight, h, o, o, n, h, r), V(f.frame.up, h), V(f.frame.right, n), i = f;\n\n  for (let c = 1; c < s; ++c) {\n    f = t.vertices[c], A(l, f.vLeft, f.vRight);\n    let e = P(l);\n    e > 0 ? (e = 1 / Math.sqrt(e), l[0] = l[0] * e, l[1] = l[1] * e, l[2] = l[2] * e) : (l[0] = f.vRight[0], l[1] = f.vRight[1], l[2] = f.vRight[2]), A(u, i.pos, i.frame.up), y(f.pos, l, p);\n    T(p, L(u, f.vLeft), a) ? (D(a, a, f.pos), b(h, a), I(n, l, h), b(n, n)) : F.makeOrthoBasisDirUpFallback(l, i.frame.up, i.frame.right, o, n, h, r), V(f.frame.up, h), V(f.frame.right, n), i = f;\n  }\n}\n\nclass H {}\n\nclass X {\n  numProfilesPerJoin() {\n    return 1;\n  }\n\n  extrude(t, e, i) {\n    for (let s = 0; s < e.vertices.length; ++s) i(t.index, t.frame, e.vertices[s], e.vertexNormals[s], !1);\n  }\n\n}\n\nclass q {\n  constructor(t = .8 * Math.PI, e = 1) {\n    this.cutoffAngle = t, this.numBendSubdivisions = e;\n  }\n\n  numProfilesPerJoin() {\n    return this.numBendSubdivisions + 1;\n  }\n\n  extrude(t, e, i) {\n    const s = ft;\n    if (Math.abs(t.rotationAngle) >= this.cutoffAngle) for (let r = 0; r < this.numBendSubdivisions + 1; ++r) {\n      o(ct, .5 * -t.rotationAngle + r * t.rotationAngle / this.numBendSubdivisions, t.rotationFrame.up), E(s, t.frame, ct);\n\n      for (let r = 0; r < e.vertices.length; ++r) {\n        a(e.vertices[r], t.rotationRight) * t.rotationAngle >= 0 ? i(t.index, s, e.vertices[r], e.vertexNormals[r], !1) : (l(rt, e.vertices[r], t.miterStretch), i(t.index, t.frame, rt, e.vertexNormals[r], !0));\n      }\n    } else for (let r = 0; r < this.numBendSubdivisions + 1; ++r) for (let s = 0; s < e.vertices.length; ++s) {\n      const r = a(e.vertices[s], t.rotationRight) * t.rotationAngle >= 0;\n      l(rt, e.vertices[s], t.miterStretch), i(t.index, t.frame, rt, e.vertexNormals[s], !r);\n    }\n  }\n\n}\n\nconst K = {\n  generateUV: !1\n};\n\nclass Q {\n  rebuildConnectingProfileGeometry(t, e, i) {\n    for (let s = 0; s < e.vertices.length; ++s) i(t.index, t.frame, e.vertices[s], e.vertexNormals[s], 0, 0);\n  }\n\n}\n\nclass W extends Q {\n  constructor() {\n    super();\n  }\n\n  getNumVertices() {\n    return 0;\n  }\n\n  getNumIndices() {\n    return 0;\n  }\n\n  rebuildCapGeometry() {}\n\n  buildTopology() {}\n\n}\n\nclass Y extends Q {\n  constructor(t, e = 0, i = !1) {\n    super(), this.profile = t, this.profilePlaneOffset = e, this.flip = i;\n  }\n\n  getNumVertices() {\n    return this.profile.vertices.length;\n  }\n\n  getNumIndices() {\n    return 3 * this.profile.numSegments;\n  }\n\n  rebuildConnectingProfileGeometry(t, e, i) {\n    for (let s = 0; s < e.vertices.length; ++s) i(t.index, t.frame, e.vertices[s], e.vertexNormals[s], this.profilePlaneOffset, 0);\n  }\n\n  rebuildCapGeometry(t, e) {\n    const i = ot;\n    n(i, 0, 0);\n    const s = this.flip ? 1 : -1;\n\n    for (let r = 0; r < this.profile.vertices.length; ++r) e(t.index, t.frame, this.profile.vertices[r], i, this.profilePlaneOffset, s);\n  }\n\n  buildTopology(t, e) {\n    const i = this.vertexBufferStart + this.profile.vertexIndices[0];\n\n    for (let s = 1; s < this.profile.numSegments; ++s) {\n      const t = this.profile.vertexIndices[2 * s + 0],\n            r = this.profile.vertexIndices[2 * s + 1],\n            o = this.vertexBufferStart + t,\n            h = this.vertexBufferStart + r;\n      this.flip ? e(h, o, i) : e(i, o, h);\n    }\n  }\n\n}\n\nclass Z extends Q {\n  constructor(t) {\n    super(), this.flip = !1, this.sign = 0, this.breakNormals = !1, this.numSegments = 3, this.profile = t.profile, this.flip = t.flip, this.sign = this.flip ? 1 : -1, this.breakNormals = t.breakNormals, this.numSegments = t.subdivisions;\n  }\n\n  getNumVertices() {\n    let t = 0;\n    return t = this.profile.vertices.length * (this.numSegments - 1), this.breakNormals && (t += this.profile.vertices.length), t += this.profile.poles.length, t;\n  }\n\n  getNumIndices() {\n    let t = 0;\n    t += 2 * this.profile.numSegments * (this.numSegments - 1);\n\n    for (let e = 0; e < this.profile.numSegments; ++e) {\n      const i = this.profile.vertexIndices[2 * e + 0],\n            s = this.profile.vertexIndices[2 * e + 1];\n      this.profile.poleIndices[i] === this.profile.poleIndices[s] ? t += 1 : t += 2;\n    }\n\n    return 3 * t;\n  }\n\n  rebuildCapGeometry(t, e) {\n    const i = t.frame,\n          s = .5 * this.sign,\n          r = rt,\n          o = ot;\n    n(o, 0, 0);\n\n    for (let h = 0; h < this.profile.poles.length; ++h) {\n      const r = this.profile.poles[h];\n      r.normal ? e(t.index, i, r.position, r.normal, s, 0) : e(t.index, i, r.position, o, s, this.sign);\n    }\n\n    if (this.breakNormals) for (let h = 0; h < this.profile.vertices.length; ++h) e(t.index, i, this.profile.vertices[h], this.profile.vertexNormals[h], 0, 0);\n\n    for (let h = 0; h < this.numSegments - 1; ++h) {\n      const n = (1 - (h + 1) / this.numSegments) * Math.PI * .5,\n            a = Math.sin(n),\n            l = Math.cos(n);\n\n      for (let h = 0; h < this.profile.vertices.length; ++h) {\n        const n = this.profile.poles[this.profile.poleIndices[h]];\n        u(r, this.profile.vertices[h], n.position), p(r, r, a), n.normal ? (f(r, r, n.position), e(t.index, i, r, n.normal, s * l, 0)) : (c(o, r), p(o, o, a), f(r, r, n.position), e(t.index, i, r, o, s * l, this.sign * l));\n      }\n    }\n  }\n\n  buildTopology(t, e) {\n    const i = this.breakNormals ? this.vertexBufferStart + this.profile.poles.length : this.firstProfileVertexIndex,\n          s = this.breakNormals ? this.vertexBufferStart + this.profile.poles.length + this.profile.vertices.length : this.vertexBufferStart + this.profile.poles.length;\n\n    for (let r = 0; r < this.profile.numSegments; ++r) {\n      const t = this.profile.vertexIndices[2 * r + 0],\n            o = this.profile.vertexIndices[2 * r + 1],\n            h = this.vertexBufferStart + this.profile.poleIndices[t],\n            n = this.vertexBufferStart + this.profile.poleIndices[o];\n      let a = i + t,\n          l = i + o;\n\n      for (let i = 0; i < this.numSegments - 1; ++i) {\n        const r = s + i * this.profile.vertices.length + t,\n              h = s + i * this.profile.vertices.length + o;\n        this.flip ? (e(r, l, a), e(l, r, h)) : (e(a, l, r), e(h, r, l)), a = r, l = h;\n      }\n\n      this.flip ? (e(h, l, a), h !== n && e(h, n, l)) : (e(a, l, h), h !== n && e(l, n, h));\n    }\n  }\n\n}\n\nclass $ {\n  constructor(t, e, i, s, r, o = K) {\n    this.options = o, this._extrusionVertexCount = 0, this._triangleCount = 0, this.numExtrusionProfiles = 0, this.numVerticesTotal = 0, this.numNormalsTotal = 0, this.numUVTotal = 0, this.profile = e, this.path = t, this.extruder = i, this.startCap = s, this.endCap = r;\n    const h = this.path.vertices.length - 2;\n    this.numExtrusionProfiles = i.numProfilesPerJoin() * h + 2, this.numVerticesTotal = e.vertices.length * this.numExtrusionProfiles, this.numNormalsTotal = this.numVerticesTotal, this.startCap.vertexBufferStart = this.numVerticesTotal;\n    const n = this.startCap.getNumVertices();\n    this.numVerticesTotal += n, this.numNormalsTotal += n, this.endCap.vertexBufferStart = this.numVerticesTotal;\n    const a = this.endCap.getNumVertices();\n    this.numVerticesTotal += a, this.numNormalsTotal += a, this.pathVertexData = new Float32Array(1 * this.numVerticesTotal), this.profileRightAxisData = new Float32Array(4 * this.numVerticesTotal), this.profileUpAxisData = new Float32Array(4 * this.numVerticesTotal), this.profileVertexAndNormalData = new Float32Array(4 * this.numVerticesTotal), this.profile.hasUV() && this.options.generateUV && (this.numUVTotal = this.profile.uvs.length, this.uvData = new Float32Array(2 * this.numUVTotal)), this.originData = new Float32Array(3 * this.path.vertices.length), this._rebuildGeometry(), this.buildTopology();\n  }\n\n  emitVertex(t, e, i, s, r) {\n    if (this.profileRightAxisData[4 * this._extrusionVertexCount + 0] = e.right[0], this.profileRightAxisData[4 * this._extrusionVertexCount + 1] = e.right[1], this.profileRightAxisData[4 * this._extrusionVertexCount + 2] = e.right[2], this.profileUpAxisData[4 * this._extrusionVertexCount + 0] = e.up[0], this.profileUpAxisData[4 * this._extrusionVertexCount + 1] = e.up[1], this.profileUpAxisData[4 * this._extrusionVertexCount + 2] = e.up[2], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 0] = i[0], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 1] = i[1], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 2] = s[0], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 3] = s[1], this.pathVertexData[this._extrusionVertexCount] = t, r) {\n      const e = this.path.vertices[t];\n      this.profileRightAxisData[4 * this._extrusionVertexCount + 3] = e.rotationRight[0] * e.maxStretchDistance, this.profileUpAxisData[4 * this._extrusionVertexCount + 3] = e.rotationRight[1] * e.maxStretchDistance;\n    } else this.profileRightAxisData[4 * this._extrusionVertexCount + 3] = 0, this.profileUpAxisData[4 * this._extrusionVertexCount + 3] = 0;\n\n    ++this._extrusionVertexCount;\n  }\n\n  emitCapVertex(t, e, i, s, r, o) {\n    this.profileRightAxisData[4 * this._extrusionVertexCount + 0] = e.right[0], this.profileRightAxisData[4 * this._extrusionVertexCount + 1] = e.right[1], this.profileRightAxisData[4 * this._extrusionVertexCount + 2] = e.right[2], this.profileUpAxisData[4 * this._extrusionVertexCount + 0] = e.up[0], this.profileUpAxisData[4 * this._extrusionVertexCount + 1] = e.up[1], this.profileUpAxisData[4 * this._extrusionVertexCount + 2] = e.up[2], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 0] = i[0], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 1] = i[1], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 2] = s[0], this.profileVertexAndNormalData[4 * this._extrusionVertexCount + 3] = s[1], this.pathVertexData[this._extrusionVertexCount] = t, this.profileRightAxisData[4 * this._extrusionVertexCount + 3] = r, this.profileUpAxisData[4 * this._extrusionVertexCount + 3] = o, ++this._extrusionVertexCount;\n  }\n\n  emitTriangle(t, e, i) {\n    this.vertexIndices[3 * this._triangleCount + 0] = t, this.vertexIndices[3 * this._triangleCount + 1] = e, this.vertexIndices[3 * this._triangleCount + 2] = i, this.pathVertexIndices[3 * this._triangleCount + 0] = this.pathVertexData[t], this.pathVertexIndices[3 * this._triangleCount + 1] = this.pathVertexData[e], this.pathVertexIndices[3 * this._triangleCount + 2] = this.pathVertexData[i], this.normalIndices[3 * this._triangleCount + 0] = t, this.normalIndices[3 * this._triangleCount + 1] = e, this.normalIndices[3 * this._triangleCount + 2] = i, ++this._triangleCount;\n  }\n\n  _rebuildGeometry() {\n    const t = (t, e, i, s, r) => this.emitVertex(t, e, i, s, r),\n          e = (t, e, i, s, r, o) => this.emitCapVertex(t, e, i, s, r, o);\n\n    this._extrusionVertexCount = 0;\n\n    for (const i of this.path.vertices) this.originData[3 * i.index + 0] = i.pos[0], this.originData[3 * i.index + 1] = i.pos[1], this.originData[3 * i.index + 2] = i.pos[2];\n\n    this.startCap.rebuildConnectingProfileGeometry(this.path.vertices[0], this.profile, e);\n\n    for (let i = 1; i < this.path.vertices.length - 1; ++i) this.extruder.extrude(this.path.vertices[i], this.profile, t);\n\n    if (this.endCap.rebuildConnectingProfileGeometry(this.path.vertices[this.path.vertices.length - 1], this.profile, e), this.startCap.rebuildCapGeometry(this.path.vertices[0], e), this.endCap.rebuildCapGeometry(this.path.vertices[this.path.vertices.length - 1], e), this.profile.hasUV() && this.options.generateUV) for (let i = 0; i < this.profile.uvs.length; ++i) this.uvData[2 * i + 0] = this.profile.uvs[i], this.uvData[2 * i + 1] = 0;\n  }\n\n  buildTopology() {\n    const t = (t, e, i) => this.emitTriangle(t, e, i);\n\n    this._triangleCount = 0;\n    const e = this.profile.vertices.length,\n          i = this.profile.numSegments,\n          s = this.numExtrusionProfiles - 1;\n    let r = 3 * (2 * (i * s));\n    this.startCap.indexBufferStart = r, this.startCap.firstProfileVertexIndex = 0, r += this.startCap.getNumIndices(), this.endCap.indexBufferStart = r, this.endCap.firstProfileVertexIndex = e * (this.numExtrusionProfiles - 1), r += this.endCap.getNumIndices(), this.vertexIndices = new Uint32Array(r), this.normalIndices = new Uint32Array(r), this.pathVertexIndices = new Uint32Array(r), this.profile.hasUV() && this.options.generateUV && (this.uvIndices = new Uint32Array(r));\n\n    for (let o = 0; o < i; ++o) {\n      const i = this.profile.vertexIndices[2 * o],\n            r = this.profile.vertexIndices[2 * o + 1];\n\n      for (let o = 0; o < s; ++o) {\n        const s = o * e + i,\n              h = (o + 1) * e + r,\n              n = o * e + r;\n        t(s, (o + 1) * e + i, h), t(s, h, n);\n      }\n    }\n\n    this.startCap.buildTopology(this.path.vertices[0], t), this.endCap.buildTopology(this.path.vertices[this.path.vertices.length - 1], t);\n  }\n\n  onPathChanged() {\n    this._rebuildGeometry();\n  }\n\n}\n\nclass tt {\n  constructor(t) {\n    this.builder = t;\n  }\n\n  get xform() {\n    return this.builder.path.xform;\n  }\n\n  onPathChanged() {\n    this.builder.onPathChanged();\n  }\n\n}\n\nclass et extends tt {\n  constructor(t) {\n    super(t), this.vertexAttributePosition = null, this.vertexAttributeNormal = null, this.vertexAttributeColor = null, this.vertexAttributePosition = new Float32Array(3 * this.builder.numVerticesTotal), this.vertexAttributeNormal = new Float32Array(3 * this.builder.numNormalsTotal), this.vertexAttributeColor = new Uint8Array(4), this.vertexAttributeColor[0] = 255, this.vertexAttributeColor[1] = 255, this.vertexAttributeColor[2] = 255, this.vertexAttributeColor[3] = 255;\n  }\n\n  bakeVertexColors(t) {\n    this.vertexAttributeColor[0] = 255 * t[0], this.vertexAttributeColor[1] = 255 * t[1], this.vertexAttributeColor[2] = 255 * t[2], this.vertexAttributeColor[3] = 255 * (t.length > 3 ? t[3] : 1);\n  }\n\n  bake(t) {\n    this.size = t;\n\n    for (let e = 0; e < this.builder.numVerticesTotal; ++e) {\n      let i = this.builder.pathVertexData[e];\n      const s = 0 === i || i === this.builder.path.vertices.length - 1;\n      i *= 3;\n      const r = st;\n      N(r, this.builder.originData[i++], this.builder.originData[i++], this.builder.originData[i]);\n      const o = 4 * e,\n            h = nt,\n            l = rt,\n            u = at,\n            d = lt,\n            v = ut;\n      let m = 0,\n          g = 0;\n      if (N(d, this.builder.profileRightAxisData[o], this.builder.profileRightAxisData[o + 1], this.builder.profileRightAxisData[o + 2]), N(v, this.builder.profileUpAxisData[o], this.builder.profileUpAxisData[o + 1], this.builder.profileUpAxisData[o + 2]), n(l, this.builder.profileVertexAndNormalData[o] * t[0], this.builder.profileVertexAndNormalData[o + 1] * t[1]), s) I(u, v, d), m = this.builder.profileRightAxisData[o + 3] * t[0], g = this.builder.profileUpAxisData[o + 3];else {\n        const t = ot,\n              e = ht;\n        n(t, this.builder.profileRightAxisData[o + 3], this.builder.profileUpAxisData[o + 3]);\n        const i = x(t);\n        c(t, t);\n        const s = a(l, t);\n\n        if (Math.abs(s) > i) {\n          n(e, -t[1], t[0]);\n          const r = a(l, e);\n          p(t, t, i * Math.sign(s)), p(e, e, r), f(l, t, e);\n        }\n\n        N(u, 0, 0, 0);\n      }\n      N(h, d[0] * l[0] + v[0] * l[1], d[1] * l[0] + v[1] * l[1], d[2] * l[0] + v[2] * l[1]), this.vertexAttributePosition[3 * e + 0] = r[0] + h[0] + u[0] * m, this.vertexAttributePosition[3 * e + 1] = r[1] + h[1] + u[1] * m, this.vertexAttributePosition[3 * e + 2] = r[2] + h[2] + u[2] * m;\n      const V = rt;\n      n(V, this.builder.profileVertexAndNormalData[o + 2], this.builder.profileVertexAndNormalData[o + 3]), this.vertexAttributeNormal[3 * e + 0] = d[0] * V[0] + v[0] * V[1] + u[0] * g, this.vertexAttributeNormal[3 * e + 1] = d[1] * V[0] + v[1] * V[1] + u[1] * g, this.vertexAttributeNormal[3 * e + 2] = d[2] * V[0] + v[2] * V[1] + u[2] * g;\n    }\n  }\n\n  createGeometryData() {\n    const t = [[O.POSITION, this.builder.vertexIndices], [O.NORMAL, this.builder.normalIndices]],\n          e = [[O.POSITION, {\n      size: 3,\n      data: this.vertexAttributePosition,\n      exclusive: !0\n    }], [O.NORMAL, {\n      size: 3,\n      data: this.vertexAttributeNormal,\n      exclusive: !0\n    }]];\n\n    if (this.vertexAttributeColor) {\n      const i = this.builder.vertexIndices.length;\n      t.push([O.COLOR, new Uint32Array(i)]), e.push([O.COLOR, {\n        size: 4,\n        data: this.vertexAttributeColor\n      }]);\n    }\n\n    return {\n      vertexAttributes: e,\n      indices: t\n    };\n  }\n\n  onPathChanged() {\n    super.onPathChanged(), this.bake(this.size);\n  }\n\n  intersect(t, e, i) {\n    const s = this.builder.vertexIndices,\n          r = {\n      size: 3,\n      data: this.vertexAttributePosition\n    },\n          o = s.length / 3;\n    M(t, e, 0, o, s, r, void 0, void 0, i);\n  }\n\n}\n\nclass it extends tt {\n  constructor(t, e, i, s) {\n    super(t), this.sizeAttributeValue = e, this.colorAttributeValue = i, this.opacityAttributeValue = s, this.vvData = null, this.baked = new et(t), this.vvData = new Float32Array(4 * this.builder.path.vertices.length);\n\n    for (let r = 0; r < this.builder.path.vertices.length; ++r) {\n      this.vvData[4 * r + 0] = e, this.vvData[4 * r + 1] = i, this.vvData[4 * r + 2] = s;\n      const t = 0 === r || r === this.builder.path.vertices.length - 1;\n      this.vvData[4 * r + 3] = t ? 1 : 0;\n    }\n  }\n\n  createGeometryData() {\n    return {\n      vertexAttributes: [[O.POSITION, {\n        size: 3,\n        data: this.builder.originData,\n        exclusive: !0\n      }], [O.PROFILERIGHT, {\n        size: 4,\n        data: this.builder.profileRightAxisData,\n        exclusive: !0\n      }], [O.PROFILEUP, {\n        size: 4,\n        data: this.builder.profileUpAxisData,\n        exclusive: !0\n      }], [O.PROFILEVERTEXANDNORMAL, {\n        size: 4,\n        data: this.builder.profileVertexAndNormalData,\n        exclusive: !0\n      }], [O.FEATUREVALUE, {\n        size: 4,\n        data: this.vvData,\n        exclusive: !0\n      }]],\n      indices: [[O.POSITION, this.builder.pathVertexIndices], [O.PROFILERIGHT, this.builder.vertexIndices], [O.PROFILEUP, this.builder.vertexIndices], [O.PROFILEVERTEXANDNORMAL, this.builder.vertexIndices], [O.FEATUREVALUE, this.builder.pathVertexIndices]]\n    };\n  }\n\n}\n\nconst st = U(),\n      rt = d(),\n      ot = d(),\n      ht = d(),\n      nt = U(),\n      at = U(),\n      lt = U(),\n      ut = U(),\n      pt = U(),\n      ft = k(),\n      ct = h();\nexport { $ as Builder, Q as CapBuilder, H as Extruder, it as FastUpdatePathGeometry, q as MiterExtruder, W as NoCapBuilder, z as Path, tt as PathGeometryData, G as PathVertex, j as Profile, Z as RoundCapBuilder, X as SimpleExtruder, et as StaticPathGeometry, Y as TriangulationCapBuilder, J as computeMinimumRotationTangentFrame, k as makeFrame, B as profileSpaceToVertexSpace, w as vertexSpaceToProfileSpace };","map":{"version":3,"names":["acosClamped","t","reciprocalClamped","e","s","i","c","j","r","d","o","h","a","n","p","l","g","u","f","b","x","v","m","V","A","C","D","I","R","N","P","S","U","create","_","fromPositionAndNormal","y","intersectRay","T","wrap","L","F","VertexAttribute","O","intersectTriangles","M","k","up","right","E","B","w","G","constructor","pos","posES","posGS","vRight","vLeft","frame","rotationFrame","rotationRight","rotationAngle","miterStretch","setFrameFromUpVector","at","nt","pt","computeRotationAxisAndAngleFromUpVector","lt","Math","sign","PI","abs","cos","maxStretchDistance","min","vLeftLength","vRightLength","vertices","vertexIndices","vertexNormals","poles","poleIndices","uvs","uvIndices","addVertex","push","length","addUV","addPole","position","normal","addSegment","v0","v1","numSegments","hasUV","translate","circle","sin","rect","z","offset","xform","floor","updatePathVertexInformation","index","J","makeOrthoBasisDirUpFallback","sqrt","H","X","numProfilesPerJoin","extrude","q","cutoffAngle","numBendSubdivisions","ft","ct","rt","K","generateUV","Q","rebuildConnectingProfileGeometry","W","getNumVertices","getNumIndices","rebuildCapGeometry","buildTopology","Y","profile","profilePlaneOffset","flip","ot","vertexBufferStart","Z","breakNormals","subdivisions","firstProfileVertexIndex","$","options","_extrusionVertexCount","_triangleCount","numExtrusionProfiles","numVerticesTotal","numNormalsTotal","numUVTotal","path","extruder","startCap","endCap","pathVertexData","Float32Array","profileRightAxisData","profileUpAxisData","profileVertexAndNormalData","uvData","originData","_rebuildGeometry","emitVertex","emitCapVertex","emitTriangle","pathVertexIndices","normalIndices","indexBufferStart","Uint32Array","onPathChanged","tt","builder","et","vertexAttributePosition","vertexAttributeNormal","vertexAttributeColor","Uint8Array","bakeVertexColors","bake","size","st","ut","ht","createGeometryData","POSITION","NORMAL","data","exclusive","COLOR","vertexAttributes","indices","intersect","it","sizeAttributeValue","colorAttributeValue","opacityAttributeValue","vvData","baked","PROFILERIGHT","PROFILEUP","PROFILEVERTEXANDNORMAL","FEATUREVALUE","Builder","CapBuilder","Extruder","FastUpdatePathGeometry","MiterExtruder","NoCapBuilder","Path","PathGeometryData","PathVertex","Profile","RoundCapBuilder","SimpleExtruder","StaticPathGeometry","TriangulationCapBuilder","computeMinimumRotationTangentFrame","makeFrame","profileSpaceToVertexSpace","vertexSpaceToProfileSpace"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/webgl-engine/lib/pathGeometryUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{acosClamped as t,reciprocalClamped as e}from\"../../../../core/mathUtils.js\";import{s as i}from\"../../../../chunks/mat2.js\";import{c as s}from\"../../../../chunks/mat2f64.js\";import{j as r,d as o}from\"../../../../chunks/mat4.js\";import{c as h}from\"../../../../chunks/mat4f64.js\";import{a as n,h as a,p as l,g as u,f as p,b as f,i as c,o as x}from\"../../../../chunks/vec2.js\";import{a as d,d as v,f as m}from\"../../../../chunks/vec2f64.js\";import{e as g,c as V,a as A,n as b,g as C,b as D,f as I,o as R,s as N,l as P,m as S}from\"../../../../chunks/vec3.js\";import{c as U}from\"../../../../chunks/vec3f64.js\";import{create as _,fromPositionAndNormal as y,intersectRay as T}from\"../../../../geometry/support/plane.js\";import{wrap as L}from\"../../../../geometry/support/ray.js\";import F from\"./GeometryUtil.js\";import{VertexAttribute as O}from\"./VertexAttribute.js\";import{intersectTriangles as M}from\"../materials/internal/MaterialUtil.js\";function k(){return{up:U(),right:U()}}function E(t,e,i){S(t.up,e.up,i),S(t.right,e.right,i)}function B(t,e,i){t[0]=i[0]*e.right[0]+i[1]*e.up[0],t[1]=i[0]*e.right[1]+i[1]*e.up[1],t[2]=i[0]*e.right[2]+i[1]*e.up[2]}function w(t,e,i){n(t,g(i,e.right),g(i,e.up))}class G{constructor(){this.pos=U(),this.posES=U(),this.posGS=U(),this.vRight=U(),this.vLeft=U(),this.frame=k(),this.rotationFrame=k(),this.rotationRight=d(),this.rotationAngle=0,this.miterStretch=s()}setFrameFromUpVector(t){V(this.frame.up,t),A(at,this.vLeft,this.vRight),b(at,at),C(nt,this.frame.up,g(at,this.frame.up)),D(pt,at,nt),b(pt,pt),I(this.frame.right,pt,this.frame.up)}computeRotationAxisAndAngleFromUpVector(){V(this.rotationFrame.up,this.frame.up),V(this.rotationFrame.right,this.frame.right),n(this.rotationRight,1,0),C(nt,this.frame.up,g(this.frame.up,this.vLeft)),D(nt,this.vLeft,nt),R(nt,nt),b(nt,nt),C(at,this.frame.up,g(this.frame.up,this.vRight)),D(at,this.vRight,at),b(at,at),I(lt,this.rotationFrame.up,this.vLeft);const s=Math.sign(g(lt,this.vRight));if(this.rotationAngle=s*(Math.PI-t(g(nt,at))),Math.abs(this.rotationAngle)>0){const t=e(Math.cos(.5*this.rotationAngle));i(this.miterStretch,t-1+1,0,0,1)}const r=Math.PI-this.rotationAngle;this.maxStretchDistance=Math.abs(Math.min(this.vLeftLength,this.vRightLength)/Math.cos(.5*r))}}class j{constructor(){this.vertices=[],this.vertexIndices=[],this.vertexNormals=[],this.poles=[],this.poleIndices=[],this.uvs=null,this.uvIndices=null}addVertex(t,e){return this.vertices.push(v(t)),this.vertexNormals.push(v(e)),this.vertices.length-1}addUV(t){return this.uvs||(this.uvs=[],this.uvIndices=[]),this.uvs.push(t),this.uvs.length-1}addPole(t,e=null){return this.poles.push({position:v(t),normal:e?v(e):null}),this.poles.length-1}addSegment(t,e=null,i=null){this.vertexIndices.push(t.v0),this.vertexIndices.push(t.v1),e&&(this.uvIndices.push(e.v0),this.uvIndices.push(e.v1)),i&&(this.poleIndices.push(i.v0),this.poleIndices.push(i.v1))}get numSegments(){return this.vertexIndices.length/2}hasUV(){return null!=this.uvs}translate(t,e){for(const i of this.vertices)i[0]+=t,i[1]+=e;for(const i of this.poles)i.position[0]+=t,i.position[1]+=e}static circle(t=20){const e=.5,i=new j,s={v0:0,v1:0};i.addPole(m(0,0));for(let h=0;h<t;++h){const s=2*h*Math.PI/t,r=Math.cos(s),o=Math.sin(s),n=m(r*e,o*e),a=m(r,o);i.addVertex(n,a),i.addUV(h/t)}i.addUV(1);for(let h=0;h<t-1;++h){const t={v0:h,v1:h+1},e=t;i.addSegment(t,e,s)}const r={v0:t-1,v1:0},o={v0:t-1,v1:t};return i.addSegment(r,o,s),i}static rect(){const t=1,e=1,i=new j,s=m(.5*-t,.5*-e),r=m(.5*t,.5*-e),o=m(.5*t,.5*e),h=m(.5*-t,.5*e),n=m(0,-1),a=m(1,0),l=m(0,1),u=m(-1,0);i.addUV(0),i.addUV(1),i.addPole(m(0,.5*e),l),i.addPole(m(0,.5*e)),i.addPole(m(0,.5*-e)),i.addPole(m(0,.5*-e),n);const p={v0:0,v1:1};return i.addVertex(s,n),i.addVertex(r,n),i.addSegment({v0:0,v1:1},p,{v0:3,v1:3}),i.addVertex(r,a),i.addVertex(o,a),i.addSegment({v0:2,v1:3},p,{v0:2,v1:1}),i.addVertex(o,l),i.addVertex(h,l),i.addSegment({v0:4,v1:5},p,{v0:0,v1:0}),i.addVertex(h,u),i.addVertex(s,u),i.addSegment({v0:6,v1:7},p,{v0:1,v1:2}),i}}class z{constructor(t){this.vertices=[],this.offset=U(),this.xform=h(),this.vertices=t;const e=Math.floor((t.length-1)/2);V(this.offset,this.vertices[e].pos);for(const i of this.vertices)D(i.pos,i.pos,this.offset);r(this.xform,this.xform,this.offset),this.updatePathVertexInformation()}updatePathVertexInformation(){const t=this.vertices.length;let e=this.vertices[0];e.index=0,N(e.vLeft,0,0,0),e.vLeftLength=0,D(e.vRight,this.vertices[1].pos,e.pos),e.vRightLength=P(e.vRight),b(e.vRight,e.vRight);let i=e;for(let s=1;s<t;++s)e=this.vertices[s],e.index=s,V(e.vLeft,i.vRight),e.vLeftLength=i.vRightLength,s<t-1?(D(e.vRight,this.vertices[s+1].pos,e.pos),e.vRightLength=P(e.vRight),b(e.vRight,e.vRight)):(V(e.vRight,e.vLeft),e.vRightLength=e.vLeftLength),i=e}}function J(t,e){let i=null;const s=t.vertices.length,r=.99619469809,o=U(),h=U(),n=U(),a=U(),l=U(),u=U(),p=_();let f=t.vertices[0];V(h,e),N(o,0,1,0),F.makeOrthoBasisDirUpFallback(f.vRight,h,o,o,n,h,r),V(f.frame.up,h),V(f.frame.right,n),i=f;for(let c=1;c<s;++c){f=t.vertices[c],A(l,f.vLeft,f.vRight);let e=P(l);e>0?(e=1/Math.sqrt(e),l[0]=l[0]*e,l[1]=l[1]*e,l[2]=l[2]*e):(l[0]=f.vRight[0],l[1]=f.vRight[1],l[2]=f.vRight[2]),A(u,i.pos,i.frame.up),y(f.pos,l,p);T(p,L(u,f.vLeft),a)?(D(a,a,f.pos),b(h,a),I(n,l,h),b(n,n)):F.makeOrthoBasisDirUpFallback(l,i.frame.up,i.frame.right,o,n,h,r),V(f.frame.up,h),V(f.frame.right,n),i=f}}class H{}class X{numProfilesPerJoin(){return 1}extrude(t,e,i){for(let s=0;s<e.vertices.length;++s)i(t.index,t.frame,e.vertices[s],e.vertexNormals[s],!1)}}class q{constructor(t=.8*Math.PI,e=1){this.cutoffAngle=t,this.numBendSubdivisions=e}numProfilesPerJoin(){return this.numBendSubdivisions+1}extrude(t,e,i){const s=ft;if(Math.abs(t.rotationAngle)>=this.cutoffAngle)for(let r=0;r<this.numBendSubdivisions+1;++r){o(ct,.5*-t.rotationAngle+r*t.rotationAngle/this.numBendSubdivisions,t.rotationFrame.up),E(s,t.frame,ct);for(let r=0;r<e.vertices.length;++r){a(e.vertices[r],t.rotationRight)*t.rotationAngle>=0?i(t.index,s,e.vertices[r],e.vertexNormals[r],!1):(l(rt,e.vertices[r],t.miterStretch),i(t.index,t.frame,rt,e.vertexNormals[r],!0))}}else for(let r=0;r<this.numBendSubdivisions+1;++r)for(let s=0;s<e.vertices.length;++s){const r=a(e.vertices[s],t.rotationRight)*t.rotationAngle>=0;l(rt,e.vertices[s],t.miterStretch),i(t.index,t.frame,rt,e.vertexNormals[s],!r)}}}const K={generateUV:!1};class Q{rebuildConnectingProfileGeometry(t,e,i){for(let s=0;s<e.vertices.length;++s)i(t.index,t.frame,e.vertices[s],e.vertexNormals[s],0,0)}}class W extends Q{constructor(){super()}getNumVertices(){return 0}getNumIndices(){return 0}rebuildCapGeometry(){}buildTopology(){}}class Y extends Q{constructor(t,e=0,i=!1){super(),this.profile=t,this.profilePlaneOffset=e,this.flip=i}getNumVertices(){return this.profile.vertices.length}getNumIndices(){return 3*this.profile.numSegments}rebuildConnectingProfileGeometry(t,e,i){for(let s=0;s<e.vertices.length;++s)i(t.index,t.frame,e.vertices[s],e.vertexNormals[s],this.profilePlaneOffset,0)}rebuildCapGeometry(t,e){const i=ot;n(i,0,0);const s=this.flip?1:-1;for(let r=0;r<this.profile.vertices.length;++r)e(t.index,t.frame,this.profile.vertices[r],i,this.profilePlaneOffset,s)}buildTopology(t,e){const i=this.vertexBufferStart+this.profile.vertexIndices[0];for(let s=1;s<this.profile.numSegments;++s){const t=this.profile.vertexIndices[2*s+0],r=this.profile.vertexIndices[2*s+1],o=this.vertexBufferStart+t,h=this.vertexBufferStart+r;this.flip?e(h,o,i):e(i,o,h)}}}class Z extends Q{constructor(t){super(),this.flip=!1,this.sign=0,this.breakNormals=!1,this.numSegments=3,this.profile=t.profile,this.flip=t.flip,this.sign=this.flip?1:-1,this.breakNormals=t.breakNormals,this.numSegments=t.subdivisions}getNumVertices(){let t=0;return t=this.profile.vertices.length*(this.numSegments-1),this.breakNormals&&(t+=this.profile.vertices.length),t+=this.profile.poles.length,t}getNumIndices(){let t=0;t+=2*this.profile.numSegments*(this.numSegments-1);for(let e=0;e<this.profile.numSegments;++e){const i=this.profile.vertexIndices[2*e+0],s=this.profile.vertexIndices[2*e+1];this.profile.poleIndices[i]===this.profile.poleIndices[s]?t+=1:t+=2}return 3*t}rebuildCapGeometry(t,e){const i=t.frame,s=.5*this.sign,r=rt,o=ot;n(o,0,0);for(let h=0;h<this.profile.poles.length;++h){const r=this.profile.poles[h];r.normal?e(t.index,i,r.position,r.normal,s,0):e(t.index,i,r.position,o,s,this.sign)}if(this.breakNormals)for(let h=0;h<this.profile.vertices.length;++h)e(t.index,i,this.profile.vertices[h],this.profile.vertexNormals[h],0,0);for(let h=0;h<this.numSegments-1;++h){const n=(1-(h+1)/this.numSegments)*Math.PI*.5,a=Math.sin(n),l=Math.cos(n);for(let h=0;h<this.profile.vertices.length;++h){const n=this.profile.poles[this.profile.poleIndices[h]];u(r,this.profile.vertices[h],n.position),p(r,r,a),n.normal?(f(r,r,n.position),e(t.index,i,r,n.normal,s*l,0)):(c(o,r),p(o,o,a),f(r,r,n.position),e(t.index,i,r,o,s*l,this.sign*l))}}}buildTopology(t,e){const i=this.breakNormals?this.vertexBufferStart+this.profile.poles.length:this.firstProfileVertexIndex,s=this.breakNormals?this.vertexBufferStart+this.profile.poles.length+this.profile.vertices.length:this.vertexBufferStart+this.profile.poles.length;for(let r=0;r<this.profile.numSegments;++r){const t=this.profile.vertexIndices[2*r+0],o=this.profile.vertexIndices[2*r+1],h=this.vertexBufferStart+this.profile.poleIndices[t],n=this.vertexBufferStart+this.profile.poleIndices[o];let a=i+t,l=i+o;for(let i=0;i<this.numSegments-1;++i){const r=s+i*this.profile.vertices.length+t,h=s+i*this.profile.vertices.length+o;this.flip?(e(r,l,a),e(l,r,h)):(e(a,l,r),e(h,r,l)),a=r,l=h}this.flip?(e(h,l,a),h!==n&&e(h,n,l)):(e(a,l,h),h!==n&&e(l,n,h))}}}class ${constructor(t,e,i,s,r,o=K){this.options=o,this._extrusionVertexCount=0,this._triangleCount=0,this.numExtrusionProfiles=0,this.numVerticesTotal=0,this.numNormalsTotal=0,this.numUVTotal=0,this.profile=e,this.path=t,this.extruder=i,this.startCap=s,this.endCap=r;const h=this.path.vertices.length-2;this.numExtrusionProfiles=i.numProfilesPerJoin()*h+2,this.numVerticesTotal=e.vertices.length*this.numExtrusionProfiles,this.numNormalsTotal=this.numVerticesTotal,this.startCap.vertexBufferStart=this.numVerticesTotal;const n=this.startCap.getNumVertices();this.numVerticesTotal+=n,this.numNormalsTotal+=n,this.endCap.vertexBufferStart=this.numVerticesTotal;const a=this.endCap.getNumVertices();this.numVerticesTotal+=a,this.numNormalsTotal+=a,this.pathVertexData=new Float32Array(1*this.numVerticesTotal),this.profileRightAxisData=new Float32Array(4*this.numVerticesTotal),this.profileUpAxisData=new Float32Array(4*this.numVerticesTotal),this.profileVertexAndNormalData=new Float32Array(4*this.numVerticesTotal),this.profile.hasUV()&&this.options.generateUV&&(this.numUVTotal=this.profile.uvs.length,this.uvData=new Float32Array(2*this.numUVTotal)),this.originData=new Float32Array(3*this.path.vertices.length),this._rebuildGeometry(),this.buildTopology()}emitVertex(t,e,i,s,r){if(this.profileRightAxisData[4*this._extrusionVertexCount+0]=e.right[0],this.profileRightAxisData[4*this._extrusionVertexCount+1]=e.right[1],this.profileRightAxisData[4*this._extrusionVertexCount+2]=e.right[2],this.profileUpAxisData[4*this._extrusionVertexCount+0]=e.up[0],this.profileUpAxisData[4*this._extrusionVertexCount+1]=e.up[1],this.profileUpAxisData[4*this._extrusionVertexCount+2]=e.up[2],this.profileVertexAndNormalData[4*this._extrusionVertexCount+0]=i[0],this.profileVertexAndNormalData[4*this._extrusionVertexCount+1]=i[1],this.profileVertexAndNormalData[4*this._extrusionVertexCount+2]=s[0],this.profileVertexAndNormalData[4*this._extrusionVertexCount+3]=s[1],this.pathVertexData[this._extrusionVertexCount]=t,r){const e=this.path.vertices[t];this.profileRightAxisData[4*this._extrusionVertexCount+3]=e.rotationRight[0]*e.maxStretchDistance,this.profileUpAxisData[4*this._extrusionVertexCount+3]=e.rotationRight[1]*e.maxStretchDistance}else this.profileRightAxisData[4*this._extrusionVertexCount+3]=0,this.profileUpAxisData[4*this._extrusionVertexCount+3]=0;++this._extrusionVertexCount}emitCapVertex(t,e,i,s,r,o){this.profileRightAxisData[4*this._extrusionVertexCount+0]=e.right[0],this.profileRightAxisData[4*this._extrusionVertexCount+1]=e.right[1],this.profileRightAxisData[4*this._extrusionVertexCount+2]=e.right[2],this.profileUpAxisData[4*this._extrusionVertexCount+0]=e.up[0],this.profileUpAxisData[4*this._extrusionVertexCount+1]=e.up[1],this.profileUpAxisData[4*this._extrusionVertexCount+2]=e.up[2],this.profileVertexAndNormalData[4*this._extrusionVertexCount+0]=i[0],this.profileVertexAndNormalData[4*this._extrusionVertexCount+1]=i[1],this.profileVertexAndNormalData[4*this._extrusionVertexCount+2]=s[0],this.profileVertexAndNormalData[4*this._extrusionVertexCount+3]=s[1],this.pathVertexData[this._extrusionVertexCount]=t,this.profileRightAxisData[4*this._extrusionVertexCount+3]=r,this.profileUpAxisData[4*this._extrusionVertexCount+3]=o,++this._extrusionVertexCount}emitTriangle(t,e,i){this.vertexIndices[3*this._triangleCount+0]=t,this.vertexIndices[3*this._triangleCount+1]=e,this.vertexIndices[3*this._triangleCount+2]=i,this.pathVertexIndices[3*this._triangleCount+0]=this.pathVertexData[t],this.pathVertexIndices[3*this._triangleCount+1]=this.pathVertexData[e],this.pathVertexIndices[3*this._triangleCount+2]=this.pathVertexData[i],this.normalIndices[3*this._triangleCount+0]=t,this.normalIndices[3*this._triangleCount+1]=e,this.normalIndices[3*this._triangleCount+2]=i,++this._triangleCount}_rebuildGeometry(){const t=(t,e,i,s,r)=>this.emitVertex(t,e,i,s,r),e=(t,e,i,s,r,o)=>this.emitCapVertex(t,e,i,s,r,o);this._extrusionVertexCount=0;for(const i of this.path.vertices)this.originData[3*i.index+0]=i.pos[0],this.originData[3*i.index+1]=i.pos[1],this.originData[3*i.index+2]=i.pos[2];this.startCap.rebuildConnectingProfileGeometry(this.path.vertices[0],this.profile,e);for(let i=1;i<this.path.vertices.length-1;++i)this.extruder.extrude(this.path.vertices[i],this.profile,t);if(this.endCap.rebuildConnectingProfileGeometry(this.path.vertices[this.path.vertices.length-1],this.profile,e),this.startCap.rebuildCapGeometry(this.path.vertices[0],e),this.endCap.rebuildCapGeometry(this.path.vertices[this.path.vertices.length-1],e),this.profile.hasUV()&&this.options.generateUV)for(let i=0;i<this.profile.uvs.length;++i)this.uvData[2*i+0]=this.profile.uvs[i],this.uvData[2*i+1]=0}buildTopology(){const t=(t,e,i)=>this.emitTriangle(t,e,i);this._triangleCount=0;const e=this.profile.vertices.length,i=this.profile.numSegments,s=this.numExtrusionProfiles-1;let r=3*(2*(i*s));this.startCap.indexBufferStart=r,this.startCap.firstProfileVertexIndex=0,r+=this.startCap.getNumIndices(),this.endCap.indexBufferStart=r,this.endCap.firstProfileVertexIndex=e*(this.numExtrusionProfiles-1),r+=this.endCap.getNumIndices(),this.vertexIndices=new Uint32Array(r),this.normalIndices=new Uint32Array(r),this.pathVertexIndices=new Uint32Array(r),this.profile.hasUV()&&this.options.generateUV&&(this.uvIndices=new Uint32Array(r));for(let o=0;o<i;++o){const i=this.profile.vertexIndices[2*o],r=this.profile.vertexIndices[2*o+1];for(let o=0;o<s;++o){const s=o*e+i,h=(o+1)*e+r,n=o*e+r;t(s,(o+1)*e+i,h),t(s,h,n)}}this.startCap.buildTopology(this.path.vertices[0],t),this.endCap.buildTopology(this.path.vertices[this.path.vertices.length-1],t)}onPathChanged(){this._rebuildGeometry()}}class tt{constructor(t){this.builder=t}get xform(){return this.builder.path.xform}onPathChanged(){this.builder.onPathChanged()}}class et extends tt{constructor(t){super(t),this.vertexAttributePosition=null,this.vertexAttributeNormal=null,this.vertexAttributeColor=null,this.vertexAttributePosition=new Float32Array(3*this.builder.numVerticesTotal),this.vertexAttributeNormal=new Float32Array(3*this.builder.numNormalsTotal),this.vertexAttributeColor=new Uint8Array(4),this.vertexAttributeColor[0]=255,this.vertexAttributeColor[1]=255,this.vertexAttributeColor[2]=255,this.vertexAttributeColor[3]=255}bakeVertexColors(t){this.vertexAttributeColor[0]=255*t[0],this.vertexAttributeColor[1]=255*t[1],this.vertexAttributeColor[2]=255*t[2],this.vertexAttributeColor[3]=255*(t.length>3?t[3]:1)}bake(t){this.size=t;for(let e=0;e<this.builder.numVerticesTotal;++e){let i=this.builder.pathVertexData[e];const s=0===i||i===this.builder.path.vertices.length-1;i*=3;const r=st;N(r,this.builder.originData[i++],this.builder.originData[i++],this.builder.originData[i]);const o=4*e,h=nt,l=rt,u=at,d=lt,v=ut;let m=0,g=0;if(N(d,this.builder.profileRightAxisData[o],this.builder.profileRightAxisData[o+1],this.builder.profileRightAxisData[o+2]),N(v,this.builder.profileUpAxisData[o],this.builder.profileUpAxisData[o+1],this.builder.profileUpAxisData[o+2]),n(l,this.builder.profileVertexAndNormalData[o]*t[0],this.builder.profileVertexAndNormalData[o+1]*t[1]),s)I(u,v,d),m=this.builder.profileRightAxisData[o+3]*t[0],g=this.builder.profileUpAxisData[o+3];else{const t=ot,e=ht;n(t,this.builder.profileRightAxisData[o+3],this.builder.profileUpAxisData[o+3]);const i=x(t);c(t,t);const s=a(l,t);if(Math.abs(s)>i){n(e,-t[1],t[0]);const r=a(l,e);p(t,t,i*Math.sign(s)),p(e,e,r),f(l,t,e)}N(u,0,0,0)}N(h,d[0]*l[0]+v[0]*l[1],d[1]*l[0]+v[1]*l[1],d[2]*l[0]+v[2]*l[1]),this.vertexAttributePosition[3*e+0]=r[0]+h[0]+u[0]*m,this.vertexAttributePosition[3*e+1]=r[1]+h[1]+u[1]*m,this.vertexAttributePosition[3*e+2]=r[2]+h[2]+u[2]*m;const V=rt;n(V,this.builder.profileVertexAndNormalData[o+2],this.builder.profileVertexAndNormalData[o+3]),this.vertexAttributeNormal[3*e+0]=d[0]*V[0]+v[0]*V[1]+u[0]*g,this.vertexAttributeNormal[3*e+1]=d[1]*V[0]+v[1]*V[1]+u[1]*g,this.vertexAttributeNormal[3*e+2]=d[2]*V[0]+v[2]*V[1]+u[2]*g}}createGeometryData(){const t=[[O.POSITION,this.builder.vertexIndices],[O.NORMAL,this.builder.normalIndices]],e=[[O.POSITION,{size:3,data:this.vertexAttributePosition,exclusive:!0}],[O.NORMAL,{size:3,data:this.vertexAttributeNormal,exclusive:!0}]];if(this.vertexAttributeColor){const i=this.builder.vertexIndices.length;t.push([O.COLOR,new Uint32Array(i)]),e.push([O.COLOR,{size:4,data:this.vertexAttributeColor}])}return{vertexAttributes:e,indices:t}}onPathChanged(){super.onPathChanged(),this.bake(this.size)}intersect(t,e,i){const s=this.builder.vertexIndices,r={size:3,data:this.vertexAttributePosition},o=s.length/3;M(t,e,0,o,s,r,void 0,void 0,i)}}class it extends tt{constructor(t,e,i,s){super(t),this.sizeAttributeValue=e,this.colorAttributeValue=i,this.opacityAttributeValue=s,this.vvData=null,this.baked=new et(t),this.vvData=new Float32Array(4*this.builder.path.vertices.length);for(let r=0;r<this.builder.path.vertices.length;++r){this.vvData[4*r+0]=e,this.vvData[4*r+1]=i,this.vvData[4*r+2]=s;const t=0===r||r===this.builder.path.vertices.length-1;this.vvData[4*r+3]=t?1:0}}createGeometryData(){return{vertexAttributes:[[O.POSITION,{size:3,data:this.builder.originData,exclusive:!0}],[O.PROFILERIGHT,{size:4,data:this.builder.profileRightAxisData,exclusive:!0}],[O.PROFILEUP,{size:4,data:this.builder.profileUpAxisData,exclusive:!0}],[O.PROFILEVERTEXANDNORMAL,{size:4,data:this.builder.profileVertexAndNormalData,exclusive:!0}],[O.FEATUREVALUE,{size:4,data:this.vvData,exclusive:!0}]],indices:[[O.POSITION,this.builder.pathVertexIndices],[O.PROFILERIGHT,this.builder.vertexIndices],[O.PROFILEUP,this.builder.vertexIndices],[O.PROFILEVERTEXANDNORMAL,this.builder.vertexIndices],[O.FEATUREVALUE,this.builder.pathVertexIndices]]}}}const st=U(),rt=d(),ot=d(),ht=d(),nt=U(),at=U(),lt=U(),ut=U(),pt=U(),ft=k(),ct=h();export{$ as Builder,Q as CapBuilder,H as Extruder,it as FastUpdatePathGeometry,q as MiterExtruder,W as NoCapBuilder,z as Path,tt as PathGeometryData,G as PathVertex,j as Profile,Z as RoundCapBuilder,X as SimpleExtruder,et as StaticPathGeometry,Y as TriangulationCapBuilder,J as computeMinimumRotationTangentFrame,k as makeFrame,B as profileSpaceToVertexSpace,w as vertexSpaceToProfileSpace};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}