{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { j as e } from \"./mat4.js\";\nimport { c as r } from \"./mat4f64.js\";\nimport { b as o, n as i, s as a } from \"./vec3.js\";\nimport { c as n } from \"./vec3f64.js\";\nimport { OverlayIndex as l } from \"../views/3d/terrain/interfaces.js\";\nimport { ShaderOutput as t } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";\nimport { SliceDraw as s } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as d } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { VertexTangent as v } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexTangent.glsl.js\";\nimport { OutputDepth as c } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";\nimport { OutputHighlight as g } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { EvaluateAmbientOcclusion as m } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as p } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { NormalUtils as w } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";\nimport { PBRMode as u } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadShadowMapDraw as h } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { OverlayTerrainPassParameters as f, OverlayMode as b, OverlayTerrain as y } from \"../views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js\";\nimport { TerrainTexture as C } from \"../views/3d/webgl-engine/core/shaderLibrary/terrain/TerrainTexture.glsl.js\";\nimport { HeaderComment as x } from \"../views/3d/webgl-engine/core/shaderLibrary/util/HeaderComment.glsl.js\";\nimport { Float2PassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float3DrawUniform as j } from \"../views/3d/webgl-engine/core/shaderModules/Float3DrawUniform.js\";\nimport { Float3PassUniform as M } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { FloatPassUniform as F } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as _ } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4DrawUniform as L } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4DrawUniform.js\";\nimport { Matrix4PassUniform as P } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as z } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as O } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { VertexAttribute as T } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nimport { ambientBoost as D } from \"../views/3d/webgl-engine/lighting/SceneLighting.js\";\n\nclass N extends f {}\n\nfunction $(r) {\n  const n = new z();\n  n.include(x, {\n    name: \"Terrain Shader\",\n    output: r.output\n  }), n.attributes.add(T.POSITION, \"vec3\"), n.attributes.add(T.UV0, \"vec2\"), n.attributes.add(T.NORMAL, \"vec3\");\n  const {\n    vertex: f,\n    fragment: N\n  } = n;\n\n  if (f.uniforms.add([new P(\"proj\", (e, r) => r.camera.projectionMatrix), new L(\"view\", (r, o) => e(U, o.camera.viewMatrix, r.origin)), new j(\"origin\", e => e.origin)]), N.uniforms.add(new j(\"origin\", e => e.origin)), r.output === t.Color) {\n    n.include(d), n.include(w, r), n.include(C, r), n.include(p, r);\n    const t = r.overlayMode !== b.Disabled,\n          c = r.overlayMode === b.EnabledWithWater;\n    t && n.include(y, { ...r,\n      pbrMode: u.Water\n    }), c && n.include(v, r), n.varyings.add(\"vnormal\", \"vec3\"), n.varyings.add(\"vpos\", \"vec3\"), (r.atmosphere || r.screenSizePerspective) && f.uniforms.add(new P(\"viewNormal\", (e, r) => r.camera.viewInverseTransposeMatrix));\n    const g = r.receiveShadows && !r.renderOccluded;\n    g && n.varyings.add(\"linearDepth\", \"float\"), r.tileBorders && n.varyings.add(\"vuv\", \"vec2\"), r.atmosphere && (f.uniforms.add(new M(\"lightingMainDirection\", (e, r) => r.lighting.lightingMainDirection)), n.varyings.add(\"wnormal\", \"vec3\"), n.varyings.add(\"wlight\", \"vec3\")), r.screenSizePerspective && (n.varyings.add(\"screenSizeDistanceToCamera\", \"float\"), n.varyings.add(\"screenSizeCosAngle\", \"float\")), f.code.add(_`\n      void main(void) {\n        vpos = position;\n        vnormal = ${r.shading ? _`normal` : _`getLocalUp(vpos, origin)`};\n        vec2 uv = uv0;\n        ${r.atmosphere ? _`\n        wnormal = normalize((viewNormal * vec4(normalize(vpos + origin), 1.0)).xyz);\n        wlight = normalize((view  * vec4(lightingMainDirection, 1.0)).xyz);` : \"\"}\n        ${r.tileBorders ? _`vuv = uv;` : \"\"}\n        ${r.screenSizePerspective ? _`\n        vec3 viewPos = (view * vec4(vpos, 1.0)).xyz;\n        screenSizeDistanceToCamera = length(viewPos);\n        vec3 viewSpaceNormal = (viewNormal * vec4(normalize(vpos + origin), 1.0)).xyz;\n        screenSizeCosAngle = abs(viewSpaceNormal.z);` : \"\"}\n        gl_Position = transformPosition(proj, view, vpos);\n        ${g ? _`linearDepth = gl_Position.w;` : \"\"}\n        forwardTextureCoordinates(uv);\n        ${t ? _`setOverlayVTC(uv);` : \"\"}\n        ${c ? _`forwardVertexTangent(vnormal);` : _``}\n      }\n    `), n.extensions.add(\"GL_OES_standard_derivatives\"), n.extensions.add(\"GL_EXT_shader_texture_lod\"), n.include(s, r), n.include(p, r), n.include(m, r), n.include(h, r), N.uniforms.add([new j(\"cameraPosition\", (e, r) => o(W, r.camera.eye, e.origin)), new M(\"viewDirection\", (e, r) => i(W, a(W, r.camera.viewMatrix[12], r.camera.viewMatrix[13], r.camera.viewMatrix[14]))), new F(\"lightingGlobalFactor\", (e, r) => r.lighting.globalFactor), new M(\"lightingMainDirection\", (e, r) => r.lighting.lightingMainDirection), new M(\"lightingMainIntensity\", (e, r) => r.lighting.mainLight.intensity)]), N.constants.add(\"ambientBoostFactor\", \"float\", D), c && N.uniforms.add([new O(\"ovWaterTex\", (e, r) => 0 === r.overlays.length ? null : r.overlays[l.INNER].getNormalTexture(e.overlaySource)), new L(\"view\", (r, o) => e(U, o.camera.viewMatrix, r.origin))]), N.code.add(_`const float sliceOpacity = 0.2;\nfloat lum(vec3 c) {\nreturn (min(min(c.r, c.g), c.b) + max(max(c.r, c.g), c.b)) * 0.5;\n}`), N.code.add(_`\n      void main() {\n        ${g ? _`float shadow = readShadowMap(vpos, linearDepth);` : _`float shadow = 0.0;`}\n        vec3 normal = normalize(vnormal);\n        float vndl = dot(normal, lightingMainDirection);\n        float ssao = evaluateAmbientOcclusionInverse();\n        vec4 tileColor = getTileColor();\n        ${t ? _`\n            vec4 overlayColorOpaque = getOverlayColor(ovColorTex, vtcOverlay);\n            vec4 overlayColor = overlayOpacity * overlayColorOpaque;\n            vec4 groundColor = tileColor;\n            tileColor = tileColor * (1.0 - overlayColor.a) + overlayColor;` : \"\"}\n        if (rejectBySlice(vpos)) {\n          tileColor *= sliceOpacity;\n        }\n        ${r.atmosphere ? _`\n            float ndotl = clamp(vndl, 0.0, 1.0);\n            vec3 atm = vec3(clamp(1.0 - dot(-viewDirection, wnormal), 0.0, 1.0));\n            atm *= clamp(1.0 - lum(tileColor.rgb) * 1.5, 0.0, 1.0); //avoid atmosphere on bright base maps\n            atm *= clamp(ndotl * 2.0, 0.0, 1.0); // avoid atmosphere on dark side of the globe\n            atm *= tileColor.a; // premultiply with tile alpha` : \"\"}\n\n        vec3 albedo = ${r.atmosphere ? _`atm + tileColor.rgb;` : _`tileColor.rgb;`}\n\n        // heuristic shading function used in the old terrain, now used to add ambient lighting\n        float additionalAmbientScale = smoothstep(0.0, 1.0, clamp(vndl${r.shading ? \"\" : _`*2.5`}, 0.0, 1.0));\n\n        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor ${r.shading ? \"\" : _`* lightingGlobalFactor`};\n\n        gl_FragColor = vec4(evaluateSceneLighting(normal, albedo, shadow, 1.0 - ssao, additionalLight), tileColor.a);\n        ${c ? _`\n            vec4 overlayWaterMask = getOverlayColor(ovWaterTex, vtcOverlay);\n            float waterNormalLength = length(overlayWaterMask);\n            if (waterNormalLength > 0.95) {\n              mat3 tbnMatrix = mat3(tbnTangent, tbnBiTangent, vnormal);\n              vec4 waterOverlayColor = vec4(overlayColor.w > 0.0 ? overlayColorOpaque.xyz/overlayColor.w : vec3(1.0), overlayColor.w);\n              vec4 viewPosition = view*vec4(vpos, 1.0);\n              vec4 waterColorLinear = getOverlayWaterColor(overlayWaterMask, waterOverlayColor, -normalize(vpos - cameraPosition), shadow, vnormal, tbnMatrix, viewPosition.xyz,  vpos + origin);\n              vec4 waterColorNonLinear = delinearizeGamma(vec4(waterColorLinear.xyz, 1.0));\n              // un-gamma the ground color to mix in linear space\n              gl_FragColor = mix(groundColor, waterColorNonLinear, waterColorLinear.w);\n            }` : \"\"}\n        ${r.screenSizePerspective ? _`\n          float perspectiveScale = screenSizePerspectiveScaleFloat(1.0, screenSizeCosAngle, screenSizeDistanceToCamera, vec4(0.0, 0.0, 0.0, 0.0));\n          if (perspectiveScale <= 0.25) {\n            gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 0.0, 1.0), perspectiveScale * 4.0);\n          }\n          else if (perspectiveScale <= 0.5) {\n            gl_FragColor = mix(gl_FragColor, vec4(0.0, 0.0, 1.0, 1.0), (perspectiveScale - 0.25) * 4.0);\n          }\n          else if (perspectiveScale >= 0.99) {\n            gl_FragColor = mix(gl_FragColor, vec4(0.0, 1.0, 0.0, 1.0), 0.2);\n          }\n          else {\n            gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), (perspectiveScale - 0.5) * 2.0);\n          }` : \"\"}\n        ${r.tileBorders ? _`\n            vec2 dVuv = fwidth(vuv);\n            vec2 edgeFactors = smoothstep(vec2(0.0), 1.5 * dVuv, min(vuv, 1.0 - vuv));\n            float edgeFactor = 1.0 - min(edgeFactors.x, edgeFactors.y);\n            gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 0.0, 1.0), edgeFactor);` : \"\"}\n        gl_FragColor = highlightSlice(gl_FragColor, vpos);\n      }\n    `);\n  }\n\n  return r.output !== t.Depth && r.output !== t.Shadow || (n.include(d, {\n    hasModelTransformation: !1,\n    linearDepth: !0\n  }), n.include(c, {\n    output: r.output\n  }), n.include(w, r), n.varyings.add(\"linearDepth\", \"float\"), f.uniforms.add(new S(\"nearFar\", (e, r) => r.camera.nearFar)), f.code.add(_`void main(void) {\ngl_Position = transformPositionWithDepth(proj, view, position, nearFar, linearDepth);\n}`), N.code.add(_`void main() {\noutputDepth(linearDepth);\n}`)), r.output === t.Normal && (n.include(d), n.include(w, r), n.varyings.add(\"vnormal\", \"vec3\"), n.varyings.add(\"vpos\", \"vec3\"), f.uniforms.add(new P(\"viewNormal\", (e, r) => r.camera.viewInverseTransposeMatrix)), f.code.add(_`\n        void main(void) {\n          vec3 normal = ${r.shading ? _`normal` : _`getLocalUp(position, origin)`};\n          vpos = position;\n\n          gl_Position = transformPosition(proj, view, vpos);\n          vnormal = normalize((viewNormal * vec4(normal, 1.0)).xyz);\n        }\n    `), N.code.add(_`void main() {\nvec3 normal = normalize(vnormal);\nif (gl_FrontFacing == false) {\nnormal = -normal;\n}\ngl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 0.0);\n}`)), r.output === t.Highlight && (n.include(d), n.include(w, r), n.include(y, r), f.code.add(_`void main() {\nsetOverlayVTC(uv0);\ngl_Position = transformPosition(proj, view, position);\n}`), n.include(g), N.code.add(_`void main() {\nvec4 overlayColor = getCombinedOverlayColor();\nif (overlayColor.a == 0.0) {\ngl_FragColor = vec4(0.0);\nreturn;\n}\noutputHighlight();\n}`)), n;\n}\n\nconst U = r(),\n      W = n(),\n      A = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  TerrainPassParameters: N,\n  build: $\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { N as T, A as a, $ as b };","map":{"version":3,"names":["j","e","c","r","b","o","n","i","s","a","OverlayIndex","l","ShaderOutput","t","SliceDraw","Transform","d","VertexTangent","v","OutputDepth","OutputHighlight","g","EvaluateAmbientOcclusion","m","EvaluateSceneLighting","p","NormalUtils","w","PBRMode","u","ReadShadowMapDraw","h","OverlayTerrainPassParameters","f","OverlayMode","OverlayTerrain","y","TerrainTexture","C","HeaderComment","x","Float2PassUniform","S","Float3DrawUniform","Float3PassUniform","M","FloatPassUniform","F","glsl","_","Matrix4DrawUniform","L","Matrix4PassUniform","P","ShaderBuilder","z","Texture2DPassUniform","O","VertexAttribute","T","ambientBoost","D","N","$","include","name","output","attributes","add","POSITION","UV0","NORMAL","vertex","fragment","uniforms","camera","projectionMatrix","U","viewMatrix","origin","Color","overlayMode","Disabled","EnabledWithWater","pbrMode","Water","varyings","atmosphere","screenSizePerspective","viewInverseTransposeMatrix","receiveShadows","renderOccluded","tileBorders","lighting","lightingMainDirection","code","shading","extensions","W","eye","globalFactor","mainLight","intensity","constants","overlays","length","INNER","getNormalTexture","overlaySource","Depth","Shadow","hasModelTransformation","linearDepth","nearFar","Normal","Highlight","A","Object","freeze","defineProperty","__proto__","TerrainPassParameters","build","Symbol","toStringTag","value"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/chunks/Terrain.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{j as e}from\"./mat4.js\";import{c as r}from\"./mat4f64.js\";import{b as o,n as i,s as a}from\"./vec3.js\";import{c as n}from\"./vec3f64.js\";import{OverlayIndex as l}from\"../views/3d/terrain/interfaces.js\";import{ShaderOutput as t}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";import{SliceDraw as s}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as d}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{VertexTangent as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexTangent.glsl.js\";import{OutputDepth as c}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";import{OutputHighlight as g}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{EvaluateAmbientOcclusion as m}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{NormalUtils as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";import{PBRMode as u}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapDraw as h}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{OverlayTerrainPassParameters as f,OverlayMode as b,OverlayTerrain as y}from\"../views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js\";import{TerrainTexture as C}from\"../views/3d/webgl-engine/core/shaderLibrary/terrain/TerrainTexture.glsl.js\";import{HeaderComment as x}from\"../views/3d/webgl-engine/core/shaderLibrary/util/HeaderComment.glsl.js\";import{Float2PassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3DrawUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as M}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{FloatPassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as _}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4DrawUniform as L}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4DrawUniform.js\";import{Matrix4PassUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as z}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as O}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{VertexAttribute as T}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{ambientBoost as D}from\"../views/3d/webgl-engine/lighting/SceneLighting.js\";class N extends f{}function $(r){const n=new z;n.include(x,{name:\"Terrain Shader\",output:r.output}),n.attributes.add(T.POSITION,\"vec3\"),n.attributes.add(T.UV0,\"vec2\"),n.attributes.add(T.NORMAL,\"vec3\");const{vertex:f,fragment:N}=n;if(f.uniforms.add([new P(\"proj\",((e,r)=>r.camera.projectionMatrix)),new L(\"view\",((r,o)=>e(U,o.camera.viewMatrix,r.origin))),new j(\"origin\",(e=>e.origin))]),N.uniforms.add(new j(\"origin\",(e=>e.origin))),r.output===t.Color){n.include(d),n.include(w,r),n.include(C,r),n.include(p,r);const t=r.overlayMode!==b.Disabled,c=r.overlayMode===b.EnabledWithWater;t&&n.include(y,{...r,pbrMode:u.Water}),c&&n.include(v,r),n.varyings.add(\"vnormal\",\"vec3\"),n.varyings.add(\"vpos\",\"vec3\"),(r.atmosphere||r.screenSizePerspective)&&f.uniforms.add(new P(\"viewNormal\",((e,r)=>r.camera.viewInverseTransposeMatrix)));const g=r.receiveShadows&&!r.renderOccluded;g&&n.varyings.add(\"linearDepth\",\"float\"),r.tileBorders&&n.varyings.add(\"vuv\",\"vec2\"),r.atmosphere&&(f.uniforms.add(new M(\"lightingMainDirection\",((e,r)=>r.lighting.lightingMainDirection))),n.varyings.add(\"wnormal\",\"vec3\"),n.varyings.add(\"wlight\",\"vec3\")),r.screenSizePerspective&&(n.varyings.add(\"screenSizeDistanceToCamera\",\"float\"),n.varyings.add(\"screenSizeCosAngle\",\"float\")),f.code.add(_`\n      void main(void) {\n        vpos = position;\n        vnormal = ${r.shading?_`normal`:_`getLocalUp(vpos, origin)`};\n        vec2 uv = uv0;\n        ${r.atmosphere?_`\n        wnormal = normalize((viewNormal * vec4(normalize(vpos + origin), 1.0)).xyz);\n        wlight = normalize((view  * vec4(lightingMainDirection, 1.0)).xyz);`:\"\"}\n        ${r.tileBorders?_`vuv = uv;`:\"\"}\n        ${r.screenSizePerspective?_`\n        vec3 viewPos = (view * vec4(vpos, 1.0)).xyz;\n        screenSizeDistanceToCamera = length(viewPos);\n        vec3 viewSpaceNormal = (viewNormal * vec4(normalize(vpos + origin), 1.0)).xyz;\n        screenSizeCosAngle = abs(viewSpaceNormal.z);`:\"\"}\n        gl_Position = transformPosition(proj, view, vpos);\n        ${g?_`linearDepth = gl_Position.w;`:\"\"}\n        forwardTextureCoordinates(uv);\n        ${t?_`setOverlayVTC(uv);`:\"\"}\n        ${c?_`forwardVertexTangent(vnormal);`:_``}\n      }\n    `),n.extensions.add(\"GL_OES_standard_derivatives\"),n.extensions.add(\"GL_EXT_shader_texture_lod\"),n.include(s,r),n.include(p,r),n.include(m,r),n.include(h,r),N.uniforms.add([new j(\"cameraPosition\",((e,r)=>o(W,r.camera.eye,e.origin))),new M(\"viewDirection\",((e,r)=>i(W,a(W,r.camera.viewMatrix[12],r.camera.viewMatrix[13],r.camera.viewMatrix[14])))),new F(\"lightingGlobalFactor\",((e,r)=>r.lighting.globalFactor)),new M(\"lightingMainDirection\",((e,r)=>r.lighting.lightingMainDirection)),new M(\"lightingMainIntensity\",((e,r)=>r.lighting.mainLight.intensity))]),N.constants.add(\"ambientBoostFactor\",\"float\",D),c&&N.uniforms.add([new O(\"ovWaterTex\",((e,r)=>0===r.overlays.length?null:r.overlays[l.INNER].getNormalTexture(e.overlaySource))),new L(\"view\",((r,o)=>e(U,o.camera.viewMatrix,r.origin)))]),N.code.add(_`const float sliceOpacity = 0.2;\nfloat lum(vec3 c) {\nreturn (min(min(c.r, c.g), c.b) + max(max(c.r, c.g), c.b)) * 0.5;\n}`),N.code.add(_`\n      void main() {\n        ${g?_`float shadow = readShadowMap(vpos, linearDepth);`:_`float shadow = 0.0;`}\n        vec3 normal = normalize(vnormal);\n        float vndl = dot(normal, lightingMainDirection);\n        float ssao = evaluateAmbientOcclusionInverse();\n        vec4 tileColor = getTileColor();\n        ${t?_`\n            vec4 overlayColorOpaque = getOverlayColor(ovColorTex, vtcOverlay);\n            vec4 overlayColor = overlayOpacity * overlayColorOpaque;\n            vec4 groundColor = tileColor;\n            tileColor = tileColor * (1.0 - overlayColor.a) + overlayColor;`:\"\"}\n        if (rejectBySlice(vpos)) {\n          tileColor *= sliceOpacity;\n        }\n        ${r.atmosphere?_`\n            float ndotl = clamp(vndl, 0.0, 1.0);\n            vec3 atm = vec3(clamp(1.0 - dot(-viewDirection, wnormal), 0.0, 1.0));\n            atm *= clamp(1.0 - lum(tileColor.rgb) * 1.5, 0.0, 1.0); //avoid atmosphere on bright base maps\n            atm *= clamp(ndotl * 2.0, 0.0, 1.0); // avoid atmosphere on dark side of the globe\n            atm *= tileColor.a; // premultiply with tile alpha`:\"\"}\n\n        vec3 albedo = ${r.atmosphere?_`atm + tileColor.rgb;`:_`tileColor.rgb;`}\n\n        // heuristic shading function used in the old terrain, now used to add ambient lighting\n        float additionalAmbientScale = smoothstep(0.0, 1.0, clamp(vndl${r.shading?\"\":_`*2.5`}, 0.0, 1.0));\n\n        vec3 additionalLight = ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor ${r.shading?\"\":_`* lightingGlobalFactor`};\n\n        gl_FragColor = vec4(evaluateSceneLighting(normal, albedo, shadow, 1.0 - ssao, additionalLight), tileColor.a);\n        ${c?_`\n            vec4 overlayWaterMask = getOverlayColor(ovWaterTex, vtcOverlay);\n            float waterNormalLength = length(overlayWaterMask);\n            if (waterNormalLength > 0.95) {\n              mat3 tbnMatrix = mat3(tbnTangent, tbnBiTangent, vnormal);\n              vec4 waterOverlayColor = vec4(overlayColor.w > 0.0 ? overlayColorOpaque.xyz/overlayColor.w : vec3(1.0), overlayColor.w);\n              vec4 viewPosition = view*vec4(vpos, 1.0);\n              vec4 waterColorLinear = getOverlayWaterColor(overlayWaterMask, waterOverlayColor, -normalize(vpos - cameraPosition), shadow, vnormal, tbnMatrix, viewPosition.xyz,  vpos + origin);\n              vec4 waterColorNonLinear = delinearizeGamma(vec4(waterColorLinear.xyz, 1.0));\n              // un-gamma the ground color to mix in linear space\n              gl_FragColor = mix(groundColor, waterColorNonLinear, waterColorLinear.w);\n            }`:\"\"}\n        ${r.screenSizePerspective?_`\n          float perspectiveScale = screenSizePerspectiveScaleFloat(1.0, screenSizeCosAngle, screenSizeDistanceToCamera, vec4(0.0, 0.0, 0.0, 0.0));\n          if (perspectiveScale <= 0.25) {\n            gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 0.0, 1.0), perspectiveScale * 4.0);\n          }\n          else if (perspectiveScale <= 0.5) {\n            gl_FragColor = mix(gl_FragColor, vec4(0.0, 0.0, 1.0, 1.0), (perspectiveScale - 0.25) * 4.0);\n          }\n          else if (perspectiveScale >= 0.99) {\n            gl_FragColor = mix(gl_FragColor, vec4(0.0, 1.0, 0.0, 1.0), 0.2);\n          }\n          else {\n            gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), (perspectiveScale - 0.5) * 2.0);\n          }`:\"\"}\n        ${r.tileBorders?_`\n            vec2 dVuv = fwidth(vuv);\n            vec2 edgeFactors = smoothstep(vec2(0.0), 1.5 * dVuv, min(vuv, 1.0 - vuv));\n            float edgeFactor = 1.0 - min(edgeFactors.x, edgeFactors.y);\n            gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 0.0, 1.0), edgeFactor);`:\"\"}\n        gl_FragColor = highlightSlice(gl_FragColor, vpos);\n      }\n    `)}return r.output!==t.Depth&&r.output!==t.Shadow||(n.include(d,{hasModelTransformation:!1,linearDepth:!0}),n.include(c,{output:r.output}),n.include(w,r),n.varyings.add(\"linearDepth\",\"float\"),f.uniforms.add(new S(\"nearFar\",((e,r)=>r.camera.nearFar))),f.code.add(_`void main(void) {\ngl_Position = transformPositionWithDepth(proj, view, position, nearFar, linearDepth);\n}`),N.code.add(_`void main() {\noutputDepth(linearDepth);\n}`)),r.output===t.Normal&&(n.include(d),n.include(w,r),n.varyings.add(\"vnormal\",\"vec3\"),n.varyings.add(\"vpos\",\"vec3\"),f.uniforms.add(new P(\"viewNormal\",((e,r)=>r.camera.viewInverseTransposeMatrix))),f.code.add(_`\n        void main(void) {\n          vec3 normal = ${r.shading?_`normal`:_`getLocalUp(position, origin)`};\n          vpos = position;\n\n          gl_Position = transformPosition(proj, view, vpos);\n          vnormal = normalize((viewNormal * vec4(normal, 1.0)).xyz);\n        }\n    `),N.code.add(_`void main() {\nvec3 normal = normalize(vnormal);\nif (gl_FrontFacing == false) {\nnormal = -normal;\n}\ngl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 0.0);\n}`)),r.output===t.Highlight&&(n.include(d),n.include(w,r),n.include(y,r),f.code.add(_`void main() {\nsetOverlayVTC(uv0);\ngl_Position = transformPosition(proj, view, position);\n}`),n.include(g),N.code.add(_`void main() {\nvec4 overlayColor = getCombinedOverlayColor();\nif (overlayColor.a == 0.0) {\ngl_FragColor = vec4(0.0);\nreturn;\n}\noutputHighlight();\n}`)),n}const U=r(),W=n(),A=Object.freeze(Object.defineProperty({__proto__:null,TerrainPassParameters:N,build:$},Symbol.toStringTag,{value:\"Module\"}));export{N as T,A as a,$ as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}