{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../../../../core/maybe.js\";\nimport { WGLSymbologyType as t } from \"./enums.js\";\nimport r from \"./MemoryRequirements.js\";\nimport s from \"./TileBufferData.js\";\nimport i from \"./TileDisplayData.js\";\nimport { allocateTypedArrayBuffer as o, copyMeshData as a, forEachGeometryType as f } from \"./Utils.js\";\nimport n from \"./WGLDisplayRecord.js\";\nimport { DisplayRecordReader as l } from \"./cpuMapped/DisplayRecordReader.js\";\nimport { VertexBuffers as u } from \"./mesh/VertexBuffer.js\";\nimport { VertexVectors as c } from \"./mesh/VertexVector.js\";\nimport m from \"./util/Writer.js\";\nconst D = new r(),\n      d = new r(),\n      p = 1.5,\n      h = 5;\n\nfunction x(e, t) {\n  const r = {};\n\n  for (const s in e) {\n    const i = {\n      data: o(t, e[s]),\n      stride: e[s]\n    };\n    r[s] = i;\n  }\n\n  return r;\n}\n\nfunction y(e) {\n  return [e.fill || {}, e.line || {}, e.icon || {}, e.text || {}, e.label || {}];\n}\n\nfunction B(e) {\n  const t = [[], [], [], [], []],\n        r = e;\n\n  for (const s of r) for (const e of s.displayRecords) t[e.geometryType].push(e);\n\n  return t;\n}\n\nclass g {\n  constructor() {\n    this.tileDisplayData = null, this.tileBufferData = null;\n  }\n\n  reshuffle() {\n    D.reset();\n    const e = B(this.tileDisplayData.displayObjects);\n\n    for (const s of e) for (const e of s) e && D.needMore(e.geometryType, e.meshData ? e.meshData.vertexCount : e.vertexCount, e.meshData ? e.meshData.indexData.length : e.indexCount);\n\n    const t = e.length,\n          r = new s();\n\n    for (let s = 0; s < t; ++s) {\n      r.geometries[s].indexBuffer = new Uint32Array(Math.round(p * D.indicesFor(s)));\n      const e = [];\n\n      for (const r in this.tileBufferData.geometries[s].vertexBuffer) e.push(this.tileBufferData.geometries[s].vertexBuffer[r].stride);\n\n      const t = g._computeVertexAlignment(e),\n            i = Math.round(p * D.verticesFor(s)),\n            a = g._align(i, t);\n\n      for (const f in this.tileBufferData.geometries[s].vertexBuffer) {\n        const e = this.tileBufferData.geometries[s].vertexBuffer[f].stride;\n        r.geometries[s].vertexBuffer[f] = {\n          stride: e,\n          data: o(a, e)\n        };\n      }\n    }\n\n    d.reset(), this.tileDisplayData.displayList.clear();\n\n    for (let s = 0; s < t; ++s) {\n      const t = e[s];\n\n      for (const e of t) {\n        if (e.meshData) e.writeMeshDataToBuffers(d.verticesFor(s), r.geometries[s].vertexBuffer, d.indicesFor(s), r.geometries[s].indexBuffer), e.meshData = null;else {\n          const t = this.tileBufferData.geometries[s].vertexBuffer,\n                i = this.tileBufferData.geometries[s].indexBuffer,\n                o = r.geometries[s].vertexBuffer,\n                f = r.geometries[s].indexBuffer,\n                n = d.verticesFor(s),\n                l = d.indicesFor(s);\n          a(n, l, o, f, e, t, i), e.vertexFrom = n, e.indexFrom = l;\n        }\n        d.needMore(s, e.vertexCount, e.indexCount);\n      }\n    }\n\n    for (const s of this.tileDisplayData.displayObjects) this.tileDisplayData.displayList.addToList(s.displayRecords);\n\n    this.tileBufferData = r;\n  }\n\n  getStrides() {\n    const e = [];\n\n    for (let t = 0; t < this.tileBufferData.geometries.length; ++t) {\n      const r = this.tileBufferData.geometries[t];\n      e[t] = {};\n\n      for (const s in r.vertexBuffer) e[t][s] = r.vertexBuffer[s].stride;\n    }\n\n    return e;\n  }\n\n  clone() {\n    const e = new g();\n    return e.tileBufferData = this.tileBufferData.clone(), e.tileDisplayData = this.tileDisplayData.clone(), e;\n  }\n\n  _guessSize() {\n    const {\n      displayObjects: e\n    } = this.tileDisplayData,\n          t = Math.min(e.length, 4),\n          r = 12,\n          s = 40;\n    let i = 0;\n\n    for (let o = 0; o < t; o++) i = Math.max(i, e[o].displayRecords.length);\n\n    return 2 * (e.length * r + e.length * i * s);\n  }\n\n  serialize() {\n    const e = this.tileBufferData.serialize(),\n          t = this.tileBufferData.getBuffers(),\n          r = this.tileDisplayData.serialize(new m(Int32Array, this._guessSize())).buffer();\n    return t.push(r), {\n      result: {\n        displayData: r,\n        bufferData: e\n      },\n      transferList: t\n    };\n  }\n\n  static fromVertexData(r, s) {\n    const i = {},\n          o = new Map();\n\n    for (const e of s) o.set(e.id, e);\n\n    return f(s => {\n      const a = r.data[s];\n\n      if (e(a)) {\n        const e = l.from(a.records).getCursor();\n\n        for (; e.next();) {\n          const t = e.id,\n                r = e.materialKey,\n                i = e.indexFrom,\n                a = e.indexCount,\n                f = e.vertexFrom,\n                l = e.vertexCount,\n                u = o.get(t),\n                c = new n(t, s, r);\n          c.indexFrom = i, c.indexCount = a, c.vertexFrom = f, c.vertexCount = l, u.displayRecords.push(c);\n        }\n\n        i[s] = u.fromVertexData(a, s);\n      } else i[s] = new c(s, 0, t.DEFAULT).intoBuffers();\n    }), g.fromMeshData({\n      displayObjects: s,\n      vertexBuffersMap: i\n    });\n  }\n\n  static fromMeshData(e) {\n    const t = new g(),\n          r = new i(),\n          o = new s();\n    r.displayObjects = e.displayObjects;\n\n    for (const s in e.vertexBuffersMap) {\n      const t = e.vertexBuffersMap[s];\n      o.geometries[s].indexBuffer = t.indexBuffer, o.geometries[s].vertexBuffer = t.namedBuffers;\n    }\n\n    return t.tileDisplayData = r, t.tileBufferData = o, t;\n  }\n\n  static bind(e, t) {\n    const r = new g();\n    return r.tileDisplayData = e, r.tileBufferData = t, r;\n  }\n\n  static create(e, t) {\n    const r = new g();\n    r.tileDisplayData = new i(), r.tileDisplayData.displayObjects = e;\n    const o = [0, 0, 0, 0, 0],\n          a = [0, 0, 0, 0, 0],\n          f = [[], [], [], [], []];\n\n    for (const s of e) for (const e of s.displayRecords) f[e.geometryType].push(e), o[e.geometryType] += e.meshData.vertexCount, a[e.geometryType] += e.meshData.indexData.length;\n\n    const l = new s(),\n          u = y(t);\n\n    for (let s = 0; s < h; s++) {\n      const e = new Uint32Array(a[s]),\n            t = x(u[s], o[s]);\n      n.writeAllMeshDataToBuffers(f[s], t, e), l.geometries[s] = {\n        indexBuffer: e,\n        vertexBuffer: t\n      };\n    }\n\n    return r.tileBufferData = l, r;\n  }\n\n  static _align(e, t) {\n    const r = e % t;\n    return 0 === r ? e : e + (t - r);\n  }\n\n  static _computeVertexAlignment(e) {\n    let t = !1,\n        r = !1;\n\n    for (const s of e) s % 4 == 2 ? t = !0 : s % 4 != 0 && (r = !0);\n\n    return r ? 4 : t ? 2 : 1;\n  }\n\n}\n\nexport { g as TileData };","map":{"version":3,"names":["isSome","e","WGLSymbologyType","t","r","s","i","allocateTypedArrayBuffer","o","copyMeshData","a","forEachGeometryType","f","n","DisplayRecordReader","l","VertexBuffers","u","VertexVectors","c","m","D","d","p","h","x","data","stride","y","fill","line","icon","text","label","B","displayRecords","geometryType","push","g","constructor","tileDisplayData","tileBufferData","reshuffle","reset","displayObjects","needMore","meshData","vertexCount","indexData","length","indexCount","geometries","indexBuffer","Uint32Array","Math","round","indicesFor","vertexBuffer","_computeVertexAlignment","verticesFor","_align","displayList","clear","writeMeshDataToBuffers","vertexFrom","indexFrom","addToList","getStrides","clone","_guessSize","min","max","serialize","getBuffers","Int32Array","buffer","result","displayData","bufferData","transferList","fromVertexData","Map","set","id","from","records","getCursor","next","materialKey","get","DEFAULT","intoBuffers","fromMeshData","vertexBuffersMap","namedBuffers","bind","create","writeAllMeshDataToBuffers","TileData"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/engine/webgl/TileData.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../core/maybe.js\";import{WGLSymbologyType as t}from\"./enums.js\";import r from\"./MemoryRequirements.js\";import s from\"./TileBufferData.js\";import i from\"./TileDisplayData.js\";import{allocateTypedArrayBuffer as o,copyMeshData as a,forEachGeometryType as f}from\"./Utils.js\";import n from\"./WGLDisplayRecord.js\";import{DisplayRecordReader as l}from\"./cpuMapped/DisplayRecordReader.js\";import{VertexBuffers as u}from\"./mesh/VertexBuffer.js\";import{VertexVectors as c}from\"./mesh/VertexVector.js\";import m from\"./util/Writer.js\";const D=new r,d=new r,p=1.5,h=5;function x(e,t){const r={};for(const s in e){const i={data:o(t,e[s]),stride:e[s]};r[s]=i}return r}function y(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}function B(e){const t=[[],[],[],[],[]],r=e;for(const s of r)for(const e of s.displayRecords)t[e.geometryType].push(e);return t}class g{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){D.reset();const e=B(this.tileDisplayData.displayObjects);for(const s of e)for(const e of s)e&&D.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,r=new s;for(let s=0;s<t;++s){r.geometries[s].indexBuffer=new Uint32Array(Math.round(p*D.indicesFor(s)));const e=[];for(const r in this.tileBufferData.geometries[s].vertexBuffer)e.push(this.tileBufferData.geometries[s].vertexBuffer[r].stride);const t=g._computeVertexAlignment(e),i=Math.round(p*D.verticesFor(s)),a=g._align(i,t);for(const f in this.tileBufferData.geometries[s].vertexBuffer){const e=this.tileBufferData.geometries[s].vertexBuffer[f].stride;r.geometries[s].vertexBuffer[f]={stride:e,data:o(a,e)}}}d.reset(),this.tileDisplayData.displayList.clear();for(let s=0;s<t;++s){const t=e[s];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(d.verticesFor(s),r.geometries[s].vertexBuffer,d.indicesFor(s),r.geometries[s].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[s].vertexBuffer,i=this.tileBufferData.geometries[s].indexBuffer,o=r.geometries[s].vertexBuffer,f=r.geometries[s].indexBuffer,n=d.verticesFor(s),l=d.indicesFor(s);a(n,l,o,f,e,t,i),e.vertexFrom=n,e.indexFrom=l}d.needMore(s,e.vertexCount,e.indexCount)}}for(const s of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(s.displayRecords);this.tileBufferData=r}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const r=this.tileBufferData.geometries[t];e[t]={};for(const s in r.vertexBuffer)e[t][s]=r.vertexBuffer[s].stride}return e}clone(){const e=new g;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4),r=12,s=40;let i=0;for(let o=0;o<t;o++)i=Math.max(i,e[o].displayRecords.length);return 2*(e.length*r+e.length*i*s)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new m(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}}static fromVertexData(r,s){const i={},o=new Map;for(const e of s)o.set(e.id,e);return f((s=>{const a=r.data[s];if(e(a)){const e=l.from(a.records).getCursor();for(;e.next();){const t=e.id,r=e.materialKey,i=e.indexFrom,a=e.indexCount,f=e.vertexFrom,l=e.vertexCount,u=o.get(t),c=new n(t,s,r);c.indexFrom=i,c.indexCount=a,c.vertexFrom=f,c.vertexCount=l,u.displayRecords.push(c)}i[s]=u.fromVertexData(a,s)}else i[s]=new c(s,0,t.DEFAULT).intoBuffers()})),g.fromMeshData({displayObjects:s,vertexBuffersMap:i})}static fromMeshData(e){const t=new g,r=new i,o=new s;r.displayObjects=e.displayObjects;for(const s in e.vertexBuffersMap){const t=e.vertexBuffersMap[s];o.geometries[s].indexBuffer=t.indexBuffer,o.geometries[s].vertexBuffer=t.namedBuffers}return t.tileDisplayData=r,t.tileBufferData=o,t}static bind(e,t){const r=new g;return r.tileDisplayData=e,r.tileBufferData=t,r}static create(e,t){const r=new g;r.tileDisplayData=new i,r.tileDisplayData.displayObjects=e;const o=[0,0,0,0,0],a=[0,0,0,0,0],f=[[],[],[],[],[]];for(const s of e)for(const e of s.displayRecords)f[e.geometryType].push(e),o[e.geometryType]+=e.meshData.vertexCount,a[e.geometryType]+=e.meshData.indexData.length;const l=new s,u=y(t);for(let s=0;s<h;s++){const e=new Uint32Array(a[s]),t=x(u[s],o[s]);n.writeAllMeshDataToBuffers(f[s],t,e),l.geometries[s]={indexBuffer:e,vertexBuffer:t}}return r.tileBufferData=l,r}static _align(e,t){const r=e%t;return 0===r?e:e+(t-r)}static _computeVertexAlignment(e){let t=!1,r=!1;for(const s of e)s%4==2?t=!0:s%4!=0&&(r=!0);return r?4:t?2:1}}export{g as TileData};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}