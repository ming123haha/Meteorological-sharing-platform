{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { create as e } from \"../../../../geometry/support/aaBoundingRect.js\";\nimport { getWorldWidth as s } from \"../../viewpointUtils.js\";\nimport { brushes as i } from \"../brushes.js\";\nimport { RasterTile as t } from \"./RasterTile.js\";\nimport { WGLDrawPhase as r } from \"../webgl/enums.js\";\nimport o from \"../webgl/TileContainer.js\";\n\nclass n extends o {\n  constructor() {\n    super(...arguments), this.isCustomTilingScheme = !1;\n  }\n\n  createTile(e) {\n    const s = this._getTileBounds(e),\n          [i, r] = this._tileInfoView.tileInfo.size,\n          o = this._tileInfoView.getTileResolution(e.level);\n\n    return new t(e, o, s[0], s[3], i, r);\n  }\n\n  prepareRenderPasses(e) {\n    const s = e.registerRenderPass({\n      name: \"imagery (tile)\",\n      brushes: [i.raster],\n      target: () => this.children.map(e => e.bitmap),\n      drawPhase: r.MAP\n    });\n    return [...super.prepareRenderPasses(e), s];\n  }\n\n  doRender(e) {\n    this.visible && e.drawPhase === r.MAP && super.doRender(e);\n  }\n\n  _getTileBounds(i) {\n    const t = this._tileInfoView.getTileBounds(e(), i);\n\n    if (this.isCustomTilingScheme && i.world) {\n      const {\n        tileInfo: e\n      } = this._tileInfoView,\n            r = s(e.spatialReference);\n\n      if (r) {\n        const {\n          resolution: s\n        } = e.lodAt(i.level),\n              o = r / s % e.size[0],\n              n = o ? (e.size[0] - o) * s : 0;\n        t[0] -= n * i.world, t[2] -= n * i.world;\n      }\n    }\n\n    return t;\n  }\n\n}\n\nexport { n as RasterTileContainer };","map":{"version":3,"names":["create","e","getWorldWidth","s","brushes","i","RasterTile","t","WGLDrawPhase","r","o","n","constructor","arguments","isCustomTilingScheme","createTile","_getTileBounds","_tileInfoView","tileInfo","size","getTileResolution","level","prepareRenderPasses","registerRenderPass","name","raster","target","children","map","bitmap","drawPhase","MAP","doRender","visible","getTileBounds","world","spatialReference","resolution","lodAt","RasterTileContainer"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/engine/imagery/RasterTileContainer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{create as e}from\"../../../../geometry/support/aaBoundingRect.js\";import{getWorldWidth as s}from\"../../viewpointUtils.js\";import{brushes as i}from\"../brushes.js\";import{RasterTile as t}from\"./RasterTile.js\";import{WGLDrawPhase as r}from\"../webgl/enums.js\";import o from\"../webgl/TileContainer.js\";class n extends o{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const s=this._getTileBounds(e),[i,r]=this._tileInfoView.tileInfo.size,o=this._tileInfoView.getTileResolution(e.level);return new t(e,o,s[0],s[3],i,r)}prepareRenderPasses(e){const s=e.registerRenderPass({name:\"imagery (tile)\",brushes:[i.raster],target:()=>this.children.map((e=>e.bitmap)),drawPhase:r.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===r.MAP&&super.doRender(e)}_getTileBounds(i){const t=this._tileInfoView.getTileBounds(e(),i);if(this.isCustomTilingScheme&&i.world){const{tileInfo:e}=this._tileInfoView,r=s(e.spatialReference);if(r){const{resolution:s}=e.lodAt(i.level),o=r/s%e.size[0],n=o?(e.size[0]-o)*s:0;t[0]-=n*i.world,t[2]-=n*i.world}}return t}}export{n as RasterTileContainer};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,MAAM,IAAIC,CAAjB,QAAuB,gDAAvB;AAAwE,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,yBAA9B;AAAwD,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,eAAxB;AAAwC,SAAOC,UAAU,IAAIC,CAArB,QAA2B,iBAA3B;AAA6C,SAAOC,YAAY,IAAIC,CAAvB,QAA6B,mBAA7B;AAAiD,OAAOC,CAAP,MAAa,2BAAb;;AAAyC,MAAMC,CAAN,SAAgBD,CAAhB,CAAiB;EAACE,WAAW,GAAE;IAAC,MAAM,GAAGC,SAAT,GAAoB,KAAKC,oBAAL,GAA0B,CAAC,CAA/C;EAAiD;;EAAAC,UAAU,CAACd,CAAD,EAAG;IAAC,MAAME,CAAC,GAAC,KAAKa,cAAL,CAAoBf,CAApB,CAAR;IAAA,MAA+B,CAACI,CAAD,EAAGI,CAAH,IAAM,KAAKQ,aAAL,CAAmBC,QAAnB,CAA4BC,IAAjE;IAAA,MAAsET,CAAC,GAAC,KAAKO,aAAL,CAAmBG,iBAAnB,CAAqCnB,CAAC,CAACoB,KAAvC,CAAxE;;IAAsH,OAAO,IAAId,CAAJ,CAAMN,CAAN,EAAQS,CAAR,EAAUP,CAAC,CAAC,CAAD,CAAX,EAAeA,CAAC,CAAC,CAAD,CAAhB,EAAoBE,CAApB,EAAsBI,CAAtB,CAAP;EAAgC;;EAAAa,mBAAmB,CAACrB,CAAD,EAAG;IAAC,MAAME,CAAC,GAACF,CAAC,CAACsB,kBAAF,CAAqB;MAACC,IAAI,EAAC,gBAAN;MAAuBpB,OAAO,EAAC,CAACC,CAAC,CAACoB,MAAH,CAA/B;MAA0CC,MAAM,EAAC,MAAI,KAAKC,QAAL,CAAcC,GAAd,CAAmB3B,CAAC,IAAEA,CAAC,CAAC4B,MAAxB,CAArD;MAAsFC,SAAS,EAACrB,CAAC,CAACsB;IAAlG,CAArB,CAAR;IAAqI,OAAM,CAAC,GAAG,MAAMT,mBAAN,CAA0BrB,CAA1B,CAAJ,EAAiCE,CAAjC,CAAN;EAA0C;;EAAA6B,QAAQ,CAAC/B,CAAD,EAAG;IAAC,KAAKgC,OAAL,IAAchC,CAAC,CAAC6B,SAAF,KAAcrB,CAAC,CAACsB,GAA9B,IAAmC,MAAMC,QAAN,CAAe/B,CAAf,CAAnC;EAAqD;;EAAAe,cAAc,CAACX,CAAD,EAAG;IAAC,MAAME,CAAC,GAAC,KAAKU,aAAL,CAAmBiB,aAAnB,CAAiCjC,CAAC,EAAlC,EAAqCI,CAArC,CAAR;;IAAgD,IAAG,KAAKS,oBAAL,IAA2BT,CAAC,CAAC8B,KAAhC,EAAsC;MAAC,MAAK;QAACjB,QAAQ,EAACjB;MAAV,IAAa,KAAKgB,aAAvB;MAAA,MAAqCR,CAAC,GAACN,CAAC,CAACF,CAAC,CAACmC,gBAAH,CAAxC;;MAA6D,IAAG3B,CAAH,EAAK;QAAC,MAAK;UAAC4B,UAAU,EAAClC;QAAZ,IAAeF,CAAC,CAACqC,KAAF,CAAQjC,CAAC,CAACgB,KAAV,CAApB;QAAA,MAAqCX,CAAC,GAACD,CAAC,GAACN,CAAF,GAAIF,CAAC,CAACkB,IAAF,CAAO,CAAP,CAA3C;QAAA,MAAqDR,CAAC,GAACD,CAAC,GAAC,CAACT,CAAC,CAACkB,IAAF,CAAO,CAAP,IAAUT,CAAX,IAAcP,CAAf,GAAiB,CAAzE;QAA2EI,CAAC,CAAC,CAAD,CAAD,IAAMI,CAAC,GAACN,CAAC,CAAC8B,KAAV,EAAgB5B,CAAC,CAAC,CAAD,CAAD,IAAMI,CAAC,GAACN,CAAC,CAAC8B,KAA1B;MAAgC;IAAC;;IAAA,OAAO5B,CAAP;EAAS;;AAA5wB;;AAA6wB,SAAOI,CAAC,IAAI4B,mBAAZ"},"metadata":{},"sourceType":"module"}