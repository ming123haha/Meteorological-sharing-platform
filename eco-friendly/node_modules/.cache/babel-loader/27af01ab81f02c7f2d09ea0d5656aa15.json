{"ast":null,"code":"import Map from \"@arcgis/core/Map\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer.js\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport FeatureForm from \"@arcgis/core/widgets/FeatureForm\";\nexport default {\n  name: \"Home\",\n\n  data() {\n    return {};\n  },\n\n  mounted() {\n    this.initMap();\n  },\n\n  methods: {\n    initMap() {\n      let highlight;\n      const template = {\n        titie: \"{NAME99}\",\n        content: [{\n          type: \"fields\",\n          fieldInfos: [{\n            fieldName: \"NAME99\",\n            label: \"地区名称\"\n          }, {\n            fieldName: \"AREA\",\n            label: \"面积\"\n          }]\n        }]\n      };\n      const featurelayer = new FeatureLayer({\n        url: \"http://localhost:6080/arcgis/rest/services/大气监测/MapServer\",\n        popupTemplate: template\n      });\n      const map = new Map({\n        basemap: \"streets-navigation-vector\",\n        layers: [featurelayer]\n      }); //这个view相当于地图视图容器，指定了div等等属性\n\n      const view = new MapView({\n        container: \"viewDiv\",\n        map: map,\n        center: [117, 32],\n        zoom: 6\n      }); // Add a new feature form with grouped fields  拉出表单\n\n      const form = new FeatureForm({\n        container: \"form\",\n        groupDisplay: \"sequential\",\n        // only display one group at a time\n        layer: featurelayer\n      });\n      view.on(\"click\", event => {\n        // Unselect any currently selected features\n        unselectFeature(); // Listen for when the user clicks on the view\n\n        view.hitTest(event).then(response => {\n          // If user selects a feature, select it\n          const results = response.results;\n\n          if (results.length > 0 && results[0].graphic && results[0].graphic.layer === featurelayer) {\n            selectFeature(results[0].graphic.attributes[featurelayer.objectIdField]);\n          } else {\n            // Hide the form and show the info div\n            document.getElementById(\"update\").classList.add(\"esri-hidden\");\n          }\n        });\n      }); // Function to unselect features\n\n      function unselectFeature() {\n        if (highlight) {\n          highlight.remove();\n        }\n      } // Highlight the clicked feature and display\n      // its attributes in the featureform.\n\n\n      function selectFeature(objectId) {\n        // query feature from the server\n        featurelayer.queryFeatures({\n          objectIds: [objectId],\n          outFields: [\"*\"],\n          returnGeometry: true\n        }).then(results => {\n          if (results.features.length > 0) {\n            editFeature = results.features[0]; // display the attributes of selected feature in the form\n\n            form.feature = editFeature; // highlight the feature on the view\n\n            view.whenLayerView(editFeature.layer).then(layerView => {\n              highlight = layerView.highlight(editFeature);\n            });\n\n            if (document.getElementById(\"update\").classList.contains(\"esri-hidden\")) {\n              document.getElementById(\"info\").classList.add(\"esri-hidden\");\n              document.getElementById(\"update\").classList.remove(\"esri-hidden\");\n            }\n          }\n        });\n      }\n\n      view.ui.components = [];\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsBA;AACA;AACA;AACA;AACA;EACAA,YADA;;EAEAC;IACA;EACA,CAJA;;EAKAC;IACA;EACA,CAPA;;EAUAC;IAEAC;MACA;MAGA;QACAC,iBADA;QAEAC,UACA;UACAC,cADA;UAEAC,aACA;YACAC,mBADA;YAEAC;UAFA,CADA,EAKA;YACAD,iBADA;YAEAC;UAFA,CALA;QAFA,CADA;MAFA;MAmBA;QACAC,gEADA;QAEAC;MAFA;MAIA;QACAC,oCADA;QAEAC;MAFA,GA3BA,CA+BA;;MACA;QACAC,oBADA;QAEAC,QAFA;QAGAC,iBAHA;QAIAC;MAJA,GAhCA,CAuCA;;MACA;QACAH,iBADA;QAEAI,0BAFA;QAEA;QACAC;MAHA;MAKAC;QACA;QACAC,kBAFA,CAGA;;QACAD;UACA;UACA;;UACA,IACAE,sBACAA,kBADA,IAEAA,yCAHA,EAIA;YACAC,cACAD,yDADA;UAGA,CARA,MAQA;YACA;YACAE;UACA;QACA,CAfA;MAgBA,CApBA,EA7CA,CAmEA;;MACA;QACA;UACAC;QACA;MACA,CAxEA,CA0EA;MACA;;;MACA;QACA;QACAC,aACAC,aADA,CACA;UACAC,qBADA;UAEAC,gBAFA;UAGAC;QAHA,CADA,EAMAC,IANA,CAMAT;UACA;YACAU,kCADA,CAGA;;YACAC,2BAJA,CAMA;;YACAb;cACAK;YACA,CAFA;;YAIA,IACAD,SACAU,cADA,CACA,QADA,EAEAC,SAFA,CAEAC,QAFA,CAEA,aAFA,CADA,EAIA;cACAZ;cACAA,SACAU,cADA,CACA,QADA,EAEAC,SAFA,CAEAE,MAFA,CAEA,aAFA;YAGA;UACA;QACA,CA7BA;MA8BA;;MAEAjB;IACA;;EAjHA;AAVA","names":["name","data","mounted","methods","initMap","titie","content","type","fieldInfos","fieldName","label","url","popupTemplate","basemap","layers","container","map","center","zoom","groupDisplay","layer","view","unselectFeature","results","selectFeature","document","highlight","featurelayer","queryFeatures","objectIds","outFields","returnGeometry","then","editFeature","form","getElementById","classList","contains","remove"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\r\n  <div id=\"viewDiv\" style=\"width: 100%;height: 100%\">\r\n\r\n<!-- arcgisapi样式  -->\r\n    <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://js.arcgis.com/4.24/esri/themes/light/main.css\"\r\n    />\r\n    <div id=\"update\" class=\"esri-widget esri-hidden\">\r\n      <div id=\"form\" class=\"scroller esri-component\"></div>\r\n      <input\r\n          type=\"button\"\r\n          class=\"esri-button\"\r\n          value=\"Update assessment\"\r\n          id=\"btnUpdate\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport Map from \"@arcgis/core/Map\";\r\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer.js\"\r\nimport MapView from \"@arcgis/core/views/MapView\";\r\nimport FeatureForm from \"@arcgis/core/widgets/FeatureForm\";\r\nexport default {\r\n  name: \"Home\",\r\n  data() {\r\n    return {}\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n\r\n\r\n  methods: {\r\n\r\n    initMap(){\r\n      let highlight\r\n\r\n\r\n      const template={\r\n        titie:\"{NAME99}\",\r\n        content:[\r\n          {\r\n            type:\"fields\",\r\n            fieldInfos:[\r\n              {\r\n                fieldName:\"NAME99\",\r\n                label:\"地区名称\"\r\n              },\r\n              {\r\n                fieldName:\"AREA\",\r\n                label:\"面积\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n\r\n      const featurelayer=new FeatureLayer({\r\n        url:\"http://localhost:6080/arcgis/rest/services/大气监测/MapServer\",\r\n        popupTemplate:template\r\n      });\r\n      const map=new Map({\r\n        basemap: \"streets-navigation-vector\",\r\n        layers: [featurelayer]\r\n      })\r\n      //这个view相当于地图视图容器，指定了div等等属性\r\n      const view=new MapView({\r\n        container: \"viewDiv\",\r\n        map: map,\r\n        center: [117, 32],\r\n        zoom: 6,\r\n\r\n      });\r\n      // Add a new feature form with grouped fields  拉出表单\r\n      const form = new FeatureForm({\r\n        container: \"form\",\r\n        groupDisplay: \"sequential\", // only display one group at a time\r\n        layer: featurelayer\r\n      });\r\n      view.on(\"click\", (event) => {\r\n        // Unselect any currently selected features\r\n        unselectFeature();\r\n        // Listen for when the user clicks on the view\r\n        view.hitTest(event).then((response) => {\r\n          // If user selects a feature, select it\r\n          const results = response.results;\r\n          if (\r\n              results.length > 0 &&\r\n              results[0].graphic &&\r\n              results[0].graphic.layer === featurelayer\r\n          ) {\r\n            selectFeature(\r\n                results[0].graphic.attributes[featurelayer.objectIdField]\r\n            );\r\n          } else {\r\n            // Hide the form and show the info div\r\n            document.getElementById(\"update\").classList.add(\"esri-hidden\");\r\n          }\r\n        });\r\n      });\r\n\r\n      // Function to unselect features\r\n      function unselectFeature() {\r\n        if (highlight) {\r\n          highlight.remove();\r\n        }\r\n      }\r\n\r\n      // Highlight the clicked feature and display\r\n      // its attributes in the featureform.\r\n      function selectFeature(objectId) {\r\n        // query feature from the server\r\n        featurelayer\r\n            .queryFeatures({\r\n              objectIds: [objectId],\r\n              outFields: [\"*\"],\r\n              returnGeometry: true\r\n            })\r\n            .then((results) => {\r\n              if (results.features.length > 0) {\r\n                editFeature = results.features[0];\r\n\r\n                // display the attributes of selected feature in the form\r\n                form.feature = editFeature;\r\n\r\n                // highlight the feature on the view\r\n                view.whenLayerView(editFeature.layer).then((layerView) => {\r\n                  highlight = layerView.highlight(editFeature);\r\n                });\r\n\r\n                if (\r\n                    document\r\n                        .getElementById(\"update\")\r\n                        .classList.contains(\"esri-hidden\")\r\n                ) {\r\n                  document.getElementById(\"info\").classList.add(\"esri-hidden\");\r\n                  document\r\n                      .getElementById(\"update\")\r\n                      .classList.remove(\"esri-hidden\");\r\n                }\r\n              }\r\n            });\r\n      }\r\n\r\n      view.ui.components=[];\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}