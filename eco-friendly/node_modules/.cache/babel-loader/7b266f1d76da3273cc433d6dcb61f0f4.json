{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = i => i) {\n  return {\n    regex,\n    deser: ([s]) => post(parseDigits(s))\n  };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s.replace(/\\./g, \"\") // ignore dots that were made optional\n  .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n  .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) => strings.findIndex(i => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return {\n    regex,\n    deser: ([, h, m]) => signedOffset(h, m),\n    groups\n  };\n}\n\nfunction simple(regex) {\n  return {\n    regex,\n    deser: ([s]) => s\n  };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n        two = digitRegex(loc, \"{2}\"),\n        three = digitRegex(loc, \"{3}\"),\n        four = digitRegex(loc, \"{4}\"),\n        six = digitRegex(loc, \"{6}\"),\n        oneOrTwo = digitRegex(loc, \"{1,2}\"),\n        oneToThree = digitRegex(loc, \"{1,3}\"),\n        oneToSix = digitRegex(loc, \"{1,6}\"),\n        oneToNine = digitRegex(loc, \"{1,9}\"),\n        twoToFour = digitRegex(loc, \"{2,4}\"),\n        fourToSix = digitRegex(loc, \"{4,6}\"),\n        literal = t => ({\n    regex: RegExp(escapeToken(t.val)),\n    deser: ([s]) => s,\n    literal: true\n  }),\n        unitate = t => {\n    if (token.literal) {\n      return literal(t);\n    }\n\n    switch (t.val) {\n      // era\n      case \"G\":\n        return oneOf(loc.eras(\"short\", false), 0);\n\n      case \"GG\":\n        return oneOf(loc.eras(\"long\", false), 0);\n      // years\n\n      case \"y\":\n        return intUnit(oneToSix);\n\n      case \"yy\":\n        return intUnit(twoToFour, untruncateYear);\n\n      case \"yyyy\":\n        return intUnit(four);\n\n      case \"yyyyy\":\n        return intUnit(fourToSix);\n\n      case \"yyyyyy\":\n        return intUnit(six);\n      // months\n\n      case \"M\":\n        return intUnit(oneOrTwo);\n\n      case \"MM\":\n        return intUnit(two);\n\n      case \"MMM\":\n        return oneOf(loc.months(\"short\", true, false), 1);\n\n      case \"MMMM\":\n        return oneOf(loc.months(\"long\", true, false), 1);\n\n      case \"L\":\n        return intUnit(oneOrTwo);\n\n      case \"LL\":\n        return intUnit(two);\n\n      case \"LLL\":\n        return oneOf(loc.months(\"short\", false, false), 1);\n\n      case \"LLLL\":\n        return oneOf(loc.months(\"long\", false, false), 1);\n      // dates\n\n      case \"d\":\n        return intUnit(oneOrTwo);\n\n      case \"dd\":\n        return intUnit(two);\n      // ordinals\n\n      case \"o\":\n        return intUnit(oneToThree);\n\n      case \"ooo\":\n        return intUnit(three);\n      // time\n\n      case \"HH\":\n        return intUnit(two);\n\n      case \"H\":\n        return intUnit(oneOrTwo);\n\n      case \"hh\":\n        return intUnit(two);\n\n      case \"h\":\n        return intUnit(oneOrTwo);\n\n      case \"mm\":\n        return intUnit(two);\n\n      case \"m\":\n        return intUnit(oneOrTwo);\n\n      case \"q\":\n        return intUnit(oneOrTwo);\n\n      case \"qq\":\n        return intUnit(two);\n\n      case \"s\":\n        return intUnit(oneOrTwo);\n\n      case \"ss\":\n        return intUnit(two);\n\n      case \"S\":\n        return intUnit(oneToThree);\n\n      case \"SSS\":\n        return intUnit(three);\n\n      case \"u\":\n        return simple(oneToNine);\n\n      case \"uu\":\n        return simple(oneOrTwo);\n\n      case \"uuu\":\n        return intUnit(one);\n      // meridiem\n\n      case \"a\":\n        return oneOf(loc.meridiems(), 0);\n      // weekYear (k)\n\n      case \"kkkk\":\n        return intUnit(four);\n\n      case \"kk\":\n        return intUnit(twoToFour, untruncateYear);\n      // weekNumber (W)\n\n      case \"W\":\n        return intUnit(oneOrTwo);\n\n      case \"WW\":\n        return intUnit(two);\n      // weekdays\n\n      case \"E\":\n      case \"c\":\n        return intUnit(one);\n\n      case \"EEE\":\n        return oneOf(loc.weekdays(\"short\", false, false), 1);\n\n      case \"EEEE\":\n        return oneOf(loc.weekdays(\"long\", false, false), 1);\n\n      case \"ccc\":\n        return oneOf(loc.weekdays(\"short\", true, false), 1);\n\n      case \"cccc\":\n        return oneOf(loc.weekdays(\"long\", true, false), 1);\n      // offset/zone\n\n      case \"Z\":\n      case \"ZZ\":\n        return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n\n      case \"ZZZ\":\n        return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n      // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n      // because we don't have any way to figure out what they are\n\n      case \"z\":\n        return simple(/[a-z_+-/]{1,256}?/i);\n\n      default:\n        return literal(t);\n    }\n  };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP\n  };\n  unit.token = token;\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\"\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\"\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\"\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\"\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\"\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\"\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\"\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\"\n  }\n};\n\nfunction tokenForPart(part, locale, formatOpts) {\n  const {\n    type,\n    value\n  } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value\n    };\n  }\n\n  const style = formatOpts[type];\n  let val = partTypeStyleToTokenVal[type];\n\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map(u => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n              groups = h.groups ? h.groups + 1 : 1;\n\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n\n        matchIndex += groups;\n      }\n    }\n\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = token => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n\n      case \"s\":\n        return \"second\";\n\n      case \"m\":\n        return \"minute\";\n\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n\n      case \"d\":\n        return \"day\";\n\n      case \"o\":\n        return \"ordinal\";\n\n      case \"L\":\n      case \"M\":\n        return \"month\";\n\n      case \"y\":\n        return \"year\";\n\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n\n      case \"W\":\n        return \"weekNumber\";\n\n      case \"k\":\n        return \"weekYear\";\n\n      case \"q\":\n        return \"quarter\";\n\n      default:\n        return null;\n    }\n  };\n\n  let zone = null;\n  let specificOffset;\n\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n\n    specificOffset = matches.Z;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n  return [vals, zone, specificOffset];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nexport function expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map(t => maybeExpandMacroToken(t, locale)));\n}\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n        units = tokens.map(t => unitForToken(t, locale)),\n        disqualifyingUnit = units.find(t => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return {\n      input,\n      tokens,\n      invalidReason: disqualifyingUnit.invalidReason\n    };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n          regex = RegExp(regexString, \"i\"),\n          [rawMatches, matches] = match(input, regex, handlers),\n          [result, zone, specificOffset] = matches ? dateTimeFromMatches(matches) : [null, null, undefined];\n\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\"Can't include meridiem when specifying 24-hour format\");\n    }\n\n    return {\n      input,\n      tokens,\n      regex,\n      rawMatches,\n      matches,\n      result,\n      zone,\n      specificOffset\n    };\n  }\n}\nexport function parseFromTokens(locale, input, format) {\n  const {\n    result,\n    zone,\n    specificOffset,\n    invalidReason\n  } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\nexport function formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n  return parts.map(p => tokenForPart(p, locale, formatOpts));\n}","map":{"version":3,"names":["parseMillis","isUndefined","untruncateYear","signedOffset","hasOwnProperty","Formatter","FixedOffsetZone","IANAZone","DateTime","digitRegex","parseDigits","ConflictingSpecificationError","MISSING_FTP","intUnit","regex","post","i","deser","s","NBSP","String","fromCharCode","spaceOrNBSP","spaceOrNBSPRegExp","RegExp","fixListRegex","replace","stripInsensitivities","toLowerCase","oneOf","strings","startIndex","map","join","findIndex","offset","groups","h","m","simple","escapeToken","value","unitForToken","token","loc","one","two","three","four","six","oneOrTwo","oneToThree","oneToSix","oneToNine","twoToFour","fourToSix","literal","t","val","unitate","eras","months","meridiems","weekdays","source","unit","invalidReason","partTypeStyleToTokenVal","year","numeric","month","short","long","day","weekday","dayperiod","dayPeriod","hour","minute","second","timeZoneName","tokenForPart","part","locale","formatOpts","type","style","undefined","buildRegex","units","re","u","reduce","f","r","match","input","handlers","matches","all","matchIndex","slice","dateTimeFromMatches","toField","zone","specificOffset","z","create","Z","q","M","a","G","y","S","vals","Object","keys","k","dummyDateTimeCache","getDummyDateTime","fromMillis","maybeExpandMacroToken","macroTokenToFormatOpts","tokens","formatOptsToTokens","includes","expandMacroTokens","Array","prototype","concat","explainFromTokens","format","parseFormat","disqualifyingUnit","find","regexString","rawMatches","result","parseFromTokens","formatter","parts","formatDateTimeParts","p"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/luxon/src/impl/tokenParser.js"],"sourcesContent":["import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = (i) => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex((i) => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex,\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = (t) => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = (t) => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\", false), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\", false), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true, false), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true, false), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false, false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false, false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false, false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false, false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true, false), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true, false), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP,\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\",\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\",\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\",\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\",\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\",\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\",\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\",\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\",\n  },\n};\n\nfunction tokenForPart(part, locale, formatOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value,\n    };\n  }\n\n  const style = formatOpts[type];\n\n  let val = partTypeStyleToTokenVal[type];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val,\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map((u) => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = (token) => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone, specificOffset];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nexport function expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map((t) => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map((t) => unitForToken(t, locale)),\n    disqualifyingUnit = units.find((t) => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone, specificOffset] = matches\n        ? dateTimeFromMatches(matches)\n        : [null, null, undefined];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone, specificOffset };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, specificOffset, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\n\nexport function formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n  return parts.map((p) => tokenForPart(p, locale, formatOpts));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}