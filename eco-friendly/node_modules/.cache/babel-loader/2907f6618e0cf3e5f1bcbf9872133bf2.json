{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport t from \"../core/CircularArray.js\";\nimport { isSome as e, mapOr as s } from \"../core/maybe.js\";\nimport { decodeGeohashXY as i } from \"./geohashUtils.js\";\nimport o from \"../geometry/SpatialReference.js\";\nimport { convertFromPolygon as n, quantizeOptimizedGeometry as a } from \"../layers/graphics/featureConversionUtils.js\";\nimport r from \"../layers/graphics/OptimizedGeometry.js\";\nimport { project as l } from \"../layers/graphics/data/projectionSupport.js\";\nimport { FeatureSetReaderJSON as h } from \"../views/2d/layers/features/support/FeatureSetReaderJSON.js\";\n\nclass c {\n  constructor(e = [], s, i = 8096) {\n    this.onRelease = t => {}, this._nodes = 0, this._root = new u(this, 0, 0, 0), this._statisticFields = e, this._pool = i ? new t(8096) : null, this._serviceInfo = s;\n  }\n\n  destroy() {\n    this.clear();\n  }\n\n  _acquire(t, s, i) {\n    this._nodes++;\n    let o = null;\n    return e(this._pool) && (o = this._pool.dequeue()), e(o) ? o.realloc(t, s, i) : o = new u(this, t, s, i), o;\n  }\n\n  _release(t) {\n    this.onRelease(t), this._nodes--, e(this._pool) && this._pool.enqueue(t);\n  }\n\n  get count() {\n    return this._root.count;\n  }\n\n  get size() {\n    return this._nodes;\n  }\n\n  get poolSize() {\n    return s(this._pool, 0, t => t.size);\n  }\n\n  get depth() {\n    let t = 0;\n    return this.forEach(e => t = Math.max(t, e.depth)), t;\n  }\n\n  dropLevels(t) {\n    this.forEach(e => {\n      if (e.depth >= t) for (let t = 0; t < e.children.length; t++) {\n        const s = e.children[t];\n        s && this._release(s);\n      }\n    }), this.forEach(e => {\n      if (e.depth >= t) for (let t = 0; t < e.children.length; t++) e.children[t] = null;\n    });\n  }\n\n  clear() {\n    this.forEach(t => this._release(t)), this._root = new u(this, 0, 0, 0);\n  }\n\n  insert(t, e, s = 0) {\n    const i = h.fromOptimizedFeatures([t], this._serviceInfo).getCursor();\n    i.next();\n    const o = i.readGeometry();\n    if (!o) return;\n    const [n, a] = o.coords,\n          r = t.geohashX,\n          l = t.geohashY;\n    this.insertCursor(i, t.displayId, n, a, r, l, e, s);\n  }\n\n  insertCursor(t, e, s, i, o, n, a, r = 0) {\n    let l = this._root,\n        h = 0,\n        c = 0,\n        u = 0;\n\n    for (; null !== l;) {\n      if (l.depth >= r && (l.count += 1, l.xTotal += s, l.yTotal += i, l.xGeohashTotal += o, l.yGeohashTotal += n, l.referenceId = e, this._updateStatisticsCursor(t, l, 1)), h >= a) return void l.add(e);\n\n      const d = Math.ceil((h + 1) / 2),\n            f = Math.floor((h + 1) / 2),\n            x = 1 - h % 2,\n            m = 30 - (3 * d + 2 * f),\n            p = 30 - (2 * d + 3 * f),\n            g = (o & 7 * x + 3 * (1 - x) << m) >> m,\n            y = (n & 3 * x + 7 * (1 - x) << p) >> p,\n            _ = g + y * (8 * x + 4 * (1 - x));\n\n      c = c << 3 * x + 2 * (1 - x) | g, u = u << 2 * x + 3 * (1 - x) | y, null == l.children[_] && (l.children[_] = this._acquire(c, u, h + 1)), h += 1, l = l.children[_];\n    }\n  }\n\n  remove(t, e) {\n    const s = h.fromOptimizedFeatures([t], this._serviceInfo).getCursor();\n    s.next();\n    const i = s.readGeometry();\n    if (!i) return;\n    const [o, n] = i.coords,\n          a = t.geohashX,\n          r = t.geohashY;\n    this.removeCursor(s, o, n, a, r, e);\n  }\n\n  removeCursor(t, e, s, i, o, n) {\n    let a = this._root,\n        r = 0;\n\n    for (; null !== a;) {\n      if (a.count -= 1, a.xTotal -= e, a.yTotal -= s, a.xGeohashTotal -= i, a.yGeohashTotal -= o, this._updateStatisticsCursor(t, a, -1), r >= n) return void a.remove(t.getDisplayId());\n      const l = Math.ceil((r + 1) / 2),\n            h = Math.floor((r + 1) / 2),\n            c = 1 - r % 2,\n            u = 30 - (3 * l + 2 * h),\n            d = 30 - (2 * l + 3 * h),\n            f = ((i & 7 * c + 3 * (1 - c) << u) >> u) + ((o & 3 * c + 7 * (1 - c) << d) >> d) * (8 * c + 4 * (1 - c)),\n            x = a.children[f];\n      1 === x.count && (this._release(x), a.children[f] = null), r += 1, a = x;\n    }\n  }\n\n  forEach(t) {\n    let e = this._root;\n\n    for (; null !== e;) {\n      const s = this._linkChildren(e) || e.next;\n      t(e), e = s;\n    }\n  }\n\n  find(t, e, s) {\n    return this._root.find(t, e, s, 0, 0, 0);\n  }\n\n  findIf(t) {\n    let e = null;\n    return this.forEach(s => {\n      t(s) && (e = s);\n    }), e;\n  }\n\n  findAllIf(t) {\n    const e = [];\n    return this.forEach(s => {\n      t(s) && e.push(s);\n    }), e;\n  }\n\n  findSingleOccupancyNode(t, e, s, i, o) {\n    let n = this._root;\n\n    for (; null !== n;) {\n      const a = n.depth,\n            r = n.xNode,\n            l = n.yNode,\n            h = 1 - a % 2,\n            c = n.xGeohashTotal / n.count,\n            u = n.yGeohashTotal / n.count;\n      if (1 === n.count && t < c && c <= s && e < u && u <= i) return n;\n\n      if (a >= o) {\n        n = n.next;\n        continue;\n      }\n\n      const d = Math.ceil((a + 1) / 2),\n            f = Math.floor((a + 1) / 2),\n            x = 30 - (3 * d + 2 * f),\n            m = 30 - (2 * d + 3 * f),\n            p = ~((1 << x) - 1),\n            g = ~((1 << m) - 1),\n            y = (t & p) >> x,\n            _ = (e & g) >> m,\n            M = (s & p) >> x,\n            N = (i & g) >> m,\n            T = r << 3 * h + 2 * (1 - h),\n            I = l << 2 * h + 3 * (1 - h),\n            S = T + 8 * h + 4 * (1 - h),\n            v = I + 4 * h + 8 * (1 - h),\n            C = Math.max(T, y),\n            b = Math.max(I, _),\n            G = Math.min(S, M),\n            k = Math.min(v, N);\n\n      let F = null,\n          z = null;\n\n      for (let t = b; t <= k; t++) for (let e = C; e <= G; e++) {\n        const s = e - T + (t - I) * (8 * h + 4 * (1 - h)),\n              i = n.children[s];\n        i && (F || (F = i, F.next = n.next), z && (z.next = i), z = i, i.next = n.next);\n      }\n\n      n = F || n.next;\n    }\n\n    return null;\n  }\n\n  getRegionDisplayIds(t, e, s, i, o) {\n    let n = this._root;\n    const a = [];\n\n    for (; null !== n;) {\n      const r = n.depth,\n            l = n.xNode,\n            h = n.yNode;\n\n      if (r >= o) {\n        const o = n.xGeohashTotal / n.count,\n              r = n.yGeohashTotal / n.count;\n        t <= o && o <= s && e <= r && r <= i && n.displayIds.forEach(t => a.push(t)), n = n.next;\n        continue;\n      }\n\n      const c = Math.ceil((r + 1) / 2),\n            u = Math.floor((r + 1) / 2),\n            d = 1 - r % 2,\n            f = 30 - (3 * c + 2 * u),\n            x = 30 - (2 * c + 3 * u),\n            m = ~((1 << f) - 1),\n            p = ~((1 << x) - 1),\n            g = (t & m) >> f,\n            y = (e & p) >> x,\n            _ = (s & m) >> f,\n            M = (i & p) >> x,\n            N = l << 3 * d + 2 * (1 - d),\n            T = h << 2 * d + 3 * (1 - d),\n            I = N + 8 * d + 4 * (1 - d),\n            S = T + 4 * d + 8 * (1 - d),\n            v = Math.max(N, g),\n            C = Math.max(T, y),\n            b = Math.min(I, _),\n            G = Math.min(S, M);\n\n      let k = null,\n          F = null;\n\n      for (let t = C; t <= G; t++) for (let e = v; e <= b; e++) {\n        const s = e - N + (t - T) * (8 * d + 4 * (1 - d)),\n              i = n.children[s];\n        i && (k || (k = i, k.next = n.next), F && (F.next = i), F = i, i.next = n.next);\n      }\n\n      n = k || n.next;\n    }\n\n    return a;\n  }\n\n  getRegionStatistics(t, e, s, i, o) {\n    let n = this._root,\n        a = 0,\n        r = 0,\n        l = 0;\n    const h = {};\n    let c = 0;\n\n    for (; null !== n;) {\n      const u = n.depth,\n            d = n.xNode,\n            f = n.yNode;\n\n      if (u >= o) {\n        const o = n.xGeohashTotal / n.count,\n              u = n.yGeohashTotal / n.count;\n        t < o && o <= s && e < u && u <= i && (a += n.count, r += n.xTotal, l += n.yTotal, 1 === n.count && (c = n.referenceId), this._aggregateStatistics(h, n.statistics)), n = n.next;\n        continue;\n      }\n\n      const x = Math.ceil((u + 1) / 2),\n            m = Math.floor((u + 1) / 2),\n            p = 1 - u % 2,\n            g = 30 - (3 * x + 2 * m),\n            y = 30 - (2 * x + 3 * m),\n            _ = ~((1 << g) - 1),\n            M = ~((1 << y) - 1),\n            N = (t & _) >> g,\n            T = (e & M) >> y,\n            I = (s & _) >> g,\n            S = (i & M) >> y,\n            v = d << 3 * p + 2 * (1 - p),\n            C = f << 2 * p + 3 * (1 - p),\n            b = v + 8 * p + 4 * (1 - p),\n            G = C + 4 * p + 8 * (1 - p),\n            k = Math.max(v, N),\n            F = Math.max(C, T),\n            z = Math.min(b, I),\n            w = Math.min(G, S);\n\n      let j = null,\n          E = null;\n\n      for (let o = F; o <= w; o++) for (let u = k; u <= z; u++) {\n        const d = u - v + (o - C) * (8 * p + 4 * (1 - p)),\n              f = n.children[d];\n\n        if (f) {\n          if (o !== F && o !== w && u !== k && u !== z) {\n            const o = f.xGeohashTotal / f.count,\n                  u = f.yGeohashTotal / f.count;\n            t < o && o <= s && e < u && u <= i && (a += f.count, r += f.xTotal, l += f.yTotal, 1 === n.count && (c = n.referenceId), this._aggregateStatistics(h, f.statistics));\n            continue;\n          }\n\n          j || (j = f, j.next = n.next), E && (E.next = f), E = f, f.next = n.next;\n        }\n      }\n\n      n = j || n.next;\n    }\n\n    return {\n      count: a,\n      attributes: this.normalizeStatistics(h, a),\n      xTotal: r,\n      yTotal: l,\n      referenceId: c\n    };\n  }\n\n  getBins(t, e, s, i, o) {\n    const n = [];\n    let a = this._root;\n\n    for (; null !== a;) {\n      const r = a.depth,\n            l = a.xNode,\n            h = a.yNode;\n\n      if (r >= o) {\n        n.push(a), a = a.next;\n        continue;\n      }\n\n      const c = Math.ceil((r + 1) / 2),\n            u = Math.floor((r + 1) / 2),\n            d = 1 - r % 2,\n            f = 30 - (3 * c + 2 * u),\n            x = 30 - (2 * c + 3 * u),\n            m = ~((1 << f) - 1),\n            p = ~((1 << x) - 1),\n            g = (t & m) >> f,\n            y = (e & p) >> x,\n            _ = (s & m) >> f,\n            M = (i & p) >> x,\n            N = l << 3 * d + 2 * (1 - d),\n            T = h << 2 * d + 3 * (1 - d),\n            I = N + 8 * d + 4 * (1 - d),\n            S = T + 4 * d + 8 * (1 - d),\n            v = Math.max(N, g),\n            C = Math.max(T, y),\n            b = Math.min(I, _),\n            G = Math.min(S, M);\n\n      let k = null,\n          F = null;\n\n      for (let t = C; t <= G; t++) for (let e = v; e <= b; e++) {\n        const s = e - N + (t - T) * (8 * d + 4 * (1 - d)),\n              i = a.children[s];\n        i && (k || (k = i, k.next = a.next), F && (F.next = i), F = i, i.next = a.next);\n      }\n\n      a = k || a.next;\n    }\n\n    return n;\n  }\n\n  _linkChildren(t) {\n    let e = null,\n        s = null;\n\n    for (let i = 0; i <= t.children.length; i++) {\n      const o = t.children[i];\n      o && (e || (e = o, e.next = t.next), s && (s.next = o), s = o, o.next = t.next);\n    }\n\n    return e;\n  }\n\n  _updateStatisticsCursor(t, e, s) {\n    for (const i of this._statisticFields) {\n      const o = i.name,\n            n = i.inField ? t.readAttribute(i.inField) : t.getComputedNumericAtIndex(i.inFieldIndex);\n\n      switch (i.statisticType) {\n        case \"norm\":\n          {\n            e.statistics[o] || (e.statistics[o] = {});\n            const a = i.inNormalizationField,\n                  r = t.readAttribute(a),\n                  l = e.statistics[o].onStatisticField || 0,\n                  h = e.statistics[o].onStatisticNormalizationField || 0;\n            null == n || isNaN(n) || null == r || 0 === r || isNaN(r) || (e.statistics[o].onStatisticField = l + s * n, e.statistics[o].onStatisticNormalizationField = h + s * r);\n            break;\n          }\n\n        case \"sum\":\n        case \"avg\":\n          {\n            e.statistics[o] || (e.statistics[o] = {\n              value: 0,\n              nanCount: 0\n            });\n            const t = e.statistics[o].value,\n                  i = e.statistics[o].nanCount;\n            null == n || isNaN(n) ? e.statistics[o].nanCount = i + s : e.statistics[o].value = t + s * n;\n            break;\n          }\n\n        case \"avg_angle\":\n          {\n            e.statistics[o] || (e.statistics[o] = {\n              x: 0,\n              y: 0,\n              nanCount: 0\n            });\n            const t = e.statistics[o].x,\n                  i = e.statistics[o].y,\n                  a = e.statistics[o].nanCount,\n                  r = Math.PI / 180;\n            null == n || isNaN(n) ? e.statistics[o].nanCount = a + s : (e.statistics[o].x = t + s * Math.cos(n * r), e.statistics[o].y = i + s * Math.sin(n * r));\n            break;\n          }\n\n        case \"mode\":\n          {\n            e.statistics[o] || (e.statistics[o] = {});\n            const t = e.statistics[o][n] || 0;\n            e.statistics[o][n] = t + s;\n            break;\n          }\n      }\n    }\n  }\n\n  _aggregateStatistics(t, e) {\n    for (const s of this._statisticFields) {\n      const i = s.name;\n\n      switch (s.statisticType) {\n        case \"sum\":\n        case \"avg\":\n        case \"avg_angle\":\n        case \"mode\":\n        case \"norm\":\n          t[i] || (t[i] = {});\n\n          for (const s in e[i]) {\n            const o = t[i][s] || 0;\n            t[i][s] = o + e[i][s];\n          }\n\n      }\n    }\n  }\n\n  normalizeStatistics(t, e) {\n    const s = {};\n\n    for (const i of this._statisticFields) {\n      const o = i.name;\n\n      switch (i.statisticType) {\n        case \"norm\":\n          {\n            const i = t[o];\n            if (e && null == i.onStatisticNormalizationField) break;\n\n            if (e && i.onStatisticNormalizationField) {\n              s[o] = i.onStatisticField / i.onStatisticNormalizationField;\n              break;\n            }\n\n            s[o] = 0;\n            break;\n          }\n\n        case \"sum\":\n          {\n            if (!e) break;\n            const {\n              value: i,\n              nanCount: n\n            } = t[o];\n            if (!(e - n)) break;\n            s[o] = i;\n            break;\n          }\n\n        case \"avg\":\n          {\n            if (!e) break;\n            const {\n              value: i,\n              nanCount: n\n            } = t[o];\n            if (!(e - n)) break;\n            s[o] = i / (e - n);\n            break;\n          }\n\n        case \"avg_angle\":\n          {\n            if (!e) break;\n            const {\n              x: i,\n              y: n,\n              nanCount: a\n            } = t[o];\n            if (!(e - a)) break;\n            const r = i / (e - a),\n                  l = n / (e - a),\n                  h = 180 / Math.PI,\n                  c = Math.atan2(l, r) * h;\n            s[o] = c;\n            break;\n          }\n\n        case \"mode\":\n          {\n            const e = t[o];\n            let i = 0,\n                n = null;\n\n            for (const t in e) {\n              const s = e[t];\n              s > i && (i = s, n = t);\n            }\n\n            s[o] = \"null\" === n ? null : n;\n            break;\n          }\n      }\n    }\n\n    return s;\n  }\n\n}\n\nclass u {\n  constructor(t, e, s, i) {\n    this.count = 0, this.xTotal = 0, this.yTotal = 0, this.statistics = {}, this.displayId = 0, this.referenceId = 0, this.displayIds = new Set(), this.next = null, this.depth = 0, this.xNode = 0, this.yNode = 0, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this._tree = t, this.children = new Array(32);\n\n    for (let o = 0; o < this.children.length; o++) this.children[o] = null;\n\n    this.xNode = e, this.yNode = s, this.depth = i;\n  }\n\n  realloc(t, e, s) {\n    for (let i = 0; i < this.children.length; i++) this.children[i] = null;\n\n    return this.xNode = t, this.yNode = e, this.depth = s, this.next = null, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this.displayId = 0, this.referenceId = 0, this.xTotal = 0, this.yTotal = 0, this.count = 0, this.statistics = {}, this.displayIds.clear(), this;\n  }\n\n  get id() {\n    return `${this.xNode}.${this.yNode}`;\n  }\n\n  add(t) {\n    this.displayIds.add(t);\n  }\n\n  remove(t) {\n    this.displayIds.delete(t);\n  }\n\n  getAttributes() {\n    const t = this._tree.normalizeStatistics(this.statistics, this.count);\n\n    return t.aggregateId = this.id, t.aggregateCount = this.count, t;\n  }\n\n  getGeometry(t, s) {\n    const i = this.getLngLatBounds(),\n          [h, c, u, d] = i,\n          f = l({\n      rings: [[[h, c], [h, d], [u, d], [u, c], [h, c]]]\n    }, o.WGS84, t),\n          x = n(new r(), f, !1, !1);\n    return e(s) ? a(new r(), x, !1, !1, \"esriGeometryPolygon\", s, !1, !1) : x;\n  }\n\n  getLngLatBounds() {\n    const t = this.depth,\n          e = Math.ceil(t / 2),\n          s = Math.floor(t / 2),\n          o = 30 - (3 * e + 2 * s),\n          n = 30 - (2 * e + 3 * s),\n          a = this.xNode << o,\n          r = this.yNode << n;\n    return i({\n      geohashX: a,\n      geohashY: r\n    }, this.depth);\n  }\n\n  find(t, e, s, i, o, n) {\n    if (i >= s) return this;\n    const a = 1 - i % 2,\n          r = 3 * a + 2 * (1 - a),\n          l = 2 * a + 3 * (1 - a),\n          h = 30 - o - r,\n          c = 30 - n - l,\n          u = ((t & 7 * a + 3 * (1 - a) << h) >> h) + ((e & 3 * a + 7 * (1 - a) << c) >> c) * (8 * a + 4 * (1 - a)),\n          d = this.children[u];\n    return null == d ? null : d.find(t, e, s, i + 1, o + r, n + l);\n  }\n\n}\n\nexport { u as GeohashNode, c as GeohashTree };","map":{"version":3,"names":["t","isSome","e","mapOr","s","decodeGeohashXY","i","o","convertFromPolygon","n","quantizeOptimizedGeometry","a","r","project","l","FeatureSetReaderJSON","h","c","constructor","onRelease","_nodes","_root","u","_statisticFields","_pool","_serviceInfo","destroy","clear","_acquire","dequeue","realloc","_release","enqueue","count","size","poolSize","depth","forEach","Math","max","dropLevels","children","length","insert","fromOptimizedFeatures","getCursor","next","readGeometry","coords","geohashX","geohashY","insertCursor","displayId","xTotal","yTotal","xGeohashTotal","yGeohashTotal","referenceId","_updateStatisticsCursor","add","d","ceil","f","floor","x","m","p","g","y","_","remove","removeCursor","getDisplayId","_linkChildren","find","findIf","findAllIf","push","findSingleOccupancyNode","xNode","yNode","M","N","T","I","S","v","C","b","G","min","k","F","z","getRegionDisplayIds","displayIds","getRegionStatistics","_aggregateStatistics","statistics","w","j","E","attributes","normalizeStatistics","getBins","name","inField","readAttribute","getComputedNumericAtIndex","inFieldIndex","statisticType","inNormalizationField","onStatisticField","onStatisticNormalizationField","isNaN","value","nanCount","PI","cos","sin","atan2","Set","_tree","Array","id","delete","getAttributes","aggregateId","aggregateCount","getGeometry","getLngLatBounds","rings","WGS84","GeohashNode","GeohashTree"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/geohash/GeohashTree.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport t from\"../core/CircularArray.js\";import{isSome as e,mapOr as s}from\"../core/maybe.js\";import{decodeGeohashXY as i}from\"./geohashUtils.js\";import o from\"../geometry/SpatialReference.js\";import{convertFromPolygon as n,quantizeOptimizedGeometry as a}from\"../layers/graphics/featureConversionUtils.js\";import r from\"../layers/graphics/OptimizedGeometry.js\";import{project as l}from\"../layers/graphics/data/projectionSupport.js\";import{FeatureSetReaderJSON as h}from\"../views/2d/layers/features/support/FeatureSetReaderJSON.js\";class c{constructor(e=[],s,i=8096){this.onRelease=t=>{},this._nodes=0,this._root=new u(this,0,0,0),this._statisticFields=e,this._pool=i?new t(8096):null,this._serviceInfo=s}destroy(){this.clear()}_acquire(t,s,i){this._nodes++;let o=null;return e(this._pool)&&(o=this._pool.dequeue()),e(o)?o.realloc(t,s,i):o=new u(this,t,s,i),o}_release(t){this.onRelease(t),this._nodes--,e(this._pool)&&this._pool.enqueue(t)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return s(this._pool,0,(t=>t.size))}get depth(){let t=0;return this.forEach((e=>t=Math.max(t,e.depth))),t}dropLevels(t){this.forEach((e=>{if(e.depth>=t)for(let t=0;t<e.children.length;t++){const s=e.children[t];s&&this._release(s)}})),this.forEach((e=>{if(e.depth>=t)for(let t=0;t<e.children.length;t++)e.children[t]=null}))}clear(){this.forEach((t=>this._release(t))),this._root=new u(this,0,0,0)}insert(t,e,s=0){const i=h.fromOptimizedFeatures([t],this._serviceInfo).getCursor();i.next();const o=i.readGeometry();if(!o)return;const[n,a]=o.coords,r=t.geohashX,l=t.geohashY;this.insertCursor(i,t.displayId,n,a,r,l,e,s)}insertCursor(t,e,s,i,o,n,a,r=0){let l=this._root,h=0,c=0,u=0;for(;null!==l;){if(l.depth>=r&&(l.count+=1,l.xTotal+=s,l.yTotal+=i,l.xGeohashTotal+=o,l.yGeohashTotal+=n,l.referenceId=e,this._updateStatisticsCursor(t,l,1)),h>=a)return void l.add(e);const d=Math.ceil((h+1)/2),f=Math.floor((h+1)/2),x=1-h%2,m=30-(3*d+2*f),p=30-(2*d+3*f),g=(o&7*x+3*(1-x)<<m)>>m,y=(n&3*x+7*(1-x)<<p)>>p,_=g+y*(8*x+4*(1-x));c=c<<3*x+2*(1-x)|g,u=u<<2*x+3*(1-x)|y,null==l.children[_]&&(l.children[_]=this._acquire(c,u,h+1)),h+=1,l=l.children[_]}}remove(t,e){const s=h.fromOptimizedFeatures([t],this._serviceInfo).getCursor();s.next();const i=s.readGeometry();if(!i)return;const[o,n]=i.coords,a=t.geohashX,r=t.geohashY;this.removeCursor(s,o,n,a,r,e)}removeCursor(t,e,s,i,o,n){let a=this._root,r=0;for(;null!==a;){if(a.count-=1,a.xTotal-=e,a.yTotal-=s,a.xGeohashTotal-=i,a.yGeohashTotal-=o,this._updateStatisticsCursor(t,a,-1),r>=n)return void a.remove(t.getDisplayId());const l=Math.ceil((r+1)/2),h=Math.floor((r+1)/2),c=1-r%2,u=30-(3*l+2*h),d=30-(2*l+3*h),f=((i&7*c+3*(1-c)<<u)>>u)+((o&3*c+7*(1-c)<<d)>>d)*(8*c+4*(1-c)),x=a.children[f];1===x.count&&(this._release(x),a.children[f]=null),r+=1,a=x}}forEach(t){let e=this._root;for(;null!==e;){const s=this._linkChildren(e)||e.next;t(e),e=s}}find(t,e,s){return this._root.find(t,e,s,0,0,0)}findIf(t){let e=null;return this.forEach((s=>{t(s)&&(e=s)})),e}findAllIf(t){const e=[];return this.forEach((s=>{t(s)&&e.push(s)})),e}findSingleOccupancyNode(t,e,s,i,o){let n=this._root;for(;null!==n;){const a=n.depth,r=n.xNode,l=n.yNode,h=1-a%2,c=n.xGeohashTotal/n.count,u=n.yGeohashTotal/n.count;if(1===n.count&&t<c&&c<=s&&e<u&&u<=i)return n;if(a>=o){n=n.next;continue}const d=Math.ceil((a+1)/2),f=Math.floor((a+1)/2),x=30-(3*d+2*f),m=30-(2*d+3*f),p=~((1<<x)-1),g=~((1<<m)-1),y=(t&p)>>x,_=(e&g)>>m,M=(s&p)>>x,N=(i&g)>>m,T=r<<3*h+2*(1-h),I=l<<2*h+3*(1-h),S=T+8*h+4*(1-h),v=I+4*h+8*(1-h),C=Math.max(T,y),b=Math.max(I,_),G=Math.min(S,M),k=Math.min(v,N);let F=null,z=null;for(let t=b;t<=k;t++)for(let e=C;e<=G;e++){const s=e-T+(t-I)*(8*h+4*(1-h)),i=n.children[s];i&&(F||(F=i,F.next=n.next),z&&(z.next=i),z=i,i.next=n.next)}n=F||n.next}return null}getRegionDisplayIds(t,e,s,i,o){let n=this._root;const a=[];for(;null!==n;){const r=n.depth,l=n.xNode,h=n.yNode;if(r>=o){const o=n.xGeohashTotal/n.count,r=n.yGeohashTotal/n.count;t<=o&&o<=s&&e<=r&&r<=i&&n.displayIds.forEach((t=>a.push(t))),n=n.next;continue}const c=Math.ceil((r+1)/2),u=Math.floor((r+1)/2),d=1-r%2,f=30-(3*c+2*u),x=30-(2*c+3*u),m=~((1<<f)-1),p=~((1<<x)-1),g=(t&m)>>f,y=(e&p)>>x,_=(s&m)>>f,M=(i&p)>>x,N=l<<3*d+2*(1-d),T=h<<2*d+3*(1-d),I=N+8*d+4*(1-d),S=T+4*d+8*(1-d),v=Math.max(N,g),C=Math.max(T,y),b=Math.min(I,_),G=Math.min(S,M);let k=null,F=null;for(let t=C;t<=G;t++)for(let e=v;e<=b;e++){const s=e-N+(t-T)*(8*d+4*(1-d)),i=n.children[s];i&&(k||(k=i,k.next=n.next),F&&(F.next=i),F=i,i.next=n.next)}n=k||n.next}return a}getRegionStatistics(t,e,s,i,o){let n=this._root,a=0,r=0,l=0;const h={};let c=0;for(;null!==n;){const u=n.depth,d=n.xNode,f=n.yNode;if(u>=o){const o=n.xGeohashTotal/n.count,u=n.yGeohashTotal/n.count;t<o&&o<=s&&e<u&&u<=i&&(a+=n.count,r+=n.xTotal,l+=n.yTotal,1===n.count&&(c=n.referenceId),this._aggregateStatistics(h,n.statistics)),n=n.next;continue}const x=Math.ceil((u+1)/2),m=Math.floor((u+1)/2),p=1-u%2,g=30-(3*x+2*m),y=30-(2*x+3*m),_=~((1<<g)-1),M=~((1<<y)-1),N=(t&_)>>g,T=(e&M)>>y,I=(s&_)>>g,S=(i&M)>>y,v=d<<3*p+2*(1-p),C=f<<2*p+3*(1-p),b=v+8*p+4*(1-p),G=C+4*p+8*(1-p),k=Math.max(v,N),F=Math.max(C,T),z=Math.min(b,I),w=Math.min(G,S);let j=null,E=null;for(let o=F;o<=w;o++)for(let u=k;u<=z;u++){const d=u-v+(o-C)*(8*p+4*(1-p)),f=n.children[d];if(f){if(o!==F&&o!==w&&u!==k&&u!==z){const o=f.xGeohashTotal/f.count,u=f.yGeohashTotal/f.count;t<o&&o<=s&&e<u&&u<=i&&(a+=f.count,r+=f.xTotal,l+=f.yTotal,1===n.count&&(c=n.referenceId),this._aggregateStatistics(h,f.statistics));continue}j||(j=f,j.next=n.next),E&&(E.next=f),E=f,f.next=n.next}}n=j||n.next}return{count:a,attributes:this.normalizeStatistics(h,a),xTotal:r,yTotal:l,referenceId:c}}getBins(t,e,s,i,o){const n=[];let a=this._root;for(;null!==a;){const r=a.depth,l=a.xNode,h=a.yNode;if(r>=o){n.push(a),a=a.next;continue}const c=Math.ceil((r+1)/2),u=Math.floor((r+1)/2),d=1-r%2,f=30-(3*c+2*u),x=30-(2*c+3*u),m=~((1<<f)-1),p=~((1<<x)-1),g=(t&m)>>f,y=(e&p)>>x,_=(s&m)>>f,M=(i&p)>>x,N=l<<3*d+2*(1-d),T=h<<2*d+3*(1-d),I=N+8*d+4*(1-d),S=T+4*d+8*(1-d),v=Math.max(N,g),C=Math.max(T,y),b=Math.min(I,_),G=Math.min(S,M);let k=null,F=null;for(let t=C;t<=G;t++)for(let e=v;e<=b;e++){const s=e-N+(t-T)*(8*d+4*(1-d)),i=a.children[s];i&&(k||(k=i,k.next=a.next),F&&(F.next=i),F=i,i.next=a.next)}a=k||a.next}return n}_linkChildren(t){let e=null,s=null;for(let i=0;i<=t.children.length;i++){const o=t.children[i];o&&(e||(e=o,e.next=t.next),s&&(s.next=o),s=o,o.next=t.next)}return e}_updateStatisticsCursor(t,e,s){for(const i of this._statisticFields){const o=i.name,n=i.inField?t.readAttribute(i.inField):t.getComputedNumericAtIndex(i.inFieldIndex);switch(i.statisticType){case\"norm\":{e.statistics[o]||(e.statistics[o]={});const a=i.inNormalizationField,r=t.readAttribute(a),l=e.statistics[o].onStatisticField||0,h=e.statistics[o].onStatisticNormalizationField||0;null==n||isNaN(n)||null==r||0===r||isNaN(r)||(e.statistics[o].onStatisticField=l+s*n,e.statistics[o].onStatisticNormalizationField=h+s*r);break}case\"sum\":case\"avg\":{e.statistics[o]||(e.statistics[o]={value:0,nanCount:0});const t=e.statistics[o].value,i=e.statistics[o].nanCount;null==n||isNaN(n)?e.statistics[o].nanCount=i+s:e.statistics[o].value=t+s*n;break}case\"avg_angle\":{e.statistics[o]||(e.statistics[o]={x:0,y:0,nanCount:0});const t=e.statistics[o].x,i=e.statistics[o].y,a=e.statistics[o].nanCount,r=Math.PI/180;null==n||isNaN(n)?e.statistics[o].nanCount=a+s:(e.statistics[o].x=t+s*Math.cos(n*r),e.statistics[o].y=i+s*Math.sin(n*r));break}case\"mode\":{e.statistics[o]||(e.statistics[o]={});const t=e.statistics[o][n]||0;e.statistics[o][n]=t+s;break}}}}_aggregateStatistics(t,e){for(const s of this._statisticFields){const i=s.name;switch(s.statisticType){case\"sum\":case\"avg\":case\"avg_angle\":case\"mode\":case\"norm\":t[i]||(t[i]={});for(const s in e[i]){const o=t[i][s]||0;t[i][s]=o+e[i][s]}}}}normalizeStatistics(t,e){const s={};for(const i of this._statisticFields){const o=i.name;switch(i.statisticType){case\"norm\":{const i=t[o];if(e&&null==i.onStatisticNormalizationField)break;if(e&&i.onStatisticNormalizationField){s[o]=i.onStatisticField/i.onStatisticNormalizationField;break}s[o]=0;break}case\"sum\":{if(!e)break;const{value:i,nanCount:n}=t[o];if(!(e-n))break;s[o]=i;break}case\"avg\":{if(!e)break;const{value:i,nanCount:n}=t[o];if(!(e-n))break;s[o]=i/(e-n);break}case\"avg_angle\":{if(!e)break;const{x:i,y:n,nanCount:a}=t[o];if(!(e-a))break;const r=i/(e-a),l=n/(e-a),h=180/Math.PI,c=Math.atan2(l,r)*h;s[o]=c;break}case\"mode\":{const e=t[o];let i=0,n=null;for(const t in e){const s=e[t];s>i&&(i=s,n=t)}s[o]=\"null\"===n?null:n;break}}}return s}}class u{constructor(t,e,s,i){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.referenceId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this._tree=t,this.children=new Array(32);for(let o=0;o<this.children.length;o++)this.children[o]=null;this.xNode=e,this.yNode=s,this.depth=i}realloc(t,e,s){for(let i=0;i<this.children.length;i++)this.children[i]=null;return this.xNode=t,this.yNode=e,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.displayId=0,this.referenceId=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}get id(){return`${this.xNode}.${this.yNode}`}add(t){this.displayIds.add(t)}remove(t){this.displayIds.delete(t)}getAttributes(){const t=this._tree.normalizeStatistics(this.statistics,this.count);return t.aggregateId=this.id,t.aggregateCount=this.count,t}getGeometry(t,s){const i=this.getLngLatBounds(),[h,c,u,d]=i,f=l({rings:[[[h,c],[h,d],[u,d],[u,c],[h,c]]]},o.WGS84,t),x=n(new r,f,!1,!1);return e(s)?a(new r,x,!1,!1,\"esriGeometryPolygon\",s,!1,!1):x}getLngLatBounds(){const t=this.depth,e=Math.ceil(t/2),s=Math.floor(t/2),o=30-(3*e+2*s),n=30-(2*e+3*s),a=this.xNode<<o,r=this.yNode<<n;return i({geohashX:a,geohashY:r},this.depth)}find(t,e,s,i,o,n){if(i>=s)return this;const a=1-i%2,r=3*a+2*(1-a),l=2*a+3*(1-a),h=30-o-r,c=30-n-l,u=((t&7*a+3*(1-a)<<h)>>h)+((e&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),d=this.children[u];return null==d?null:d.find(t,e,s,i+1,o+r,n+l)}}export{u as GeohashNode,c as GeohashTree};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}