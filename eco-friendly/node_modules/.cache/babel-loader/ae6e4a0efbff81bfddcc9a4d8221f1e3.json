{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { DISPLAY_RECORD_INT_PER_ELEMENT as e } from \"../definitions.js\";\nimport { getMeshSizeHint as t } from \"./heuristics.js\";\nimport s from \"../util/Writer.js\";\n\nclass r {\n  constructor(e, r, i) {\n    this._start = {\n      index: 0,\n      vertex: 0\n    };\n    const h = t(e, r, i),\n          c = r / 4;\n    this.geometryType = e, this._records = new s(Int32Array, h.recordBytes), this._indices = new s(Uint32Array, h.indexBytes), this._vertices = new s(Uint32Array, h.vertexBytes), this._metrics = new s(Float32Array, 0), this._strideInt = c;\n  }\n\n  serialize(e) {\n    const t = this._records.buffer(),\n          s = this._indices.buffer(),\n          r = this._vertices.buffer(),\n          i = this._metrics.length ? this._metrics.buffer() : null,\n          h = 4 * this._strideInt;\n\n    return e.push(t, s, r), {\n      stride: h,\n      records: t,\n      indices: s,\n      vertices: r,\n      metrics: i\n    };\n  }\n\n  get strideInt() {\n    return this._strideInt;\n  }\n\n  get recordCount() {\n    return this._records.length / e;\n  }\n\n  get vertexCount() {\n    return this._vertices.length / this._strideInt;\n  }\n\n  get indexCount() {\n    return this._indices.length;\n  }\n\n  get indexWriter() {\n    return this._indices;\n  }\n\n  get vertexWriter() {\n    return this._vertices;\n  }\n\n  get metricWriter() {\n    return this._metrics;\n  }\n\n  vertexEnsureSize(e) {\n    this._vertices.ensureSize(e);\n  }\n\n  indexEnsureSize(e) {\n    this._indices.ensureSize(e);\n  }\n\n  recordStart() {\n    this._start.index = this._indices.length, this._start.vertex = this._vertices.length;\n  }\n\n  recordEnd(e, t, s, r, i, h, c, n) {\n    this._records.push(e), this._records.push(t), this._records.push(s), this._records.push(r), this._records.push(i), this._records.push(h), this._records.push(c), this._records.writeF32(n);\n  }\n\n  writeIndex(e) {\n    this._indices.push(e);\n  }\n\n  writeVertex(e) {\n    this._vertices.push(e);\n  }\n\n  writeVertexF32(e) {\n    this._vertices.writeF32(e);\n  }\n\n  copyLastFrom(t, s, r) {\n    const i = t._records.length - e,\n          h = t._records.getValue(i),\n          c = t._records.getValue(i + 1),\n          n = t._records.getValue(i + 2),\n          _ = t._records.getValue(i + 4),\n          d = t._records.getValue(i + 6),\n          o = t._records.getValue(i + 7),\n          u = this._vertices.length,\n          l = (t._start.vertex - this._vertices.length) / this._strideInt,\n          g = this._indices.length,\n          p = this.vertexCount;\n\n    for (let e = t._start.index; e !== t._indices.length; e++) {\n      const s = t._indices.getValue(e);\n\n      this._indices.push(s - l);\n    }\n\n    for (let e = t._start.vertex; e !== t._vertices.length; e++) {\n      const s = t._vertices.getValue(e);\n\n      this._vertices.push(s);\n    }\n\n    for (let e = u; e <= this._vertices.length; e += this._strideInt) this._vertices.i1616Add(e, s, r);\n\n    this._records.push(h), this._records.push(c), this._records.push(n), this._records.push(g), this._records.push(_), this._records.push(p), this._records.push(d), this._records.push(o);\n  }\n\n}\n\nexport { r as VertexDataWriter };","map":{"version":3,"names":["DISPLAY_RECORD_INT_PER_ELEMENT","e","getMeshSizeHint","t","s","r","constructor","i","_start","index","vertex","h","c","geometryType","_records","Int32Array","recordBytes","_indices","Uint32Array","indexBytes","_vertices","vertexBytes","_metrics","Float32Array","_strideInt","serialize","buffer","length","push","stride","records","indices","vertices","metrics","strideInt","recordCount","vertexCount","indexCount","indexWriter","vertexWriter","metricWriter","vertexEnsureSize","ensureSize","indexEnsureSize","recordStart","recordEnd","n","writeF32","writeIndex","writeVertex","writeVertexF32","copyLastFrom","getValue","_","d","o","u","l","g","p","i1616Add","VertexDataWriter"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/engine/webgl/mesh/VertexDataWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{DISPLAY_RECORD_INT_PER_ELEMENT as e}from\"../definitions.js\";import{getMeshSizeHint as t}from\"./heuristics.js\";import s from\"../util/Writer.js\";class r{constructor(e,r,i){this._start={index:0,vertex:0};const h=t(e,r,i),c=r/4;this.geometryType=e,this._records=new s(Int32Array,h.recordBytes),this._indices=new s(Uint32Array,h.indexBytes),this._vertices=new s(Uint32Array,h.vertexBytes),this._metrics=new s(Float32Array,0),this._strideInt=c}serialize(e){const t=this._records.buffer(),s=this._indices.buffer(),r=this._vertices.buffer(),i=this._metrics.length?this._metrics.buffer():null,h=4*this._strideInt;return e.push(t,s,r),{stride:h,records:t,indices:s,vertices:r,metrics:i}}get strideInt(){return this._strideInt}get recordCount(){return this._records.length/e}get vertexCount(){return this._vertices.length/this._strideInt}get indexCount(){return this._indices.length}get indexWriter(){return this._indices}get vertexWriter(){return this._vertices}get metricWriter(){return this._metrics}vertexEnsureSize(e){this._vertices.ensureSize(e)}indexEnsureSize(e){this._indices.ensureSize(e)}recordStart(){this._start.index=this._indices.length,this._start.vertex=this._vertices.length}recordEnd(e,t,s,r,i,h,c,n){this._records.push(e),this._records.push(t),this._records.push(s),this._records.push(r),this._records.push(i),this._records.push(h),this._records.push(c),this._records.writeF32(n)}writeIndex(e){this._indices.push(e)}writeVertex(e){this._vertices.push(e)}writeVertexF32(e){this._vertices.writeF32(e)}copyLastFrom(t,s,r){const i=t._records.length-e,h=t._records.getValue(i),c=t._records.getValue(i+1),n=t._records.getValue(i+2),_=t._records.getValue(i+4),d=t._records.getValue(i+6),o=t._records.getValue(i+7),u=this._vertices.length,l=(t._start.vertex-this._vertices.length)/this._strideInt,g=this._indices.length,p=this.vertexCount;for(let e=t._start.index;e!==t._indices.length;e++){const s=t._indices.getValue(e);this._indices.push(s-l)}for(let e=t._start.vertex;e!==t._vertices.length;e++){const s=t._vertices.getValue(e);this._vertices.push(s)}for(let e=u;e<=this._vertices.length;e+=this._strideInt)this._vertices.i1616Add(e,s,r);this._records.push(h),this._records.push(c),this._records.push(n),this._records.push(g),this._records.push(_),this._records.push(p),this._records.push(d),this._records.push(o)}}export{r as VertexDataWriter};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}