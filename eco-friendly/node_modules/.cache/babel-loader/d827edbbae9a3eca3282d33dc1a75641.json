{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { DecodeSymbolColor as o } from \"../../../collections/Component/Material/shader/DecodeSymbolColor.glsl.js\";\nimport { IntegerPassUniform as r } from \"../../shaderModules/IntegerPassUniform.js\";\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\nimport { VertexAttribute as l } from \"../../../lib/VertexAttribute.js\";\nimport { colorMixModes as d } from \"../../../materials/internal/MaterialUtil.js\";\n\nfunction i(i, t) {\n  t.hasSymbolColors ? (i.include(o), i.attributes.add(l.SYMBOLCOLOR, \"vec4\"), i.varyings.add(\"colorMixMode\", \"mediump float\"), i.vertex.code.add(e`int symbolColorMixMode;\nvec4 getSymbolColor() {\nreturn decodeSymbolColor(symbolColor, symbolColorMixMode) * 0.003921568627451;\n}\nvoid forwardColorMixMode() {\ncolorMixMode = float(symbolColorMixMode) + 0.5;\n}`)) : (i.fragment.uniforms.add(new r(\"colorMixMode\", o => d[o.colorMixMode])), i.vertex.code.add(e`vec4 getSymbolColor() { return vec4(1.0); }\nvoid forwardColorMixMode() {}`));\n}\n\nexport { i as SymbolColor };","map":{"version":3,"names":["DecodeSymbolColor","o","IntegerPassUniform","r","glsl","e","VertexAttribute","l","colorMixModes","d","i","t","hasSymbolColors","include","attributes","add","SYMBOLCOLOR","varyings","vertex","code","fragment","uniforms","colorMixMode","SymbolColor"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{DecodeSymbolColor as o}from\"../../../collections/Component/Material/shader/DecodeSymbolColor.glsl.js\";import{IntegerPassUniform as r}from\"../../shaderModules/IntegerPassUniform.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as l}from\"../../../lib/VertexAttribute.js\";import{colorMixModes as d}from\"../../../materials/internal/MaterialUtil.js\";function i(i,t){t.hasSymbolColors?(i.include(o),i.attributes.add(l.SYMBOLCOLOR,\"vec4\"),i.varyings.add(\"colorMixMode\",\"mediump float\"),i.vertex.code.add(e`int symbolColorMixMode;\nvec4 getSymbolColor() {\nreturn decodeSymbolColor(symbolColor, symbolColorMixMode) * 0.003921568627451;\n}\nvoid forwardColorMixMode() {\ncolorMixMode = float(symbolColorMixMode) + 0.5;\n}`)):(i.fragment.uniforms.add(new r(\"colorMixMode\",(o=>d[o.colorMixMode]))),i.vertex.code.add(e`vec4 getSymbolColor() { return vec4(1.0); }\nvoid forwardColorMixMode() {}`))}export{i as SymbolColor};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,iBAAiB,IAAIC,CAA5B,QAAkC,0EAAlC;AAA6G,SAAOC,kBAAkB,IAAIC,CAA7B,QAAmC,2CAAnC;AAA+E,SAAOC,IAAI,IAAIC,CAAf,QAAqB,mCAArB;AAAyD,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,iCAAhC;AAAkE,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,6CAA9B;;AAA4E,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;EAACA,CAAC,CAACC,eAAF,IAAmBF,CAAC,CAACG,OAAF,CAAUZ,CAAV,GAAaS,CAAC,CAACI,UAAF,CAAaC,GAAb,CAAiBR,CAAC,CAACS,WAAnB,EAA+B,MAA/B,CAAb,EAAoDN,CAAC,CAACO,QAAF,CAAWF,GAAX,CAAe,cAAf,EAA8B,eAA9B,CAApD,EAAmGL,CAAC,CAACQ,MAAF,CAASC,IAAT,CAAcJ,GAAd,CAAkBV,CAAE;AAC7hB;AACA;AACA;AACA;AACA;AACA,EANygB,CAAtH,KAM7YK,CAAC,CAACU,QAAF,CAAWC,QAAX,CAAoBN,GAApB,CAAwB,IAAIZ,CAAJ,CAAM,cAAN,EAAsBF,CAAC,IAAEQ,CAAC,CAACR,CAAC,CAACqB,YAAH,CAA1B,CAAxB,GAAsEZ,CAAC,CAACQ,MAAF,CAASC,IAAT,CAAcJ,GAAd,CAAkBV,CAAE;AAChG,8BAD4E,CANuU;AAOlX;;AAAA,SAAOK,CAAC,IAAIa,WAAZ"},"metadata":{},"sourceType":"module"}