{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"echartsbar\",\n\n  data() {\n    return {// cityallranks:[],\n      // cityaqirank:[]\n    };\n  },\n\n  mounted() {\n    this.initdata();\n    this.echartsInit();\n  },\n\n  methods: {\n    initdata() {// this.request.get(\"/nowatmospheredata/GetNowAQI\").then(res=>{\n      //   // if(res[0].aqi>res[2].aqi){\n      //   //   console.log(\"ok!\")\n      //   // }\n      //   var num=res.length\n      //   var i,j;\n      //   var temp;\n      //   for(i=num-1;i>0;i--){\n      //     for(j=0;j<i;j++){\n      //       if(res[j].aqi>res[j+1].aqi){\n      //         temp=res[j]\n      //         res[j]=res[j+1]\n      //         res[j+1]=temp\n      //       }\n      //     }\n      //   }\n      //   for(var k=0;k<res.length;k++){\n      //     if(res[k].aqi==null){continue}\n      //     else{\n      //       this.cityallranks.push(res[k])\n      //     }\n      //     if(this.cityallranks.length==7)break\n      //   }\n      //   for(var i=0;i<this.cityallranks.length;i++){\n      //     this.cityaqirank.push(this.cityallranks[i].city)\n      //   }\n      //\n      //   //console.log(this.cityaqirank)\n      // })\n    },\n\n    echartsInit() {\n      var cityallranks = [];\n      var cityaqirank = [];\n      this.request.get(\"/nowatmospheredata/GetNowAQI\").then(res => {\n        // if(res[0].aqi>res[2].aqi){\n        //   console.log(\"ok!\")\n        // }\n        var num = res.length;\n        var i, j;\n        var temp;\n\n        for (i = num - 1; i > 0; i--) {\n          for (j = 0; j < i; j++) {\n            if (res[j].aqi > res[j + 1].aqi) {\n              temp = res[j];\n              res[j] = res[j + 1];\n              res[j + 1] = temp;\n            }\n          }\n        }\n\n        for (var k = 0; k < res.length; k++) {\n          if (res[k].aqi == null) {\n            continue;\n          } else {\n            cityallranks.push(res[k]);\n          }\n\n          if (cityallranks.length == 7) break;\n        }\n\n        for (var i = 0; i < cityallranks.length; i++) {\n          cityaqirank.push(cityallranks[i].city);\n        }\n      });\n      console.log(cityaqirank); //2. 基于准备好的dom，初始化echarts实例\n      //3. 指定图表的配置项和数据\n\n      title: {\n        text: '测区空气质量当天排名';\n\n        textStyle: {\n          //文字颜色\n          color: '#fff';\n        }\n\n        top: '10px';\n      }\n\n      tooltip: {\n        trigger: 'axis';\n\n        axisPointer: {\n          // Use axis to trigger tooltip\n          type: 'shadow'; // 'shadow' as default; can also be 'line' or 'shadow'\n\n        }\n      }\n\n      legend: {}\n\n      grid: {\n        left: '0%';\n\n        right: '0%';\n\n        bottom: '3%';\n\n        containLabel: true;\n      }\n\n      xAxis: {\n        type: 'value';\n      }\n\n      yAxis: {\n        type: 'category';\n\n        data: ['合肥市', '芜湖市', '宿州市', '铜陵市', '安庆市', '马鞍山市'];\n      }\n\n      series: [{\n        name: 'AQI',\n        type: 'bar',\n        stack: 'total',\n        color: '#63b2ee ',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: [320, 302, 301, 334, 390, 330, 320]\n      }, {\n        name: 'CO',\n        type: 'bar',\n        stack: 'total',\n        color: '#63b2ee ',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: [320, 302, 301, 334, 390, 330, 320]\n      }, {\n        name: 'NO2',\n        type: 'bar',\n        stack: 'total',\n        color: '#76da91 ',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: [120, 132, 101, 134, 90, 230, 210]\n      }, {\n        name: 'PM2.5',\n        type: 'bar',\n        stack: 'total',\n        color: '#7cd6cf ',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: [100, 130, 89, 134, 90, 230, 210]\n      }, {\n        name: 'PM10',\n        type: 'bar',\n        stack: 'total',\n        color: '#9192ab ',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: [220, 182, 191, 234, 290, 330, 310]\n      }, {\n        name: 'SO2',\n        type: 'bar',\n        stack: 'total',\n        color: '#7898e1 ',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: [150, 212, 201, 154, 190, 330, 410]\n      }, {\n        name: 'O3',\n        type: 'bar',\n        stack: 'total',\n        color: '#63b2ee',\n        label: {\n          show: true\n        },\n        emphasis: {\n          focus: 'series'\n        },\n        data: [820, 832, 901, 934, 1290, 1330, 1320]\n      }];\n\n      var chartDom = document.getElementById('bar');\n      var myChart = echarts.init(chartDom);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAMA;AACA;EACAA,kBADA;;EAEAC;IACA,QACA;MACA;IAFA;EAIA,CAPA;;EAQAC;IACA;IACA;EACA,CAXA;;EAYAC;IACAC,YACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CA/BA;;IAgCAC;MACA;MACA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;UACA;YACA;cACAC;cACAC;cACAA;YACA;UACA;QACA;;QACA;UACA;YAAA;UAAA,OACA;YACAC;UACA;;UACA;QACA;;QACA;UACAC;QACA;MACA,CA1BA;MA2BAC,yBA9BA,CA+BA;MAEA;;MACAC;QACAC;;QACAC;UACA;UACAC;QACA;;QACAC;MACA;;MACAC;QACAC;;QACAC;UACA;UACAC,eAFA,CAEA;;QACA;MACA;;MACAC;;MACAC;QACAC;;QACAC;;QACAC;;QACAC;MACA;;MACAC;QACAP;MACA;;MACAQ;QACAR;;QACAlB;MACA;;MACA2B,SACA;QACA5B,WADA;QAEAmB,WAFA;QAGAU,cAHA;QAIAf,iBAJA;QAKAgB;UACAC;QADA,CALA;QAQAC;UACAC;QADA,CARA;QAWAhC;MAXA,CADA,EAcA;QACAD,UADA;QAEAmB,WAFA;QAGAU,cAHA;QAIAf,iBAJA;QAKAgB;UACAC;QADA,CALA;QAQAC;UACAC;QADA,CARA;QAWAhC;MAXA,CAdA,EA2BA;QACAD,WADA;QAEAmB,WAFA;QAGAU,cAHA;QAIAf,iBAJA;QAKAgB;UACAC;QADA,CALA;QAQAC;UACAC;QADA,CARA;QAWAhC;MAXA,CA3BA,EAwCA;QACAD,aADA;QAEAmB,WAFA;QAGAU,cAHA;QAIAf,iBAJA;QAKAgB;UACAC;QADA,CALA;QAQAC;UACAC;QADA,CARA;QAWAhC;MAXA,CAxCA,EAqDA;QACAD,YADA;QAEAmB,WAFA;QAGAU,cAHA;QAIAf,iBAJA;QAKAgB;UACAC;QADA,CALA;QAQAC;UACAC;QADA,CARA;QAWAhC;MAXA,CArDA,EAkEA;QACAD,WADA;QAEAmB,WAFA;QAGAU,cAHA;QAIAf,iBAJA;QAKAgB;UACAC;QADA,CALA;QAQAC;UACAC;QADA,CARA;QAWAhC;MAXA,CAlEA,EA+EA;QACAD,UADA;QAEAmB,WAFA;QAGAU,cAHA;QAIAf,gBAJA;QAKAgB;UACAC;QADA,CALA;QAQAC;UACAC;QADA,CARA;QAWAhC;MAXA,CA/EA;;MA+FA;MACA;IACA;;EAhMA;AAZA","names":["name","data","mounted","methods","initdata","echartsInit","temp","res","cityallranks","cityaqirank","console","title","text","textStyle","color","top","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","yAxis","series","stack","label","show","emphasis","focus"],"sourceRoot":"src/components","sources":["echartsbar.vue"],"sourcesContent":["<template>\r\n  <div id=\"bar\" style=\"height: 350px;\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport  * as echarts from 'echarts'\r\nexport default {\r\n  name: \"echartsbar\",\r\n  data() {\r\n    return {\r\n      // cityallranks:[],\r\n      // cityaqirank:[]\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initdata()\r\n    this.echartsInit()\r\n  },\r\n  methods: {\r\n    initdata(){\r\n      // this.request.get(\"/nowatmospheredata/GetNowAQI\").then(res=>{\r\n      //   // if(res[0].aqi>res[2].aqi){\r\n      //   //   console.log(\"ok!\")\r\n      //   // }\r\n      //   var num=res.length\r\n      //   var i,j;\r\n      //   var temp;\r\n      //   for(i=num-1;i>0;i--){\r\n      //     for(j=0;j<i;j++){\r\n      //       if(res[j].aqi>res[j+1].aqi){\r\n      //         temp=res[j]\r\n      //         res[j]=res[j+1]\r\n      //         res[j+1]=temp\r\n      //       }\r\n      //     }\r\n      //   }\r\n      //   for(var k=0;k<res.length;k++){\r\n      //     if(res[k].aqi==null){continue}\r\n      //     else{\r\n      //       this.cityallranks.push(res[k])\r\n      //     }\r\n      //     if(this.cityallranks.length==7)break\r\n      //   }\r\n      //   for(var i=0;i<this.cityallranks.length;i++){\r\n      //     this.cityaqirank.push(this.cityallranks[i].city)\r\n      //   }\r\n      //\r\n      //   //console.log(this.cityaqirank)\r\n      // })\r\n    },\r\n    echartsInit() {\r\n      var cityallranks=[]\r\n      var cityaqirank=[]\r\n      this.request.get(\"/nowatmospheredata/GetNowAQI\").then(res=>{\r\n        // if(res[0].aqi>res[2].aqi){\r\n        //   console.log(\"ok!\")\r\n        // }\r\n        var num=res.length\r\n        var i,j;\r\n        var temp;\r\n        for(i=num-1;i>0;i--){\r\n          for(j=0;j<i;j++){\r\n            if(res[j].aqi>res[j+1].aqi){\r\n              temp=res[j]\r\n              res[j]=res[j+1]\r\n              res[j+1]=temp\r\n            }\r\n          }\r\n        }\r\n        for(var k=0;k<res.length;k++){\r\n          if(res[k].aqi==null){continue}\r\n          else{\r\n            cityallranks.push(res[k])\r\n          }\r\n          if(cityallranks.length==7)break\r\n        }\r\n        for(var i=0;i<cityallranks.length;i++){\r\n          cityaqirank.push(cityallranks[i].city)\r\n        }\r\n      })\r\n      console.log(cityaqirank)\r\n      //2. 基于准备好的dom，初始化echarts实例\r\n\r\n        //3. 指定图表的配置项和数据\r\n        title: {\r\n          text: '测区空气质量当天排名'\r\n          textStyle: {\r\n            //文字颜色\r\n            color: '#fff'\r\n          }\r\n          top:'10px'\r\n        }\r\n        tooltip: {\r\n          trigger: 'axis'\r\n          axisPointer: {\r\n            // Use axis to trigger tooltip\r\n            type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\r\n          }\r\n        }\r\n        legend: {}\r\n        grid: {\r\n          left: '0%'\r\n          right: '0%'\r\n          bottom: '3%'\r\n          containLabel: true\r\n        }\r\n        xAxis: {\r\n          type: 'value'\r\n        }\r\n        yAxis: {\r\n          type: 'category'\r\n          data: [ '合肥市', '芜湖市', '宿州市', '铜陵市', '安庆市', '马鞍山市']\r\n        }\r\n        series: [\r\n          {\r\n            name: 'AQI',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            color:'#63b2ee ',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: [320, 302, 301, 334, 390, 330, 320]\r\n          },\r\n          {\r\n            name: 'CO',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            color:'#63b2ee ',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: [320, 302, 301, 334, 390, 330, 320]\r\n          },\r\n          {\r\n            name: 'NO2',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            color:'#76da91 ',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: [120, 132, 101, 134, 90, 230, 210]\r\n          },\r\n          {\r\n            name: 'PM2.5',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            color:'#7cd6cf ',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: [100, 130, 89, 134, 90, 230, 210]\r\n          },\r\n          {\r\n            name: 'PM10',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            color:'#9192ab ',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: [220, 182, 191, 234, 290, 330, 310]\r\n          },\r\n          {\r\n            name: 'SO2',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            color:'#7898e1 ',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: [150, 212, 201, 154, 190, 330, 410]\r\n          },\r\n          {\r\n            name: 'O3',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            color:'#63b2ee',\r\n            label: {\r\n              show: true\r\n            },\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: [820, 832, 901, 934, 1290, 1330, 1320]\r\n          }\r\n        ]\r\n\r\n\r\n      var chartDom=document.getElementById('bar')\r\n      var myChart=echarts.init(chartDom)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}