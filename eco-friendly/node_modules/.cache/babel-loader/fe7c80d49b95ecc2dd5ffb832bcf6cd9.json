{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport \"../../../../geometry.js\";\nimport t from \"../../../../core/has.js\";\nimport e from \"../../../../core/Logger.js\";\nimport { deg2rad as n } from \"../../../../core/mathUtils.js\";\nimport { isNone as r, isSome as o } from \"../../../../core/maybe.js\";\nimport { throwIfAborted as i } from \"../../../../core/promiseUtils.js\";\nimport l from \"../../../../core/RandomLCG.js\";\nimport { getInfo as a } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport s from \"../../../../geometry/Extent.js\";\nconst c = e.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),\n      f = 10;\n\nasync function u(e, n, r, o) {\n  const l = performance.now(),\n        a = h(n, r),\n        s = performance.now(),\n        u = d(n, a, r.width, r.height),\n        m = performance.now(),\n        w = p(u, !0),\n        x = performance.now(),\n        M = \"Streamlines\" === e ? g(w, f) : y(w),\n        A = performance.now();\n  return t(\"esri-2d-profiler\") && (c.info(\"I.1\", \"_createFlowFieldFromData (ms)\", Math.round(s - l)), c.info(\"I.2\", \"_getStreamlines (ms)\", Math.round(m - s)), c.info(\"I.3\", \"createAnimatedLinesData (ms)\", Math.round(x - m)), c.info(\"I.4\", \"create{Streamlines|Particles}Mesh (ms)\", Math.round(A - x)), c.info(\"I.5\", \"createFlowMesh (ms)\", Math.round(A - l)), c.info(\"I.6\", \"Mesh size (bytes)\", M.vertexData.buffer.byteLength + M.indexData.buffer.byteLength)), await Promise.resolve(), i(o), M;\n}\n\nfunction h(t, e) {\n  const n = w(e.data, e.width, e.height, t.smoothing);\n\n  if (t.interpolate) {\n    return (t, r) => {\n      const o = Math.floor(t),\n            i = Math.floor(r);\n      if (o < 0 || o >= e.width) return [0, 0];\n      if (i < 0 || i >= e.height) return [0, 0];\n      const l = t - o,\n            a = r - i,\n            s = o,\n            c = i,\n            f = o < e.width - 1 ? o + 1 : o,\n            u = i < e.height - 1 ? i + 1 : i,\n            h = n[2 * (c * e.width + s)],\n            m = n[2 * (c * e.width + f)],\n            d = n[2 * (u * e.width + s)],\n            w = n[2 * (u * e.width + f)],\n            p = n[2 * (c * e.width + s) + 1],\n            g = n[2 * (c * e.width + f) + 1];\n      return [(h * (1 - a) + d * a) * (1 - l) + (m * (1 - a) + w * a) * l, (p * (1 - a) + n[2 * (u * e.width + s) + 1] * a) * (1 - l) + (g * (1 - a) + n[2 * (u * e.width + f) + 1] * a) * l];\n    };\n  }\n\n  return (t, r) => {\n    const o = Math.round(t),\n          i = Math.round(r);\n    return o < 0 || o >= e.width || i < 0 || i >= e.height ? [0, 0] : [n[2 * (i * e.width + o) + 0], n[2 * (i * e.width + o) + 1]];\n  };\n}\n\nfunction m(t, e, n, r, o, i, l, a, s) {\n  const c = [];\n  let f = n,\n      u = r,\n      h = 0,\n      [m, d] = e(f, u);\n  m *= t.velocityScale, d *= t.velocityScale;\n  const w = Math.sqrt(m * m + d * d);\n  let p, g;\n  c.push({\n    x: f,\n    y: u,\n    t: h,\n    speed: w\n  });\n\n  for (let y = 0; y < t.verticesPerLine; y++) {\n    let [n, r] = e(f, u);\n    n *= t.velocityScale, r *= t.velocityScale;\n    const m = Math.sqrt(n * n + r * r);\n    if (m < t.minSpeedThreshold) return c;\n    const d = n / m,\n          w = r / m;\n    f += d * t.segmentLength, u += w * t.segmentLength;\n    if (h += t.segmentLength / m, Math.acos(d * p + w * g) > t.maxTurnAngle) return c;\n\n    if (t.collisions) {\n      const t = Math.round(f * s),\n            e = Math.round(u * s);\n      if (t < 0 || t > l - 1 || e < 0 || e > a - 1) return c;\n      const n = i[e * l + t];\n      if (-1 !== n && n !== o) return c;\n      i[e * l + t] = o;\n    }\n\n    c.push({\n      x: f,\n      y: u,\n      t: h,\n      speed: m\n    }), p = d, g = w;\n  }\n\n  return c;\n}\n\nfunction d(t, e, n, r) {\n  const o = [],\n        i = new l(),\n        a = 1 / Math.max(t.lineCollisionWidth, 1),\n        s = Math.round(n * a),\n        c = Math.round(r * a),\n        f = new Int32Array(s * c);\n\n  for (let l = 0; l < f.length; l++) f[l] = -1;\n\n  const u = [];\n\n  for (let l = 0; l < r; l += t.lineSpacing) for (let e = 0; e < n; e += t.lineSpacing) u.push({\n    x: e,\n    y: l,\n    sort: i.getFloat()\n  });\n\n  u.sort((t, e) => t.sort - e.sort);\n\n  for (const {\n    x: l,\n    y: h\n  } of u) if (i.getFloat() < t.density) {\n    const n = m(t, e, l, h, o.length, f, s, c, a);\n    if (n.length < 2) continue;\n    o.push(n);\n  }\n\n  return o;\n}\n\nfunction w(t, e, n, r) {\n  if (0 === r) return t;\n  const o = Math.round(3 * r),\n        i = new Array(2 * o + 1);\n  let l = 0;\n\n  for (let c = -o; c <= o; c++) {\n    const t = Math.exp(-c * c / (r * r));\n    i[c + o] = t, l += t;\n  }\n\n  for (let c = -o; c <= o; c++) i[c + o] /= l;\n\n  const a = new Float32Array(t.length);\n\n  for (let c = 0; c < n; c++) for (let n = 0; n < e; n++) {\n    let r = 0,\n        l = 0;\n\n    for (let a = -o; a <= o; a++) {\n      if (n + a < 0 || n + a >= e) continue;\n      const s = i[a + o];\n      r += s * t[2 * (c * e + (n + a)) + 0], l += s * t[2 * (c * e + (n + a)) + 1];\n    }\n\n    a[2 * (c * e + n) + 0] = r, a[2 * (c * e + n) + 1] = l;\n  }\n\n  const s = new Float32Array(t.length);\n\n  for (let c = 0; c < e; c++) for (let t = 0; t < n; t++) {\n    let r = 0,\n        l = 0;\n\n    for (let s = -o; s <= o; s++) {\n      if (t + s < 0 || t + s >= n) continue;\n      const f = i[s + o];\n      r += f * a[2 * ((t + s) * e + c) + 0], l += f * a[2 * ((t + s) * e + c) + 1];\n    }\n\n    s[2 * (t * e + c) + 0] = r, s[2 * (t * e + c) + 1] = l;\n  }\n\n  return s;\n}\n\nfunction p(t, e) {\n  const n = new l(),\n        r = t.reduce((t, e) => t + e.length, 0),\n        o = new Float32Array(4 * r),\n        i = new Array(t.length);\n  let a = 0,\n      s = 0;\n\n  for (const l of t) {\n    const t = a;\n\n    for (const e of l) o[4 * a + 0] = e.x, o[4 * a + 1] = e.y, o[4 * a + 2] = e.t, o[4 * a + 3] = e.speed, a++;\n\n    i[s++] = {\n      startVertex: t,\n      numberOfVertices: l.length,\n      totalTime: l[l.length - 1].t,\n      timeSeed: e ? n.getFloat() : 0\n    };\n  }\n\n  return {\n    lineVertices: o,\n    lineDescriptors: i\n  };\n}\n\nfunction g(t, e) {\n  const n = 9,\n        {\n    lineVertices: r,\n    lineDescriptors: o\n  } = t;\n  let i = 0,\n      l = 0;\n\n  for (const m of o) {\n    i += 2 * m.numberOfVertices;\n    l += 6 * (m.numberOfVertices - 1);\n  }\n\n  const a = new Float32Array(i * n),\n        s = new Uint32Array(l);\n  let c = 0,\n      f = 0;\n\n  function u() {\n    s[f++] = c - 2, s[f++] = c, s[f++] = c - 1, s[f++] = c, s[f++] = c + 1, s[f++] = c - 1;\n  }\n\n  function h(t, e, r, o, i, l, s, f) {\n    const u = c * n;\n    let h = 0;\n    a[u + h++] = t, a[u + h++] = e, a[u + h++] = 1, a[u + h++] = r, a[u + h++] = l, a[u + h++] = s, a[u + h++] = o / 2, a[u + h++] = i / 2, a[u + h++] = f, c++, a[u + h++] = t, a[u + h++] = e, a[u + h++] = -1, a[u + h++] = r, a[u + h++] = l, a[u + h++] = s, a[u + h++] = -o / 2, a[u + h++] = -i / 2, a[u + h++] = f, c++;\n  }\n\n  for (const m of o) {\n    const {\n      totalTime: t,\n      timeSeed: n\n    } = m;\n    let o = null,\n        i = null,\n        l = null,\n        a = null,\n        s = null,\n        c = null;\n\n    for (let f = 0; f < m.numberOfVertices; f++) {\n      const d = r[4 * (m.startVertex + f) + 0],\n            w = r[4 * (m.startVertex + f) + 1],\n            p = r[4 * (m.startVertex + f) + 2],\n            g = r[4 * (m.startVertex + f) + 3];\n      let y = null,\n          x = null,\n          M = null,\n          A = null;\n\n      if (f > 0) {\n        y = d - o, x = w - i;\n        const r = Math.sqrt(y * y + x * x);\n\n        if (y /= r, x /= r, f > 1) {\n          let t = y + s,\n              n = x + c;\n          const r = Math.sqrt(t * t + n * n);\n          t /= r, n /= r;\n          const o = Math.min(1 / (t * y + n * x), e);\n          t *= o, n *= o, M = -n, A = t;\n        } else M = -x, A = y;\n\n        null !== M && null !== A && (h(o, i, l, M, A, t, n, g), u());\n      }\n\n      o = d, i = w, l = p, s = y, c = x, a = g;\n    }\n\n    h(o, i, l, -c, s, t, n, a);\n  }\n\n  return {\n    vertexData: a,\n    indexData: s\n  };\n}\n\nfunction y(t) {\n  const e = 16,\n        n = 1,\n        r = 2,\n        {\n    lineVertices: o,\n    lineDescriptors: i\n  } = t;\n  let l = 0,\n      a = 0;\n\n  for (const j of i) {\n    const t = j.numberOfVertices - 1;\n    l += 4 * t * 2, a += 6 * t * 2;\n  }\n\n  const s = new Float32Array(l * e),\n        c = new Uint32Array(a);\n  let f,\n      u,\n      h,\n      m,\n      d,\n      w,\n      p,\n      g,\n      y,\n      x,\n      M,\n      A,\n      I,\n      V,\n      F = 0,\n      D = 0;\n\n  function b() {\n    c[D++] = F - 8, c[D++] = F - 7, c[D++] = F - 6, c[D++] = F - 7, c[D++] = F - 5, c[D++] = F - 6, c[D++] = F - 4, c[D++] = F - 3, c[D++] = F - 2, c[D++] = F - 3, c[D++] = F - 1, c[D++] = F - 2;\n  }\n\n  function v(t, o, i, l, a, c, f, u, h, m, d, w, p, g) {\n    const y = F * e;\n    let x = 0;\n\n    for (const e of [n, r]) for (const n of [1, 2, 3, 4]) s[y + x++] = t, s[y + x++] = o, s[y + x++] = i, s[y + x++] = l, s[y + x++] = f, s[y + x++] = u, s[y + x++] = h, s[y + x++] = m, s[y + x++] = e, s[y + x++] = n, s[y + x++] = p, s[y + x++] = g, s[y + x++] = a / 2, s[y + x++] = c / 2, s[y + x++] = d / 2, s[y + x++] = w / 2, F++;\n  }\n\n  function S(t, e) {\n    let n = y + M,\n        r = x + A;\n    const o = Math.sqrt(n * n + r * r);\n    n /= o, r /= o;\n    const i = y * n + x * r;\n    n /= i, r /= i;\n    let l = M + I,\n        a = A + V;\n    const s = Math.sqrt(l * l + a * a);\n    l /= s, a /= s;\n    const c = M * l + A * a;\n    l /= c, a /= c, v(f, u, h, m, -r, n, d, w, p, g, -a, l, t, e), b();\n  }\n\n  function k(t, e, n, r, o, i) {\n    if (y = M, x = A, M = I, A = V, null == y && null == x && (y = M, x = A), null != d && null != w) {\n      I = t - d, V = e - w;\n      const n = Math.sqrt(I * I + V * V);\n      I /= n, V /= n;\n    }\n\n    null != y && null != x && S(o, i), f = d, u = w, h = p, m = g, d = t, w = e, p = n, g = r;\n  }\n\n  function L(t, e) {\n    y = M, x = A, M = I, A = V, null == y && null == x && (y = M, x = A), null != y && null != x && S(t, e);\n  }\n\n  for (const j of i) {\n    f = null, u = null, h = null, m = null, d = null, w = null, p = null, g = null, y = null, x = null, M = null, A = null, I = null, V = null;\n    const {\n      totalTime: t,\n      timeSeed: e\n    } = j;\n\n    for (let n = 0; n < j.numberOfVertices; n++) {\n      k(o[4 * (j.startVertex + n) + 0], o[4 * (j.startVertex + n) + 1], o[4 * (j.startVertex + n) + 2], o[4 * (j.startVertex + n) + 3], t, e);\n    }\n\n    L(t, e);\n  }\n\n  return {\n    vertexData: s,\n    indexData: c\n  };\n}\n\nfunction x(t, e) {\n  const r = e.pixels,\n        {\n    width: o,\n    height: i\n  } = e,\n        l = new Float32Array(o * i * 2),\n        a = e.mask || new Uint8Array(o * i * 2);\n  if (e.mask || a.fill(255), \"vector-uv\" === t) for (let n = 0; n < o * i; n++) l[2 * n + 0] = r[0][n], l[2 * n + 1] = -r[1][n];else if (\"vector-magdir\" === t) for (let s = 0; s < o * i; s++) {\n    const t = r[0][s],\n          e = n(r[1][s]),\n          o = Math.cos(e - Math.PI / 2),\n          i = Math.sin(e - Math.PI / 2);\n    l[2 * s + 0] = o * t, l[2 * s + 1] = i * t;\n  }\n  return {\n    data: l,\n    mask: a,\n    width: o,\n    height: i\n  };\n}\n\nasync function M(e, n, r, o, i, l) {\n  const f = performance.now(),\n        u = a(n.spatialReference);\n\n  if (!u) {\n    const a = await A(e, n, r, o, i, l);\n    return t(\"esri-2d-profiler\") && c.info(\"I.7\", \"loadImagery, early exit (ms)\", Math.round(performance.now() - f)), t(\"esri-2d-profiler\") && c.info(\"I.9\", \"Number of parts\", 1), a;\n  }\n\n  const [h, m] = u.valid,\n        d = m - h,\n        w = Math.ceil(n.width / d),\n        p = n.width / w,\n        g = Math.round(r / w);\n  let y = n.xmin;\n  const x = [],\n        M = performance.now();\n\n  for (let t = 0; t < w; t++) {\n    const t = new s({\n      xmin: y,\n      xmax: y + p,\n      ymin: n.ymin,\n      ymax: n.ymax,\n      spatialReference: n.spatialReference\n    });\n    x.push(A(e, t, g, o, i, l)), y += p;\n  }\n\n  const I = await Promise.all(x);\n  t(\"esri-2d-profiler\") && c.info(\"I.8\", \"All calls to _fetchPart (ms)\", Math.round(performance.now() - M)), t(\"esri-2d-profiler\") && c.info(\"I.9\", \"Number of parts\", I.length);\n  const V = {\n    data: new Float32Array(r * o * 2),\n    mask: new Uint8Array(r * o),\n    width: r,\n    height: o\n  };\n  let F = 0;\n\n  for (const t of I) {\n    for (let e = 0; e < t.height; e++) for (let n = 0; n < t.width; n++) F + n >= r || (V.data[2 * (e * r + F + n) + 0] = t.data[2 * (e * t.width + n) + 0], V.data[2 * (e * r + F + n) + 1] = t.data[2 * (e * t.width + n) + 1], V.mask[e * r + F + n] = t.mask[e * t.width + n]);\n\n    F += t.width;\n  }\n\n  return t(\"esri-2d-profiler\") && c.info(\"I.10\", \"loadImagery, general exit (ms)\", Math.round(performance.now() - f)), V;\n}\n\nasync function A(t, e, n, i, l, a) {\n  const s = {\n    requestProjectedLocalDirections: !0,\n    signal: a\n  };\n\n  if (o(l) && (s.timeExtent = l), \"imagery\" === t.type) {\n    await t.load({\n      signal: a\n    });\n    const o = t.rasterInfo.dataType,\n          l = await t.fetchImage(e, n, i, s);\n    return !l || r(l.pixelData) || r(l.pixelData.pixelBlock) ? {\n      data: new Float32Array(n * i * 2),\n      mask: new Uint8Array(n * i),\n      width: n,\n      height: i\n    } : x(o, l.pixelData.pixelBlock);\n  }\n\n  await t.load({\n    signal: a\n  });\n  const c = t.rasterInfo.dataType,\n        f = await t.fetchPixels(e, n, i, s);\n  return !f || r(f.pixelBlock) ? {\n    data: new Float32Array(n * i * 2),\n    mask: new Uint8Array(n * i),\n    width: n,\n    height: i\n  } : x(c, f.pixelBlock);\n}\n\nexport { p as createAnimatedLinesData, u as createFlowMesh, y as createParticlesMesh, g as createStreamlinesMesh, M as loadImagery };","map":{"version":3,"names":["t","e","deg2rad","n","isNone","r","isSome","o","throwIfAborted","i","l","getInfo","a","s","c","getLogger","f","u","performance","now","h","d","width","height","m","w","p","x","M","g","y","A","info","Math","round","vertexData","buffer","byteLength","indexData","Promise","resolve","data","smoothing","interpolate","floor","velocityScale","sqrt","push","speed","verticesPerLine","minSpeedThreshold","segmentLength","acos","maxTurnAngle","collisions","max","lineCollisionWidth","Int32Array","length","lineSpacing","sort","getFloat","density","Array","exp","Float32Array","reduce","startVertex","numberOfVertices","totalTime","timeSeed","lineVertices","lineDescriptors","Uint32Array","min","j","I","V","F","D","b","v","S","k","L","pixels","mask","Uint8Array","fill","cos","PI","sin","spatialReference","valid","ceil","xmin","xmax","ymin","ymax","all","requestProjectedLocalDirections","signal","timeExtent","type","load","rasterInfo","dataType","fetchImage","pixelData","pixelBlock","fetchPixels","createAnimatedLinesData","createFlowMesh","createParticlesMesh","createStreamlinesMesh","loadImagery"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport\"../../../../geometry.js\";import t from\"../../../../core/has.js\";import e from\"../../../../core/Logger.js\";import{deg2rad as n}from\"../../../../core/mathUtils.js\";import{isNone as r,isSome as o}from\"../../../../core/maybe.js\";import{throwIfAborted as i}from\"../../../../core/promiseUtils.js\";import l from\"../../../../core/RandomLCG.js\";import{getInfo as a}from\"../../../../geometry/support/spatialReferenceUtils.js\";import s from\"../../../../geometry/Extent.js\";const c=e.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),f=10;async function u(e,n,r,o){const l=performance.now(),a=h(n,r),s=performance.now(),u=d(n,a,r.width,r.height),m=performance.now(),w=p(u,!0),x=performance.now(),M=\"Streamlines\"===e?g(w,f):y(w),A=performance.now();return t(\"esri-2d-profiler\")&&(c.info(\"I.1\",\"_createFlowFieldFromData (ms)\",Math.round(s-l)),c.info(\"I.2\",\"_getStreamlines (ms)\",Math.round(m-s)),c.info(\"I.3\",\"createAnimatedLinesData (ms)\",Math.round(x-m)),c.info(\"I.4\",\"create{Streamlines|Particles}Mesh (ms)\",Math.round(A-x)),c.info(\"I.5\",\"createFlowMesh (ms)\",Math.round(A-l)),c.info(\"I.6\",\"Mesh size (bytes)\",M.vertexData.buffer.byteLength+M.indexData.buffer.byteLength)),await Promise.resolve(),i(o),M}function h(t,e){const n=w(e.data,e.width,e.height,t.smoothing);if(t.interpolate){return(t,r)=>{const o=Math.floor(t),i=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(i<0||i>=e.height)return[0,0];const l=t-o,a=r-i,s=o,c=i,f=o<e.width-1?o+1:o,u=i<e.height-1?i+1:i,h=n[2*(c*e.width+s)],m=n[2*(c*e.width+f)],d=n[2*(u*e.width+s)],w=n[2*(u*e.width+f)],p=n[2*(c*e.width+s)+1],g=n[2*(c*e.width+f)+1];return[(h*(1-a)+d*a)*(1-l)+(m*(1-a)+w*a)*l,(p*(1-a)+n[2*(u*e.width+s)+1]*a)*(1-l)+(g*(1-a)+n[2*(u*e.width+f)+1]*a)*l]}}return(t,r)=>{const o=Math.round(t),i=Math.round(r);return o<0||o>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+o)+0],n[2*(i*e.width+o)+1]]}}function m(t,e,n,r,o,i,l,a,s){const c=[];let f=n,u=r,h=0,[m,d]=e(f,u);m*=t.velocityScale,d*=t.velocityScale;const w=Math.sqrt(m*m+d*d);let p,g;c.push({x:f,y:u,t:h,speed:w});for(let y=0;y<t.verticesPerLine;y++){let[n,r]=e(f,u);n*=t.velocityScale,r*=t.velocityScale;const m=Math.sqrt(n*n+r*r);if(m<t.minSpeedThreshold)return c;const d=n/m,w=r/m;f+=d*t.segmentLength,u+=w*t.segmentLength;if(h+=t.segmentLength/m,Math.acos(d*p+w*g)>t.maxTurnAngle)return c;if(t.collisions){const t=Math.round(f*s),e=Math.round(u*s);if(t<0||t>l-1||e<0||e>a-1)return c;const n=i[e*l+t];if(-1!==n&&n!==o)return c;i[e*l+t]=o}c.push({x:f,y:u,t:h,speed:m}),p=d,g=w}return c}function d(t,e,n,r){const o=[],i=new l,a=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*a),c=Math.round(r*a),f=new Int32Array(s*c);for(let l=0;l<f.length;l++)f[l]=-1;const u=[];for(let l=0;l<r;l+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)u.push({x:e,y:l,sort:i.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:l,y:h}of u)if(i.getFloat()<t.density){const n=m(t,e,l,h,o.length,f,s,c,a);if(n.length<2)continue;o.push(n)}return o}function w(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),i=new Array(2*o+1);let l=0;for(let c=-o;c<=o;c++){const t=Math.exp(-c*c/(r*r));i[c+o]=t,l+=t}for(let c=-o;c<=o;c++)i[c+o]/=l;const a=new Float32Array(t.length);for(let c=0;c<n;c++)for(let n=0;n<e;n++){let r=0,l=0;for(let a=-o;a<=o;a++){if(n+a<0||n+a>=e)continue;const s=i[a+o];r+=s*t[2*(c*e+(n+a))+0],l+=s*t[2*(c*e+(n+a))+1]}a[2*(c*e+n)+0]=r,a[2*(c*e+n)+1]=l}const s=new Float32Array(t.length);for(let c=0;c<e;c++)for(let t=0;t<n;t++){let r=0,l=0;for(let s=-o;s<=o;s++){if(t+s<0||t+s>=n)continue;const f=i[s+o];r+=f*a[2*((t+s)*e+c)+0],l+=f*a[2*((t+s)*e+c)+1]}s[2*(t*e+c)+0]=r,s[2*(t*e+c)+1]=l}return s}function p(t,e){const n=new l,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),i=new Array(t.length);let a=0,s=0;for(const l of t){const t=a;for(const e of l)o[4*a+0]=e.x,o[4*a+1]=e.y,o[4*a+2]=e.t,o[4*a+3]=e.speed,a++;i[s++]={startVertex:t,numberOfVertices:l.length,totalTime:l[l.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:i}}function g(t,e){const n=9,{lineVertices:r,lineDescriptors:o}=t;let i=0,l=0;for(const m of o){i+=2*m.numberOfVertices;l+=6*(m.numberOfVertices-1)}const a=new Float32Array(i*n),s=new Uint32Array(l);let c=0,f=0;function u(){s[f++]=c-2,s[f++]=c,s[f++]=c-1,s[f++]=c,s[f++]=c+1,s[f++]=c-1}function h(t,e,r,o,i,l,s,f){const u=c*n;let h=0;a[u+h++]=t,a[u+h++]=e,a[u+h++]=1,a[u+h++]=r,a[u+h++]=l,a[u+h++]=s,a[u+h++]=o/2,a[u+h++]=i/2,a[u+h++]=f,c++,a[u+h++]=t,a[u+h++]=e,a[u+h++]=-1,a[u+h++]=r,a[u+h++]=l,a[u+h++]=s,a[u+h++]=-o/2,a[u+h++]=-i/2,a[u+h++]=f,c++}for(const m of o){const{totalTime:t,timeSeed:n}=m;let o=null,i=null,l=null,a=null,s=null,c=null;for(let f=0;f<m.numberOfVertices;f++){const d=r[4*(m.startVertex+f)+0],w=r[4*(m.startVertex+f)+1],p=r[4*(m.startVertex+f)+2],g=r[4*(m.startVertex+f)+3];let y=null,x=null,M=null,A=null;if(f>0){y=d-o,x=w-i;const r=Math.sqrt(y*y+x*x);if(y/=r,x/=r,f>1){let t=y+s,n=x+c;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*y+n*x),e);t*=o,n*=o,M=-n,A=t}else M=-x,A=y;null!==M&&null!==A&&(h(o,i,l,M,A,t,n,g),u())}o=d,i=w,l=p,s=y,c=x,a=g}h(o,i,l,-c,s,t,n,a)}return{vertexData:a,indexData:s}}function y(t){const e=16,n=1,r=2,{lineVertices:o,lineDescriptors:i}=t;let l=0,a=0;for(const j of i){const t=j.numberOfVertices-1;l+=4*t*2,a+=6*t*2}const s=new Float32Array(l*e),c=new Uint32Array(a);let f,u,h,m,d,w,p,g,y,x,M,A,I,V,F=0,D=0;function b(){c[D++]=F-8,c[D++]=F-7,c[D++]=F-6,c[D++]=F-7,c[D++]=F-5,c[D++]=F-6,c[D++]=F-4,c[D++]=F-3,c[D++]=F-2,c[D++]=F-3,c[D++]=F-1,c[D++]=F-2}function v(t,o,i,l,a,c,f,u,h,m,d,w,p,g){const y=F*e;let x=0;for(const e of[n,r])for(const n of[1,2,3,4])s[y+x++]=t,s[y+x++]=o,s[y+x++]=i,s[y+x++]=l,s[y+x++]=f,s[y+x++]=u,s[y+x++]=h,s[y+x++]=m,s[y+x++]=e,s[y+x++]=n,s[y+x++]=p,s[y+x++]=g,s[y+x++]=a/2,s[y+x++]=c/2,s[y+x++]=d/2,s[y+x++]=w/2,F++}function S(t,e){let n=y+M,r=x+A;const o=Math.sqrt(n*n+r*r);n/=o,r/=o;const i=y*n+x*r;n/=i,r/=i;let l=M+I,a=A+V;const s=Math.sqrt(l*l+a*a);l/=s,a/=s;const c=M*l+A*a;l/=c,a/=c,v(f,u,h,m,-r,n,d,w,p,g,-a,l,t,e),b()}function k(t,e,n,r,o,i){if(y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=d&&null!=w){I=t-d,V=e-w;const n=Math.sqrt(I*I+V*V);I/=n,V/=n}null!=y&&null!=x&&S(o,i),f=d,u=w,h=p,m=g,d=t,w=e,p=n,g=r}function L(t,e){y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=y&&null!=x&&S(t,e)}for(const j of i){f=null,u=null,h=null,m=null,d=null,w=null,p=null,g=null,y=null,x=null,M=null,A=null,I=null,V=null;const{totalTime:t,timeSeed:e}=j;for(let n=0;n<j.numberOfVertices;n++){k(o[4*(j.startVertex+n)+0],o[4*(j.startVertex+n)+1],o[4*(j.startVertex+n)+2],o[4*(j.startVertex+n)+3],t,e)}L(t,e)}return{vertexData:s,indexData:c}}function x(t,e){const r=e.pixels,{width:o,height:i}=e,l=new Float32Array(o*i*2),a=e.mask||new Uint8Array(o*i*2);if(e.mask||a.fill(255),\"vector-uv\"===t)for(let n=0;n<o*i;n++)l[2*n+0]=r[0][n],l[2*n+1]=-r[1][n];else if(\"vector-magdir\"===t)for(let s=0;s<o*i;s++){const t=r[0][s],e=n(r[1][s]),o=Math.cos(e-Math.PI/2),i=Math.sin(e-Math.PI/2);l[2*s+0]=o*t,l[2*s+1]=i*t}return{data:l,mask:a,width:o,height:i}}async function M(e,n,r,o,i,l){const f=performance.now(),u=a(n.spatialReference);if(!u){const a=await A(e,n,r,o,i,l);return t(\"esri-2d-profiler\")&&c.info(\"I.7\",\"loadImagery, early exit (ms)\",Math.round(performance.now()-f)),t(\"esri-2d-profiler\")&&c.info(\"I.9\",\"Number of parts\",1),a}const[h,m]=u.valid,d=m-h,w=Math.ceil(n.width/d),p=n.width/w,g=Math.round(r/w);let y=n.xmin;const x=[],M=performance.now();for(let t=0;t<w;t++){const t=new s({xmin:y,xmax:y+p,ymin:n.ymin,ymax:n.ymax,spatialReference:n.spatialReference});x.push(A(e,t,g,o,i,l)),y+=p}const I=await Promise.all(x);t(\"esri-2d-profiler\")&&c.info(\"I.8\",\"All calls to _fetchPart (ms)\",Math.round(performance.now()-M)),t(\"esri-2d-profiler\")&&c.info(\"I.9\",\"Number of parts\",I.length);const V={data:new Float32Array(r*o*2),mask:new Uint8Array(r*o),width:r,height:o};let F=0;for(const t of I){for(let e=0;e<t.height;e++)for(let n=0;n<t.width;n++)F+n>=r||(V.data[2*(e*r+F+n)+0]=t.data[2*(e*t.width+n)+0],V.data[2*(e*r+F+n)+1]=t.data[2*(e*t.width+n)+1],V.mask[e*r+F+n]=t.mask[e*t.width+n]);F+=t.width}return t(\"esri-2d-profiler\")&&c.info(\"I.10\",\"loadImagery, general exit (ms)\",Math.round(performance.now()-f)),V}async function A(t,e,n,i,l,a){const s={requestProjectedLocalDirections:!0,signal:a};if(o(l)&&(s.timeExtent=l),\"imagery\"===t.type){await t.load({signal:a});const o=t.rasterInfo.dataType,l=await t.fetchImage(e,n,i,s);return!l||r(l.pixelData)||r(l.pixelData.pixelBlock)?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:x(o,l.pixelData.pixelBlock)}await t.load({signal:a});const c=t.rasterInfo.dataType,f=await t.fetchPixels(e,n,i,s);return!f||r(f.pixelBlock)?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:x(c,f.pixelBlock)}export{p as createAnimatedLinesData,u as createFlowMesh,y as createParticlesMesh,g as createStreamlinesMesh,M as loadImagery};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}