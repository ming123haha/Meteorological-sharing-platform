{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"echartsWatch\",\n  props: ['selectstaion'],\n  watch: {\n    selectstaion(newval) {\n      this.request.get(\"/nowatmospheredata/GetData?station=\" + newval + \"\").then(res => {\n        this.aqi = res[0].aqi;\n        this.city = res[0].city;\n        this.station = res[0].station;\n        this.CO = res[0].co;\n        this.NO2 = res[0].no2;\n        this.PM25 = res[0].pm25;\n        this.PM10 = res[0].pm10;\n        this.SO2 = res[0].so2;\n        this.O3 = res[0].o3;\n        this.echartsinit(this.aqi);\n      });\n    }\n\n  },\n\n  data() {\n    return {\n      aqi: \"\",\n      CO: \"\",\n      NO2: \"\",\n      PM25: \"\",\n      PM10: \"\",\n      SO2: \"\",\n      O3: \"\",\n      city: \"\",\n      station: \"\"\n    };\n  },\n\n  mounted() {},\n\n  methods: {\n    initialize(e) {},\n\n    echartsinit(aqi) {\n      var chartDom = document.getElementById('main');\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        series: [{\n          type: 'gauge',\n          startAngle: 180,\n          endAngle: 0,\n          min: 0,\n          max: 1,\n          splitNumber: 8,\n          axisLine: {\n            show: true,\n            lineStyle: {\n              width: 5,\n              color: [[0.34, '#bbf5d3'], [0.67, '#ffed7e'], [1, '#d90f1e']]\n            }\n          },\n          pointer: {\n            icon: 'path://M12.8,0.7l12,40.1H0.7L12.8,0.7z',\n            length: '50%',\n            width: 5,\n            offsetCenter: [0, '-60%'],\n            itemStyle: {\n              color: 'auto'\n            }\n          },\n          axisTick: {\n            length: 5,\n            lineStyle: {\n              color: 'auto',\n              width: 10\n            }\n          },\n          // splitLine: {\n          //   length: 10,\n          //   lineStyle: {\n          //     color: 'auto',\n          //     width: 10,\n          //   }\n          // },\n          axisLabel: {\n            color: '#464646',\n            fontSize: 10,\n            distance: -6,\n            formatter: function (value) {\n              console.log(value);\n\n              if (value === 0.875) {\n                return '差';\n              } else if (value === 0.5) {\n                return '良';\n              } else if (value === 0.125) {\n                return '优';\n              }\n\n              return '';\n            }\n          },\n          title: {\n            offsetCenter: [0, '-20%'],\n            fontSize: 12\n          },\n          detail: {\n            fontSize: 10,\n            offsetCenter: [0, '0%'],\n            valueAnimation: true,\n            formatter: function (value) {\n              return Math.round(value * 100);\n            },\n            color: 'auto'\n          },\n          data: [{\n            value: aqi / 100,\n            name: 'AQI指数'\n          }]\n        }]\n      };\n      option && myChart.setOption(option);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsBA;AACA;EACAA,oBADA;EAEAC,uBAFA;EAGAC;IACAC;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA,CAXA;IAYA;;EAdA,CAHA;;EAmBAC;IACA;MACAC,OADA;MAEAC,MAFA;MAGAC,OAHA;MAIAC,QAJA;MAKAC,QALA;MAMAC,OANA;MAOAC,MAPA;MAQAC,QARA;MASAC;IATA;EAWA,CA/BA;;EAgCAC,WAEA,CAlCA;;EAmCAC;IACAC,eAEA,CAHA;;IAIAC;MACA;MACA;MACA;MAEAC;QACAC,SACA;UACAC,aADA;UAEAC,eAFA;UAGAC,WAHA;UAIAC,MAJA;UAKAC,MALA;UAMAC,cANA;UAOAC;YACAC,UADA;YAEAC;cACAC,QADA;cAEAC,QACA,iBADA,EAEA,iBAFA,EAGA,cAHA;YAFA;UAFA,CAPA;UAkBAC;YACAC,8CADA;YAEAC,aAFA;YAGAJ,QAHA;YAIAK,yBAJA;YAKAC;cACAL;YADA;UALA,CAlBA;UA2BAM;YACAH,SADA;YAEAL;cACAE,aADA;cAEAD;YAFA;UAFA,CA3BA;UAkCA;UACA;UACA;UACA;UACA;UACA;UACA;UACAQ;YACAP,gBADA;YAEAQ,YAFA;YAGAC,YAHA;YAIAC;cACAC;;cACA;gBACA;cACA,CAFA,MAEA;gBACA;cACA,CAFA,MAEA;gBACA;cACA;;cACA;YACA;UAdA,CAzCA;UAyDAC;YACAR,yBADA;YAEAI;UAFA,CAzDA;UA6DAK;YACAL,YADA;YAEAJ,uBAFA;YAGAU,oBAHA;YAIAJ;cACA;YACA,CANA;YAOAV;UAPA,CA7DA;UAsEA1B,OACA;YACAyC,gBADA;YAEA7C;UAFA,CADA;QAtEA,CADA;MADA;MAkFAkB;IACA;;EA5FA;AAnCA","names":["name","props","watch","selectstaion","data","aqi","CO","NO2","PM25","PM10","SO2","O3","city","station","mounted","methods","initialize","echartsinit","option","series","type","startAngle","endAngle","min","max","splitNumber","axisLine","show","lineStyle","width","color","pointer","icon","length","offsetCenter","itemStyle","axisTick","axisLabel","fontSize","distance","formatter","console","title","detail","valueAnimation","value"],"sourceRoot":"src/components","sources":["echartsWatch.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <div id=\"main\" style=\"height: 150px;width: 200px;background: white;opacity: 0.8;position: relative\">\r\n  </div>\r\n  <h1 style=\"background: white;bottom:50px;position: relative\">测站:{{city}} {{station}}</h1>\r\n  <h1 style=\"background: white;bottom:50px;position: relative\">AQI指数:{{aqi}}</h1>\r\n  <h1 style=\"background: white;bottom:50px;position: relative\">C0指数:{{CO}}</h1>\r\n  <h1 style=\"background: white;bottom:50px;position: relative\">NO2指数:{{NO2}}</h1>\r\n  <h1 style=\"background: white;bottom:50px;position: relative\">PM2.5指数:{{PM25}}</h1>\r\n  <h1 style=\"background: white;bottom:50px;position: relative\">PM10指数:{{PM10}}</h1>\r\n  <h1 style=\"background: white;bottom:50px;position: relative\">SO2指数:{{SO2}}</h1>\r\n  <h1 style=\"background: white;bottom:50px;position: relative\">O₃指数:{{O3}}</h1>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!--  <div><span>test</span></div>-->\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  name: \"echartsWatch\",\r\n  props: ['selectstaion'],\r\n  watch: {\r\n    selectstaion(newval) {\r\n      this.request.get(\"/nowatmospheredata/GetData?station=\" + newval + \"\").then(res => {\r\n        this.aqi=res[0].aqi\r\n        this.city=res[0].city\r\n        this.station=res[0].station\r\n        this.CO=res[0].co\r\n        this.NO2=res[0].no2\r\n        this.PM25=res[0].pm25\r\n        this.PM10=res[0].pm10\r\n        this.SO2=res[0].so2\r\n        this.O3=res[0].o3\r\n        this.echartsinit(this.aqi)\r\n      })\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      aqi:\"\",\r\n      CO:\"\",\r\n      NO2:\"\",\r\n      PM25:\"\",\r\n      PM10:\"\",\r\n      SO2:\"\",\r\n      O3:\"\",\r\n      city:\"\",\r\n      station:\"\",\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods:{\r\n    initialize(e){\r\n\r\n    },\r\n    echartsinit(aqi) {\r\n      var chartDom = document.getElementById('main');\r\n      var myChart = echarts.init(chartDom);\r\n      var option;\r\n\r\n      option = {\r\n        series: [\r\n          {\r\n            type: 'gauge',\r\n            startAngle: 180,\r\n            endAngle: 0,\r\n            min: 0,\r\n            max: 1,\r\n            splitNumber: 8,\r\n            axisLine: {\r\n              show:true,\r\n              lineStyle: {\r\n                width: 5,\r\n                color: [\r\n                  [0.34, '#bbf5d3'],\r\n                  [0.67, '#ffed7e'],\r\n                  [1, '#d90f1e']\r\n                ]\r\n              }\r\n            },\r\n            pointer: {\r\n              icon: 'path://M12.8,0.7l12,40.1H0.7L12.8,0.7z',\r\n              length: '50%',\r\n              width: 5,\r\n              offsetCenter: [0, '-60%'],\r\n              itemStyle: {\r\n                color: 'auto'\r\n              }\r\n            },\r\n            axisTick: {\r\n              length: 5,\r\n              lineStyle: {\r\n                color: 'auto',\r\n                width: 10\r\n              }\r\n            },\r\n            // splitLine: {\r\n            //   length: 10,\r\n            //   lineStyle: {\r\n            //     color: 'auto',\r\n            //     width: 10,\r\n            //   }\r\n            // },\r\n            axisLabel: {\r\n              color: '#464646',\r\n              fontSize: 10,\r\n              distance: -6,\r\n              formatter: function (value) {\r\n                console.log(value)\r\n                if (value === 0.875) {\r\n                  return '差';\r\n                } else if (value === 0.5) {\r\n                  return '良';\r\n                } else if (value === 0.125) {\r\n                  return '优';\r\n                }\r\n                return '';\r\n              }\r\n            },\r\n            title: {\r\n              offsetCenter: [0, '-20%'],\r\n              fontSize: 12\r\n            },\r\n            detail: {\r\n              fontSize: 10,\r\n              offsetCenter: [0, '0%'],\r\n              valueAnimation: true,\r\n              formatter: function (value) {\r\n                return Math.round(value * 100) ;\r\n              },\r\n              color: 'auto'\r\n            },\r\n            data: [\r\n              {\r\n                value: aqi/100,\r\n                name: 'AQI指数'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n\r\n      option && myChart.setOption(option);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}