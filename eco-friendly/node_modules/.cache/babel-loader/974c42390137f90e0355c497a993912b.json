{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as modelUtil from '../../util/model.js';\nexport default function parallelPreprocessor(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\r\n * Create a parallel coordinate if not exists.\r\n * @inner\r\n */\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\r\n * Merge aixs definition from parallel option (if exists) to axis option.\r\n * @inner\r\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}","map":{"version":3,"names":["zrUtil","modelUtil","parallelPreprocessor","option","createParallelIfNeeded","mergeAxisOptionFromParallel","parallel","hasParallelSeries","each","series","seriesOpt","type","axes","normalizeToArray","parallelAxis","axisOption","isObject","parallelIndex","parallelOption","parallelAxisDefault","merge"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js"],"sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport * as modelUtil from '../../util/model.js';\r\nexport default function parallelPreprocessor(option) {\r\n  createParallelIfNeeded(option);\r\n  mergeAxisOptionFromParallel(option);\r\n}\r\n/**\r\n * Create a parallel coordinate if not exists.\r\n * @inner\r\n */\r\n\r\nfunction createParallelIfNeeded(option) {\r\n  if (option.parallel) {\r\n    return;\r\n  }\r\n\r\n  var hasParallelSeries = false;\r\n  zrUtil.each(option.series, function (seriesOpt) {\r\n    if (seriesOpt && seriesOpt.type === 'parallel') {\r\n      hasParallelSeries = true;\r\n    }\r\n  });\r\n\r\n  if (hasParallelSeries) {\r\n    option.parallel = [{}];\r\n  }\r\n}\r\n/**\r\n * Merge aixs definition from parallel option (if exists) to axis option.\r\n * @inner\r\n */\r\n\r\n\r\nfunction mergeAxisOptionFromParallel(option) {\r\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\r\n  zrUtil.each(axes, function (axisOption) {\r\n    if (!zrUtil.isObject(axisOption)) {\r\n      return;\r\n    }\r\n\r\n    var parallelIndex = axisOption.parallelIndex || 0;\r\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\r\n\r\n    if (parallelOption && parallelOption.parallelAxisDefault) {\r\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\r\n    }\r\n  });\r\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAZ,MAAwB,0BAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,qBAA3B;AACA,eAAe,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;EACnDC,sBAAsB,CAACD,MAAD,CAAtB;EACAE,2BAA2B,CAACF,MAAD,CAA3B;AACD;AACD;AACA;AACA;AACA;;AAEA,SAASC,sBAAT,CAAgCD,MAAhC,EAAwC;EACtC,IAAIA,MAAM,CAACG,QAAX,EAAqB;IACnB;EACD;;EAED,IAAIC,iBAAiB,GAAG,KAAxB;EACAP,MAAM,CAACQ,IAAP,CAAYL,MAAM,CAACM,MAAnB,EAA2B,UAAUC,SAAV,EAAqB;IAC9C,IAAIA,SAAS,IAAIA,SAAS,CAACC,IAAV,KAAmB,UAApC,EAAgD;MAC9CJ,iBAAiB,GAAG,IAApB;IACD;EACF,CAJD;;EAMA,IAAIA,iBAAJ,EAAuB;IACrBJ,MAAM,CAACG,QAAP,GAAkB,CAAC,EAAD,CAAlB;EACD;AACF;AACD;AACA;AACA;AACA;;;AAGA,SAASD,2BAAT,CAAqCF,MAArC,EAA6C;EAC3C,IAAIS,IAAI,GAAGX,SAAS,CAACY,gBAAV,CAA2BV,MAAM,CAACW,YAAlC,CAAX;EACAd,MAAM,CAACQ,IAAP,CAAYI,IAAZ,EAAkB,UAAUG,UAAV,EAAsB;IACtC,IAAI,CAACf,MAAM,CAACgB,QAAP,CAAgBD,UAAhB,CAAL,EAAkC;MAChC;IACD;;IAED,IAAIE,aAAa,GAAGF,UAAU,CAACE,aAAX,IAA4B,CAAhD;IACA,IAAIC,cAAc,GAAGjB,SAAS,CAACY,gBAAV,CAA2BV,MAAM,CAACG,QAAlC,EAA4CW,aAA5C,CAArB;;IAEA,IAAIC,cAAc,IAAIA,cAAc,CAACC,mBAArC,EAA0D;MACxDnB,MAAM,CAACoB,KAAP,CAAaL,UAAb,EAAyBG,cAAc,CAACC,mBAAxC,EAA6D,KAA7D;IACD;EACF,CAXD;AAYD"},"metadata":{},"sourceType":"module"}