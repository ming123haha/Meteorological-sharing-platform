{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isNone as r, isSome as i } from \"../../../core/maybe.js\";\nimport { property as o } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport s from \"../RasterInfo.js\";\nimport n from \"../RasterStorageInfo.js\";\nimport l from \"../TileInfo.js\";\nimport f from \"./BaseRaster.js\";\nimport m from \"./DBFParser.js\";\nimport { isTransformSupported as c, readTransform as p } from \"../rasterTransforms/utils.js\";\nimport d from \"../../../rest/support/FeatureSet.js\";\nimport u from \"../../../geometry/SpatialReference.js\";\nimport h from \"../../../geometry/Extent.js\";\nimport g from \"../../../geometry/Point.js\";\nconst y = new Map();\ny.set(\"int16\", \"esriFieldTypeSmallInteger\"), y.set(\"int32\", \"esriFieldTypeInteger\"), y.set(\"int64\", \"esriFieldTypeInteger\"), y.set(\"float32\", \"esriFieldTypeSingle\"), y.set(\"float64\", \"esriFieldTypeDouble\"), y.set(\"text\", \"esriFieldTypeString\");\nconst x = 8;\nlet S = class extends f {\n  constructor() {\n    super(...arguments), this.storageInfo = null, this.datasetFormat = \"CRF\";\n  }\n\n  async open(e) {\n    await this.init();\n    const {\n      data: r\n    } = await this.request(this.url + \"/conf.json\", {\n      signal: e?.signal\n    });\n    if (!this._validateHeader(r)) throw new t(\"cloudraster:open\", \"Invalid or unsupported conf.json.\");\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n\n    const {\n      storageInfo: i,\n      rasterInfo: o\n    } = this._parseHeader(r);\n\n    if (\"thematic\" === o.dataType) {\n      const e = await this._fetchAuxiliaryInformation();\n      o.attributeTable = e;\n    }\n\n    this._set(\"storageInfo\", i), this._set(\"rasterInfo\", o), this.ioConfig.retryCount = this.ioConfig.retryCount || 0;\n  }\n\n  async fetchRawTile(e, t, r, i = {}) {\n    const {\n      transposeInfo: o\n    } = this.rasterInfo.storageInfo,\n          {\n      transposedVariableName: a\n    } = i,\n          s = !(!o || !a),\n          n = s ? 0 : this.rasterInfo.storageInfo.maximumPyramidLevel - e;\n    if (n < 0) return null;\n\n    const l = this._buildCacheFilePath(n, t, r, i.multidimensionalDefinition, a),\n          f = this._getIndexRecordFromBundle(t, r, s),\n          m = await this.request(l, {\n      range: {\n        from: 0,\n        to: this.storageInfo.headerSize - 1\n      },\n      responseType: \"array-buffer\",\n      signal: i.signal\n    });\n\n    if (!m) return null;\n\n    const c = new Uint8Array(m.data),\n          p = this._getTileEndAndContentType(c, f);\n\n    if (0 === p.recordSize) return null;\n    const d = await this.request(l, {\n      range: {\n        from: p.position,\n        to: p.position + p.recordSize\n      },\n      responseType: \"array-buffer\",\n      signal: i.signal\n    });\n    if (!d) return null;\n\n    const [u, h] = this._getTileSize(s);\n\n    return this.decodePixelBlock(d.data, {\n      width: u,\n      height: h,\n      planes: null,\n      pixelType: null,\n      returnInterleaved: s\n    });\n  }\n\n  _validateHeader(e) {\n    const t = [\"origin\", \"extent\", \"geodataXform\", \"LODInfos\", \"blockWidth\", \"blockHeight\", \"bandCount\", \"pixelType\", \"pixelSizeX\", \"pixelSizeY\", \"format\", \"packetSize\"];\n    return e && \"RasterInfo\" === e.type && !t.some(t => !e[t]);\n  }\n\n  _parseHeader(e) {\n    const t = [\"u1\", \"u2\", \"u4\", \"u8\", \"s8\", \"u16\", \"s16\", \"u32\", \"s32\", \"f32\", \"f64\"][e.pixelType],\n          {\n      bandCount: r,\n      histograms: i,\n      colormap: o,\n      blockWidth: a,\n      blockHeight: f,\n      firstPyramidLevel: m,\n      maximumPyramidLevel: c\n    } = e,\n          p = e.statistics && e.statistics.map(e => ({\n      min: e.min,\n      max: e.max,\n      avg: e.mean,\n      stddev: e.standardDeviation,\n      median: e.median,\n      mode: e.mode\n    })),\n          d = e.extent.spatialReference,\n          y = e.geodataXform?.spatialReference,\n          S = new u(d?.wkid || d?.wkt ? d : y);\n    let I = new h({\n      xmin: e.extent.xmin,\n      ymin: e.extent.ymin,\n      xmax: e.extent.xmax,\n      ymax: e.extent.ymax,\n      spatialReference: S\n    });\n\n    const w = new g({\n      x: e.pixelSizeX,\n      y: e.pixelSizeY,\n      spatialReference: S\n    }),\n          _ = Math.round((I.xmax - I.xmin) / w.x),\n          v = Math.round((I.ymax - I.ymin) / w.y),\n          b = this._parseTransform(e.geodataXform),\n          z = b ? I : null;\n\n    b && (I = b.forwardTransform(I), w.x = (I.xmax - I.xmin) / _, w.y = (I.ymax - I.ymin) / v);\n    const T = e.properties ?? {},\n          k = e.format.toLowerCase().replace(\"cache/\", \"\"),\n          j = new g(e.origin.x, e.origin.y, S);\n    let C, R, F, P;\n    if (o && o.colors) for (C = [], R = 0; R < o.colors.length; R++) F = o.colors[R], P = o.values ? o.values[R] : R, C.push([P, 255 & F, F << 16 >>> 24, F << 8 >>> 24, F >>> 24]);\n    const H = e.LODInfos,\n          D = [];\n\n    for (R = 0; R < H.levels.length; R++) D.push({\n      level: H.levels[R],\n      resolution: H.resolutions[R],\n      scale: 96 / .0254 * H.resolutions[R]\n    });\n\n    const L = new l({\n      dpi: 96,\n      lods: D,\n      format: k,\n      origin: j,\n      size: [a, f],\n      spatialReference: S\n    }),\n          M = {\n      recordSize: x,\n      packetSize: e.packetSize,\n      headerSize: e.packetSize * e.packetSize * x + 64\n    },\n          B = [{\n      maxCol: Math.ceil(_ / a) - 1,\n      maxRow: Math.ceil(v / f) - 1,\n      minCol: 0,\n      minRow: 0\n    }];\n    let O = 2;\n    if (c > 0) for (R = 0; R < c; R++) B.push({\n      maxCol: Math.ceil(_ / O / a) - 1,\n      maxRow: Math.ceil(v / O / f) - 1,\n      minCol: 0,\n      minRow: 0\n    }), O *= 2;\n    const $ = e.mdInfo;\n    let N = null;\n\n    if ($ && T._yxs) {\n      const e = T._yxs;\n      N = {\n        packetSize: e.PacketSize,\n        tileSize: [e.TileXSize, e.TileYSize]\n      };\n    }\n\n    return {\n      storageInfo: M,\n      rasterInfo: new s({\n        width: _,\n        height: v,\n        pixelType: t,\n        bandCount: r,\n        extent: I,\n        nativeExtent: z,\n        transform: b,\n        spatialReference: S,\n        pixelSize: w,\n        keyProperties: T,\n        statistics: p,\n        histograms: i,\n        multidimensionalInfo: $,\n        colormap: C,\n        storageInfo: new n({\n          blockWidth: a,\n          blockHeight: f,\n          pyramidBlockWidth: a,\n          pyramidBlockHeight: f,\n          origin: j,\n          tileInfo: L,\n          transposeInfo: N,\n          firstPyramidLevel: m,\n          maximumPyramidLevel: c,\n          blockBoundary: B\n        })\n      })\n    };\n  }\n\n  _parseTransform(e) {\n    if (!c(e)) throw new t(\"cloudraster:open\", \"the data contains unsupported geodata transform types\");\n    const r = p(e);\n    if (\"identity\" === r.type) return null;\n    if (\"polynomial\" !== r.type || !r.forwardCoefficients?.length || !r.inverseCoefficients?.length) throw new t(\"cloudraster:open\", \"the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently\");\n    return r;\n  }\n\n  async _fetchAuxiliaryInformation(e) {\n    const t = this.request(this.url + \"/conf.vat.json\", {\n      signal: e\n    }).then(e => e.data).catch(() => null),\n          r = this.request(this.url + \"/conf.vat.dbf\", {\n      responseType: \"array-buffer\",\n      signal: e\n    }).then(e => e.data).catch(() => null),\n          i = await Promise.all([t, r]);\n    let o;\n\n    if (i[0]) {\n      let e = i[0].fields;\n      const t = i[0].values;\n\n      if (e && t) {\n        e = e.map(e => ({\n          type: \"OID\" === e.name ? \"esriFieldTypeOID\" : y.get(e.type),\n          name: e.name,\n          alias: e.alias || e.name\n        }));\n        const r = t.map(e => ({\n          attributes: e\n        }));\n        e && t && (o = {\n          fields: e,\n          features: r\n        });\n      }\n    }\n\n    if (!o && i[1]) {\n      o = m.parse(i[1]).recordSet;\n    }\n\n    return d.fromJSON(o);\n  }\n\n  _buildCacheFilePath(e, t, i, o, a) {\n    const s = this._getPackageSize(!!a),\n          n = Math.floor(t / s) * s,\n          l = Math.floor(i / s) * s,\n          f = \"R\" + this._toHexString4(n) + \"C\" + this._toHexString4(l);\n\n    let m = \"L\";\n    m += e >= 10 ? e.toString() : \"0\" + e.toString();\n    const {\n      multidimensionalInfo: c\n    } = this.rasterInfo,\n          p = o?.[0];\n    if (r(c) || !p) return `${this.url}/_alllayers/${m}/${f}.bundle`;\n    let d = \"_yxs\";\n\n    if (!a) {\n      d = c.variables.find(e => e.name === p.variableName).dimensions[0].values.indexOf(p.values[0]).toString(16);\n      const e = 4 - d.length;\n\n      for (let t = 0; t < e; t++) d = \"0\" + d;\n\n      d = \"S\" + d;\n    }\n\n    const u = this._getVariableFolderName(a || p.variableName);\n\n    return `${this.url}/_alllayers/${u}/${d}/${m}/${f}.bundle`;\n  }\n\n  _getPackageSize(e = !1) {\n    const {\n      transposeInfo: t\n    } = this.rasterInfo.storageInfo;\n    return e && i(t) ? t.packetSize ?? 0 : this.storageInfo.packetSize;\n  }\n\n  _getTileSize(e = !1) {\n    const {\n      storageInfo: t\n    } = this.rasterInfo,\n          {\n      transposeInfo: r\n    } = t;\n    return e && i(r) ? r.tileSize : t.tileInfo.size;\n  }\n\n  _getVariableFolderName(e) {\n    return \"\" === (e = e.trim()) ? \"_v\" : e.replace(/[\\{|\\}\\-]/g, \"_\").replace(\"\\\\*\", \"_v\");\n  }\n\n  _getIndexRecordFromBundle(e, t, r = !1) {\n    const i = this._getPackageSize(r),\n          o = i * (e % i) + t % i;\n\n    if (o < 0) throw \"Invalid level / row / col\";\n    return 20 + o * this.storageInfo.recordSize + 44;\n  }\n\n  _getTileEndAndContentType(e, t) {\n    const r = e.subarray(t, t + 8);\n    let i,\n        o = 0;\n\n    for (i = 0; i < 5; i++) o |= (255 & r[i]) << 8 * i;\n\n    const a = 0xffffffffff & o;\n\n    for (o = 0, i = 5; i < 8; i++) o |= (255 & r[i]) << 8 * (i - 5);\n\n    return {\n      position: a,\n      recordSize: 0xffffffffff & o\n    };\n  }\n\n  _toHexString4(e) {\n    let t = e.toString(16);\n\n    if (4 !== t.length) {\n      let e = 4 - t.length;\n\n      for (; e-- > 0;) t = \"0\" + t;\n    }\n\n    return t;\n  }\n\n};\ne([o({\n  readOnly: !0\n})], S.prototype, \"storageInfo\", void 0), e([o({\n  type: String,\n  json: {\n    write: !0\n  }\n})], S.prototype, \"datasetFormat\", void 0), S = e([a(\"esri.layers.support.rasterDatasets.CloudRaster\")], S);\nconst I = S;\nexport { I as default };","map":{"version":3,"names":["_","e","t","isNone","r","isSome","i","property","o","subclass","a","s","n","l","f","m","isTransformSupported","c","readTransform","p","d","u","h","g","y","Map","set","x","S","constructor","arguments","storageInfo","datasetFormat","open","init","data","request","url","signal","_validateHeader","datasetName","slice","lastIndexOf","rasterInfo","_parseHeader","dataType","_fetchAuxiliaryInformation","attributeTable","_set","ioConfig","retryCount","fetchRawTile","transposeInfo","transposedVariableName","maximumPyramidLevel","_buildCacheFilePath","multidimensionalDefinition","_getIndexRecordFromBundle","range","from","to","headerSize","responseType","Uint8Array","_getTileEndAndContentType","recordSize","position","_getTileSize","decodePixelBlock","width","height","planes","pixelType","returnInterleaved","type","some","bandCount","histograms","colormap","blockWidth","blockHeight","firstPyramidLevel","statistics","map","min","max","avg","mean","stddev","standardDeviation","median","mode","extent","spatialReference","geodataXform","wkid","wkt","I","xmin","ymin","xmax","ymax","w","pixelSizeX","pixelSizeY","Math","round","v","b","_parseTransform","z","forwardTransform","T","properties","k","format","toLowerCase","replace","j","origin","C","R","F","P","colors","length","values","push","H","LODInfos","D","levels","level","resolution","resolutions","scale","L","dpi","lods","size","M","packetSize","B","maxCol","ceil","maxRow","minCol","minRow","O","$","mdInfo","N","_yxs","PacketSize","tileSize","TileXSize","TileYSize","nativeExtent","transform","pixelSize","keyProperties","multidimensionalInfo","pyramidBlockWidth","pyramidBlockHeight","tileInfo","blockBoundary","forwardCoefficients","inverseCoefficients","then","catch","Promise","all","fields","name","get","alias","attributes","features","parse","recordSet","fromJSON","_getPackageSize","floor","_toHexString4","toString","variables","find","variableName","dimensions","indexOf","_getVariableFolderName","trim","subarray","readOnly","prototype","String","json","write","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/rasterDatasets/CloudRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isNone as r,isSome as i}from\"../../../core/maybe.js\";import{property as o}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import s from\"../RasterInfo.js\";import n from\"../RasterStorageInfo.js\";import l from\"../TileInfo.js\";import f from\"./BaseRaster.js\";import m from\"./DBFParser.js\";import{isTransformSupported as c,readTransform as p}from\"../rasterTransforms/utils.js\";import d from\"../../../rest/support/FeatureSet.js\";import u from\"../../../geometry/SpatialReference.js\";import h from\"../../../geometry/Extent.js\";import g from\"../../../geometry/Point.js\";const y=new Map;y.set(\"int16\",\"esriFieldTypeSmallInteger\"),y.set(\"int32\",\"esriFieldTypeInteger\"),y.set(\"int64\",\"esriFieldTypeInteger\"),y.set(\"float32\",\"esriFieldTypeSingle\"),y.set(\"float64\",\"esriFieldTypeDouble\"),y.set(\"text\",\"esriFieldTypeString\");const x=8;let S=class extends f{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat=\"CRF\"}async open(e){await this.init();const{data:r}=await this.request(this.url+\"/conf.json\",{signal:e?.signal});if(!this._validateHeader(r))throw new t(\"cloudraster:open\",\"Invalid or unsupported conf.json.\");this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{storageInfo:i,rasterInfo:o}=this._parseHeader(r);if(\"thematic\"===o.dataType){const e=await this._fetchAuxiliaryInformation();o.attributeTable=e}this._set(\"storageInfo\",i),this._set(\"rasterInfo\",o),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,i={}){const{transposeInfo:o}=this.rasterInfo.storageInfo,{transposedVariableName:a}=i,s=!(!o||!a),n=s?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const l=this._buildCacheFilePath(n,t,r,i.multidimensionalDefinition,a),f=this._getIndexRecordFromBundle(t,r,s),m=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:\"array-buffer\",signal:i.signal});if(!m)return null;const c=new Uint8Array(m.data),p=this._getTileEndAndContentType(c,f);if(0===p.recordSize)return null;const d=await this.request(l,{range:{from:p.position,to:p.position+p.recordSize},responseType:\"array-buffer\",signal:i.signal});if(!d)return null;const[u,h]=this._getTileSize(s);return this.decodePixelBlock(d.data,{width:u,height:h,planes:null,pixelType:null,returnInterleaved:s})}_validateHeader(e){const t=[\"origin\",\"extent\",\"geodataXform\",\"LODInfos\",\"blockWidth\",\"blockHeight\",\"bandCount\",\"pixelType\",\"pixelSizeX\",\"pixelSizeY\",\"format\",\"packetSize\"];return e&&\"RasterInfo\"===e.type&&!t.some((t=>!e[t]))}_parseHeader(e){const t=[\"u1\",\"u2\",\"u4\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"][e.pixelType],{bandCount:r,histograms:i,colormap:o,blockWidth:a,blockHeight:f,firstPyramidLevel:m,maximumPyramidLevel:c}=e,p=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),d=e.extent.spatialReference,y=e.geodataXform?.spatialReference,S=new u(d?.wkid||d?.wkt?d:y);let I=new h({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:S});const w=new g({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:S}),_=Math.round((I.xmax-I.xmin)/w.x),v=Math.round((I.ymax-I.ymin)/w.y),b=this._parseTransform(e.geodataXform),z=b?I:null;b&&(I=b.forwardTransform(I),w.x=(I.xmax-I.xmin)/_,w.y=(I.ymax-I.ymin)/v);const T=e.properties??{},k=e.format.toLowerCase().replace(\"cache/\",\"\"),j=new g(e.origin.x,e.origin.y,S);let C,R,F,P;if(o&&o.colors)for(C=[],R=0;R<o.colors.length;R++)F=o.colors[R],P=o.values?o.values[R]:R,C.push([P,255&F,F<<16>>>24,F<<8>>>24,F>>>24]);const H=e.LODInfos,D=[];for(R=0;R<H.levels.length;R++)D.push({level:H.levels[R],resolution:H.resolutions[R],scale:96/.0254*H.resolutions[R]});const L=new l({dpi:96,lods:D,format:k,origin:j,size:[a,f],spatialReference:S}),M={recordSize:x,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*x+64},B=[{maxCol:Math.ceil(_/a)-1,maxRow:Math.ceil(v/f)-1,minCol:0,minRow:0}];let O=2;if(c>0)for(R=0;R<c;R++)B.push({maxCol:Math.ceil(_/O/a)-1,maxRow:Math.ceil(v/O/f)-1,minCol:0,minRow:0}),O*=2;const $=e.mdInfo;let N=null;if($&&T._yxs){const e=T._yxs;N={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:M,rasterInfo:new s({width:_,height:v,pixelType:t,bandCount:r,extent:I,nativeExtent:z,transform:b,spatialReference:S,pixelSize:w,keyProperties:T,statistics:p,histograms:i,multidimensionalInfo:$,colormap:C,storageInfo:new n({blockWidth:a,blockHeight:f,pyramidBlockWidth:a,pyramidBlockHeight:f,origin:j,tileInfo:L,transposeInfo:N,firstPyramidLevel:m,maximumPyramidLevel:c,blockBoundary:B})})}}_parseTransform(e){if(!c(e))throw new t(\"cloudraster:open\",\"the data contains unsupported geodata transform types\");const r=p(e);if(\"identity\"===r.type)return null;if(\"polynomial\"!==r.type||!r.forwardCoefficients?.length||!r.inverseCoefficients?.length)throw new t(\"cloudraster:open\",\"the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently\");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+\"/conf.vat.json\",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+\"/conf.vat.dbf\",{responseType:\"array-buffer\",signal:e}).then((e=>e.data)).catch((()=>null)),i=await Promise.all([t,r]);let o;if(i[0]){let e=i[0].fields;const t=i[0].values;if(e&&t){e=e.map((e=>({type:\"OID\"===e.name?\"esriFieldTypeOID\":y.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(o={fields:e,features:r})}}if(!o&&i[1]){o=m.parse(i[1]).recordSet}return d.fromJSON(o)}_buildCacheFilePath(e,t,i,o,a){const s=this._getPackageSize(!!a),n=Math.floor(t/s)*s,l=Math.floor(i/s)*s,f=\"R\"+this._toHexString4(n)+\"C\"+this._toHexString4(l);let m=\"L\";m+=e>=10?e.toString():\"0\"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,p=o?.[0];if(r(c)||!p)return`${this.url}/_alllayers/${m}/${f}.bundle`;let d=\"_yxs\";if(!a){d=c.variables.find((e=>e.name===p.variableName)).dimensions[0].values.indexOf(p.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d=\"0\"+d;d=\"S\"+d}const u=this._getVariableFolderName(a||p.variableName);return`${this.url}/_alllayers/${u}/${d}/${m}/${f}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&i(t)?t.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:r}=t;return e&&i(r)?r.tileSize:t.tileInfo.size}_getVariableFolderName(e){return\"\"===(e=e.trim())?\"_v\":e.replace(/[\\{|\\}\\-]/g,\"_\").replace(\"\\\\*\",\"_v\")}_getIndexRecordFromBundle(e,t,r=!1){const i=this._getPackageSize(r),o=i*(e%i)+t%i;if(o<0)throw\"Invalid level / row / col\";return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let i,o=0;for(i=0;i<5;i++)o|=(255&r[i])<<8*i;const a=0xffffffffff&o;for(o=0,i=5;i<8;i++)o|=(255&r[i])<<8*(i-5);return{position:a,recordSize:0xffffffffff&o}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t=\"0\"+t}return t}};e([o({readOnly:!0})],S.prototype,\"storageInfo\",void 0),e([o({type:String,json:{write:!0}})],S.prototype,\"datasetFormat\",void 0),S=e([a(\"esri.layers.support.rasterDatasets.CloudRaster\")],S);const I=S;export{I as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}