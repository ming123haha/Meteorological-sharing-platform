{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { ForwardLinearDepth as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { Offset as o } from \"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";\nimport { ShaderOutput as r } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SliceDraw as i } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { InstancedDoublePrecision as l } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";\nimport { NormalAttribute as t } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { PositionAttribute as s } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";\nimport { SymbolColor as n } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";\nimport { TextureCoordinateAttribute as d } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexColor as c } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";\nimport { VerticalOffset as g } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";\nimport { DefaultMaterialAuxiliaryPasses as m } from \"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";\nimport { EvaluateAmbientOcclusion as v } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as p, addAmbientBoostFactor as u, addLightingGlobalFactor as b } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { addMainLightDirection as h, addMainLightIntensity as w } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";\nimport { multipassTerrainTest as f } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { PhysicallyBasedRendering as x } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";\nimport { PhysicallyBasedRenderingParameters as y, PBRMode as C } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadShadowMapPass as L, ReadShadowMapDraw as j } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { VisualVariables as M } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";\nimport { symbolAlphaCutoff as O } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { DiscardOrAdjustAlphaPass as P } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";\nimport { MixExternalColor as A } from \"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";\nimport { addProjViewLocalOrigin as T, addCameraPosition as E } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float3PassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as _ } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as F } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as $ } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as N } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as D } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { TransparencyPassType as V } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nimport { VertexAttribute as B } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\n\nfunction I(I) {\n  const R = new N(),\n        {\n    vertex: z,\n    fragment: k,\n    varyings: G\n  } = R;\n  return T(z, I), R.include(s), G.add(\"vpos\", \"vec3\"), R.include(M, I), R.include(l, I), R.include(g, I), I.output !== r.Color && I.output !== r.Alpha || (E(R.vertex, I), R.include(t, I), R.include(a, I), I.offsetBackfaces && R.include(o), I.instancedColor && R.attributes.add(B.INSTANCECOLOR, \"vec4\"), G.add(\"vNormalWorld\", \"vec3\"), G.add(\"localvpos\", \"vec3\"), I.hasMultipassTerrain && G.add(\"depth\", \"float\"), R.include(d, I), R.include(e, I), R.include(n, I), R.include(c, I), z.uniforms.add(new _(\"externalColor\", e => e.externalColor)), G.add(\"vcolorExt\", \"vec4\"), z.code.add($`\n        void main(void) {\n          forwardNormalizedVertexColor();\n          vcolorExt = externalColor;\n          ${I.instancedColor ? \"vcolorExt *= instanceColor;\" : \"\"}\n          vcolorExt *= vvColor();\n          vcolorExt *= getSymbolColor();\n          forwardColorMixMode();\n\n          if (vcolorExt.a < ${$.float(O)}) {\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          } else {\n            vpos = calculateVPos();\n            localvpos = vpos - view[3].xyz;\n            vpos = subtractOrigin(vpos);\n            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, vpos);\n            ${I.offsetBackfaces ? \"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\" : \"\"}\n          }\n          ${I.hasMultipassTerrain ? $`depth = (view * vec4(vpos, 1.0)).z;` : \"\"}\n          forwardLinearDepth();\n          forwardTextureCoordinates();\n        }\n      `)), I.output === r.Alpha && (R.include(i, I), R.include(P, I), R.include(f, I), k.uniforms.add([new F(\"opacity\", e => e.opacity), new F(\"layerOpacity\", e => e.layerOpacity)]), I.hasColorTexture && k.uniforms.add(new D(\"tex\", e => e.texture)), k.include(A), k.code.add($`\n      void main() {\n        discardBySlice(vpos);\n        ${I.hasMultipassTerrain ? $`terrainDepthTest(gl_FragCoord, depth);` : \"\"}\n        ${I.hasColorTexture ? $`\n                vec4 texColor = texture2D(tex, ${I.hasColorTextureTransform ? $`colorUV` : $`vuv0`});\n                ${I.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\"}\n                discardOrAdjustAlpha(texColor);` : $`vec4 texColor = vec4(1.0);`}\n        ${I.hasVertexColors ? $`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));` : $`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n\n        gl_FragColor = vec4(opacity_);\n      }\n    `)), I.output === r.Color && (R.include(i, I), R.include(p, I), R.include(v, I), R.include(P, I), R.include(I.instancedDoublePrecision ? L : j, I), R.include(f, I), E(R.fragment, I), h(k), u(k), b(k), k.uniforms.add([z.uniforms.get(\"localOrigin\"), z.uniforms.get(\"view\"), new S(\"ambient\", e => e.ambient), new S(\"diffuse\", e => e.diffuse), new F(\"opacity\", e => e.opacity), new F(\"layerOpacity\", e => e.layerOpacity)]), I.hasColorTexture && k.uniforms.add(new D(\"tex\", e => e.texture)), R.include(y, I), R.include(x, I), k.include(A), R.extensions.add(\"GL_OES_standard_derivatives\"), w(k), k.code.add($`\n      void main() {\n        discardBySlice(vpos);\n        ${I.hasMultipassTerrain ? $`terrainDepthTest(gl_FragCoord, depth);` : \"\"}\n        ${I.hasColorTexture ? $`\n                vec4 texColor = texture2D(tex, ${I.hasColorTextureTransform ? $`colorUV` : $`vuv0`});\n                ${I.textureAlphaPremultiplied ? \"texColor.rgb /= texColor.a;\" : \"\"}\n                discardOrAdjustAlpha(texColor);` : $`vec4 texColor = vec4(1.0);`}\n        vec3 viewDirection = normalize(vpos - cameraPosition);\n        ${I.pbrMode === C.Normal ? \"applyPBRFactors();\" : \"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n        ${I.receiveShadows ? \"float shadow = readShadowMap(vpos, linearDepth);\" : I.spherical ? \"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\" : \"float shadow = 0.0;\"}\n        vec3 matColor = max(ambient, diffuse);\n        ${I.hasVertexColors ? $`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));` : $`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${I.snowCover ? $`albedo = mix(albedo, vec3(1), 0.9);` : $``}\n        ${$`\n            vec3 shadingNormal = normalize(vNormalWorld);\n            albedo *= 1.2;\n            vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\n            float alignmentLightView = clamp(dot(viewForward, -mainLightDirection), 0.0, 1.0);\n            float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\n            float treeRadialFalloff = vColor.r;\n            float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\n            additionalLight += backLightFactor * mainLightIntensity;`}\n        ${I.pbrMode === C.Normal || I.pbrMode === C.Schematic ? I.spherical ? $`vec3 normalGround = normalize(vpos + localOrigin);` : $`vec3 normalGround = vec3(0.0, 0.0, 1.0);` : $``}\n        ${I.pbrMode === C.Normal || I.pbrMode === C.Schematic ? $`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${I.snowCover ? $`\n                        mrr = vec3(0.0, 1.0, 0.04);\n                        emission = vec3(0.0);` : \"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);` : $`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${I.transparencyPassType === V.Color ? $`gl_FragColor = premultiplyAlpha(gl_FragColor);` : $``}\n      }\n    `)), R.include(m, I), R;\n}\n\nconst R = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: I\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { R, I as b };","map":{"version":3,"names":["ForwardLinearDepth","e","Offset","o","ShaderOutput","r","SliceDraw","i","Transform","a","InstancedDoublePrecision","l","NormalAttribute","t","PositionAttribute","s","SymbolColor","n","TextureCoordinateAttribute","d","VertexColor","c","VerticalOffset","g","DefaultMaterialAuxiliaryPasses","m","EvaluateAmbientOcclusion","v","EvaluateSceneLighting","p","addAmbientBoostFactor","u","addLightingGlobalFactor","b","addMainLightDirection","h","addMainLightIntensity","w","multipassTerrainTest","f","PhysicallyBasedRendering","x","PhysicallyBasedRenderingParameters","y","PBRMode","C","ReadShadowMapPass","L","ReadShadowMapDraw","j","VisualVariables","M","symbolAlphaCutoff","O","DiscardOrAdjustAlphaPass","P","MixExternalColor","A","addProjViewLocalOrigin","T","addCameraPosition","E","Float3PassUniform","S","Float4PassUniform","_","FloatPassUniform","F","glsl","$","ShaderBuilder","N","Texture2DPassUniform","D","TransparencyPassType","V","VertexAttribute","B","I","R","vertex","z","fragment","k","varyings","G","include","add","output","Color","Alpha","offsetBackfaces","instancedColor","attributes","INSTANCECOLOR","hasMultipassTerrain","uniforms","externalColor","code","float","opacity","layerOpacity","hasColorTexture","texture","hasColorTextureTransform","textureAlphaPremultiplied","hasVertexColors","instancedDoublePrecision","get","ambient","diffuse","extensions","pbrMode","Normal","receiveShadows","spherical","snowCover","Schematic","transparencyPassType","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/chunks/RealisticTree.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as s}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VerticalOffset as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as m}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{EvaluateAmbientOcclusion as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as p,addAmbientBoostFactor as u,addLightingGlobalFactor as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightDirection as h,addMainLightIntensity as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{PhysicallyBasedRendering as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as y,PBRMode as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as L,ReadShadowMapDraw as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{VisualVariables as M}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as O}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as P}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as A}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as T,addCameraPosition as E}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as _}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as $}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as N}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as V}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as B}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function I(I){const R=new N,{vertex:z,fragment:k,varyings:G}=R;return T(z,I),R.include(s),G.add(\"vpos\",\"vec3\"),R.include(M,I),R.include(l,I),R.include(g,I),I.output!==r.Color&&I.output!==r.Alpha||(E(R.vertex,I),R.include(t,I),R.include(a,I),I.offsetBackfaces&&R.include(o),I.instancedColor&&R.attributes.add(B.INSTANCECOLOR,\"vec4\"),G.add(\"vNormalWorld\",\"vec3\"),G.add(\"localvpos\",\"vec3\"),I.hasMultipassTerrain&&G.add(\"depth\",\"float\"),R.include(d,I),R.include(e,I),R.include(n,I),R.include(c,I),z.uniforms.add(new _(\"externalColor\",(e=>e.externalColor))),G.add(\"vcolorExt\",\"vec4\"),z.code.add($`\n        void main(void) {\n          forwardNormalizedVertexColor();\n          vcolorExt = externalColor;\n          ${I.instancedColor?\"vcolorExt *= instanceColor;\":\"\"}\n          vcolorExt *= vvColor();\n          vcolorExt *= getSymbolColor();\n          forwardColorMixMode();\n\n          if (vcolorExt.a < ${$.float(O)}) {\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          } else {\n            vpos = calculateVPos();\n            localvpos = vpos - view[3].xyz;\n            vpos = subtractOrigin(vpos);\n            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, vpos);\n            ${I.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n          }\n          ${I.hasMultipassTerrain?$`depth = (view * vec4(vpos, 1.0)).z;`:\"\"}\n          forwardLinearDepth();\n          forwardTextureCoordinates();\n        }\n      `)),I.output===r.Alpha&&(R.include(i,I),R.include(P,I),R.include(f,I),k.uniforms.add([new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity))]),I.hasColorTexture&&k.uniforms.add(new D(\"tex\",(e=>e.texture))),k.include(A),k.code.add($`\n      void main() {\n        discardBySlice(vpos);\n        ${I.hasMultipassTerrain?$`terrainDepthTest(gl_FragCoord, depth);`:\"\"}\n        ${I.hasColorTexture?$`\n                vec4 texColor = texture2D(tex, ${I.hasColorTextureTransform?$`colorUV`:$`vuv0`});\n                ${I.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:$`vec4 texColor = vec4(1.0);`}\n        ${I.hasVertexColors?$`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:$`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n\n        gl_FragColor = vec4(opacity_);\n      }\n    `)),I.output===r.Color&&(R.include(i,I),R.include(p,I),R.include(v,I),R.include(P,I),R.include(I.instancedDoublePrecision?L:j,I),R.include(f,I),E(R.fragment,I),h(k),u(k),b(k),k.uniforms.add([z.uniforms.get(\"localOrigin\"),z.uniforms.get(\"view\"),new S(\"ambient\",(e=>e.ambient)),new S(\"diffuse\",(e=>e.diffuse)),new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity))]),I.hasColorTexture&&k.uniforms.add(new D(\"tex\",(e=>e.texture))),R.include(y,I),R.include(x,I),k.include(A),R.extensions.add(\"GL_OES_standard_derivatives\"),w(k),k.code.add($`\n      void main() {\n        discardBySlice(vpos);\n        ${I.hasMultipassTerrain?$`terrainDepthTest(gl_FragCoord, depth);`:\"\"}\n        ${I.hasColorTexture?$`\n                vec4 texColor = texture2D(tex, ${I.hasColorTextureTransform?$`colorUV`:$`vuv0`});\n                ${I.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:$`vec4 texColor = vec4(1.0);`}\n        vec3 viewDirection = normalize(vpos - cameraPosition);\n        ${I.pbrMode===C.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n        ${I.receiveShadows?\"float shadow = readShadowMap(vpos, linearDepth);\":I.spherical?\"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\":\"float shadow = 0.0;\"}\n        vec3 matColor = max(ambient, diffuse);\n        ${I.hasVertexColors?$`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:$`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${I.snowCover?$`albedo = mix(albedo, vec3(1), 0.9);`:$``}\n        ${$`\n            vec3 shadingNormal = normalize(vNormalWorld);\n            albedo *= 1.2;\n            vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\n            float alignmentLightView = clamp(dot(viewForward, -mainLightDirection), 0.0, 1.0);\n            float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\n            float treeRadialFalloff = vColor.r;\n            float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\n            additionalLight += backLightFactor * mainLightIntensity;`}\n        ${I.pbrMode===C.Normal||I.pbrMode===C.Schematic?I.spherical?$`vec3 normalGround = normalize(vpos + localOrigin);`:$`vec3 normalGround = vec3(0.0, 0.0, 1.0);`:$``}\n        ${I.pbrMode===C.Normal||I.pbrMode===C.Schematic?$`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${I.snowCover?$`\n                        mrr = vec3(0.0, 1.0, 0.04);\n                        emission = vec3(0.0);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:$`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${I.transparencyPassType===V.Color?$`gl_FragColor = premultiplyAlpha(gl_FragColor);`:$``}\n      }\n    `)),R.include(m,I),R}const R=Object.freeze(Object.defineProperty({__proto__:null,build:I},Symbol.toStringTag,{value:\"Module\"}));export{R,I as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}