{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst t = -1;\n\nclass e {\n  constructor() {\n    this._dirties = [{\n      vertexFrom: t,\n      vertexCount: t,\n      indexFrom: t,\n      indexCount: t,\n      allDirty: !1\n    }, {\n      vertexFrom: t,\n      vertexCount: t,\n      indexFrom: t,\n      indexCount: t,\n      allDirty: !1\n    }, {\n      vertexFrom: t,\n      vertexCount: t,\n      indexFrom: t,\n      indexCount: t,\n      allDirty: !1\n    }, {\n      vertexFrom: t,\n      vertexCount: t,\n      indexFrom: t,\n      indexCount: t,\n      allDirty: !1\n    }, {\n      vertexFrom: t,\n      vertexCount: t,\n      indexFrom: t,\n      indexCount: t,\n      allDirty: !1\n    }];\n  }\n\n  hasDirty() {\n    return this._dirties.some(e => e.indexCount !== t || e.allDirty);\n  }\n\n  markAllClean() {\n    for (const e of this._dirties) e.indexFrom = t, e.indexCount = t, e.vertexFrom = t, e.vertexCount = t, e.allDirty = !1;\n  }\n\n  markAllDirty() {\n    for (const t of this._dirties) t.allDirty = !0;\n  }\n\n  forEach(e) {\n    for (let r = 0; r < this._dirties.length; ++r) {\n      const {\n        indexCount: i,\n        indexFrom: o,\n        vertexCount: n,\n        vertexFrom: x,\n        allDirty: l\n      } = this._dirties[r],\n            s = {};\n      let d,\n          m = !1;\n      (l || x !== t && n > 0) && (s.geometry = {\n        count: n,\n        from: x,\n        allDirty: l\n      }, m = !0), (l || o !== t && i > 0) && (d = {\n        count: i,\n        from: o,\n        allDirty: l\n      }, m = !0), m && e({\n        indices: d,\n        vertices: s\n      }, r);\n    }\n  }\n\n  markDirtyIndices(e, r, i) {\n    const o = this._dirties[e],\n          n = r,\n          x = i;\n    if (!o.allDirty) if (o.indexCount !== t) {\n      const t = Math.min(o.indexFrom, n),\n            e = Math.max(o.indexFrom + o.indexCount, n + x) - t;\n      o.indexFrom = t, o.indexCount = e;\n    } else o.indexFrom = n, o.indexCount = x;\n  }\n\n  markDirtyVertices(e, r, i, o) {\n    const n = this._dirties[e],\n          x = i,\n          l = o;\n    if (!n.allDirty) if (n.vertexCount !== t) {\n      const t = Math.min(n.vertexFrom, x),\n            e = Math.max(n.vertexFrom + n.vertexCount, x + l) - t;\n      n.vertexFrom = t, n.vertexCount = e;\n    } else n.vertexFrom = x, n.vertexCount = l;\n  }\n\n}\n\nexport { e as default };","map":{"version":3,"names":["t","e","constructor","_dirties","vertexFrom","vertexCount","indexFrom","indexCount","allDirty","hasDirty","some","markAllClean","markAllDirty","forEach","r","length","i","o","n","x","l","s","d","m","geometry","count","from","indices","vertices","markDirtyIndices","Math","min","max","markDirtyVertices","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/engine/webgl/DirtyMap.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nconst t=-1;class e{constructor(){this._dirties=[{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1},{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1},{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1},{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1},{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1}]}hasDirty(){return this._dirties.some((e=>e.indexCount!==t||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=t,e.indexCount=t,e.vertexFrom=t,e.vertexCount=t,e.allDirty=!1}markAllDirty(){for(const t of this._dirties)t.allDirty=!0}forEach(e){for(let r=0;r<this._dirties.length;++r){const{indexCount:i,indexFrom:o,vertexCount:n,vertexFrom:x,allDirty:l}=this._dirties[r],s={};let d,m=!1;(l||x!==t&&n>0)&&(s.geometry={count:n,from:x,allDirty:l},m=!0),(l||o!==t&&i>0)&&(d={count:i,from:o,allDirty:l},m=!0),m&&e({indices:d,vertices:s},r)}}markDirtyIndices(e,r,i){const o=this._dirties[e],n=r,x=i;if(!o.allDirty)if(o.indexCount!==t){const t=Math.min(o.indexFrom,n),e=Math.max(o.indexFrom+o.indexCount,n+x)-t;o.indexFrom=t,o.indexCount=e}else o.indexFrom=n,o.indexCount=x}markDirtyVertices(e,r,i,o){const n=this._dirties[e],x=i,l=o;if(!n.allDirty)if(n.vertexCount!==t){const t=Math.min(n.vertexFrom,x),e=Math.max(n.vertexFrom+n.vertexCount,x+l)-t;n.vertexFrom=t,n.vertexCount=e}else n.vertexFrom=x,n.vertexCount=l}}export{e as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}