{"ast":null,"code":"import * as echarts from 'echarts';\n\nrequire('echarts/extension/bmap/bmap');\n\nexport default {\n  name: \"TrackingOfPollutants\",\n\n  mounted() {\n    this.loadScript();\n    this.creatMap();\n    this.drawHeat();\n  },\n\n  methods: {\n    loadScript() {\n      var script = document.createElement(\"script\");\n      script.src = \"https://api.map.baidu.com/api?v=2.0&ak=Tz3pnHtelKyQWPsW0B4Wh22Zib68w8U7&callback=initialize\";\n      document.body.appendChild(script);\n    },\n\n    //创建百度地图\n    creatMap() {\n      const myChart = echarts.init(this.$refs.map);\n      const option = {\n        bmap: {\n          center: [120.13066322374, 30.240018034923],\n          zoom: 8,\n          mapStyleV2: {\n            styleId: '50aa27f5dc9a72aff522ccefb0da0e83'\n          },\n          roam: true\n        }\n      };\n      myChart.setOption(option);\n    },\n\n    drawHeat() {\n      const points = [].concat.apply([], data.map(function (track) {\n        return track.map(function (seg) {\n          return seg.coord.concat([1]);\n        });\n      }));\n      const myChart = echarts.getInstanceByDom(this.$refs.map);\n      const option = {\n        animation: false,\n        visualMap: {\n          show: false,\n          top: 'top',\n          min: 0,\n          max: 5,\n          seriesIndex: 0,\n          calculable: true,\n          inRange: {\n            color: ['blue', 'blue', 'green', 'yellow', 'red']\n          }\n        },\n        series: [{\n          type: 'heatmap',\n          coordinateSystem: 'bmap',\n          data: points,\n          pointSize: 5,\n          blurSize: 6,\n          gradientColors: [{\n            offset: 0.4,\n            color: 'green'\n          }, {\n            offset: 0.5,\n            color: 'yellow'\n          }, {\n            offset: 0.8,\n            color: 'orange'\n          }, {\n            offset: 1,\n            color: 'red'\n          }]\n        }]\n      };\n      myChart.setOption(option);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAQA;;AACAA;;AACA;EACAC,4BADA;;EAEAC;IACA;IACA;IACA;EACA,CANA;;EAOAC;IACAC;MACA;MACAC;MACAC;IACA,CALA;;IAMA;IACAC;MACA;MACA;QACAC;UACAC,0CADA;UAEAC,OAFA;UAGAC;YACAC;UADA,CAHA;UAMAC;QANA;MADA;MAUAC;IACA,CApBA;;IAqBAC;MACA;QACA;UACA;QACA,CAFA;MAGA,CAJA;MAKA;MACA;QACAC,gBADA;QAEAC;UACAC,WADA;UAEAC,UAFA;UAGAC,MAHA;UAIAC,MAJA;UAKAC,cALA;UAMAC,gBANA;UAOAC;YACAC;UADA;QAPA,CAFA;QAaAC;UACAC,eADA;UAEAC,wBAFA;UAGAC,YAHA;UAIAC,YAJA;UAKAC,WALA;UAMAC;YACAC,WADA;YAEAR;UAFA,GAGA;YACAQ,WADA;YAEAR;UAFA,CAHA,EAMA;YACAQ,WADA;YAEAR;UAFA,CANA,EASA;YACAQ,SADA;YAEAR;UAFA,CATA;QANA;MAbA;MAkCAX;IACA;;EA/DA;AAPA","names":["require","name","mounted","methods","loadScript","script","document","creatMap","bmap","center","zoom","mapStyleV2","styleId","roam","myChart","drawHeat","animation","visualMap","show","top","min","max","seriesIndex","calculable","inRange","color","series","type","coordinateSystem","data","pointSize","blurSize","gradientColors","offset"],"sourceRoot":"src/views","sources":["TrackingOfPollutants.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <div ref=\"map\" style=\"width: 100%;height: 100%\"></div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nrequire('echarts/extension/bmap/bmap')\r\nexport default {\r\n  name: \"TrackingOfPollutants\",\r\n  mounted() {\r\n    this.loadScript();\r\n    this.creatMap();\r\n    this.drawHeat()\r\n  },\r\n  methods: {\r\n    loadScript() {\r\n      var script = document.createElement(\"script\");\r\n      script.src = \"https://api.map.baidu.com/api?v=2.0&ak=Tz3pnHtelKyQWPsW0B4Wh22Zib68w8U7&callback=initialize\";\r\n      document.body.appendChild(script);\r\n    },\r\n    //创建百度地图\r\n    creatMap() {\r\n      const myChart = echarts.init(this.$refs.map);\r\n      const option = {\r\n        bmap: {\r\n          center: [120.13066322374, 30.240018034923],\r\n          zoom: 8,\r\n          mapStyleV2: {\r\n            styleId: '50aa27f5dc9a72aff522ccefb0da0e83'\r\n          },\r\n          roam: true\r\n        },\r\n      }\r\n      myChart.setOption(option)\r\n    },\r\n    drawHeat(){\r\n      const points = [].concat.apply([], data.map(function (track) {\r\n        return track.map(function (seg) {\r\n          return seg.coord.concat([1]);\r\n        });\r\n      }));\r\n      const myChart = echarts.getInstanceByDom(this.$refs.map)\r\n      const option = {\r\n        animation: false,\r\n        visualMap: {\r\n          show: false,\r\n          top: 'top',\r\n          min: 0,\r\n          max: 5,\r\n          seriesIndex: 0,\r\n          calculable: true,\r\n          inRange: {\r\n            color: ['blue', 'blue', 'green', 'yellow', 'red']\r\n          }\r\n        },\r\n        series: [{\r\n          type: 'heatmap',\r\n          coordinateSystem: 'bmap',\r\n          data: points,\r\n          pointSize: 5,\r\n          blurSize: 6,\r\n          gradientColors: [{\r\n            offset: 0.4,\r\n            color: 'green'\r\n          }, {\r\n            offset: 0.5,\r\n            color: 'yellow'\r\n          }, {\r\n            offset: 0.8,\r\n            color: 'orange'\r\n          }, {\r\n            offset: 1,\r\n            color: 'red'\r\n          }]\r\n        }]\r\n      }\r\n      myChart.setOption(option)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}