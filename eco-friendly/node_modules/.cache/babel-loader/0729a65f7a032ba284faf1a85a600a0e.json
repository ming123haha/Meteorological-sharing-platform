{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport \"../../core/has.js\";\nimport { isPowerOfTwo as t } from \"../../core/mathUtils.js\";\nimport { isSome as e, unwrap as i } from \"../../core/maybe.js\";\nimport { checkWebGLError as r } from \"./checkWebGLError.js\";\nimport { ContextType as a } from \"./context-util.js\";\nimport { ResourceType as s, TextureType as o, TextureSamplingMode as n, TextureWrapMode as p, CompressedTextureFormat as h, PixelType as _, PixelFormat as l, SizedPixelFormat as m } from \"./enums.js\";\nimport d from \"./capabilities/isWebGL2Context.js\";\nconst c = 4;\n\nclass u {\n  constructor(t, e, i = null) {\n    if (this._context = t, this.type = \"texture\", this._glName = null, this._descriptor = void 0, this._samplingModeDirty = !1, this._wrapModeDirty = !1, this._wasImmutablyAllocated = !1, t.instanceCounter.increment(s.Texture, this), this._descriptor = {\n      target: o.TEXTURE_2D,\n      samplingMode: n.LINEAR,\n      wrapMode: p.REPEAT,\n      flipped: !1,\n      hasMipmap: !1,\n      isOpaque: !1,\n      unpackAlignment: 4,\n      preMultiplyAlpha: !1,\n      isImmutable: !1,\n      ...e\n    }, t.type !== a.WEBGL2 && (this._descriptor.isImmutable && (this._descriptor.isImmutable = !1), A(this._descriptor.target))) throw new Error(\"3D and array textures are not supported in WebGL1\");\n    this._descriptor.target === o.TEXTURE_CUBE_MAP ? this._setDataCubeMap(i) : this.setData(i);\n  }\n\n  get glName() {\n    return this._glName;\n  }\n\n  get descriptor() {\n    return this._descriptor;\n  }\n\n  get isDirty() {\n    return this._samplingModeDirty || this._wrapModeDirty;\n  }\n\n  dispose() {\n    this._context.gl && this._glName && (this._context.unbindTexture(this), this._context.gl.deleteTexture(this._glName), this._glName = null, this._context.instanceCounter.decrement(s.Texture, this));\n  }\n\n  release() {\n    this.dispose();\n  }\n\n  resize(t, e) {\n    const i = this._descriptor;\n\n    if (i.width !== t || i.height !== e) {\n      if (this._wasImmutablyAllocated) throw new Error(\"Immutable textures can't be resized!\");\n      i.width = t, i.height = e, this._descriptor.target === o.TEXTURE_CUBE_MAP ? this._setDataCubeMap(null) : this.setData(null);\n    }\n  }\n\n  _setDataCubeMap(t = null) {\n    for (let e = o.TEXTURE_CUBE_MAP_POSITIVE_X; e <= o.TEXTURE_CUBE_MAP_NEGATIVE_Z; e++) this._setData(t, e);\n  }\n\n  setData(t) {\n    this._setData(t);\n  }\n\n  _setData(t, i) {\n    if (!this._context || !this._context.gl) return;\n    const a = this._context.gl;\n    this._glName || (this._glName = a.createTexture()), void 0 === t && (t = null);\n    const s = this._descriptor;\n    i ?? (i = s.target);\n    const o = A(i);\n    null === t && (s.width = s.width || c, s.height = s.height || c, o && (s.depth = s.depth ?? 1));\n\n    const n = this._context.bindTexture(this, u.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES), u._validateTexture(this._context, s), this._configurePixelStorage();\n    const p = s.pixelFormat;\n    let h = s.internalFormat ? s.internalFormat : this._deriveInternalFormat(p, s.dataType);\n\n    if (M(t)) {\n      let e = t.width,\n          n = t.height;\n      const p = 1;\n      t instanceof HTMLVideoElement && (e = t.videoWidth, n = t.videoHeight), s.width && s.height, o && s.depth, s.isImmutable && !this._wasImmutablyAllocated && this._texStorage(i, h, s.hasMipmap, e, n, p), this._texImage(i, 0, h, e, n, p, t), r(a), s.hasMipmap && this.generateMipmap(), void 0 === s.width && (s.width = e), void 0 === s.height && (s.height = n), o && void 0 === s.depth && (s.depth = p);\n    } else {\n      const {\n        width: n,\n        height: p,\n        depth: _\n      } = s;\n\n      if (null != n && null != p || console.error(\"Width and height must be specified!\"), o && null == _ && console.error(\"Depth must be specified!\"), s.isImmutable && !this._wasImmutablyAllocated && this._texStorage(i, h, s.hasMipmap, n, p, _), a.DEPTH24_STENCIL8 && h === a.DEPTH_STENCIL && (h = a.DEPTH24_STENCIL8), g(t)) {\n        const e = t.levels,\n              r = I(i, n, p, _),\n              o = Math.min(r - 1, e.length - 1);\n        d(a) ? a.texParameteri(s.target, a.TEXTURE_MAX_LEVEL, o) : s.hasMipmap = s.hasMipmap && r === e.length;\n        const l = h;\n        if (!T(l)) throw new Error(\"Attempting to use compressed data with an umcompressed format!\");\n\n        this._forEachMipmapLevel((t, r, a, s) => {\n          const o = e[Math.min(t, e.length - 1)];\n\n          this._compressedTexImage(i, t, l, r, a, s, o);\n        }, o);\n      } else e(t) ? (this._texImage(i, 0, h, n, p, _, t), r(a), s.hasMipmap && this.generateMipmap()) : this._forEachMipmapLevel((t, e, s, o) => {\n        this._texImage(i, t, h, e, s, o, null), r(a);\n      });\n    }\n\n    u._applySamplingMode(a, this._descriptor), u._applyWrapMode(a, this._descriptor), u._applyAnisotropicFilteringParameters(this._context, this._descriptor), r(a), this._context.bindTexture(n, u.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  updateData(t, e, i, r, a, s) {\n    s || console.error(\"An attempt to use uninitialized data!\"), this._glName || console.error(\"An attempt to update uninitialized texture!\");\n    const o = this._context.gl,\n          n = this._descriptor,\n          {\n      pixelFormat: p,\n      internalFormat: h,\n      dataType: _,\n      isImmutable: l,\n      target: m\n    } = n;\n    if (l && !this._wasImmutablyAllocated) throw new Error(\"Cannot update immutable texture before allocation!\");\n\n    const d = this._context.bindTexture(this, u.TEXTURE_UNIT_FOR_UPDATES);\n\n    (e < 0 || i < 0 || r > n.width || a > n.height || e + r > n.width || i + a > n.height) && console.error(\"An attempt to update out of bounds of the texture!\"), this._configurePixelStorage(), M(s) ? o.texSubImage2D(m, t, e, i, p, _, s) : g(s) ? o.compressedTexSubImage2D(m, t, e, i, r, a, h, s.levels[t]) : o.texSubImage2D(m, t, e, i, r, a, p, _, s), this._context.bindTexture(d, u.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  updateData3D(t, e, i, r, a, s, o, n) {\n    n || console.error(\"An attempt to use uninitialized data!\"), this._glName || console.error(\"An attempt to update uninitialized texture!\");\n    const p = this._context.gl;\n    if (!d(p)) throw new Error(\"3D textures are not supported in WebGL1\");\n    const h = this._descriptor,\n          {\n      pixelFormat: _,\n      dataType: l,\n      isImmutable: m,\n      target: c,\n      internalFormat: E\n    } = h;\n    if (m && !this._wasImmutablyAllocated) throw new Error(\"Cannot update immutable texture before allocation!\");\n    A(c) || console.warn(\"Attempting to set 3D texture data on a non-3D texture\");\n\n    const T = this._context.bindTexture(this, u.TEXTURE_UNIT_FOR_UPDATES);\n\n    if (this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES), (e < 0 || i < 0 || r < 0 || a > h.width || s > h.height || o > h.depth || e + a > h.width || i + s > h.height || r + o > h.depth) && console.error(\"An attempt to update out of bounds of the texture!\"), this._configurePixelStorage(), g(n)) n = n.levels[t], p.compressedTexSubImage3D(c, t, e, i, r, a, s, o, E, n);else {\n      const h = n;\n      p.texSubImage3D(c, t, e, i, r, a, s, o, _, l, h);\n    }\n\n    this._context.bindTexture(T, u.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  generateMipmap() {\n    const t = this._descriptor;\n\n    if (!t.hasMipmap) {\n      if (this._wasImmutablyAllocated) throw new Error(\"Cannot add mipmaps to immutable texture after allocation\");\n      t.hasMipmap = !0, this._samplingModeDirty = !0, u._validateTexture(this._context, t);\n    }\n\n    t.samplingMode === n.LINEAR ? (this._samplingModeDirty = !0, t.samplingMode = n.LINEAR_MIPMAP_NEAREST) : t.samplingMode === n.NEAREST && (this._samplingModeDirty = !0, t.samplingMode = n.NEAREST_MIPMAP_NEAREST);\n\n    const e = this._context.bindTexture(this, u.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.gl.generateMipmap(t.target), this._context.bindTexture(e, u.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  setSamplingMode(t) {\n    t !== this._descriptor.samplingMode && (this._descriptor.samplingMode = t, this._samplingModeDirty = !0);\n  }\n\n  setWrapMode(t) {\n    t !== this._descriptor.wrapMode && (this._descriptor.wrapMode = t, u._validateTexture(this._context, this._descriptor), this._wrapModeDirty = !0);\n  }\n\n  applyChanges() {\n    const t = this._context.gl,\n          e = this._descriptor;\n    this._samplingModeDirty && (u._applySamplingMode(t, e), this._samplingModeDirty = !1), this._wrapModeDirty && (u._applyWrapMode(t, e), this._wrapModeDirty = !1);\n  }\n\n  _deriveInternalFormat(t, e) {\n    if (this._context.type === a.WEBGL1) return t;\n\n    switch (e) {\n      case _.FLOAT:\n        switch (t) {\n          case l.RGBA:\n            return m.RGBA32F;\n\n          case l.RGB:\n            return m.RGB32F;\n\n          default:\n            throw new Error(\"Unable to derive format\");\n        }\n\n      case _.UNSIGNED_BYTE:\n        switch (t) {\n          case l.RGBA:\n            return m.RGBA8;\n\n          case l.RGB:\n            return m.RGB8;\n        }\n\n      default:\n        return t;\n    }\n  }\n\n  _configurePixelStorage() {\n    const t = this._context.gl,\n          {\n      unpackAlignment: e,\n      flipped: i,\n      preMultiplyAlpha: r\n    } = this._descriptor;\n    t.pixelStorei(t.UNPACK_ALIGNMENT, e), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, i ? 1 : 0), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r ? 1 : 0);\n  }\n\n  _texStorage(t, e, i, r, a, s) {\n    const o = this._context.gl;\n    if (!d(o)) throw new Error(\"Immutable textures are not supported in WebGL1\");\n    if (!E(e)) throw new Error(\"Immutable textures must have a sized internal format\");\n    if (!this._descriptor.isImmutable) return;\n    const n = i ? I(t, r, a, s) : 1;\n    A(t) ? o.texStorage3D(t, n, e, r, a, s) : o.texStorage2D(t, n, e, r, a), this._wasImmutablyAllocated = !0;\n  }\n\n  _texImage(t, r, s, o, n, p, h) {\n    const _ = this._context.gl;\n    let l = null;\n    const m = this._context.type === a.WEBGL2,\n          d = A(t),\n          {\n      isImmutable: c,\n      pixelFormat: u,\n      dataType: E\n    } = this._descriptor;\n    if (m && (l = _), m || !M(h)) {\n      if (c) {\n        if (e(h)) {\n          const e = h;\n          d ? l.texSubImage3D(t, r, 0, 0, 0, o, n, p, u, E, e) : _.texSubImage2D(t, r, 0, 0, o, n, u, E, e);\n        }\n      } else {\n        const e = i(h);\n        d ? l.texImage3D(t, r, s, o, n, p, 0, u, E, e) : _.texImage2D(t, r, s, o, n, 0, u, E, e);\n      }\n    } else _.texImage2D(t, 0, s, u, E, h);\n  }\n\n  _compressedTexImage(t, i, r, s, o, n, p) {\n    const h = this._context.gl;\n    let _ = null;\n    const l = A(t),\n          m = this._descriptor.isImmutable;\n\n    if (l) {\n      if (this._context.type !== a.WEBGL2) throw new Error(\"3D textures are not supported in WebGL1\");\n      _ = h;\n    }\n\n    m ? e(p) && (l ? _.compressedTexSubImage3D(t, i, 0, 0, 0, s, o, n, r, p) : h.compressedTexSubImage2D(t, i, 0, 0, s, o, r, p)) : l ? _.compressedTexImage3D(t, i, r, s, o, n, 0, p) : h.compressedTexImage2D(t, i, r, s, o, 0, p);\n  }\n\n  _forEachMipmapLevel(t, e = 1 / 0) {\n    let {\n      width: i,\n      height: r,\n      depth: a,\n      hasMipmap: s,\n      target: n\n    } = this._descriptor;\n    const p = n === o.TEXTURE_3D;\n\n    for (let o = 0; t(o, i, r, a), s && (1 !== i || 1 !== r || p && 1 !== a) && !(o >= e); ++o) i = Math.max(1, i >> 1), r = Math.max(1, r >> 1), p && (a = Math.max(1, a >> 1));\n  }\n\n  static _validateTexture(e, i) {\n    (i.width < 0 || i.height < 0 || i.depth < 0) && console.error(\"Negative dimension parameters are not allowed!\");\n    const r = d(e.gl),\n          a = t(i.width) && t(i.height);\n    r || !i.isImmutable && !A(i.target) || console.error(\"Immutable and 3D-like textures are not supported in WebGL1!\"), r || a || (\"number\" == typeof i.wrapMode ? i.wrapMode !== p.CLAMP_TO_EDGE && console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\") : i.wrapMode.s === p.CLAMP_TO_EDGE && i.wrapMode.t === p.CLAMP_TO_EDGE || console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"), i.hasMipmap && console.error(\"Mipmapping requires power-of-two textures!\"));\n  }\n\n  static _applySamplingMode(t, e) {\n    let i = e.samplingMode,\n        r = e.samplingMode;\n    i === n.LINEAR_MIPMAP_NEAREST || i === n.LINEAR_MIPMAP_LINEAR ? (i = n.LINEAR, e.hasMipmap || (r = n.LINEAR)) : i !== n.NEAREST_MIPMAP_NEAREST && i !== n.NEAREST_MIPMAP_LINEAR || (i = n.NEAREST, e.hasMipmap || (r = n.NEAREST)), t.texParameteri(e.target, t.TEXTURE_MAG_FILTER, i), t.texParameteri(e.target, t.TEXTURE_MIN_FILTER, r);\n  }\n\n  static _applyWrapMode(t, e) {\n    \"number\" == typeof e.wrapMode ? (t.texParameteri(e.target, t.TEXTURE_WRAP_S, e.wrapMode), t.texParameteri(e.target, t.TEXTURE_WRAP_T, e.wrapMode)) : (t.texParameteri(e.target, t.TEXTURE_WRAP_S, e.wrapMode.s), t.texParameteri(e.target, t.TEXTURE_WRAP_T, e.wrapMode.t));\n  }\n\n  static _applyAnisotropicFilteringParameters(t, e) {\n    const i = t.capabilities.textureFilterAnisotropic;\n    if (!i) return;\n    t.gl.texParameterf(e.target, i.TEXTURE_MAX_ANISOTROPY, e.maxAnisotropy ?? 1);\n  }\n\n}\n\nfunction E(t) {\n  return t in m;\n}\n\nfunction T(t) {\n  return t in h;\n}\n\nfunction g(t) {\n  return e(t) && \"type\" in t && \"compressed\" === t.type;\n}\n\nfunction x(t) {\n  return e(t) && \"byteLength\" in t;\n}\n\nfunction M(t) {\n  return e(t) && !g(t) && !x(t);\n}\n\nfunction A(t) {\n  return t === o.TEXTURE_3D || t === o.TEXTURE_2D_ARRAY;\n}\n\nfunction I(t, e, i, r = 1) {\n  let a = Math.max(e, i);\n  return t === o.TEXTURE_3D && (a = Math.max(a, r)), Math.round(Math.log(a) / Math.LN2) + 1;\n}\n\nu.TEXTURE_UNIT_FOR_UPDATES = 0;\nexport { u as Texture };","map":{"version":3,"names":["isPowerOfTwo","t","isSome","e","unwrap","i","checkWebGLError","r","ContextType","a","ResourceType","s","TextureType","o","TextureSamplingMode","n","TextureWrapMode","p","CompressedTextureFormat","h","PixelType","_","PixelFormat","l","SizedPixelFormat","m","d","c","u","constructor","_context","type","_glName","_descriptor","_samplingModeDirty","_wrapModeDirty","_wasImmutablyAllocated","instanceCounter","increment","Texture","target","TEXTURE_2D","samplingMode","LINEAR","wrapMode","REPEAT","flipped","hasMipmap","isOpaque","unpackAlignment","preMultiplyAlpha","isImmutable","WEBGL2","A","Error","TEXTURE_CUBE_MAP","_setDataCubeMap","setData","glName","descriptor","isDirty","dispose","gl","unbindTexture","deleteTexture","decrement","release","resize","width","height","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Z","_setData","createTexture","depth","bindTexture","TEXTURE_UNIT_FOR_UPDATES","setActiveTexture","_validateTexture","_configurePixelStorage","pixelFormat","internalFormat","_deriveInternalFormat","dataType","M","HTMLVideoElement","videoWidth","videoHeight","_texStorage","_texImage","generateMipmap","console","error","DEPTH24_STENCIL8","DEPTH_STENCIL","g","levels","I","Math","min","length","texParameteri","TEXTURE_MAX_LEVEL","T","_forEachMipmapLevel","_compressedTexImage","_applySamplingMode","_applyWrapMode","_applyAnisotropicFilteringParameters","updateData","texSubImage2D","compressedTexSubImage2D","updateData3D","E","warn","compressedTexSubImage3D","texSubImage3D","LINEAR_MIPMAP_NEAREST","NEAREST","NEAREST_MIPMAP_NEAREST","setSamplingMode","setWrapMode","applyChanges","WEBGL1","FLOAT","RGBA","RGBA32F","RGB","RGB32F","UNSIGNED_BYTE","RGBA8","RGB8","pixelStorei","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texStorage3D","texStorage2D","texImage3D","texImage2D","compressedTexImage3D","compressedTexImage2D","TEXTURE_3D","max","CLAMP_TO_EDGE","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","capabilities","textureFilterAnisotropic","texParameterf","TEXTURE_MAX_ANISOTROPY","maxAnisotropy","x","TEXTURE_2D_ARRAY","round","log","LN2"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/webgl/Texture.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport\"../../core/has.js\";import{isPowerOfTwo as t}from\"../../core/mathUtils.js\";import{isSome as e,unwrap as i}from\"../../core/maybe.js\";import{checkWebGLError as r}from\"./checkWebGLError.js\";import{ContextType as a}from\"./context-util.js\";import{ResourceType as s,TextureType as o,TextureSamplingMode as n,TextureWrapMode as p,CompressedTextureFormat as h,PixelType as _,PixelFormat as l,SizedPixelFormat as m}from\"./enums.js\";import d from\"./capabilities/isWebGL2Context.js\";const c=4;class u{constructor(t,e,i=null){if(this._context=t,this.type=\"texture\",this._glName=null,this._descriptor=void 0,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,t.instanceCounter.increment(s.Texture,this),this._descriptor={target:o.TEXTURE_2D,samplingMode:n.LINEAR,wrapMode:p.REPEAT,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,isImmutable:!1,...e},t.type!==a.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),A(this._descriptor.target)))throw new Error(\"3D and array textures are not supported in WebGL1\");this._descriptor.target===o.TEXTURE_CUBE_MAP?this._setDataCubeMap(i):this.setData(i)}get glName(){return this._glName}get descriptor(){return this._descriptor}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._context.gl&&this._glName&&(this._context.unbindTexture(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(s.Texture,this))}release(){this.dispose()}resize(t,e){const i=this._descriptor;if(i.width!==t||i.height!==e){if(this._wasImmutablyAllocated)throw new Error(\"Immutable textures can't be resized!\");i.width=t,i.height=e,this._descriptor.target===o.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(t=null){for(let e=o.TEXTURE_CUBE_MAP_POSITIVE_X;e<=o.TEXTURE_CUBE_MAP_NEGATIVE_Z;e++)this._setData(t,e)}setData(t){this._setData(t)}_setData(t,i){if(!this._context||!this._context.gl)return;const a=this._context.gl;this._glName||(this._glName=a.createTexture()),void 0===t&&(t=null);const s=this._descriptor;i??(i=s.target);const o=A(i);null===t&&(s.width=s.width||c,s.height=s.height||c,o&&(s.depth=s.depth??1));const n=this._context.bindTexture(this,u.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES),u._validateTexture(this._context,s),this._configurePixelStorage();const p=s.pixelFormat;let h=s.internalFormat?s.internalFormat:this._deriveInternalFormat(p,s.dataType);if(M(t)){let e=t.width,n=t.height;const p=1;t instanceof HTMLVideoElement&&(e=t.videoWidth,n=t.videoHeight),s.width&&s.height,o&&s.depth,s.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(i,h,s.hasMipmap,e,n,p),this._texImage(i,0,h,e,n,p,t),r(a),s.hasMipmap&&this.generateMipmap(),void 0===s.width&&(s.width=e),void 0===s.height&&(s.height=n),o&&void 0===s.depth&&(s.depth=p)}else{const{width:n,height:p,depth:_}=s;if(null!=n&&null!=p||console.error(\"Width and height must be specified!\"),o&&null==_&&console.error(\"Depth must be specified!\"),s.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(i,h,s.hasMipmap,n,p,_),a.DEPTH24_STENCIL8&&h===a.DEPTH_STENCIL&&(h=a.DEPTH24_STENCIL8),g(t)){const e=t.levels,r=I(i,n,p,_),o=Math.min(r-1,e.length-1);d(a)?a.texParameteri(s.target,a.TEXTURE_MAX_LEVEL,o):s.hasMipmap=s.hasMipmap&&r===e.length;const l=h;if(!T(l))throw new Error(\"Attempting to use compressed data with an umcompressed format!\");this._forEachMipmapLevel(((t,r,a,s)=>{const o=e[Math.min(t,e.length-1)];this._compressedTexImage(i,t,l,r,a,s,o)}),o)}else e(t)?(this._texImage(i,0,h,n,p,_,t),r(a),s.hasMipmap&&this.generateMipmap()):this._forEachMipmapLevel(((t,e,s,o)=>{this._texImage(i,t,h,e,s,o,null),r(a)}))}u._applySamplingMode(a,this._descriptor),u._applyWrapMode(a,this._descriptor),u._applyAnisotropicFilteringParameters(this._context,this._descriptor),r(a),this._context.bindTexture(n,u.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,e,i,r,a,s){s||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const o=this._context.gl,n=this._descriptor,{pixelFormat:p,internalFormat:h,dataType:_,isImmutable:l,target:m}=n;if(l&&!this._wasImmutablyAllocated)throw new Error(\"Cannot update immutable texture before allocation!\");const d=this._context.bindTexture(this,u.TEXTURE_UNIT_FOR_UPDATES);(e<0||i<0||r>n.width||a>n.height||e+r>n.width||i+a>n.height)&&console.error(\"An attempt to update out of bounds of the texture!\"),this._configurePixelStorage(),M(s)?o.texSubImage2D(m,t,e,i,p,_,s):g(s)?o.compressedTexSubImage2D(m,t,e,i,r,a,h,s.levels[t]):o.texSubImage2D(m,t,e,i,r,a,p,_,s),this._context.bindTexture(d,u.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(t,e,i,r,a,s,o,n){n||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const p=this._context.gl;if(!d(p))throw new Error(\"3D textures are not supported in WebGL1\");const h=this._descriptor,{pixelFormat:_,dataType:l,isImmutable:m,target:c,internalFormat:E}=h;if(m&&!this._wasImmutablyAllocated)throw new Error(\"Cannot update immutable texture before allocation!\");A(c)||console.warn(\"Attempting to set 3D texture data on a non-3D texture\");const T=this._context.bindTexture(this,u.TEXTURE_UNIT_FOR_UPDATES);if(this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES),(e<0||i<0||r<0||a>h.width||s>h.height||o>h.depth||e+a>h.width||i+s>h.height||r+o>h.depth)&&console.error(\"An attempt to update out of bounds of the texture!\"),this._configurePixelStorage(),g(n))n=n.levels[t],p.compressedTexSubImage3D(c,t,e,i,r,a,s,o,E,n);else{const h=n;p.texSubImage3D(c,t,e,i,r,a,s,o,_,l,h)}this._context.bindTexture(T,u.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;if(!t.hasMipmap){if(this._wasImmutablyAllocated)throw new Error(\"Cannot add mipmaps to immutable texture after allocation\");t.hasMipmap=!0,this._samplingModeDirty=!0,u._validateTexture(this._context,t)}t.samplingMode===n.LINEAR?(this._samplingModeDirty=!0,t.samplingMode=n.LINEAR_MIPMAP_NEAREST):t.samplingMode===n.NEAREST&&(this._samplingModeDirty=!0,t.samplingMode=n.NEAREST_MIPMAP_NEAREST);const e=this._context.bindTexture(this,u.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(u.TEXTURE_UNIT_FOR_UPDATES);this._context.gl.generateMipmap(t.target),this._context.bindTexture(e,u.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(t){t!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=t,this._samplingModeDirty=!0)}setWrapMode(t){t!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=t,u._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const t=this._context.gl,e=this._descriptor;this._samplingModeDirty&&(u._applySamplingMode(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(u._applyWrapMode(t,e),this._wrapModeDirty=!1)}_deriveInternalFormat(t,e){if(this._context.type===a.WEBGL1)return t;switch(e){case _.FLOAT:switch(t){case l.RGBA:return m.RGBA32F;case l.RGB:return m.RGB32F;default:throw new Error(\"Unable to derive format\")}case _.UNSIGNED_BYTE:switch(t){case l.RGBA:return m.RGBA8;case l.RGB:return m.RGB8}default:return t}}_configurePixelStorage(){const t=this._context.gl,{unpackAlignment:e,flipped:i,preMultiplyAlpha:r}=this._descriptor;t.pixelStorei(t.UNPACK_ALIGNMENT,e),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i?1:0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r?1:0)}_texStorage(t,e,i,r,a,s){const o=this._context.gl;if(!d(o))throw new Error(\"Immutable textures are not supported in WebGL1\");if(!E(e))throw new Error(\"Immutable textures must have a sized internal format\");if(!this._descriptor.isImmutable)return;const n=i?I(t,r,a,s):1;A(t)?o.texStorage3D(t,n,e,r,a,s):o.texStorage2D(t,n,e,r,a),this._wasImmutablyAllocated=!0}_texImage(t,r,s,o,n,p,h){const _=this._context.gl;let l=null;const m=this._context.type===a.WEBGL2,d=A(t),{isImmutable:c,pixelFormat:u,dataType:E}=this._descriptor;if(m&&(l=_),m||!M(h))if(c){if(e(h)){const e=h;d?l.texSubImage3D(t,r,0,0,0,o,n,p,u,E,e):_.texSubImage2D(t,r,0,0,o,n,u,E,e)}}else{const e=i(h);d?l.texImage3D(t,r,s,o,n,p,0,u,E,e):_.texImage2D(t,r,s,o,n,0,u,E,e)}else _.texImage2D(t,0,s,u,E,h)}_compressedTexImage(t,i,r,s,o,n,p){const h=this._context.gl;let _=null;const l=A(t),m=this._descriptor.isImmutable;if(l){if(this._context.type!==a.WEBGL2)throw new Error(\"3D textures are not supported in WebGL1\");_=h}m?e(p)&&(l?_.compressedTexSubImage3D(t,i,0,0,0,s,o,n,r,p):h.compressedTexSubImage2D(t,i,0,0,s,o,r,p)):l?_.compressedTexImage3D(t,i,r,s,o,n,0,p):h.compressedTexImage2D(t,i,r,s,o,0,p)}_forEachMipmapLevel(t,e=1/0){let{width:i,height:r,depth:a,hasMipmap:s,target:n}=this._descriptor;const p=n===o.TEXTURE_3D;for(let o=0;t(o,i,r,a),s&&(1!==i||1!==r||p&&1!==a)&&!(o>=e);++o)i=Math.max(1,i>>1),r=Math.max(1,r>>1),p&&(a=Math.max(1,a>>1))}static _validateTexture(e,i){(i.width<0||i.height<0||i.depth<0)&&console.error(\"Negative dimension parameters are not allowed!\");const r=d(e.gl),a=t(i.width)&&t(i.height);r||!i.isImmutable&&!A(i.target)||console.error(\"Immutable and 3D-like textures are not supported in WebGL1!\"),r||a||(\"number\"==typeof i.wrapMode?i.wrapMode!==p.CLAMP_TO_EDGE&&console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"):i.wrapMode.s===p.CLAMP_TO_EDGE&&i.wrapMode.t===p.CLAMP_TO_EDGE||console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"),i.hasMipmap&&console.error(\"Mipmapping requires power-of-two textures!\"))}static _applySamplingMode(t,e){let i=e.samplingMode,r=e.samplingMode;i===n.LINEAR_MIPMAP_NEAREST||i===n.LINEAR_MIPMAP_LINEAR?(i=n.LINEAR,e.hasMipmap||(r=n.LINEAR)):i!==n.NEAREST_MIPMAP_NEAREST&&i!==n.NEAREST_MIPMAP_LINEAR||(i=n.NEAREST,e.hasMipmap||(r=n.NEAREST)),t.texParameteri(e.target,t.TEXTURE_MAG_FILTER,i),t.texParameteri(e.target,t.TEXTURE_MIN_FILTER,r)}static _applyWrapMode(t,e){\"number\"==typeof e.wrapMode?(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode)):(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode.s),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode.t))}static _applyAnisotropicFilteringParameters(t,e){const i=t.capabilities.textureFilterAnisotropic;if(!i)return;t.gl.texParameterf(e.target,i.TEXTURE_MAX_ANISOTROPY,e.maxAnisotropy??1)}}function E(t){return t in m}function T(t){return t in h}function g(t){return e(t)&&\"type\"in t&&\"compressed\"===t.type}function x(t){return e(t)&&\"byteLength\"in t}function M(t){return e(t)&&!g(t)&&!x(t)}function A(t){return t===o.TEXTURE_3D||t===o.TEXTURE_2D_ARRAY}function I(t,e,i,r=1){let a=Math.max(e,i);return t===o.TEXTURE_3D&&(a=Math.max(a,r)),Math.round(Math.log(a)/Math.LN2)+1}u.TEXTURE_UNIT_FOR_UPDATES=0;export{u as Texture};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}