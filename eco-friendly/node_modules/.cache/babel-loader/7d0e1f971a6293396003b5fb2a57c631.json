{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { _ as r } from \"../../../chunks/tslib.es6.js\";\nimport { JSONSupport as t } from \"../../../core/JSONSupport.js\";\nimport { isNone as s } from \"../../../core/maybe.js\";\nimport { property as e } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { cast as o } from \"../../../core/accessorSupport/decorators/cast.js\";\nimport { subclass as i } from \"../../../core/accessorSupport/decorators/subclass.js\";\nlet n = class extends t {\n  constructor() {\n    super(...arguments), this.functionArguments = null, this.readingBufferSize = 0;\n  }\n\n  bind(r, t = !1) {\n    const s = this._getRasterValues();\n\n    for (let e = 0; e < s.length; e++) {\n      const o = s[e];\n\n      if (o && \"object\" == typeof o && \"bind\" in o && (!o.rasterInfo || t)) {\n        const s = o.bind(r, t);\n        if (!s.success) return s;\n      }\n    }\n\n    return !this.rasterInfo || t ? (this.sourceRasterInfos = this._getSourceRasterInfos(r), this._bindSourceRasters()) : {\n      success: !0\n    };\n  }\n\n  process(r) {\n    const t = this._getRasterValues().map(t => this._readRasterValue(t, r));\n\n    return this._processPixels({ ...r,\n      pixelBlocks: t\n    });\n  }\n\n  getPrimaryRasters() {\n    const r = [],\n          t = [];\n    return this._getPrimaryRasters(this, r, t), {\n      rasters: r,\n      rasterIds: t\n    };\n  }\n\n  _getOutputPixelType(r) {\n    return \"unknown\" === this.outputPixelType ? r : this.outputPixelType ?? r;\n  }\n\n  _getRasterValues() {\n    const {\n      rasterArgumentNames: r\n    } = this;\n    return \"rasters\" === r[0] && Array.isArray(this.functionArguments.rasters) ? this.functionArguments.rasters : r.map(r => this.functionArguments[r]);\n  }\n\n  _getSourceRasterInfos(r) {\n    const t = this._getRasterValues(),\n          {\n      rasterInfos: s,\n      rasterIds: e\n    } = r;\n\n    return t.map(r => r && \"object\" == typeof r && \"bind\" in r && r.rasterInfo ? r.rasterInfo : \"string\" == typeof r && e.includes(r) ? s[e.indexOf(r)] : s[0]);\n  }\n\n  _getPrimaryRasterId(r) {\n    return r?.url;\n  }\n\n  _getPrimaryRasters(r, t = [], s = []) {\n    for (let e = 0; e < r.sourceRasters.length; e++) {\n      const o = r.sourceRasters[e];\n      if (\"number\" != typeof o) if (\"bind\" in o) this._getPrimaryRasters(o, t, s);else {\n        const r = o,\n              e = this._getPrimaryRasterId(r);\n\n        if (null == e) continue;\n        s.includes(e) || (this.mainPrimaryRasterId === e ? (t.unshift(r), s.unshift(e)) : (t.push(r), s.push(e)));\n      }\n    }\n  }\n\n  _readRasterValue(r, t) {\n    const {\n      primaryPixelBlocks: e\n    } = t;\n\n    if (s(r) || \"$$\" === r) {\n      const r = e[0];\n      return s(r) ? null : r.clone();\n    }\n\n    if (\"string\" == typeof r) {\n      const s = t.primaryRasterIds.indexOf(r);\n      return -1 === s ? null : e[s];\n    }\n\n    if (\"number\" == typeof r) {\n      const t = e[0];\n      if (s(t)) return null;\n      const o = new Float32Array(t.width * t.height);\n      o.fill(r);\n      const i = t.clone();\n      return i.pixels = i.pixels.map(() => o), i;\n    }\n\n    return r.process(t);\n  }\n\n};\nr([e({\n  json: {\n    write: !0\n  }\n})], n.prototype, \"functionName\", void 0), r([e({\n  json: {\n    write: !0\n  }\n})], n.prototype, \"functionArguments\", void 0), r([e()], n.prototype, \"rasterArgumentNames\", void 0), r([e({\n  json: {\n    write: !0\n  }\n}), o(r => r?.toLowerCase())], n.prototype, \"outputPixelType\", void 0), r([e({\n  json: {\n    write: !0\n  }\n})], n.prototype, \"mainPrimaryRasterId\", void 0), r([e()], n.prototype, \"sourceRasters\", void 0), r([e({\n  json: {\n    write: !0\n  }\n})], n.prototype, \"sourceRasterInfos\", void 0), r([e({\n  json: {\n    write: !0\n  }\n})], n.prototype, \"rasterInfo\", void 0), r([e({\n  json: {\n    write: !0\n  }\n})], n.prototype, \"readingBufferSize\", void 0), n = r([i(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")], n);\nconst a = n;\nexport { a as default };","map":{"version":3,"names":["_","r","JSONSupport","t","isNone","s","property","e","cast","o","subclass","i","n","constructor","arguments","functionArguments","readingBufferSize","bind","_getRasterValues","length","rasterInfo","success","sourceRasterInfos","_getSourceRasterInfos","_bindSourceRasters","process","map","_readRasterValue","_processPixels","pixelBlocks","getPrimaryRasters","_getPrimaryRasters","rasters","rasterIds","_getOutputPixelType","outputPixelType","rasterArgumentNames","Array","isArray","rasterInfos","includes","indexOf","_getPrimaryRasterId","url","sourceRasters","mainPrimaryRasterId","unshift","push","primaryPixelBlocks","clone","primaryRasterIds","Float32Array","width","height","fill","pixels","json","write","prototype","toLowerCase","a","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/rasterFunctions/BaseRasterFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../../chunks/tslib.es6.js\";import{JSONSupport as t}from\"../../../core/JSONSupport.js\";import{isNone as s}from\"../../../core/maybe.js\";import{property as e}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import{cast as o}from\"../../../core/accessorSupport/decorators/cast.js\";import{subclass as i}from\"../../../core/accessorSupport/decorators/subclass.js\";let n=class extends t{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0}bind(r,t=!1){const s=this._getRasterValues();for(let e=0;e<s.length;e++){const o=s[e];if(o&&\"object\"==typeof o&&\"bind\"in o&&(!o.rasterInfo||t)){const s=o.bind(r,t);if(!s.success)return s}}return!this.rasterInfo||t?(this.sourceRasterInfos=this._getSourceRasterInfos(r),this._bindSourceRasters()):{success:!0}}process(r){const t=this._getRasterValues().map((t=>this._readRasterValue(t,r)));return this._processPixels({...r,pixelBlocks:t})}getPrimaryRasters(){const r=[],t=[];return this._getPrimaryRasters(this,r,t),{rasters:r,rasterIds:t}}_getOutputPixelType(r){return\"unknown\"===this.outputPixelType?r:this.outputPixelType??r}_getRasterValues(){const{rasterArgumentNames:r}=this;return\"rasters\"===r[0]&&Array.isArray(this.functionArguments.rasters)?this.functionArguments.rasters:r.map((r=>this.functionArguments[r]))}_getSourceRasterInfos(r){const t=this._getRasterValues(),{rasterInfos:s,rasterIds:e}=r;return t.map((r=>r&&\"object\"==typeof r&&\"bind\"in r&&r.rasterInfo?r.rasterInfo:\"string\"==typeof r&&e.includes(r)?s[e.indexOf(r)]:s[0]))}_getPrimaryRasterId(r){return r?.url}_getPrimaryRasters(r,t=[],s=[]){for(let e=0;e<r.sourceRasters.length;e++){const o=r.sourceRasters[e];if(\"number\"!=typeof o)if(\"bind\"in o)this._getPrimaryRasters(o,t,s);else{const r=o,e=this._getPrimaryRasterId(r);if(null==e)continue;s.includes(e)||(this.mainPrimaryRasterId===e?(t.unshift(r),s.unshift(e)):(t.push(r),s.push(e)))}}}_readRasterValue(r,t){const{primaryPixelBlocks:e}=t;if(s(r)||\"$$\"===r){const r=e[0];return s(r)?null:r.clone()}if(\"string\"==typeof r){const s=t.primaryRasterIds.indexOf(r);return-1===s?null:e[s]}if(\"number\"==typeof r){const t=e[0];if(s(t))return null;const o=new Float32Array(t.width*t.height);o.fill(r);const i=t.clone();return i.pixels=i.pixels.map((()=>o)),i}return r.process(t)}};r([e({json:{write:!0}})],n.prototype,\"functionName\",void 0),r([e({json:{write:!0}})],n.prototype,\"functionArguments\",void 0),r([e()],n.prototype,\"rasterArgumentNames\",void 0),r([e({json:{write:!0}}),o((r=>r?.toLowerCase()))],n.prototype,\"outputPixelType\",void 0),r([e({json:{write:!0}})],n.prototype,\"mainPrimaryRasterId\",void 0),r([e()],n.prototype,\"sourceRasters\",void 0),r([e({json:{write:!0}})],n.prototype,\"sourceRasterInfos\",void 0),r([e({json:{write:!0}})],n.prototype,\"rasterInfo\",void 0),r([e({json:{write:!0}})],n.prototype,\"readingBufferSize\",void 0),n=r([i(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")],n);const a=n;export{a as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}