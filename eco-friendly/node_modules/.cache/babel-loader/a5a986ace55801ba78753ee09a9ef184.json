{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { strict as e } from \"../../core/jsonMap.js\";\nconst i = e()({\n  esriCentimeters: \"centimeters\",\n  esriDecimalDegrees: \"decimal-degrees\",\n  esriDecimeters: \"decimeters\",\n  esriFeet: \"feet\",\n  esriInches: \"inches\",\n  esriKilometers: \"kilometers\",\n  esriMeters: \"meters\",\n  esriMiles: \"miles\",\n  esriMillimeters: \"millimeters\",\n  esriNauticalMiles: \"nautical-miles\",\n  esriPoints: \"points\",\n  esriUnknownUnits: \"unknown\",\n  esriYards: \"yards\"\n}),\n      r = e()({\n  esriNAUCentimeters: \"centimeters\",\n  esriNAUDecimalDegrees: \"decimal-degrees\",\n  esriNAUDecimeters: \"decimeters\",\n  esriNAUFeet: \"feet\",\n  esriNAUInches: \"inches\",\n  esriNAUKilometers: \"kilometers\",\n  esriNAUMeters: \"meters\",\n  esriNAUMiles: \"miles\",\n  esriNAUMillimeters: \"millimeters\",\n  esriNAUNauticalMiles: \"nautical-miles\",\n  esriNAUPoints: \"points\",\n  esriNAUYards: \"yards\"\n}),\n      t = e()({\n  esriNAUDays: \"days\",\n  esriNAUHours: \"hours\",\n  esriNAUMinutes: \"minutes\",\n  esriNAUSeconds: \"seconds\"\n}),\n      s = e()({\n  esriDOTComplete: \"complete\",\n  esriDOTCompleteNoEvents: \"complete-no-events\",\n  esriDOTFeatureSets: \"featuresets\",\n  esriDOTInstructionsOnly: \"instructions-only\",\n  esriDOTStandard: \"standard\",\n  esriDOTSummaryOnly: \"summary-only\"\n}),\n      o = e()({\n  esriNAOutputLineNone: \"none\",\n  esriNAOutputLineStraight: \"straight\",\n  esriNAOutputLineTrueShape: \"true-shape\",\n  esriNAOutputLineTrueShapeWithMeasure: \"true-shape-with-measure\"\n}),\n      a = e()({\n  esriNAOutputPolygonNone: \"none\",\n  esriNAOutputPolygonSimplified: \"simplified\",\n  esriNAOutputPolygonDetailed: \"detailed\"\n}),\n      n = e()({\n  esriNFSBAllowBacktrack: \"allow-backtrack\",\n  esriNFSBAtDeadEndsOnly: \"at-dead-ends-only\",\n  esriNFSBNoBacktrack: \"no-backtrack\",\n  esriNFSBAtDeadEndsAndIntersections: \"at-dead-ends-and-intersections\"\n}),\n      l = e()({\n  esriNATravelDirectionFromFacility: \"from-facility\",\n  esriNATravelDirectionToFacility: \"to-facility\"\n}),\n      d = e()({\n  esriNATimeOfDayNotUsed: \"not-used\",\n  esriNATimeOfDayUseAsStartTime: \"start\",\n  esriNATimeOfDayUseAsEndTime: \"end\"\n}),\n      c = e()({\n  AUTOMOBILE: \"automobile\",\n  TRUCK: \"truck\",\n  WALK: \"walk\",\n  OTHER: \"other\"\n}),\n      u = e()({\n  0: \"either-side-of-vehicle\",\n  1: \"right-side-of-vehicle\",\n  2: \"left-side-of-vehicle\",\n  3: \"no-u-turn\"\n}, {\n  useNumericKeys: !0\n}),\n      m = e()({\n  0: \"stop\",\n  1: \"waypoint\",\n  2: \"break\"\n}, {\n  useNumericKeys: !0\n}),\n      h = e()({\n  0: \"ok\",\n  1: \"not-located\",\n  2: \"network-element-not-located\",\n  3: \"element-not-traversable\",\n  4: \"invalid-field-values\",\n  5: \"not-reached\",\n  6: \"time-window-violation\",\n  7: \"not-located-on-closest\"\n}, {\n  useNumericKeys: !0\n}),\n      p = e()({\n  1: \"right\",\n  2: \"left\"\n}, {\n  useNumericKeys: !0\n}),\n      v = e()({\n  0: \"restriction\",\n  1: \"added-cost\"\n}, {\n  useNumericKeys: !0\n}),\n      g = e()({\n  0: \"permit\",\n  1: \"restrict\"\n}, {\n  useNumericKeys: !0\n}),\n      A = e()({\n  1: \"header\",\n  50: \"arrive\",\n  51: \"depart\",\n  52: \"straight\",\n  100: \"on-ferry\",\n  101: \"off-ferry\",\n  102: \"central-fork\",\n  103: \"roundabout\",\n  104: \"u-turn\",\n  150: \"door\",\n  151: \"stairs\",\n  152: \"elevator\",\n  153: \"escalator\",\n  154: \"pedestrian-ramp\",\n  200: \"left-fork\",\n  201: \"left-ramp\",\n  202: \"clockwise-roundabout\",\n  203: \"left-handed-u-turn\",\n  204: \"bear-left\",\n  205: \"left-turn\",\n  206: \"sharp-left\",\n  207: \"left-turn-and-immediate-left-turn\",\n  208: \"left-turn-and-immediate-right-turn\",\n  300: \"right-fork\",\n  301: \"right-ramp\",\n  302: \"counter-clockwise-roundabout\",\n  303: \"right-handed-u-turn\",\n  304: \"bear-right\",\n  305: \"right-turn\",\n  306: \"sharp-right\",\n  307: \"right-turn-and-immediate-left-turn\",\n  308: \"right-turn-and-immediate-right-turn\",\n  400: \"up-elevator\",\n  401: \"up-escalator\",\n  402: \"up-stairs\",\n  500: \"down-elevator\",\n  501: \"down-escalator\",\n  502: \"down-stairs\",\n  1e3: \"general-event\",\n  1001: \"landmark\",\n  1002: \"time-zone-change\",\n  1003: \"traffic-event\",\n  1004: \"scaled-cost-barrier-event\",\n  1005: \"boundary-crossing\",\n  1006: \"restriction-violation\"\n}, {\n  useNumericKeys: !0\n}),\n      f = e()({\n  0: \"unknown\",\n  1: \"segment\",\n  2: \"maneuver-segment\",\n  3: \"restriction-violation\",\n  4: \"scaled-cost-barrier\",\n  5: \"heavy-traffic\",\n  6: \"slow-traffic\",\n  7: \"moderate-traffic\"\n}, {\n  useNumericKeys: !0\n}),\n      k = e()({\n  \"NA Campus\": \"campus\",\n  \"NA Desktop\": \"desktop\",\n  \"NA Navigation\": \"navigation\"\n}),\n      N = e()({\n  Kilometers: \"kilometers\",\n  Miles: \"miles\"\n}, {\n  ignoreUnknown: !1\n}),\n      y = e()({\n  Minutes: \"minutes\",\n  TimeAt1KPH: \"time-at-1-kph\",\n  TravelTime: \"travel-time\",\n  TruckMinutes: \"truck-minutes\",\n  TruckTravelTime: \"truck-travel-time\",\n  WalkTime: \"walk-time\"\n}, {\n  ignoreUnknown: !1\n}),\n      T = e()({\n  Kilometers: \"kilometers\",\n  Miles: \"miles\",\n  Minutes: \"minutes\",\n  TimeAt1KPH: \"time-at-1-kph\",\n  TravelTime: \"travel-time\",\n  TruckMinutes: \"truck-minutes\",\n  TruckTravelTime: \"truck-travel-time\",\n  WalkTime: \"walk-time\"\n}, {\n  ignoreUnknown: !1\n}),\n      U = e()({\n  \"Any Hazmat Prohibited\": \"any-hazmat-prohibited\",\n  \"Avoid Carpool Roads\": \"avoid-carpool-roads\",\n  \"Avoid Express Lanes\": \"avoid-express-lanes\",\n  \"Avoid Ferries\": \"avoid-ferries\",\n  \"Avoid Gates\": \"avoid-gates\",\n  \"Avoid Limited Access Roads\": \"avoid-limited-access-roads\",\n  \"Avoid Private Roads\": \"avoid-private-roads\",\n  \"Avoid Roads Unsuitable for Pedestrians\": \"avoid-roads-unsuitable-for-pedestrians\",\n  \"Avoid Stairways\": \"avoid-stairways\",\n  \"Avoid Toll Roads\": \"avoid-toll-roads\",\n  \"Avoid Toll Roads for Trucks\": \"avoid-toll-roads-for-trucks\",\n  \"Avoid Truck Restricted Roads\": \"avoid-truck-restricted-roads\",\n  \"Avoid Unpaved Roads\": \"avoid-unpaved-roads\",\n  \"Axle Count Restriction\": \"axle-count-restriction\",\n  \"Driving a Bus\": \"driving-a-bus\",\n  \"Driving a Taxi\": \"driving-a-taxi\",\n  \"Driving a Truck\": \"driving-a-truck\",\n  \"Driving an Automobile\": \"driving-an-automobile\",\n  \"Driving an Emergency Vehicle\": \"driving-an-emergency-vehicle\",\n  \"Height Restriction\": \"height-restriction\",\n  \"Kingpin to Rear Axle Length Restriction\": \"kingpin-to-rear-axle-length-restriction\",\n  \"Length Restriction\": \"length-restriction\",\n  \"Preferred for Pedestrians\": \"preferred-for-pedestrians\",\n  \"Riding a Motorcycle\": \"riding-a-motorcycle\",\n  \"Roads Under Construction Prohibited\": \"roads-under-construction-prohibited\",\n  \"Semi or Tractor with One or More Trailers Prohibited\": \"semi-or-tractor-with-one-or-more-trailers-prohibited\",\n  \"Single Axle Vehicles Prohibited\": \"single-axle-vehicles-prohibited\",\n  \"Tandem Axle Vehicles Prohibited\": \"tandem-axle-vehicles-prohibited\",\n  \"Through Traffic Prohibited\": \"through-traffic-prohibited\",\n  \"Truck with Trailers Restriction\": \"truck-with-trailers-restriction\",\n  \"Use Preferred Hazmat Routes\": \"use-preferred-hazmat-routes\",\n  \"Use Preferred Truck Routes\": \"use-preferred-truck-routes\",\n  Walking: \"walking\",\n  \"Weight Restriction\": \"weight-restriction\"\n}, {\n  ignoreUnknown: !1\n}),\n      R = e()({\n  esriSpatialRelIntersects: \"intersects\",\n  esriSpatialRelContains: \"contains\",\n  esriSpatialRelCrosses: \"crosses\",\n  esriSpatialRelEnvelopeIntersects: \"envelope-intersects\",\n  esriSpatialRelIndexIntersects: \"index-intersects\",\n  esriSpatialRelOverlaps: \"overlaps\",\n  esriSpatialRelTouches: \"touches\",\n  esriSpatialRelWithin: \"within\",\n  esriSpatialRelRelation: \"relation\"\n}),\n      w = e()({\n  esriGeometryPoint: \"point\",\n  esriGeometryPolyline: \"polyline\",\n  esriGeometryPolygon: \"polygon\",\n  esriGeometryEnvelope: \"envelope\",\n  esriGeometryMultipoint: \"multipoint\"\n}),\n      b = e()({\n  esriNAUTCost: \"cost\",\n  esriNAUTDescriptor: \"descriptor\",\n  esriNAUTRestriction: \"restriction\",\n  esriNAUTHierarchy: \"hierarchy\"\n});\nexport { v as barrierTypeJsonMap, u as curbApproachJsonMap, f as directionLineTypeJsonMap, A as directionPointTypeJsonMap, r as directionsLengthUnitJsonMap, s as directionsOutputTypeJsonMap, k as directionsStyleNameJsonMap, t as directionsTimeUnitJsonMap, N as distanceImpedanceAttributeNameJsonMap, y as durationImpedanceAttributeNameJsonMap, g as fullEdgeJsonMap, w as geometryTypeJsonMap, T as impedanceAttributeNameJsonMap, i as lengthUnitJsonMap, m as locationTypeJsonMap, o as outputLineJsonMap, a as outputPolygonJsonMap, n as restrictUTurnJsonMap, U as restrictionAttributeNameJsonMap, p as sideOfEdgeJsonMap, R as spatialRelationshipJsonMap, h as statusJsonMap, d as timeOfDayUsageJsonMap, l as travelDirectionJsonMap, c as travelModeTypeJsonMap, b as usageTypeJsonMap };","map":{"version":3,"names":["strict","e","i","esriCentimeters","esriDecimalDegrees","esriDecimeters","esriFeet","esriInches","esriKilometers","esriMeters","esriMiles","esriMillimeters","esriNauticalMiles","esriPoints","esriUnknownUnits","esriYards","r","esriNAUCentimeters","esriNAUDecimalDegrees","esriNAUDecimeters","esriNAUFeet","esriNAUInches","esriNAUKilometers","esriNAUMeters","esriNAUMiles","esriNAUMillimeters","esriNAUNauticalMiles","esriNAUPoints","esriNAUYards","t","esriNAUDays","esriNAUHours","esriNAUMinutes","esriNAUSeconds","s","esriDOTComplete","esriDOTCompleteNoEvents","esriDOTFeatureSets","esriDOTInstructionsOnly","esriDOTStandard","esriDOTSummaryOnly","o","esriNAOutputLineNone","esriNAOutputLineStraight","esriNAOutputLineTrueShape","esriNAOutputLineTrueShapeWithMeasure","a","esriNAOutputPolygonNone","esriNAOutputPolygonSimplified","esriNAOutputPolygonDetailed","n","esriNFSBAllowBacktrack","esriNFSBAtDeadEndsOnly","esriNFSBNoBacktrack","esriNFSBAtDeadEndsAndIntersections","l","esriNATravelDirectionFromFacility","esriNATravelDirectionToFacility","d","esriNATimeOfDayNotUsed","esriNATimeOfDayUseAsStartTime","esriNATimeOfDayUseAsEndTime","c","AUTOMOBILE","TRUCK","WALK","OTHER","u","useNumericKeys","m","h","p","v","g","A","f","k","N","Kilometers","Miles","ignoreUnknown","y","Minutes","TimeAt1KPH","TravelTime","TruckMinutes","TruckTravelTime","WalkTime","T","U","Walking","R","esriSpatialRelIntersects","esriSpatialRelContains","esriSpatialRelCrosses","esriSpatialRelEnvelopeIntersects","esriSpatialRelIndexIntersects","esriSpatialRelOverlaps","esriSpatialRelTouches","esriSpatialRelWithin","esriSpatialRelRelation","w","esriGeometryPoint","esriGeometryPolyline","esriGeometryPolygon","esriGeometryEnvelope","esriGeometryMultipoint","b","esriNAUTCost","esriNAUTDescriptor","esriNAUTRestriction","esriNAUTHierarchy","barrierTypeJsonMap","curbApproachJsonMap","directionLineTypeJsonMap","directionPointTypeJsonMap","directionsLengthUnitJsonMap","directionsOutputTypeJsonMap","directionsStyleNameJsonMap","directionsTimeUnitJsonMap","distanceImpedanceAttributeNameJsonMap","durationImpedanceAttributeNameJsonMap","fullEdgeJsonMap","geometryTypeJsonMap","impedanceAttributeNameJsonMap","lengthUnitJsonMap","locationTypeJsonMap","outputLineJsonMap","outputPolygonJsonMap","restrictUTurnJsonMap","restrictionAttributeNameJsonMap","sideOfEdgeJsonMap","spatialRelationshipJsonMap","statusJsonMap","timeOfDayUsageJsonMap","travelDirectionJsonMap","travelModeTypeJsonMap","usageTypeJsonMap"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/rest/support/networkEnums.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{strict as e}from\"../../core/jsonMap.js\";const i=e()({esriCentimeters:\"centimeters\",esriDecimalDegrees:\"decimal-degrees\",esriDecimeters:\"decimeters\",esriFeet:\"feet\",esriInches:\"inches\",esriKilometers:\"kilometers\",esriMeters:\"meters\",esriMiles:\"miles\",esriMillimeters:\"millimeters\",esriNauticalMiles:\"nautical-miles\",esriPoints:\"points\",esriUnknownUnits:\"unknown\",esriYards:\"yards\"}),r=e()({esriNAUCentimeters:\"centimeters\",esriNAUDecimalDegrees:\"decimal-degrees\",esriNAUDecimeters:\"decimeters\",esriNAUFeet:\"feet\",esriNAUInches:\"inches\",esriNAUKilometers:\"kilometers\",esriNAUMeters:\"meters\",esriNAUMiles:\"miles\",esriNAUMillimeters:\"millimeters\",esriNAUNauticalMiles:\"nautical-miles\",esriNAUPoints:\"points\",esriNAUYards:\"yards\"}),t=e()({esriNAUDays:\"days\",esriNAUHours:\"hours\",esriNAUMinutes:\"minutes\",esriNAUSeconds:\"seconds\"}),s=e()({esriDOTComplete:\"complete\",esriDOTCompleteNoEvents:\"complete-no-events\",esriDOTFeatureSets:\"featuresets\",esriDOTInstructionsOnly:\"instructions-only\",esriDOTStandard:\"standard\",esriDOTSummaryOnly:\"summary-only\"}),o=e()({esriNAOutputLineNone:\"none\",esriNAOutputLineStraight:\"straight\",esriNAOutputLineTrueShape:\"true-shape\",esriNAOutputLineTrueShapeWithMeasure:\"true-shape-with-measure\"}),a=e()({esriNAOutputPolygonNone:\"none\",esriNAOutputPolygonSimplified:\"simplified\",esriNAOutputPolygonDetailed:\"detailed\"}),n=e()({esriNFSBAllowBacktrack:\"allow-backtrack\",esriNFSBAtDeadEndsOnly:\"at-dead-ends-only\",esriNFSBNoBacktrack:\"no-backtrack\",esriNFSBAtDeadEndsAndIntersections:\"at-dead-ends-and-intersections\"}),l=e()({esriNATravelDirectionFromFacility:\"from-facility\",esriNATravelDirectionToFacility:\"to-facility\"}),d=e()({esriNATimeOfDayNotUsed:\"not-used\",esriNATimeOfDayUseAsStartTime:\"start\",esriNATimeOfDayUseAsEndTime:\"end\"}),c=e()({AUTOMOBILE:\"automobile\",TRUCK:\"truck\",WALK:\"walk\",OTHER:\"other\"}),u=e()({0:\"either-side-of-vehicle\",1:\"right-side-of-vehicle\",2:\"left-side-of-vehicle\",3:\"no-u-turn\"},{useNumericKeys:!0}),m=e()({0:\"stop\",1:\"waypoint\",2:\"break\"},{useNumericKeys:!0}),h=e()({0:\"ok\",1:\"not-located\",2:\"network-element-not-located\",3:\"element-not-traversable\",4:\"invalid-field-values\",5:\"not-reached\",6:\"time-window-violation\",7:\"not-located-on-closest\"},{useNumericKeys:!0}),p=e()({1:\"right\",2:\"left\"},{useNumericKeys:!0}),v=e()({0:\"restriction\",1:\"added-cost\"},{useNumericKeys:!0}),g=e()({0:\"permit\",1:\"restrict\"},{useNumericKeys:!0}),A=e()({1:\"header\",50:\"arrive\",51:\"depart\",52:\"straight\",100:\"on-ferry\",101:\"off-ferry\",102:\"central-fork\",103:\"roundabout\",104:\"u-turn\",150:\"door\",151:\"stairs\",152:\"elevator\",153:\"escalator\",154:\"pedestrian-ramp\",200:\"left-fork\",201:\"left-ramp\",202:\"clockwise-roundabout\",203:\"left-handed-u-turn\",204:\"bear-left\",205:\"left-turn\",206:\"sharp-left\",207:\"left-turn-and-immediate-left-turn\",208:\"left-turn-and-immediate-right-turn\",300:\"right-fork\",301:\"right-ramp\",302:\"counter-clockwise-roundabout\",303:\"right-handed-u-turn\",304:\"bear-right\",305:\"right-turn\",306:\"sharp-right\",307:\"right-turn-and-immediate-left-turn\",308:\"right-turn-and-immediate-right-turn\",400:\"up-elevator\",401:\"up-escalator\",402:\"up-stairs\",500:\"down-elevator\",501:\"down-escalator\",502:\"down-stairs\",1e3:\"general-event\",1001:\"landmark\",1002:\"time-zone-change\",1003:\"traffic-event\",1004:\"scaled-cost-barrier-event\",1005:\"boundary-crossing\",1006:\"restriction-violation\"},{useNumericKeys:!0}),f=e()({0:\"unknown\",1:\"segment\",2:\"maneuver-segment\",3:\"restriction-violation\",4:\"scaled-cost-barrier\",5:\"heavy-traffic\",6:\"slow-traffic\",7:\"moderate-traffic\"},{useNumericKeys:!0}),k=e()({\"NA Campus\":\"campus\",\"NA Desktop\":\"desktop\",\"NA Navigation\":\"navigation\"}),N=e()({Kilometers:\"kilometers\",Miles:\"miles\"},{ignoreUnknown:!1}),y=e()({Minutes:\"minutes\",TimeAt1KPH:\"time-at-1-kph\",TravelTime:\"travel-time\",TruckMinutes:\"truck-minutes\",TruckTravelTime:\"truck-travel-time\",WalkTime:\"walk-time\"},{ignoreUnknown:!1}),T=e()({Kilometers:\"kilometers\",Miles:\"miles\",Minutes:\"minutes\",TimeAt1KPH:\"time-at-1-kph\",TravelTime:\"travel-time\",TruckMinutes:\"truck-minutes\",TruckTravelTime:\"truck-travel-time\",WalkTime:\"walk-time\"},{ignoreUnknown:!1}),U=e()({\"Any Hazmat Prohibited\":\"any-hazmat-prohibited\",\"Avoid Carpool Roads\":\"avoid-carpool-roads\",\"Avoid Express Lanes\":\"avoid-express-lanes\",\"Avoid Ferries\":\"avoid-ferries\",\"Avoid Gates\":\"avoid-gates\",\"Avoid Limited Access Roads\":\"avoid-limited-access-roads\",\"Avoid Private Roads\":\"avoid-private-roads\",\"Avoid Roads Unsuitable for Pedestrians\":\"avoid-roads-unsuitable-for-pedestrians\",\"Avoid Stairways\":\"avoid-stairways\",\"Avoid Toll Roads\":\"avoid-toll-roads\",\"Avoid Toll Roads for Trucks\":\"avoid-toll-roads-for-trucks\",\"Avoid Truck Restricted Roads\":\"avoid-truck-restricted-roads\",\"Avoid Unpaved Roads\":\"avoid-unpaved-roads\",\"Axle Count Restriction\":\"axle-count-restriction\",\"Driving a Bus\":\"driving-a-bus\",\"Driving a Taxi\":\"driving-a-taxi\",\"Driving a Truck\":\"driving-a-truck\",\"Driving an Automobile\":\"driving-an-automobile\",\"Driving an Emergency Vehicle\":\"driving-an-emergency-vehicle\",\"Height Restriction\":\"height-restriction\",\"Kingpin to Rear Axle Length Restriction\":\"kingpin-to-rear-axle-length-restriction\",\"Length Restriction\":\"length-restriction\",\"Preferred for Pedestrians\":\"preferred-for-pedestrians\",\"Riding a Motorcycle\":\"riding-a-motorcycle\",\"Roads Under Construction Prohibited\":\"roads-under-construction-prohibited\",\"Semi or Tractor with One or More Trailers Prohibited\":\"semi-or-tractor-with-one-or-more-trailers-prohibited\",\"Single Axle Vehicles Prohibited\":\"single-axle-vehicles-prohibited\",\"Tandem Axle Vehicles Prohibited\":\"tandem-axle-vehicles-prohibited\",\"Through Traffic Prohibited\":\"through-traffic-prohibited\",\"Truck with Trailers Restriction\":\"truck-with-trailers-restriction\",\"Use Preferred Hazmat Routes\":\"use-preferred-hazmat-routes\",\"Use Preferred Truck Routes\":\"use-preferred-truck-routes\",Walking:\"walking\",\"Weight Restriction\":\"weight-restriction\"},{ignoreUnknown:!1}),R=e()({esriSpatialRelIntersects:\"intersects\",esriSpatialRelContains:\"contains\",esriSpatialRelCrosses:\"crosses\",esriSpatialRelEnvelopeIntersects:\"envelope-intersects\",esriSpatialRelIndexIntersects:\"index-intersects\",esriSpatialRelOverlaps:\"overlaps\",esriSpatialRelTouches:\"touches\",esriSpatialRelWithin:\"within\",esriSpatialRelRelation:\"relation\"}),w=e()({esriGeometryPoint:\"point\",esriGeometryPolyline:\"polyline\",esriGeometryPolygon:\"polygon\",esriGeometryEnvelope:\"envelope\",esriGeometryMultipoint:\"multipoint\"}),b=e()({esriNAUTCost:\"cost\",esriNAUTDescriptor:\"descriptor\",esriNAUTRestriction:\"restriction\",esriNAUTHierarchy:\"hierarchy\"});export{v as barrierTypeJsonMap,u as curbApproachJsonMap,f as directionLineTypeJsonMap,A as directionPointTypeJsonMap,r as directionsLengthUnitJsonMap,s as directionsOutputTypeJsonMap,k as directionsStyleNameJsonMap,t as directionsTimeUnitJsonMap,N as distanceImpedanceAttributeNameJsonMap,y as durationImpedanceAttributeNameJsonMap,g as fullEdgeJsonMap,w as geometryTypeJsonMap,T as impedanceAttributeNameJsonMap,i as lengthUnitJsonMap,m as locationTypeJsonMap,o as outputLineJsonMap,a as outputPolygonJsonMap,n as restrictUTurnJsonMap,U as restrictionAttributeNameJsonMap,p as sideOfEdgeJsonMap,R as spatialRelationshipJsonMap,h as statusJsonMap,d as timeOfDayUsageJsonMap,l as travelDirectionJsonMap,c as travelModeTypeJsonMap,b as usageTypeJsonMap};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}