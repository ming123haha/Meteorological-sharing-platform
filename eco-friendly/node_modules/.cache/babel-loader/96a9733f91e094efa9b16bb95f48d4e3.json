{"ast":null,"code":"import PathProxy from '../core/PathProxy.js';\nimport { applyTransform as v2ApplyTransform } from '../core/vector.js';\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\nexport default function transformPath(path, m) {\n  if (!m) {\n    return;\n  }\n\n  var data = path.data;\n  var len = path.len();\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < len;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n        data[i] *= sx;\n        data[i++] += x;\n        data[i] *= sy;\n        data[i++] += y;\n        data[i++] *= sx;\n        data[i++] *= sy;\n        data[i++] += angle;\n        data[i++] += angle;\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p_1 = points[k];\n      p_1[0] = data[i++];\n      p_1[1] = data[i++];\n      v2ApplyTransform(p_1, p_1, m);\n      data[j++] = p_1[0];\n      data[j++] = p_1[1];\n    }\n  }\n\n  path.increaseVersion();\n}","map":{"version":3,"names":["PathProxy","applyTransform","v2ApplyTransform","CMD","points","mathSqrt","Math","sqrt","mathAtan2","atan2","transformPath","path","m","data","len","cmd","nPoint","i","j","k","p","M","C","L","R","A","Q","x","y","sx","sy","angle","p_1","increaseVersion"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/zrender/lib/tool/transformPath.js"],"sourcesContent":["import PathProxy from '../core/PathProxy.js';\r\nimport { applyTransform as v2ApplyTransform } from '../core/vector.js';\r\nvar CMD = PathProxy.CMD;\r\nvar points = [[], [], []];\r\nvar mathSqrt = Math.sqrt;\r\nvar mathAtan2 = Math.atan2;\r\nexport default function transformPath(path, m) {\r\n    if (!m) {\r\n        return;\r\n    }\r\n    var data = path.data;\r\n    var len = path.len();\r\n    var cmd;\r\n    var nPoint;\r\n    var i;\r\n    var j;\r\n    var k;\r\n    var p;\r\n    var M = CMD.M;\r\n    var C = CMD.C;\r\n    var L = CMD.L;\r\n    var R = CMD.R;\r\n    var A = CMD.A;\r\n    var Q = CMD.Q;\r\n    for (i = 0, j = 0; i < len;) {\r\n        cmd = data[i++];\r\n        j = i;\r\n        nPoint = 0;\r\n        switch (cmd) {\r\n            case M:\r\n                nPoint = 1;\r\n                break;\r\n            case L:\r\n                nPoint = 1;\r\n                break;\r\n            case C:\r\n                nPoint = 3;\r\n                break;\r\n            case Q:\r\n                nPoint = 2;\r\n                break;\r\n            case A:\r\n                var x = m[4];\r\n                var y = m[5];\r\n                var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\r\n                var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\r\n                var angle = mathAtan2(-m[1] / sy, m[0] / sx);\r\n                data[i] *= sx;\r\n                data[i++] += x;\r\n                data[i] *= sy;\r\n                data[i++] += y;\r\n                data[i++] *= sx;\r\n                data[i++] *= sy;\r\n                data[i++] += angle;\r\n                data[i++] += angle;\r\n                i += 2;\r\n                j = i;\r\n                break;\r\n            case R:\r\n                p[0] = data[i++];\r\n                p[1] = data[i++];\r\n                v2ApplyTransform(p, p, m);\r\n                data[j++] = p[0];\r\n                data[j++] = p[1];\r\n                p[0] += data[i++];\r\n                p[1] += data[i++];\r\n                v2ApplyTransform(p, p, m);\r\n                data[j++] = p[0];\r\n                data[j++] = p[1];\r\n        }\r\n        for (k = 0; k < nPoint; k++) {\r\n            var p_1 = points[k];\r\n            p_1[0] = data[i++];\r\n            p_1[1] = data[i++];\r\n            v2ApplyTransform(p_1, p_1, m);\r\n            data[j++] = p_1[0];\r\n            data[j++] = p_1[1];\r\n        }\r\n    }\r\n    path.increaseVersion();\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,sBAAtB;AACA,SAASC,cAAc,IAAIC,gBAA3B,QAAmD,mBAAnD;AACA,IAAIC,GAAG,GAAGH,SAAS,CAACG,GAApB;AACA,IAAIC,MAAM,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAb;AACA,IAAIC,QAAQ,GAAGC,IAAI,CAACC,IAApB;AACA,IAAIC,SAAS,GAAGF,IAAI,CAACG,KAArB;AACA,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,CAA7B,EAAgC;EAC3C,IAAI,CAACA,CAAL,EAAQ;IACJ;EACH;;EACD,IAAIC,IAAI,GAAGF,IAAI,CAACE,IAAhB;EACA,IAAIC,GAAG,GAAGH,IAAI,CAACG,GAAL,EAAV;EACA,IAAIC,GAAJ;EACA,IAAIC,MAAJ;EACA,IAAIC,CAAJ;EACA,IAAIC,CAAJ;EACA,IAAIC,CAAJ;EACA,IAAIC,CAAJ;EACA,IAAIC,CAAC,GAAGlB,GAAG,CAACkB,CAAZ;EACA,IAAIC,CAAC,GAAGnB,GAAG,CAACmB,CAAZ;EACA,IAAIC,CAAC,GAAGpB,GAAG,CAACoB,CAAZ;EACA,IAAIC,CAAC,GAAGrB,GAAG,CAACqB,CAAZ;EACA,IAAIC,CAAC,GAAGtB,GAAG,CAACsB,CAAZ;EACA,IAAIC,CAAC,GAAGvB,GAAG,CAACuB,CAAZ;;EACA,KAAKT,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAG,CAAhB,EAAmBD,CAAC,GAAGH,GAAvB,GAA6B;IACzBC,GAAG,GAAGF,IAAI,CAACI,CAAC,EAAF,CAAV;IACAC,CAAC,GAAGD,CAAJ;IACAD,MAAM,GAAG,CAAT;;IACA,QAAQD,GAAR;MACI,KAAKM,CAAL;QACIL,MAAM,GAAG,CAAT;QACA;;MACJ,KAAKO,CAAL;QACIP,MAAM,GAAG,CAAT;QACA;;MACJ,KAAKM,CAAL;QACIN,MAAM,GAAG,CAAT;QACA;;MACJ,KAAKU,CAAL;QACIV,MAAM,GAAG,CAAT;QACA;;MACJ,KAAKS,CAAL;QACI,IAAIE,CAAC,GAAGf,CAAC,CAAC,CAAD,CAAT;QACA,IAAIgB,CAAC,GAAGhB,CAAC,CAAC,CAAD,CAAT;QACA,IAAIiB,EAAE,GAAGxB,QAAQ,CAACO,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAvB,CAAjB;QACA,IAAIkB,EAAE,GAAGzB,QAAQ,CAACO,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAvB,CAAjB;QACA,IAAImB,KAAK,GAAGvB,SAAS,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,GAAQkB,EAAT,EAAalB,CAAC,CAAC,CAAD,CAAD,GAAOiB,EAApB,CAArB;QACAhB,IAAI,CAACI,CAAD,CAAJ,IAAWY,EAAX;QACAhB,IAAI,CAACI,CAAC,EAAF,CAAJ,IAAaU,CAAb;QACAd,IAAI,CAACI,CAAD,CAAJ,IAAWa,EAAX;QACAjB,IAAI,CAACI,CAAC,EAAF,CAAJ,IAAaW,CAAb;QACAf,IAAI,CAACI,CAAC,EAAF,CAAJ,IAAaY,EAAb;QACAhB,IAAI,CAACI,CAAC,EAAF,CAAJ,IAAaa,EAAb;QACAjB,IAAI,CAACI,CAAC,EAAF,CAAJ,IAAac,KAAb;QACAlB,IAAI,CAACI,CAAC,EAAF,CAAJ,IAAac,KAAb;QACAd,CAAC,IAAI,CAAL;QACAC,CAAC,GAAGD,CAAJ;QACA;;MACJ,KAAKO,CAAL;QACIJ,CAAC,CAAC,CAAD,CAAD,GAAOP,IAAI,CAACI,CAAC,EAAF,CAAX;QACAG,CAAC,CAAC,CAAD,CAAD,GAAOP,IAAI,CAACI,CAAC,EAAF,CAAX;QACAf,gBAAgB,CAACkB,CAAD,EAAIA,CAAJ,EAAOR,CAAP,CAAhB;QACAC,IAAI,CAACK,CAAC,EAAF,CAAJ,GAAYE,CAAC,CAAC,CAAD,CAAb;QACAP,IAAI,CAACK,CAAC,EAAF,CAAJ,GAAYE,CAAC,CAAC,CAAD,CAAb;QACAA,CAAC,CAAC,CAAD,CAAD,IAAQP,IAAI,CAACI,CAAC,EAAF,CAAZ;QACAG,CAAC,CAAC,CAAD,CAAD,IAAQP,IAAI,CAACI,CAAC,EAAF,CAAZ;QACAf,gBAAgB,CAACkB,CAAD,EAAIA,CAAJ,EAAOR,CAAP,CAAhB;QACAC,IAAI,CAACK,CAAC,EAAF,CAAJ,GAAYE,CAAC,CAAC,CAAD,CAAb;QACAP,IAAI,CAACK,CAAC,EAAF,CAAJ,GAAYE,CAAC,CAAC,CAAD,CAAb;IAxCR;;IA0CA,KAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,MAAhB,EAAwBG,CAAC,EAAzB,EAA6B;MACzB,IAAIa,GAAG,GAAG5B,MAAM,CAACe,CAAD,CAAhB;MACAa,GAAG,CAAC,CAAD,CAAH,GAASnB,IAAI,CAACI,CAAC,EAAF,CAAb;MACAe,GAAG,CAAC,CAAD,CAAH,GAASnB,IAAI,CAACI,CAAC,EAAF,CAAb;MACAf,gBAAgB,CAAC8B,GAAD,EAAMA,GAAN,EAAWpB,CAAX,CAAhB;MACAC,IAAI,CAACK,CAAC,EAAF,CAAJ,GAAYc,GAAG,CAAC,CAAD,CAAf;MACAnB,IAAI,CAACK,CAAC,EAAF,CAAJ,GAAYc,GAAG,CAAC,CAAD,CAAf;IACH;EACJ;;EACDrB,IAAI,CAACsB,eAAL;AACH"},"metadata":{},"sourceType":"module"}