{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { isNone as e, isSome as t } from \"../../../core/maybe.js\";\nimport { polygonCentroid as i, extentCentroid as s } from \"../../../geometry/support/centroid.js\";\nimport { getPolygonExtent as a, getGeometryExtent as r } from \"../../../geometry/support/extentUtils.js\";\nimport { toQuantizationTransform as n } from \"../../../geometry/support/quantizationUtils.js\";\nimport { isValid as o, equals as l } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport u from \"./AttributesBuilder.js\";\nimport { project as c } from \"./projectionSupport.js\";\nimport { cleanFromGeometryEngine as m, getGeometry as d, transformCentroid as h } from \"./utils.js\";\nimport { isStringField as g } from \"../../support/fieldUtils.js\";\nimport { isNullCountSupported as p, calculateStringStatistics as f, calculateStatistics as y, processSummaryStatisticsResult as x, calculateUniqueValuesCount as I, createUVResult as T, calculateClassBreaks as V, resolveCBResult as F, calculateHistogram as z, getAttributeComparator as _, calculatePercentile as S } from \"../../../statistics/utils.js\";\nimport { loadArcade as b } from \"../../../support/arcadeOnDemand.js\";\n\nclass v {\n  constructor(e, t, i) {\n    this.items = e, this.query = t, this.geometryType = i.geometryType, this.hasM = i.hasM, this.hasZ = i.hasZ, this.fieldsIndex = i.fieldsIndex, this.objectIdField = i.objectIdField, this.spatialReference = i.spatialReference, this.featureAdapter = i.featureAdapter;\n  }\n\n  get size() {\n    return this.items.length;\n  }\n\n  createQueryResponseForCount() {\n    const e = new u(this.query, this.featureAdapter, this.fieldsIndex);\n    if (!this.query.outStatistics) return e.countDistinctValues(this.items);\n    const {\n      groupByFieldsForStatistics: t,\n      having: i,\n      outStatistics: s\n    } = this.query,\n          a = t?.length;\n    if (!!!a) return 1;\n    const r = new Map(),\n          n = new Map(),\n          o = new Set();\n\n    for (const l of s) {\n      const {\n        statisticType: s\n      } = l,\n            a = \"exceedslimit\" !== s ? l.onStatisticField : void 0;\n\n      if (!n.has(a)) {\n        const i = [];\n\n        for (const s of t) {\n          const t = this._getAttributeValues(e, s, r);\n\n          i.push(t);\n        }\n\n        n.set(a, this._calculateUniqueValues(i, e.returnDistinctValues));\n      }\n\n      const u = n.get(a);\n\n      for (const t in u) {\n        const {\n          data: s,\n          items: a\n        } = u[t],\n              r = s.join(\",\");\n        i && !e.validateItems(a, i) || o.add(r);\n      }\n    }\n\n    return o.size;\n  }\n\n  async createQueryResponse() {\n    let e;\n\n    if (this.query.outStatistics) {\n      e = this.query.outStatistics.some(e => \"exceedslimit\" === e.statisticType) ? this._createExceedsLimitQueryResponse(this.query) : await this._createStatisticsQueryResponse(this.query);\n    } else e = this._createFeatureQueryResponse(this.query);\n\n    return this.query.returnQueryGeometry && (o(this.query.outSR) && !l(this.query.geometry.spatialReference, this.query.outSR) ? e.queryGeometry = m({\n      spatialReference: this.query.outSR,\n      ...c(this.query.geometry, this.query.geometry.spatialReference, this.query.outSR)\n    }) : e.queryGeometry = m({\n      spatialReference: this.query.outSR,\n      ...this.query.geometry\n    })), e;\n  }\n\n  createSnappingResponse(t, i) {\n    const s = this.featureAdapter,\n          a = A(this.hasZ, this.hasM),\n          {\n      x: r,\n      y: n\n    } = t.point,\n          o = \"number\" == typeof t.distance ? t.distance : t.distance.x,\n          l = \"number\" == typeof t.distance ? t.distance : t.distance.y,\n          u = {\n      candidates: []\n    },\n          c = \"esriGeometryPolygon\" === this.geometryType,\n          m = this._getPointCreator(t.point, this.spatialReference, i);\n\n    for (const d of this.items) {\n      const i = s.getGeometry(d);\n      if (e(i)) continue;\n      const {\n        coords: h,\n        lengths: g\n      } = i;\n\n      if (t.types & E.EDGE) {\n        let e = 0;\n\n        for (let t = 0; t < g.length; t++) {\n          const i = g[t];\n\n          for (let t = 0; t < i; t++, e += a) {\n            const c = h[e],\n                  g = h[e + 1];\n\n            if (t !== i - 1) {\n              const t = h[e + a],\n                    i = h[e + a + 1],\n                    {\n                x: p,\n                y: f\n              } = R(r, n, c, g, t, i),\n                    y = (r - p) / o,\n                    x = (n - f) / l,\n                    I = y * y + x * x;\n              I <= 1 && u.candidates.push({\n                type: \"edge\",\n                objectId: s.getObjectId(d),\n                distance: Math.sqrt(I),\n                target: m(p, f),\n                start: m(c, g),\n                end: m(t, i)\n              });\n            }\n          }\n        }\n      }\n\n      if (t.types & E.VERTEX) {\n        const e = c ? h.length - a : h.length;\n\n        for (let t = 0; t < e; t += a) {\n          const e = h[t],\n                i = h[t + 1],\n                a = (r - e) / o,\n                c = (n - i) / l,\n                g = a * a + c * c;\n          g <= 1 && u.candidates.push({\n            type: \"vertex\",\n            objectId: s.getObjectId(d),\n            distance: Math.sqrt(g),\n            target: m(e, i)\n          });\n        }\n      }\n    }\n\n    return u.candidates.sort((e, t) => e.distance - t.distance), u;\n  }\n\n  _getPointCreator(e, i, s) {\n    const a = t(s) && !l(i, s) ? e => c(e, i, s) : e => e;\n    return null != e.z && null != e.m ? (t, i) => a({\n      x: t,\n      y: i,\n      z: e.z,\n      m: e.m\n    }) : null != e.z ? (t, i) => a({\n      x: t,\n      y: i,\n      z: e.z\n    }) : null != e.m ? (t, i) => a({\n      x: t,\n      y: i,\n      m: e.m\n    }) : (e, t) => a({\n      x: e,\n      y: t\n    });\n  }\n\n  async createSummaryStatisticsResponse(e) {\n    const {\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      minValue: n,\n      maxValue: o,\n      scale: l\n    } = e,\n          u = this.fieldsIndex.isDateField(t),\n          c = await this._getDataValues({\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      scale: l\n    }),\n          m = p({\n      normalizationType: a,\n      normalizationField: s,\n      minValue: n,\n      maxValue: o\n    }),\n          d = this.fieldsIndex.get(t),\n          h = {\n      value: .5,\n      fieldType: d?.type\n    },\n          I = g(d) ? f({\n      values: c,\n      supportsNullCount: m,\n      percentileParams: h\n    }) : y({\n      values: c,\n      minValue: n,\n      maxValue: o,\n      useSampleStdDev: !a,\n      supportsNullCount: m,\n      percentileParams: h\n    });\n    return x(I, u);\n  }\n\n  async createUniqueValuesResponse(e) {\n    const {\n      field: t,\n      valueExpression: i,\n      domain: s,\n      returnAllCodedValues: a,\n      scale: r\n    } = e,\n          n = await this._getDataValues({\n      field: t,\n      valueExpression: i,\n      scale: r\n    }),\n          o = I(n);\n    return T(o, s, a);\n  }\n\n  async createClassBreaksResponse(e) {\n    const {\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numClasses: c,\n      scale: m\n    } = e,\n          d = await this._getDataValues({\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      scale: m\n    }),\n          h = V(d, {\n      field: t,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numClasses: c\n    });\n    return F(h, n);\n  }\n\n  async createHistogramResponse(e) {\n    const {\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numBins: c,\n      scale: m\n    } = e,\n          d = await this._getDataValues({\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      scale: m\n    });\n    return z(d, {\n      field: t,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numBins: c\n    });\n  }\n\n  _sortFeatures(e, t, i) {\n    if (e.length > 1 && t && t.length) for (const s of t.reverse()) {\n      const t = s.split(\" \"),\n            a = t[0],\n            r = this.fieldsIndex.get(a),\n            n = t[1] && \"desc\" === t[1].toLowerCase(),\n            o = _(r?.type, n);\n\n      e.sort((e, t) => {\n        const s = i(e, a, r),\n              n = i(t, a, r);\n        return o(s, n);\n      });\n    }\n  }\n\n  _createFeatureQueryResponse(e) {\n    const t = this.items,\n          {\n      geometryType: i,\n      hasM: s,\n      hasZ: a,\n      objectIdField: r,\n      spatialReference: o\n    } = this,\n          {\n      outFields: l,\n      outSR: u,\n      quantizationParameters: c,\n      resultRecordCount: d,\n      resultOffset: h,\n      returnZ: g,\n      returnM: p\n    } = e,\n          f = null != d && t.length > (h || 0) + d,\n          y = l && (l.includes(\"*\") ? [...this.fieldsIndex.fields] : l.map(e => this.fieldsIndex.get(e)));\n    return {\n      exceededTransferLimit: f,\n      features: this._createFeatures(e, t),\n      fields: y,\n      geometryType: i,\n      hasM: s && p,\n      hasZ: a && g,\n      objectIdFieldName: r,\n      spatialReference: m(u || o),\n      transform: c && n(c) || null\n    };\n  }\n\n  _createFeatures(e, t) {\n    const i = new u(e, this.featureAdapter, this.fieldsIndex),\n          {\n      hasM: s,\n      hasZ: a\n    } = this,\n          {\n      orderByFields: r,\n      quantizationParameters: o,\n      returnGeometry: l,\n      returnCentroid: c,\n      maxAllowableOffset: m,\n      resultOffset: g,\n      resultRecordCount: p,\n      returnZ: f = !1,\n      returnM: y = !1\n    } = e,\n          x = a && f,\n          I = s && y;\n    let T = [],\n        V = 0;\n    const F = [...t];\n\n    if (this._sortFeatures(F, r, (e, t, s) => i.getFieldValue(e, t, s)), l || c) {\n      const e = n(o);\n      if (l && !c) for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        geometry: d(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(t), m, e, x, I)\n      };else if (!l && c) for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        centroid: h(this, this.featureAdapter.getCentroid(t, this), e)\n      };else for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        centroid: h(this, this.featureAdapter.getCentroid(t, this), e),\n        geometry: d(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(t), m, e, x, I)\n      };\n    } else for (const n of F) {\n      const e = i.getAttributes(n);\n      e && (T[V++] = {\n        attributes: e\n      });\n    }\n\n    const z = g || 0;\n\n    if (null != p) {\n      const e = z + p;\n      T = T.slice(z, Math.min(T.length, e));\n    }\n\n    return T;\n  }\n\n  _createExceedsLimitQueryResponse(e) {\n    let i = !1,\n        s = Number.POSITIVE_INFINITY,\n        a = Number.POSITIVE_INFINITY,\n        r = Number.POSITIVE_INFINITY;\n\n    for (const t of e.outStatistics) if (\"exceedslimit\" === t.statisticType) {\n      s = null != t.maxPointCount ? t.maxPointCount : Number.POSITIVE_INFINITY, a = null != t.maxRecordCount ? t.maxRecordCount : Number.POSITIVE_INFINITY, r = null != t.maxVertexCount ? t.maxVertexCount : Number.POSITIVE_INFINITY;\n      break;\n    }\n\n    if (\"esriGeometryPoint\" === this.geometryType) i = this.items.length > s;else if (this.items.length > a) i = !0;else {\n      const e = this.hasZ ? this.hasM ? 4 : 3 : this.hasM ? 3 : 2,\n            s = this.featureAdapter;\n      i = this.items.reduce((e, i) => {\n        const a = s.getGeometry(i);\n        return e + (t(a) && a.coords.length || 0);\n      }, 0) / e > r;\n    }\n    return {\n      fields: [{\n        name: \"exceedslimit\",\n        type: \"esriFieldTypeInteger\",\n        alias: \"exceedslimit\",\n        sqlType: \"sqlTypeInteger\",\n        domain: null,\n        defaultValue: null\n      }],\n      features: [{\n        attributes: {\n          exceedslimit: Number(i)\n        }\n      }]\n    };\n  }\n\n  async _createStatisticsQueryResponse(e) {\n    const t = {\n      attributes: {}\n    },\n          i = [],\n          s = new Map(),\n          a = new Map(),\n          r = new Map(),\n          n = new Map(),\n          o = new u(e, this.featureAdapter, this.fieldsIndex),\n          l = e.outStatistics,\n          {\n      groupByFieldsForStatistics: c,\n      having: m,\n      orderByFields: d\n    } = e,\n          h = c && c.length,\n          g = !!h,\n          p = g && c[0],\n          f = g && !this.fieldsIndex.get(p);\n\n    for (const u of l) {\n      const {\n        outStatisticFieldName: e,\n        statisticType: l\n      } = u,\n            d = u,\n            y = \"exceedslimit\" !== l ? u.onStatisticField : void 0,\n            x = \"percentile_disc\" === l || \"percentile_cont\" === l,\n            I = \"EnvelopeAggregate\" === l || \"CentroidAggregate\" === l || \"ConvexHullAggregate\" === l,\n            T = g && 1 === h && (y === p || f) && \"count\" === l;\n\n      if (g) {\n        if (!r.has(y)) {\n          const e = [];\n\n          for (const t of c) {\n            const i = this._getAttributeValues(o, t, s);\n\n            e.push(i);\n          }\n\n          r.set(y, this._calculateUniqueValues(e, o.returnDistinctValues));\n        }\n\n        const t = r.get(y);\n\n        for (const i in t) {\n          const {\n            count: a,\n            data: r,\n            items: l,\n            itemPositions: u\n          } = t[i],\n                h = r.join(\",\");\n\n          if (!m || o.validateItems(l, m)) {\n            const t = n.get(h) || {\n              attributes: {}\n            };\n\n            if (I) {\n              t.aggregateGeometries || (t.aggregateGeometries = {});\n              const {\n                aggregateGeometries: e,\n                outStatisticFieldName: i\n              } = await this._getAggregateGeometry(d, l);\n              t.aggregateGeometries[i] = e;\n            } else {\n              let i = null;\n              if (T) i = a;else {\n                const e = this._getAttributeValues(o, y, s),\n                      t = u.map(t => e[t]);\n\n                i = x && \"statisticParameters\" in d ? this._getPercentileValue(d, t) : this._getStatisticValue(d, t, null, o.returnDistinctValues);\n              }\n              t.attributes[e] = i;\n            }\n\n            c.forEach((e, i) => t.attributes[this.fieldsIndex.get(e) ? e : `EXPR_${i + 1}`] = r[i]), n.set(h, t);\n          }\n        }\n      } else if (I) {\n        t.aggregateGeometries || (t.aggregateGeometries = {});\n        const {\n          aggregateGeometries: e,\n          outStatisticFieldName: i\n        } = await this._getAggregateGeometry(d, this.items);\n        t.aggregateGeometries[i] = e;\n      } else {\n        const i = this._getAttributeValues(o, y, s);\n\n        t.attributes[e] = x && \"statisticParameters\" in d ? this._getPercentileValue(d, i) : this._getStatisticValue(d, i, a, o.returnDistinctValues);\n      }\n\n      i.push({\n        name: e,\n        alias: e,\n        type: \"esriFieldTypeDouble\"\n      });\n    }\n\n    const y = g ? Array.from(n.values()) : [t];\n    return this._sortFeatures(y, d, (e, t) => e.attributes[t]), {\n      fields: i,\n      features: y\n    };\n  }\n\n  async _getAggregateGeometry(e, t) {\n    const n = await import(\"../../../geometry/geometryEngineJSON.js\"),\n          {\n      statisticType: o,\n      outStatisticFieldName: l\n    } = e,\n          {\n      featureAdapter: u,\n      spatialReference: c,\n      geometryType: m,\n      hasZ: h,\n      hasM: g\n    } = this,\n          p = t.map(e => d(m, h, g, u.getGeometry(e))),\n          f = n.convexHull(c, p, !0)[0],\n          y = {\n      aggregateGeometries: null,\n      outStatisticFieldName: null\n    };\n\n    if (\"EnvelopeAggregate\" === o) {\n      const e = f ? a(f) : r(n.union(c, p));\n      y.aggregateGeometries = { ...e,\n        spatialReference: c\n      }, y.outStatisticFieldName = l || \"extent\";\n    } else if (\"CentroidAggregate\" === o) {\n      const e = f ? i(f) : s(r(n.union(c, p)));\n      y.aggregateGeometries = {\n        x: e[0],\n        y: e[1],\n        spatialReference: c\n      }, y.outStatisticFieldName = l || \"centroid\";\n    } else \"ConvexHullAggregate\" === o && (y.aggregateGeometries = f, y.outStatisticFieldName = l || \"convexHull\");\n\n    return y;\n  }\n\n  _getStatisticValue(e, t, i, s) {\n    const {\n      onStatisticField: a,\n      statisticType: r\n    } = e;\n    let n = null;\n    n = i?.has(a) ? i.get(a) : g(this.fieldsIndex.get(a)) ? f({\n      values: t,\n      returnDistinct: s\n    }) : y({\n      values: t,\n      minValue: null,\n      maxValue: null,\n      useSampleStdDev: !0\n    }), i && i.set(a, n);\n    return n[\"var\" === r ? \"variance\" : r];\n  }\n\n  _getPercentileValue(e, t) {\n    const {\n      onStatisticField: i,\n      statisticParameters: s,\n      statisticType: a\n    } = e,\n          {\n      value: r,\n      orderBy: n\n    } = s,\n          o = this.fieldsIndex.get(i);\n    return S(t, {\n      value: r,\n      orderBy: n,\n      fieldType: o?.type,\n      isDiscrete: \"percentile_disc\" === a\n    });\n  }\n\n  _getAttributeValues(e, t, i) {\n    if (i.has(t)) return i.get(t);\n    const s = this.fieldsIndex.get(t),\n          a = this.items.map(i => e.getFieldValue(i, t, s));\n    return i.set(t, a), a;\n  }\n\n  _getAttributeNormalizedValues(e, t) {\n    return this.items.map(i => e.getNormalizedValue(i, {\n      field: t.field,\n      fieldInfo: this.fieldsIndex.get(t.field),\n      normalizationField: t.normalizationField,\n      normalizationFieldInfo: this.fieldsIndex.get(t.normalizationField),\n      normalizationType: t.normalizationType,\n      normalizationTotal: t.normalizationTotal\n    }));\n  }\n\n  async _getAttributeExpressionValues(e, t, i) {\n    const {\n      arcadeUtils: s\n    } = await b(),\n          a = s.createFunction(t),\n          r = i && s.getViewInfo(i);\n    return e.getExpressionValues(this.items, a, r, s);\n  }\n\n  _calculateUniqueValues(e, t) {\n    const i = {},\n          s = this.items,\n          a = s.length;\n\n    for (let r = 0; r < a; r++) {\n      const a = s[r],\n            n = [];\n\n      for (const t of e) n.push(t[r]);\n\n      const o = n.join(\",\");\n      t ? null == i[o] && (i[o] = {\n        count: 1,\n        data: n,\n        items: [a],\n        itemPositions: [r]\n      }) : null == i[o] ? i[o] = {\n        count: 1,\n        data: n,\n        items: [a],\n        itemPositions: [r]\n      } : (i[o].count++, i[o].items.push(a), i[o].itemPositions.push(r));\n    }\n\n    return i;\n  }\n\n  async _getDataValues(e) {\n    const t = new u(this.query, this.featureAdapter, this.fieldsIndex),\n          {\n      valueExpression: i,\n      field: s,\n      normalizationField: a,\n      normalizationType: r,\n      normalizationTotal: n,\n      scale: o\n    } = e,\n          l = i ? {\n      viewingMode: \"map\",\n      scale: o,\n      spatialReference: this.query.outSR || this.spatialReference\n    } : null;\n    return i ? this._getAttributeExpressionValues(t, i, l) : this._getAttributeNormalizedValues(t, {\n      field: s,\n      normalizationField: a,\n      normalizationType: r,\n      normalizationTotal: n\n    });\n  }\n\n}\n\nfunction R(e, t, i, s, a, r) {\n  const n = a - i,\n        o = r - s,\n        l = n * n + o * o,\n        u = (e - i) * n + (t - s) * o,\n        c = Math.min(1, Math.max(0, u / l));\n  return {\n    x: i + n * c,\n    y: s + o * c\n  };\n}\n\nfunction A(e, t) {\n  return e ? t ? 4 : 3 : t ? 3 : 2;\n}\n\nvar E;\n!function (e) {\n  e[e.NONE = 0] = \"NONE\", e[e.EDGE = 1] = \"EDGE\", e[e.VERTEX = 2] = \"VERTEX\";\n}(E || (E = {}));\nexport { v as QueryEngineResult, E as SnappingTypes };","map":{"version":3,"names":["isNone","e","isSome","t","polygonCentroid","i","extentCentroid","s","getPolygonExtent","a","getGeometryExtent","r","toQuantizationTransform","n","isValid","o","equals","l","u","project","c","cleanFromGeometryEngine","m","getGeometry","d","transformCentroid","h","isStringField","g","isNullCountSupported","p","calculateStringStatistics","f","calculateStatistics","y","processSummaryStatisticsResult","x","calculateUniqueValuesCount","I","createUVResult","T","calculateClassBreaks","V","resolveCBResult","F","calculateHistogram","z","getAttributeComparator","_","calculatePercentile","S","loadArcade","b","v","constructor","items","query","geometryType","hasM","hasZ","fieldsIndex","objectIdField","spatialReference","featureAdapter","size","length","createQueryResponseForCount","outStatistics","countDistinctValues","groupByFieldsForStatistics","having","Map","Set","statisticType","onStatisticField","has","_getAttributeValues","push","set","_calculateUniqueValues","returnDistinctValues","get","data","join","validateItems","add","createQueryResponse","some","_createExceedsLimitQueryResponse","_createStatisticsQueryResponse","_createFeatureQueryResponse","returnQueryGeometry","outSR","geometry","queryGeometry","createSnappingResponse","A","point","distance","candidates","_getPointCreator","coords","lengths","types","E","EDGE","R","type","objectId","getObjectId","Math","sqrt","target","start","end","VERTEX","sort","createSummaryStatisticsResponse","field","valueExpression","normalizationField","normalizationType","normalizationTotal","minValue","maxValue","scale","isDateField","_getDataValues","value","fieldType","values","supportsNullCount","percentileParams","useSampleStdDev","createUniqueValuesResponse","domain","returnAllCodedValues","createClassBreaksResponse","classificationMethod","standardDeviationInterval","numClasses","createHistogramResponse","numBins","_sortFeatures","reverse","split","toLowerCase","outFields","quantizationParameters","resultRecordCount","resultOffset","returnZ","returnM","includes","fields","map","exceededTransferLimit","features","_createFeatures","objectIdFieldName","transform","orderByFields","returnGeometry","returnCentroid","maxAllowableOffset","getFieldValue","attributes","getAttributes","centroid","getCentroid","slice","min","Number","POSITIVE_INFINITY","maxPointCount","maxRecordCount","maxVertexCount","reduce","name","alias","sqlType","defaultValue","exceedslimit","outStatisticFieldName","count","itemPositions","aggregateGeometries","_getAggregateGeometry","_getPercentileValue","_getStatisticValue","forEach","Array","from","convexHull","union","returnDistinct","statisticParameters","orderBy","isDiscrete","_getAttributeNormalizedValues","getNormalizedValue","fieldInfo","normalizationFieldInfo","_getAttributeExpressionValues","arcadeUtils","createFunction","getViewInfo","getExpressionValues","viewingMode","max","NONE","QueryEngineResult","SnappingTypes"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/graphics/data/QueryEngineResult.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isNone as e,isSome as t}from\"../../../core/maybe.js\";import{polygonCentroid as i,extentCentroid as s}from\"../../../geometry/support/centroid.js\";import{getPolygonExtent as a,getGeometryExtent as r}from\"../../../geometry/support/extentUtils.js\";import{toQuantizationTransform as n}from\"../../../geometry/support/quantizationUtils.js\";import{isValid as o,equals as l}from\"../../../geometry/support/spatialReferenceUtils.js\";import u from\"./AttributesBuilder.js\";import{project as c}from\"./projectionSupport.js\";import{cleanFromGeometryEngine as m,getGeometry as d,transformCentroid as h}from\"./utils.js\";import{isStringField as g}from\"../../support/fieldUtils.js\";import{isNullCountSupported as p,calculateStringStatistics as f,calculateStatistics as y,processSummaryStatisticsResult as x,calculateUniqueValuesCount as I,createUVResult as T,calculateClassBreaks as V,resolveCBResult as F,calculateHistogram as z,getAttributeComparator as _,calculatePercentile as S}from\"../../../statistics/utils.js\";import{loadArcade as b}from\"../../../support/arcadeOnDemand.js\";class v{constructor(e,t,i){this.items=e,this.query=t,this.geometryType=i.geometryType,this.hasM=i.hasM,this.hasZ=i.hasZ,this.fieldsIndex=i.fieldsIndex,this.objectIdField=i.objectIdField,this.spatialReference=i.spatialReference,this.featureAdapter=i.featureAdapter}get size(){return this.items.length}createQueryResponseForCount(){const e=new u(this.query,this.featureAdapter,this.fieldsIndex);if(!this.query.outStatistics)return e.countDistinctValues(this.items);const{groupByFieldsForStatistics:t,having:i,outStatistics:s}=this.query,a=t?.length;if(!!!a)return 1;const r=new Map,n=new Map,o=new Set;for(const l of s){const{statisticType:s}=l,a=\"exceedslimit\"!==s?l.onStatisticField:void 0;if(!n.has(a)){const i=[];for(const s of t){const t=this._getAttributeValues(e,s,r);i.push(t)}n.set(a,this._calculateUniqueValues(i,e.returnDistinctValues))}const u=n.get(a);for(const t in u){const{data:s,items:a}=u[t],r=s.join(\",\");i&&!e.validateItems(a,i)||o.add(r)}}return o.size}async createQueryResponse(){let e;if(this.query.outStatistics){e=this.query.outStatistics.some((e=>\"exceedslimit\"===e.statisticType))?this._createExceedsLimitQueryResponse(this.query):await this._createStatisticsQueryResponse(this.query)}else e=this._createFeatureQueryResponse(this.query);return this.query.returnQueryGeometry&&(o(this.query.outSR)&&!l(this.query.geometry.spatialReference,this.query.outSR)?e.queryGeometry=m({spatialReference:this.query.outSR,...c(this.query.geometry,this.query.geometry.spatialReference,this.query.outSR)}):e.queryGeometry=m({spatialReference:this.query.outSR,...this.query.geometry})),e}createSnappingResponse(t,i){const s=this.featureAdapter,a=A(this.hasZ,this.hasM),{x:r,y:n}=t.point,o=\"number\"==typeof t.distance?t.distance:t.distance.x,l=\"number\"==typeof t.distance?t.distance:t.distance.y,u={candidates:[]},c=\"esriGeometryPolygon\"===this.geometryType,m=this._getPointCreator(t.point,this.spatialReference,i);for(const d of this.items){const i=s.getGeometry(d);if(e(i))continue;const{coords:h,lengths:g}=i;if(t.types&E.EDGE){let e=0;for(let t=0;t<g.length;t++){const i=g[t];for(let t=0;t<i;t++,e+=a){const c=h[e],g=h[e+1];if(t!==i-1){const t=h[e+a],i=h[e+a+1],{x:p,y:f}=R(r,n,c,g,t,i),y=(r-p)/o,x=(n-f)/l,I=y*y+x*x;I<=1&&u.candidates.push({type:\"edge\",objectId:s.getObjectId(d),distance:Math.sqrt(I),target:m(p,f),start:m(c,g),end:m(t,i)})}}}}if(t.types&E.VERTEX){const e=c?h.length-a:h.length;for(let t=0;t<e;t+=a){const e=h[t],i=h[t+1],a=(r-e)/o,c=(n-i)/l,g=a*a+c*c;g<=1&&u.candidates.push({type:\"vertex\",objectId:s.getObjectId(d),distance:Math.sqrt(g),target:m(e,i)})}}}return u.candidates.sort(((e,t)=>e.distance-t.distance)),u}_getPointCreator(e,i,s){const a=t(s)&&!l(i,s)?e=>c(e,i,s):e=>e;return null!=e.z&&null!=e.m?(t,i)=>a({x:t,y:i,z:e.z,m:e.m}):null!=e.z?(t,i)=>a({x:t,y:i,z:e.z}):null!=e.m?(t,i)=>a({x:t,y:i,m:e.m}):(e,t)=>a({x:e,y:t})}async createSummaryStatisticsResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,minValue:n,maxValue:o,scale:l}=e,u=this.fieldsIndex.isDateField(t),c=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:l}),m=p({normalizationType:a,normalizationField:s,minValue:n,maxValue:o}),d=this.fieldsIndex.get(t),h={value:.5,fieldType:d?.type},I=g(d)?f({values:c,supportsNullCount:m,percentileParams:h}):y({values:c,minValue:n,maxValue:o,useSampleStdDev:!a,supportsNullCount:m,percentileParams:h});return x(I,u)}async createUniqueValuesResponse(e){const{field:t,valueExpression:i,domain:s,returnAllCodedValues:a,scale:r}=e,n=await this._getDataValues({field:t,valueExpression:i,scale:r}),o=I(n);return T(o,s,a)}async createClassBreaksResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c,scale:m}=e,d=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:m}),h=V(d,{field:t,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c});return F(h,n)}async createHistogramResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c,scale:m}=e,d=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:m});return z(d,{field:t,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c})}_sortFeatures(e,t,i){if(e.length>1&&t&&t.length)for(const s of t.reverse()){const t=s.split(\" \"),a=t[0],r=this.fieldsIndex.get(a),n=t[1]&&\"desc\"===t[1].toLowerCase(),o=_(r?.type,n);e.sort(((e,t)=>{const s=i(e,a,r),n=i(t,a,r);return o(s,n)}))}}_createFeatureQueryResponse(e){const t=this.items,{geometryType:i,hasM:s,hasZ:a,objectIdField:r,spatialReference:o}=this,{outFields:l,outSR:u,quantizationParameters:c,resultRecordCount:d,resultOffset:h,returnZ:g,returnM:p}=e,f=null!=d&&t.length>(h||0)+d,y=l&&(l.includes(\"*\")?[...this.fieldsIndex.fields]:l.map((e=>this.fieldsIndex.get(e))));return{exceededTransferLimit:f,features:this._createFeatures(e,t),fields:y,geometryType:i,hasM:s&&p,hasZ:a&&g,objectIdFieldName:r,spatialReference:m(u||o),transform:c&&n(c)||null}}_createFeatures(e,t){const i=new u(e,this.featureAdapter,this.fieldsIndex),{hasM:s,hasZ:a}=this,{orderByFields:r,quantizationParameters:o,returnGeometry:l,returnCentroid:c,maxAllowableOffset:m,resultOffset:g,resultRecordCount:p,returnZ:f=!1,returnM:y=!1}=e,x=a&&f,I=s&&y;let T=[],V=0;const F=[...t];if(this._sortFeatures(F,r,((e,t,s)=>i.getFieldValue(e,t,s))),l||c){const e=n(o);if(l&&!c)for(const t of F)T[V++]={attributes:i.getAttributes(t),geometry:d(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),m,e,x,I)};else if(!l&&c)for(const t of F)T[V++]={attributes:i.getAttributes(t),centroid:h(this,this.featureAdapter.getCentroid(t,this),e)};else for(const t of F)T[V++]={attributes:i.getAttributes(t),centroid:h(this,this.featureAdapter.getCentroid(t,this),e),geometry:d(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),m,e,x,I)}}else for(const n of F){const e=i.getAttributes(n);e&&(T[V++]={attributes:e})}const z=g||0;if(null!=p){const e=z+p;T=T.slice(z,Math.min(T.length,e))}return T}_createExceedsLimitQueryResponse(e){let i=!1,s=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY;for(const t of e.outStatistics)if(\"exceedslimit\"===t.statisticType){s=null!=t.maxPointCount?t.maxPointCount:Number.POSITIVE_INFINITY,a=null!=t.maxRecordCount?t.maxRecordCount:Number.POSITIVE_INFINITY,r=null!=t.maxVertexCount?t.maxVertexCount:Number.POSITIVE_INFINITY;break}if(\"esriGeometryPoint\"===this.geometryType)i=this.items.length>s;else if(this.items.length>a)i=!0;else{const e=this.hasZ?this.hasM?4:3:this.hasM?3:2,s=this.featureAdapter;i=this.items.reduce(((e,i)=>{const a=s.getGeometry(i);return e+(t(a)&&a.coords.length||0)}),0)/e>r}return{fields:[{name:\"exceedslimit\",type:\"esriFieldTypeInteger\",alias:\"exceedslimit\",sqlType:\"sqlTypeInteger\",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(i)}}]}}async _createStatisticsQueryResponse(e){const t={attributes:{}},i=[],s=new Map,a=new Map,r=new Map,n=new Map,o=new u(e,this.featureAdapter,this.fieldsIndex),l=e.outStatistics,{groupByFieldsForStatistics:c,having:m,orderByFields:d}=e,h=c&&c.length,g=!!h,p=g&&c[0],f=g&&!this.fieldsIndex.get(p);for(const u of l){const{outStatisticFieldName:e,statisticType:l}=u,d=u,y=\"exceedslimit\"!==l?u.onStatisticField:void 0,x=\"percentile_disc\"===l||\"percentile_cont\"===l,I=\"EnvelopeAggregate\"===l||\"CentroidAggregate\"===l||\"ConvexHullAggregate\"===l,T=g&&1===h&&(y===p||f)&&\"count\"===l;if(g){if(!r.has(y)){const e=[];for(const t of c){const i=this._getAttributeValues(o,t,s);e.push(i)}r.set(y,this._calculateUniqueValues(e,o.returnDistinctValues))}const t=r.get(y);for(const i in t){const{count:a,data:r,items:l,itemPositions:u}=t[i],h=r.join(\",\");if(!m||o.validateItems(l,m)){const t=n.get(h)||{attributes:{}};if(I){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:i}=await this._getAggregateGeometry(d,l);t.aggregateGeometries[i]=e}else{let i=null;if(T)i=a;else{const e=this._getAttributeValues(o,y,s),t=u.map((t=>e[t]));i=x&&\"statisticParameters\"in d?this._getPercentileValue(d,t):this._getStatisticValue(d,t,null,o.returnDistinctValues)}t.attributes[e]=i}c.forEach(((e,i)=>t.attributes[this.fieldsIndex.get(e)?e:`EXPR_${i+1}`]=r[i])),n.set(h,t)}}}else if(I){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:i}=await this._getAggregateGeometry(d,this.items);t.aggregateGeometries[i]=e}else{const i=this._getAttributeValues(o,y,s);t.attributes[e]=x&&\"statisticParameters\"in d?this._getPercentileValue(d,i):this._getStatisticValue(d,i,a,o.returnDistinctValues)}i.push({name:e,alias:e,type:\"esriFieldTypeDouble\"})}const y=g?Array.from(n.values()):[t];return this._sortFeatures(y,d,((e,t)=>e.attributes[t])),{fields:i,features:y}}async _getAggregateGeometry(e,t){const n=await import(\"../../../geometry/geometryEngineJSON.js\"),{statisticType:o,outStatisticFieldName:l}=e,{featureAdapter:u,spatialReference:c,geometryType:m,hasZ:h,hasM:g}=this,p=t.map((e=>d(m,h,g,u.getGeometry(e)))),f=n.convexHull(c,p,!0)[0],y={aggregateGeometries:null,outStatisticFieldName:null};if(\"EnvelopeAggregate\"===o){const e=f?a(f):r(n.union(c,p));y.aggregateGeometries={...e,spatialReference:c},y.outStatisticFieldName=l||\"extent\"}else if(\"CentroidAggregate\"===o){const e=f?i(f):s(r(n.union(c,p)));y.aggregateGeometries={x:e[0],y:e[1],spatialReference:c},y.outStatisticFieldName=l||\"centroid\"}else\"ConvexHullAggregate\"===o&&(y.aggregateGeometries=f,y.outStatisticFieldName=l||\"convexHull\");return y}_getStatisticValue(e,t,i,s){const{onStatisticField:a,statisticType:r}=e;let n=null;n=i?.has(a)?i.get(a):g(this.fieldsIndex.get(a))?f({values:t,returnDistinct:s}):y({values:t,minValue:null,maxValue:null,useSampleStdDev:!0}),i&&i.set(a,n);return n[\"var\"===r?\"variance\":r]}_getPercentileValue(e,t){const{onStatisticField:i,statisticParameters:s,statisticType:a}=e,{value:r,orderBy:n}=s,o=this.fieldsIndex.get(i);return S(t,{value:r,orderBy:n,fieldType:o?.type,isDiscrete:\"percentile_disc\"===a})}_getAttributeValues(e,t,i){if(i.has(t))return i.get(t);const s=this.fieldsIndex.get(t),a=this.items.map((i=>e.getFieldValue(i,t,s)));return i.set(t,a),a}_getAttributeNormalizedValues(e,t){return this.items.map((i=>e.getNormalizedValue(i,{field:t.field,fieldInfo:this.fieldsIndex.get(t.field),normalizationField:t.normalizationField,normalizationFieldInfo:this.fieldsIndex.get(t.normalizationField),normalizationType:t.normalizationType,normalizationTotal:t.normalizationTotal})))}async _getAttributeExpressionValues(e,t,i){const{arcadeUtils:s}=await b(),a=s.createFunction(t),r=i&&s.getViewInfo(i);return e.getExpressionValues(this.items,a,r,s)}_calculateUniqueValues(e,t){const i={},s=this.items,a=s.length;for(let r=0;r<a;r++){const a=s[r],n=[];for(const t of e)n.push(t[r]);const o=n.join(\",\");t?null==i[o]&&(i[o]={count:1,data:n,items:[a],itemPositions:[r]}):null==i[o]?i[o]={count:1,data:n,items:[a],itemPositions:[r]}:(i[o].count++,i[o].items.push(a),i[o].itemPositions.push(r))}return i}async _getDataValues(e){const t=new u(this.query,this.featureAdapter,this.fieldsIndex),{valueExpression:i,field:s,normalizationField:a,normalizationType:r,normalizationTotal:n,scale:o}=e,l=i?{viewingMode:\"map\",scale:o,spatialReference:this.query.outSR||this.spatialReference}:null;return i?this._getAttributeExpressionValues(t,i,l):this._getAttributeNormalizedValues(t,{field:s,normalizationField:a,normalizationType:r,normalizationTotal:n})}}function R(e,t,i,s,a,r){const n=a-i,o=r-s,l=n*n+o*o,u=(e-i)*n+(t-s)*o,c=Math.min(1,Math.max(0,u/l));return{x:i+n*c,y:s+o*c}}function A(e,t){return e?t?4:3:t?3:2}var E;!function(e){e[e.NONE=0]=\"NONE\",e[e.EDGE=1]=\"EDGE\",e[e.VERTEX=2]=\"VERTEX\"}(E||(E={}));export{v as QueryEngineResult,E as SnappingTypes};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}