{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport e from \"../Ground.js\";\nimport r from \"../core/Logger.js\";\nimport { ensureType as o } from \"../core/accessorSupport/ensureType.js\";\nconst i = r.getLogger(\"esri.support.groundUtils\"),\n      t = {\n  \"world-elevation\": {\n    id: \"worldElevation\",\n    url: \"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\",\n    layerType: \"ArcGISTiledElevationServiceLayer\"\n  },\n  \"world-topobathymetry\": {\n    id: \"worldTopoBathymetry\",\n    url: \"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer\",\n    layerType: \"ArcGISTiledElevationServiceLayer\"\n  }\n};\n\nfunction a(r) {\n  let a = null;\n  if (\"string\" == typeof r) {\n    if (r in t) {\n      const o = t[r];\n      a = new e({\n        resourceInfo: {\n          data: {\n            layers: [o]\n          }\n        }\n      });\n    } else i.warn(`Unable to find ground definition for: ${r}. Try \"world-elevation\"`);\n  } else a = o(e, r);\n  return a;\n}\n\nexport { a as ensureType, t as groundElevationLayers };","map":{"version":3,"names":["e","r","ensureType","o","i","getLogger","t","id","url","layerType","a","resourceInfo","data","layers","warn","groundElevationLayers"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/support/groundUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport e from\"../Ground.js\";import r from\"../core/Logger.js\";import{ensureType as o}from\"../core/accessorSupport/ensureType.js\";const i=r.getLogger(\"esri.support.groundUtils\"),t={\"world-elevation\":{id:\"worldElevation\",url:\"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\",layerType:\"ArcGISTiledElevationServiceLayer\"},\"world-topobathymetry\":{id:\"worldTopoBathymetry\",url:\"//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer\",layerType:\"ArcGISTiledElevationServiceLayer\"}};function a(r){let a=null;if(\"string\"==typeof r)if(r in t){const o=t[r];a=new e({resourceInfo:{data:{layers:[o]}}})}else i.warn(`Unable to find ground definition for: ${r}. Try \"world-elevation\"`);else a=o(e,r);return a}export{a as ensureType,t as groundElevationLayers};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,cAAb;AAA4B,OAAOC,CAAP,MAAa,mBAAb;AAAiC,SAAOC,UAAU,IAAIC,CAArB,QAA2B,uCAA3B;AAAmE,MAAMC,CAAC,GAACH,CAAC,CAACI,SAAF,CAAY,0BAAZ,CAAR;AAAA,MAAgDC,CAAC,GAAC;EAAC,mBAAkB;IAACC,EAAE,EAAC,gBAAJ;IAAqBC,GAAG,EAAC,sFAAzB;IAAgHC,SAAS,EAAC;EAA1H,CAAnB;EAAiL,wBAAuB;IAACF,EAAE,EAAC,qBAAJ;IAA0BC,GAAG,EAAC,wFAA9B;IAAuHC,SAAS,EAAC;EAAjI;AAAxM,CAAlD;;AAAga,SAASC,CAAT,CAAWT,CAAX,EAAa;EAAC,IAAIS,CAAC,GAAC,IAAN;EAAW,IAAG,YAAU,OAAOT,CAApB;IAAsB,IAAGA,CAAC,IAAIK,CAAR,EAAU;MAAC,MAAMH,CAAC,GAACG,CAAC,CAACL,CAAD,CAAT;MAAaS,CAAC,GAAC,IAAIV,CAAJ,CAAM;QAACW,YAAY,EAAC;UAACC,IAAI,EAAC;YAACC,MAAM,EAAC,CAACV,CAAD;UAAR;QAAN;MAAd,CAAN,CAAF;IAA4C,CAApE,MAAyEC,CAAC,CAACU,IAAF,CAAQ,yCAAwCb,CAAE,yBAAlD;EAA/F,OAAgLS,CAAC,GAACP,CAAC,CAACH,CAAD,EAAGC,CAAH,CAAH;EAAS,OAAOS,CAAP;AAAS;;AAAA,SAAOA,CAAC,IAAIR,UAAZ,EAAuBI,CAAC,IAAIS,qBAA5B"},"metadata":{},"sourceType":"module"}