{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isSome as i, isNone as s, unwrap as a } from \"../../../core/maybe.js\";\nimport { urlToObject as r } from \"../../../core/urlUtils.js\";\nimport { property as l } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../RasterInfo.js\";\nimport c from \"../RasterStorageInfo.js\";\nimport { readServiceTileInfo as m } from \"../serviceTileInfoProperty.js\";\nimport h from \"../TileInfo.js\";\nimport { TilemapCache as p } from \"../TilemapCache.js\";\nimport f from \"./BaseRaster.js\";\nimport { setValidBoundary as u } from \"../rasterFunctions/pixelUtils.js\";\nimport y from \"../rasterTransforms/GCSShiftTransform.js\";\nimport { fetchServiceRasterInfo as d } from \"../../../rest/imageService/fetchRasterInfo.js\";\nimport x from \"../../../geometry/SpatialReference.js\";\nimport g from \"../../../geometry/Point.js\";\nimport v from \"../../../geometry/Extent.js\";\nlet S = class extends f {\n  constructor() {\n    super(...arguments), this._levelOffset = 0, this._tilemapCache = null, this._slices = null, this.datasetFormat = \"RasterTileServer\";\n  }\n\n  async open(e) {\n    await this.init();\n    const s = e && e.signal,\n          a = this.sourceJSON ? {\n      data: this.sourceJSON\n    } : await this.request(this.url, {\n      query: {\n        f: \"json\"\n      },\n      signal: s\n    });\n    a.ssl && (this.url = this.url.replace(/^http:/i, \"https:\"));\n    const l = a.data;\n    if (this.sourceJSON = l, !l) throw new t(\"imageserverraster:open\", \"cannot initialize tiled image service, missing service info\");\n    if (!l.tileInfo) throw new t(\"imageserverraster:open\", \"use ImageryLayer to open non-tiled image services\");\n\n    this._fixScaleInServiceInfo();\n\n    const o = [\"jpg\", \"jpeg\", \"png\", \"png8\", \"png24\", \"png32\", \"mixed\"];\n    this.tileType = l.cacheType, null == this.tileType && (o.includes(l.tileInfo.format.toLowerCase()) ? this.tileType = \"Map\" : \"lerc\" === l.tileInfo.format.toLowerCase() ? this.tileType = \"Elevation\" : this.tileType = \"Raster\"), this.datasetName = l.name.slice(l.name.indexOf(\"/\") + 1);\n    const n = await this._fetchRasterInfo({\n      signal: s\n    });\n    if (!i(n)) throw new t(\"image-server-raster:open\", \"cannot initialize image service\");\n    {\n      const e = \"Map\" === this.tileType ? m(l.tileInfo, l) : h.fromJSON(l.tileInfo),\n            {\n        extent: t,\n        pixelSize: i\n      } = n,\n            s = .5 / n.width * i.x;\n      let a, r;\n      const o = e.lodAt(Math.max.apply(null, e.lods.map(e => e.level)));\n      \"Map\" !== this.tileType && 0 !== l.maxScale && (\"Raster\" === this.tileType ? (a = e.lods.find(e => e.resolution === i.x), a || (a = e.lods[e.lods.length - 1])) : (a = e.lods.find(e => Math.abs(e.scale - l.maxScale) < s), a || (a = e.lods.filter(e => e.scale > l.maxScale).sort((e, t) => e.scale > t.scale ? 1 : -1)[0])), i.x = i.y = a.resolution, n.width = Math.ceil((t.xmax - t.xmin) / i.x - .1), n.height = Math.ceil((t.ymax - t.ymin) / i.y - .1)), a || (a = o);\n      const p = e.lodAt(Math.min.apply(null, e.lods.map(e => e.level)));\n      \"Map\" === this.tileType ? this._levelOffset = e.lods[0].level : 0 !== l.minScale && \"Elevation\" === this.tileType && (r = e.lods.find(e => Math.abs(e.scale - l.minScale) < s), this._levelOffset = r.level - p.level), r || (r = p);\n      const f = Math.max(i.x, i.y);\n      (Math.abs(i.x - i.y) > s || !e.lods.some(e => Math.abs(e.resolution - f) < s)) && (i.x = i.y = a.resolution, n.width = Math.ceil((t.xmax - t.xmin) / i.x - .1), n.height = Math.ceil((t.ymax - t.ymin) / i.y - .1));\n      const u = a.level - r.level,\n            [y, d] = e.size,\n            x = [];\n      e.lods.forEach(e => {\n        e.level >= r.level && e.level <= a.level && x.push({\n          x: e.resolution,\n          y: e.resolution\n        });\n      }), x.sort((e, t) => e.x - t.x);\n      const g = this.computeBlockBoundary(t, y, d, e.origin, x, u),\n            v = x.length > 1 ? x.slice(1) : null;\n      let S;\n      l.transposeInfo && (S = {\n        tileSize: [l.transposeInfo.rows, l.transposeInfo.cols],\n        packetSize: n.keyProperties?._yxs.PacketSize ?? 0\n      }), n.storageInfo = new c({\n        blockWidth: e.size[0],\n        blockHeight: e.size[1],\n        pyramidBlockWidth: e.size[0],\n        pyramidBlockHeight: e.size[1],\n        pyramidResolutions: v,\n        compression: e.format,\n        origin: e.origin,\n        firstPyramidLevel: 1,\n        maximumPyramidLevel: u,\n        tileInfo: e,\n        transposeInfo: S,\n        blockBoundary: g\n      }), this._fixGCSShift(n), this._set(\"rasterInfo\", n);\n    }\n\n    if (l.capabilities.toLowerCase().includes(\"tilemap\")) {\n      const e = {\n        tileInfo: n.storageInfo.tileInfo,\n        parsedUrl: r(this.url),\n        url: this.url,\n        tileServers: [],\n        type: \"tile\"\n      };\n      this._tilemapCache = new p({\n        layer: e\n      });\n    }\n  }\n\n  async fetchRawTile(e, t, s, a = {}) {\n    const {\n      storageInfo: r,\n      extent: l\n    } = this.rasterInfo,\n          {\n      transposeInfo: o\n    } = r,\n          n = i(o) && !!a.transposedVariableName;\n    if (this._slices && !n && null == a.sliceId) return null;\n    const c = n ? 0 : r.maximumPyramidLevel - e + this._levelOffset,\n          m = `${this.url}/tile/${c}/${t}/${s}`,\n          h = this._slices ? n ? {\n      variable: a.transposedVariableName\n    } : {\n      sliceId: a.sliceId || 0\n    } : null,\n          {\n      data: p\n    } = await this.request(m, {\n      query: h,\n      responseType: \"array-buffer\",\n      signal: a.signal\n    });\n    if (!p) return null;\n    const f = n ? o.tileSize : r.tileInfo.size,\n          y = await this.decodePixelBlock(p, {\n      width: f[0],\n      height: f[1],\n      planes: null,\n      pixelType: null,\n      isPoint: \"Elevation\" === this.tileType,\n      returnPixelInterleavedDims: n\n    }),\n          d = r.blockBoundary[e];\n    if (\"jpg\" !== r.compression || s > d.minCol && s < d.maxCol && t > d.minRow && t < d.maxRow) return y;\n\n    const {\n      origin: x,\n      blockWidth: g,\n      blockHeight: v\n    } = r,\n          {\n      x: S,\n      y: I\n    } = this.getPyramidPixelSize(e),\n          w = Math.round((l.xmin - x.x) / S) % g,\n          j = Math.round((l.xmax - x.x) / S) % g || g,\n          T = Math.round((x.y - l.ymax) / I) % v,\n          b = Math.round((x.y - l.ymin) / I) % v || v,\n          _ = s === d.minCol ? w : 0,\n          M = t === d.minRow ? T : 0,\n          R = s === d.maxCol ? j : g,\n          P = t === d.maxRow ? b : v;\n\n    return u(y, {\n      x: _,\n      y: M\n    }, {\n      width: R - _,\n      height: P - M\n    }), y;\n  }\n\n  getSliceIndex(e) {\n    if (!this._slices || s(e) || 0 === e.length) return null;\n    const t = e;\n\n    for (let i = 0; i < this._slices.length; i++) {\n      const e = this._slices[i].multidimensionalDefinition;\n      if (e.length === t.length && !e.some(e => {\n        const i = t.find(t => e.variableName === t.variableName && t.dimensionName === e.dimensionName);\n        if (!i) return !0;\n        return (Array.isArray(e.values[0]) ? `${e.values[0][0]}-${e.values[0][1]}` : e.values[0]) !== (Array.isArray(i.values[0]) ? `${i.values[0][0]}-${i.values[0][1]}` : i.values[0]);\n      })) return i;\n    }\n\n    return null;\n  }\n\n  async fetchVariableStatisticsHistograms(e, t) {\n    const i = this.request(this.url + \"/statistics\", {\n      query: {\n        variable: e,\n        f: \"json\"\n      },\n      signal: t\n    }).then(e => e.data?.statistics),\n          s = this.request(this.url + \"/histograms\", {\n      query: {\n        variable: e,\n        f: \"json\"\n      },\n      signal: t\n    }).then(e => e.data?.histograms),\n          a = await Promise.all([i, s]);\n    return a[0] && a[0].forEach(e => {\n      e.avg = e.mean, e.stddev = e.standardDeviation;\n    }), {\n      statistics: a[0] || null,\n      histograms: a[1] || null\n    };\n  }\n\n  async computeBestPyramidLevelForLocation(e, t = {}) {\n    if (!this._tilemapCache) return 0;\n    let i = this.identifyPixelLocation(e, 0, a(t.datumTransformation));\n    if (null === i) return null;\n    let s = 0;\n    const {\n      maximumPyramidLevel: r\n    } = this.rasterInfo.storageInfo;\n    let l = r - s + this._levelOffset;\n    const o = i.srcLocation;\n\n    for (; l >= 0;) {\n      try {\n        if (\"available\" === (await this._tilemapCache.fetchAvailability(l, i.row, i.col, t))) break;\n      } catch {}\n\n      if (l--, s++, i = this.identifyPixelLocation(o, s, a(t.datumTransformation)), null === i) return null;\n    }\n\n    return -1 === l || null == i ? null : s;\n  }\n\n  async _fetchRasterInfo(e) {\n    const t = this.sourceJSON;\n\n    if (\"Map\" === this.tileType) {\n      const e = Math.ceil((t.extent.xmax - t.extent.xmin) / t.pixelSizeX - .1),\n            i = Math.ceil((t.extent.ymax - t.extent.ymin) / t.pixelSizeY - .1),\n            s = x.fromJSON(t.spatialReference || t.extent.spatialReference),\n            a = new g({\n        x: t.pixelSizeX,\n        y: t.pixelSizeY,\n        spatialReference: s\n      });\n      return new n({\n        width: e,\n        height: i,\n        bandCount: 3,\n        extent: v.fromJSON(t.extent),\n        spatialReference: s,\n        pixelSize: a,\n        pixelType: \"u8\",\n        statistics: null,\n        keyProperties: {\n          DataType: \"processed\"\n        }\n      });\n    }\n\n    const {\n      signal: i\n    } = e,\n          s = d(this.url, this.sourceJSON, {\n      signal: i,\n      query: this.ioConfig.customFetchParameters\n    }),\n          a = t.hasMultidimensions ? this.request(`${this.url}/slices`, {\n      query: {\n        f: \"json\"\n      },\n      signal: i\n    }).then(e => e.data && e.data.slices).catch(() => null) : null,\n          r = await Promise.all([s, a]);\n    return this._slices = r[1], r[0];\n  }\n\n  _fixScaleInServiceInfo() {\n    const {\n      sourceJSON: e\n    } = this;\n    e.minScale && e.minScale < 0 && (e.minScale = 0), e.maxScale && e.maxScale < 0 && (e.maxScale = 0);\n  }\n\n  _fixGCSShift(e) {\n    const {\n      extent: t,\n      spatialReference: i\n    } = e;\n    0 === t.xmin && 360 === t.xmax && i.wkid && i.isGeographic && (e.nativeExtent = e.extent, e.transform = new y(), e.extent = e.transform.forwardTransform(t));\n  }\n\n};\ne([l({\n  type: String,\n  json: {\n    write: !0\n  }\n})], S.prototype, \"datasetFormat\", void 0), e([l()], S.prototype, \"tileType\", void 0), S = e([o(\"esri.layers.support.rasterDatasets.ImageServerRaster\")], S);\nconst I = S;\nexport { I as default };","map":{"version":3,"names":["_","e","t","isSome","i","isNone","s","unwrap","a","urlToObject","r","property","l","subclass","o","n","c","readServiceTileInfo","m","h","TilemapCache","p","f","setValidBoundary","u","y","fetchServiceRasterInfo","d","x","g","v","S","constructor","arguments","_levelOffset","_tilemapCache","_slices","datasetFormat","open","init","signal","sourceJSON","data","request","url","query","ssl","replace","tileInfo","_fixScaleInServiceInfo","tileType","cacheType","includes","format","toLowerCase","datasetName","name","slice","indexOf","_fetchRasterInfo","fromJSON","extent","pixelSize","width","lodAt","Math","max","apply","lods","map","level","maxScale","find","resolution","length","abs","scale","filter","sort","ceil","xmax","xmin","height","ymax","ymin","min","minScale","some","size","forEach","push","computeBlockBoundary","origin","transposeInfo","tileSize","rows","cols","packetSize","keyProperties","_yxs","PacketSize","storageInfo","blockWidth","blockHeight","pyramidBlockWidth","pyramidBlockHeight","pyramidResolutions","compression","firstPyramidLevel","maximumPyramidLevel","blockBoundary","_fixGCSShift","_set","capabilities","parsedUrl","tileServers","type","layer","fetchRawTile","rasterInfo","transposedVariableName","sliceId","variable","responseType","decodePixelBlock","planes","pixelType","isPoint","returnPixelInterleavedDims","minCol","maxCol","minRow","maxRow","I","getPyramidPixelSize","w","round","j","T","b","M","R","P","getSliceIndex","multidimensionalDefinition","variableName","dimensionName","Array","isArray","values","fetchVariableStatisticsHistograms","then","statistics","histograms","Promise","all","avg","mean","stddev","standardDeviation","computeBestPyramidLevelForLocation","identifyPixelLocation","datumTransformation","srcLocation","fetchAvailability","row","col","pixelSizeX","pixelSizeY","spatialReference","bandCount","DataType","ioConfig","customFetchParameters","hasMultidimensions","slices","catch","wkid","isGeographic","nativeExtent","transform","forwardTransform","String","json","write","prototype","default"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isSome as i,isNone as s,unwrap as a}from\"../../../core/maybe.js\";import{urlToObject as r}from\"../../../core/urlUtils.js\";import{property as l}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as o}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../RasterInfo.js\";import c from\"../RasterStorageInfo.js\";import{readServiceTileInfo as m}from\"../serviceTileInfoProperty.js\";import h from\"../TileInfo.js\";import{TilemapCache as p}from\"../TilemapCache.js\";import f from\"./BaseRaster.js\";import{setValidBoundary as u}from\"../rasterFunctions/pixelUtils.js\";import y from\"../rasterTransforms/GCSShiftTransform.js\";import{fetchServiceRasterInfo as d}from\"../../../rest/imageService/fetchRasterInfo.js\";import x from\"../../../geometry/SpatialReference.js\";import g from\"../../../geometry/Point.js\";import v from\"../../../geometry/Extent.js\";let S=class extends f{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat=\"RasterTileServer\"}async open(e){await this.init();const s=e&&e.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:\"json\"},signal:s});a.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\"));const l=a.data;if(this.sourceJSON=l,!l)throw new t(\"imageserverraster:open\",\"cannot initialize tiled image service, missing service info\");if(!l.tileInfo)throw new t(\"imageserverraster:open\",\"use ImageryLayer to open non-tiled image services\");this._fixScaleInServiceInfo();const o=[\"jpg\",\"jpeg\",\"png\",\"png8\",\"png24\",\"png32\",\"mixed\"];this.tileType=l.cacheType,null==this.tileType&&(o.includes(l.tileInfo.format.toLowerCase())?this.tileType=\"Map\":\"lerc\"===l.tileInfo.format.toLowerCase()?this.tileType=\"Elevation\":this.tileType=\"Raster\"),this.datasetName=l.name.slice(l.name.indexOf(\"/\")+1);const n=await this._fetchRasterInfo({signal:s});if(!i(n))throw new t(\"image-server-raster:open\",\"cannot initialize image service\");{const e=\"Map\"===this.tileType?m(l.tileInfo,l):h.fromJSON(l.tileInfo),{extent:t,pixelSize:i}=n,s=.5/n.width*i.x;let a,r;const o=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));\"Map\"!==this.tileType&&0!==l.maxScale&&(\"Raster\"===this.tileType?(a=e.lods.find((e=>e.resolution===i.x)),a||(a=e.lods[e.lods.length-1])):(a=e.lods.find((e=>Math.abs(e.scale-l.maxScale)<s)),a||(a=e.lods.filter((e=>e.scale>l.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=o);const p=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));\"Map\"===this.tileType?this._levelOffset=e.lods[0].level:0!==l.minScale&&\"Elevation\"===this.tileType&&(r=e.lods.find((e=>Math.abs(e.scale-l.minScale)<s)),this._levelOffset=r.level-p.level),r||(r=p);const f=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-f)<s)))&&(i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const u=a.level-r.level,[y,d]=e.size,x=[];e.lods.forEach((e=>{e.level>=r.level&&e.level<=a.level&&x.push({x:e.resolution,y:e.resolution})})),x.sort(((e,t)=>e.x-t.x));const g=this.computeBlockBoundary(t,y,d,e.origin,x,u),v=x.length>1?x.slice(1):null;let S;l.transposeInfo&&(S={tileSize:[l.transposeInfo.rows,l.transposeInfo.cols],packetSize:n.keyProperties?._yxs.PacketSize??0}),n.storageInfo=new c({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:v,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:u,tileInfo:e,transposeInfo:S,blockBoundary:g}),this._fixGCSShift(n),this._set(\"rasterInfo\",n)}if(l.capabilities.toLowerCase().includes(\"tilemap\")){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:r(this.url),url:this.url,tileServers:[],type:\"tile\"};this._tilemapCache=new p({layer:e})}}async fetchRawTile(e,t,s,a={}){const{storageInfo:r,extent:l}=this.rasterInfo,{transposeInfo:o}=r,n=i(o)&&!!a.transposedVariableName;if(this._slices&&!n&&null==a.sliceId)return null;const c=n?0:r.maximumPyramidLevel-e+this._levelOffset,m=`${this.url}/tile/${c}/${t}/${s}`,h=this._slices?n?{variable:a.transposedVariableName}:{sliceId:a.sliceId||0}:null,{data:p}=await this.request(m,{query:h,responseType:\"array-buffer\",signal:a.signal});if(!p)return null;const f=n?o.tileSize:r.tileInfo.size,y=await this.decodePixelBlock(p,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:\"Elevation\"===this.tileType,returnPixelInterleavedDims:n}),d=r.blockBoundary[e];if(\"jpg\"!==r.compression||s>d.minCol&&s<d.maxCol&&t>d.minRow&&t<d.maxRow)return y;const{origin:x,blockWidth:g,blockHeight:v}=r,{x:S,y:I}=this.getPyramidPixelSize(e),w=Math.round((l.xmin-x.x)/S)%g,j=Math.round((l.xmax-x.x)/S)%g||g,T=Math.round((x.y-l.ymax)/I)%v,b=Math.round((x.y-l.ymin)/I)%v||v,_=s===d.minCol?w:0,M=t===d.minRow?T:0,R=s===d.maxCol?j:g,P=t===d.maxRow?b:v;return u(y,{x:_,y:M},{width:R-_,height:P-M}),y}getSliceIndex(e){if(!this._slices||s(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));if(!i)return!0;return(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+\"/statistics\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+\"/histograms\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>e.data?.histograms)),a=await Promise.all([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,a(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let l=r-s+this._levelOffset;const o=i.srcLocation;for(;l>=0;){try{if(\"available\"===await this._tilemapCache.fetchAvailability(l,i.row,i.col,t))break}catch{}if(l--,s++,i=this.identifyPixelLocation(o,s,a(t.datumTransformation)),null===i)return null}return-1===l||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if(\"Map\"===this.tileType){const e=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),i=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=x.fromJSON(t.spatialReference||t.extent.spatialReference),a=new g({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s});return new n({width:e,height:i,bandCount:3,extent:v.fromJSON(t.extent),spatialReference:s,pixelSize:a,pixelType:\"u8\",statistics:null,keyProperties:{DataType:\"processed\"}})}const{signal:i}=e,s=d(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),a=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:\"json\"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,r=await Promise.all([s,a]);return this._slices=r[1],r[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new y,e.extent=e.transform.forwardTransform(t))}};e([l({type:String,json:{write:!0}})],S.prototype,\"datasetFormat\",void 0),e([l()],S.prototype,\"tileType\",void 0),S=e([o(\"esri.layers.support.rasterDatasets.ImageServerRaster\")],S);const I=S;export{I as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}