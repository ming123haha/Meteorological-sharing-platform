{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { createHashMap, isObject, map, isString } from 'zrender/lib/core/util.js';\nvar uidBase = 0;\n\nvar OrdinalMeta =\n/** @class */\nfunction () {\n  function OrdinalMeta(opt) {\n    this.categories = opt.categories || [];\n    this._needCollect = opt.needCollect;\n    this._deduplication = opt.deduplication;\n    this.uid = ++uidBase;\n  }\n\n  OrdinalMeta.createByAxisModel = function (axisModel) {\n    var option = axisModel.option;\n    var data = option.data;\n    var categories = data && map(data, getName);\n    return new OrdinalMeta({\n      categories: categories,\n      needCollect: !categories,\n      // deduplication is default in axis.\n      deduplication: option.dedplication !== false\n    });\n  };\n\n  ;\n\n  OrdinalMeta.prototype.getOrdinal = function (category) {\n    // @ts-ignore\n    return this._getOrCreateMap().get(category);\n  };\n  /**\r\n   * @return The ordinal. If not found, return NaN.\r\n   */\n\n\n  OrdinalMeta.prototype.parseAndCollect = function (category) {\n    var index;\n    var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n    // This feature is only supported when !needCollect, because we should\n    // consider a common case: a value is 2017, which is a number but is\n    // expected to be tread as a category. This case usually happen in dataset,\n    // where it happent to be no need of the index feature.\n\n    if (!isString(category) && !needCollect) {\n      return category;\n    } // Optimize for the scenario:\n    // category is ['2012-01-01', '2012-01-02', ...], where the input\n    // data has been ensured not duplicate and is large data.\n    // Notice, if a dataset dimension provide categroies, usually echarts\n    // should remove duplication except user tell echarts dont do that\n    // (set axis.deduplication = false), because echarts do not know whether\n    // the values in the category dimension has duplication (consider the\n    // parallel-aqi example)\n\n\n    if (needCollect && !this._deduplication) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      return index;\n    }\n\n    var map = this._getOrCreateMap(); // @ts-ignore\n\n\n    index = map.get(category);\n\n    if (index == null) {\n      if (needCollect) {\n        index = this.categories.length;\n        this.categories[index] = category; // @ts-ignore\n\n        map.set(category, index);\n      } else {\n        index = NaN;\n      }\n    }\n\n    return index;\n  }; // Consider big data, do not create map until needed.\n\n\n  OrdinalMeta.prototype._getOrCreateMap = function () {\n    return this._map || (this._map = createHashMap(this.categories));\n  };\n\n  return OrdinalMeta;\n}();\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nexport default OrdinalMeta;","map":{"version":3,"names":["createHashMap","isObject","map","isString","uidBase","OrdinalMeta","opt","categories","_needCollect","needCollect","_deduplication","deduplication","uid","createByAxisModel","axisModel","option","data","getName","dedplication","prototype","getOrdinal","category","_getOrCreateMap","get","parseAndCollect","index","length","set","NaN","_map","obj","value"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/echarts/lib/data/OrdinalMeta.js"],"sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { createHashMap, isObject, map, isString } from 'zrender/lib/core/util.js';\r\nvar uidBase = 0;\r\n\r\nvar OrdinalMeta =\r\n/** @class */\r\nfunction () {\r\n  function OrdinalMeta(opt) {\r\n    this.categories = opt.categories || [];\r\n    this._needCollect = opt.needCollect;\r\n    this._deduplication = opt.deduplication;\r\n    this.uid = ++uidBase;\r\n  }\r\n\r\n  OrdinalMeta.createByAxisModel = function (axisModel) {\r\n    var option = axisModel.option;\r\n    var data = option.data;\r\n    var categories = data && map(data, getName);\r\n    return new OrdinalMeta({\r\n      categories: categories,\r\n      needCollect: !categories,\r\n      // deduplication is default in axis.\r\n      deduplication: option.dedplication !== false\r\n    });\r\n  };\r\n\r\n  ;\r\n\r\n  OrdinalMeta.prototype.getOrdinal = function (category) {\r\n    // @ts-ignore\r\n    return this._getOrCreateMap().get(category);\r\n  };\r\n  /**\r\n   * @return The ordinal. If not found, return NaN.\r\n   */\r\n\r\n\r\n  OrdinalMeta.prototype.parseAndCollect = function (category) {\r\n    var index;\r\n    var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\r\n    // This feature is only supported when !needCollect, because we should\r\n    // consider a common case: a value is 2017, which is a number but is\r\n    // expected to be tread as a category. This case usually happen in dataset,\r\n    // where it happent to be no need of the index feature.\r\n\r\n    if (!isString(category) && !needCollect) {\r\n      return category;\r\n    } // Optimize for the scenario:\r\n    // category is ['2012-01-01', '2012-01-02', ...], where the input\r\n    // data has been ensured not duplicate and is large data.\r\n    // Notice, if a dataset dimension provide categroies, usually echarts\r\n    // should remove duplication except user tell echarts dont do that\r\n    // (set axis.deduplication = false), because echarts do not know whether\r\n    // the values in the category dimension has duplication (consider the\r\n    // parallel-aqi example)\r\n\r\n\r\n    if (needCollect && !this._deduplication) {\r\n      index = this.categories.length;\r\n      this.categories[index] = category;\r\n      return index;\r\n    }\r\n\r\n    var map = this._getOrCreateMap(); // @ts-ignore\r\n\r\n\r\n    index = map.get(category);\r\n\r\n    if (index == null) {\r\n      if (needCollect) {\r\n        index = this.categories.length;\r\n        this.categories[index] = category; // @ts-ignore\r\n\r\n        map.set(category, index);\r\n      } else {\r\n        index = NaN;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }; // Consider big data, do not create map until needed.\r\n\r\n\r\n  OrdinalMeta.prototype._getOrCreateMap = function () {\r\n    return this._map || (this._map = createHashMap(this.categories));\r\n  };\r\n\r\n  return OrdinalMeta;\r\n}();\r\n\r\nfunction getName(obj) {\r\n  if (isObject(obj) && obj.value != null) {\r\n    return obj.value;\r\n  } else {\r\n    return obj + '';\r\n  }\r\n}\r\n\r\nexport default OrdinalMeta;"],"mappings":"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"},"metadata":{},"sourceType":"module"}