{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport e from \"../../core/Error.js\";\nimport { convertUnit as t } from \"../../core/unitUtils.js\";\nimport { spheroids as n, WKT_SPHEROID_REGEX as i, toRadians as s } from \"./geodesicConstants.js\";\nimport { isGeographic as a, equals as r } from \"./spatialReferenceUtils.js\";\nimport o from \"../Polyline.js\";\nimport c from \"../Polygon.js\";\nimport l from \"../Point.js\";\nimport h from \"../SpatialReference.js\";\n\nfunction f(e) {\n  if (!e) return null;\n\n  if (a(e) && e.wkid) {\n    const t = n[e.wkid];\n    if (t) return t;\n  }\n\n  if (e.wkt) {\n    const t = p(e.wkt);\n    if (t) return t;\n  }\n\n  return null;\n}\n\nfunction p(e) {\n  const t = i.exec(e);\n  if (!t || 2 !== t.length) return null;\n  const n = t[1].split(\",\");\n  if (!n || n.length < 3) return null;\n  const s = parseFloat(n[1]),\n        a = parseFloat(n[2]);\n  if (isNaN(s) || isNaN(a)) return null;\n  return {\n    a: s,\n    f: 0 === a ? 0 : 1 / a\n  };\n}\n\nfunction u(e) {\n  const t = f(e || h.WGS84);\n  if (d(t)) return t;\n  const n = t.a * (1 - t.f);\n  return Object.assign(t, {\n    b: n,\n    eSq: 1 - (n / t.a) ** 2,\n    radius: (2 * t.a + n) / 3,\n    densificationRatio: 1e4 / ((2 * t.a + n) / 3)\n  });\n}\n\nfunction d(e) {\n  return \"b\" in e && \"eSq\" in e && \"radius\" in e;\n}\n\nfunction m(e) {\n  return e < 0 ? e + 360 : e;\n}\n\nfunction g(e, t, n) {\n  const {\n    a: i,\n    eSq: a\n  } = u(n),\n        r = Math.sqrt(a),\n        o = Math.sin(t[1] * s),\n        c = i * t[0] * s;\n  let l;\n\n  if (a > 0) {\n    l = i * ((1 - a) * (o / (1 - a * (o * o)) - 1 / (2 * r) * Math.log((1 - r * o) / (1 + r * o)))) * .5;\n  } else l = i * o;\n\n  return e[0] = c, e[1] = l, e;\n}\n\nfunction M(e) {\n  return null !== f(e);\n}\n\nfunction w(n, i = \"square-meters\") {\n  if (n.some(e => !M(e.spatialReference))) throw new e(\"geodesic-areas:invalid-spatial-reference\", \"the input geometries spatial reference is not supported\");\n  const s = [];\n\n  for (let e = 0; e < n.length; e++) {\n    const t = n[e],\n          i = t.spatialReference,\n          {\n      radius: a,\n      densificationRatio: r\n    } = u(i),\n          o = a * r;\n    s.push(R(t, o));\n  }\n\n  const a = [],\n        r = [0, 0],\n        o = [0, 0];\n\n  for (let e = 0; e < s.length; e++) {\n    const {\n      rings: n,\n      spatialReference: c\n    } = s[e];\n    let l = 0;\n\n    for (let e = 0; e < n.length; e++) {\n      const t = n[e];\n      g(r, t[0], c), g(o, t[t.length - 1], c);\n      let i = o[0] * r[1] - r[0] * o[1];\n\n      for (let e = 0; e < t.length - 1; e++) g(r, t[e + 1], c), g(o, t[e], c), i += o[0] * r[1] - r[0] * o[1];\n\n      l += i;\n    }\n\n    l = t(l, \"square-meters\", i), a.push(l / -2);\n  }\n\n  return a;\n}\n\nfunction y(n, i = \"meters\") {\n  if (!n) throw new e(\"geodesic-lengths:invalid-geometries\", \"the input geometries type is not supported\");\n  if (n.some(e => !M(e.spatialReference))) throw new e(\"geodesic-lengths:invalid-spatial-reference\", \"the input geometries spatial reference is not supported\");\n  const s = [];\n\n  for (let e = 0; e < n.length; e++) {\n    const a = n[e],\n          {\n      spatialReference: r\n    } = a,\n          o = \"polyline\" === a.type ? a.paths : a.rings;\n    let c = 0;\n\n    for (let e = 0; e < o.length; e++) {\n      const t = o[e];\n      let n = 0;\n\n      for (let e = 1; e < t.length; e++) {\n        const i = t[e - 1][0],\n              s = t[e][0],\n              a = t[e - 1][1],\n              o = t[e][1];\n\n        if (a !== o || i !== s) {\n          const e = {\n            distance: null\n          };\n          z(e, [i, a], [s, o], r), n += e.distance;\n        }\n      }\n\n      c += n;\n    }\n\n    c = t(c, \"meters\", i), s.push(c);\n  }\n\n  return s;\n}\n\nfunction R(t, n) {\n  if (\"polyline\" !== t.type && \"polygon\" !== t.type) throw new e(\"geodesic-densify:invalid-geometry\", \"the input geometry is neither polyline nor polygon\");\n  const {\n    spatialReference: i\n  } = t;\n  if (!M(i)) throw new e(\"geodesic-densify:invalid-spatial-reference\", \"the input geometry spatial reference is not supported\");\n  const s = \"polyline\" === t.type ? t.paths : t.rings,\n        a = [],\n        r = [0, 0],\n        l = {\n    distance: null\n  };\n\n  for (const e of s) {\n    const t = [];\n    a.push(t), t.push([e[0][0], e[0][1]]);\n    let s,\n        o,\n        c = e[0][0],\n        h = e[0][1];\n\n    for (let a = 0; a < e.length - 1; a++) {\n      if (s = e[a + 1][0], o = e[a + 1][1], c === s && h === o) continue;\n      const f = [c, h];\n      z(l, [c, h], [s, o], i);\n      const {\n        azimuth: p,\n        distance: u\n      } = l,\n            d = u / n;\n\n      if (d > 1) {\n        for (let e = 1; e <= d - 1; e++) {\n          v(r, f, p, e * n, i), t.push(r.slice(0));\n        }\n\n        v(r, f, p, (u + Math.floor(d - 1) * n) / 2, i), t.push(r.slice(0));\n      }\n\n      v(r, f, p, u, i), t.push(r.slice(0)), c = r[0], h = r[1];\n    }\n  }\n\n  return \"polyline\" === t.type ? new o({\n    paths: a,\n    spatialReference: i\n  }) : new c({\n    rings: a,\n    spatialReference: i\n  });\n}\n\nfunction v(e, t, n, i, a) {\n  const r = t[0],\n        o = t[1],\n        c = r * s,\n        l = o * s,\n        h = n * s,\n        {\n    a: f,\n    b: p,\n    f: d\n  } = u(a),\n        m = Math.sin(h),\n        g = Math.cos(h),\n        M = (1 - d) * Math.tan(l),\n        w = 1 / Math.sqrt(1 + M * M),\n        y = M * w,\n        R = Math.atan2(M, g),\n        v = w * m,\n        z = v * v,\n        b = 1 - z,\n        j = b * (f * f - p * p) / (p * p),\n        q = 1 + j / 16384 * (4096 + j * (j * (320 - 175 * j) - 768)),\n        x = j / 1024 * (256 + j * (j * (74 - 47 * j) - 128));\n  let A,\n      N,\n      S,\n      k,\n      P = i / (p * q),\n      F = 2 * Math.PI;\n\n  for (; Math.abs(P - F) > 1e-12;) S = Math.cos(2 * R + P), A = Math.sin(P), N = Math.cos(P), k = x * A * (S + x / 4 * (N * (2 * S * S - 1) - x / 6 * S * (4 * A * A - 3) * (4 * S * S - 3))), F = P, P = i / (p * q) + k;\n\n  const U = y * A - w * N * g,\n        C = Math.atan2(y * N + w * A * g, (1 - d) * Math.sqrt(z + U * U)),\n        E = Math.atan2(A * m, w * N - y * A * g),\n        G = d / 16 * b * (4 + d * (4 - 3 * b)),\n        I = C / s,\n        O = (c + (E - (1 - G) * d * v * (P + G * A * (S + G * N * (2 * S * S - 1))))) / s;\n  return e[0] = O, e[1] = I, e;\n}\n\nfunction z(e, t, n, i) {\n  const a = t[0] * s,\n        r = t[1] * s,\n        o = n[0] * s,\n        c = n[1] * s,\n        {\n    a: l,\n    b: h,\n    f,\n    radius: p\n  } = u(i),\n        d = o - a,\n        m = Math.atan((1 - f) * Math.tan(r)),\n        g = Math.atan((1 - f) * Math.tan(c)),\n        M = Math.sin(m),\n        w = Math.cos(m),\n        y = Math.sin(g),\n        R = Math.cos(g);\n  let v,\n      z,\n      b,\n      j,\n      q,\n      x,\n      A,\n      N,\n      S,\n      k,\n      P = 1e3,\n      F = d;\n\n  do {\n    if (A = Math.sin(F), N = Math.cos(F), b = Math.sqrt(R * A * (R * A) + (w * y - M * R * N) * (w * y - M * R * N)), 0 === b) return e.distance = 0, e.azimuth = void 0, e.reverseAzimuth = void 0, e;\n    q = M * y + w * R * N, x = Math.atan2(b, q), S = w * R * A / b, z = 1 - S * S, j = q - 2 * M * y / z, isNaN(j) && (j = 0), k = f / 16 * z * (4 + f * (4 - 3 * z)), v = F, F = d + (1 - k) * f * S * (x + k * b * (j + k * q * (2 * j * j - 1)));\n  } while (Math.abs(F - v) > 1e-12 && --P > 0);\n\n  if (0 === P) {\n    const t = p,\n          n = Math.acos(Math.sin(r) * Math.sin(c) + Math.cos(r) * Math.cos(c) * Math.cos(o - a)) * t,\n          i = o - a,\n          l = Math.sin(i) * Math.cos(c),\n          h = Math.cos(r) * Math.sin(c) - Math.sin(r) * Math.cos(c) * Math.cos(i),\n          f = Math.atan2(l, h);\n    return e.azimuth = f / s, e.distance = n, e.reverseAzimuth = void 0, e;\n  }\n\n  const U = z * (l * l - h * h) / (h * h),\n        C = U / 1024 * (256 + U * (U * (74 - 47 * U) - 128)),\n        E = h * (1 + U / 16384 * (4096 + U * (U * (320 - 175 * U) - 768))) * (x - C * b * (j + C / 4 * (q * (2 * j * j - 1) - C / 6 * j * (4 * b * b - 3) * (4 * j * j - 3)))),\n        G = Math.atan2(R * Math.sin(F), w * y - M * R * Math.cos(F)),\n        I = Math.atan2(w * Math.sin(F), w * y * Math.cos(F) - M * R);\n  return e.azimuth = G / s, e.distance = E, e.reverseAzimuth = I / s, e;\n}\n\nfunction b(n, i, s = \"meters\") {\n  if (!n || !i) throw new e(\"geodesic-distance:missing-parameters\", \"one or both input parameters are missing\");\n  if (!n.spatialReference || !i.spatialReference) throw new e(\"geodesic-distance:invalid-parameters\", \"one or both input points do not have a spatial reference\");\n  if (!r(n.spatialReference, i.spatialReference)) throw new e(\"geodesic-distance:invalid-parameters\", \"spatial references of input parameters do not match\");\n  const {\n    spatialReference: a\n  } = n;\n  if (!M(a)) throw new e(\"geodesic-distance:not-supported\", \"input geometry spatial reference is not supported\");\n  if (n.x === i.x && n.y === i.y) return {\n    distance: 0,\n    azimuth: 0,\n    reverseAzimuth: 0\n  };\n  const o = {\n    distance: null\n  };\n  return z(o, [n.x, n.y], [i.x, i.y], a), o.distance = t(o.distance, \"meters\", s), o.azimuth = m(o.azimuth), o.reverseAzimuth = m(o.reverseAzimuth), o;\n}\n\nfunction j(t, n, i) {\n  if (!t || null == n || null == i) throw new e(\"point-from-distance:missing-parameters\", \"one or more input parameters are missing or undefined\");\n  if (i < 0 || i > 360) throw new e(\"point-from-distance:-of-bounds\", \"azimuth is restricted to angles between, and including, 0° to 360° degrees\");\n  if (!t.spatialReference) throw new e(\"point-from-distance:missing-spatial-reference\", \"the input point must have a spatial reference\");\n  const {\n    spatialReference: s\n  } = t;\n  if (!M(s)) throw new e(\"geodesic-distance:not-supported\", \"input geometry spatial reference is not supported\");\n  const a = [0, 0];\n  return v(a, [t.x, t.y], i, n, s), new l({\n    x: a[0],\n    y: a[1],\n    spatialReference: s\n  });\n}\n\nexport { v as directGeodeticSolver, w as geodesicAreas, R as geodesicDensify, b as geodesicDistance, y as geodesicLengths, z as inverseGeodeticSolver, M as isSupported, j as pointFromDistance };","map":{"version":3,"names":["e","convertUnit","t","spheroids","n","WKT_SPHEROID_REGEX","i","toRadians","s","isGeographic","a","equals","r","o","c","l","h","f","wkid","wkt","p","exec","length","split","parseFloat","isNaN","u","WGS84","d","Object","assign","b","eSq","radius","densificationRatio","m","g","Math","sqrt","sin","log","M","w","some","spatialReference","push","R","rings","y","type","paths","distance","z","azimuth","v","slice","floor","cos","tan","atan2","j","q","x","A","N","S","k","P","F","PI","abs","U","C","E","G","I","O","atan","reverseAzimuth","acos","directGeodeticSolver","geodesicAreas","geodesicDensify","geodesicDistance","geodesicLengths","inverseGeodeticSolver","isSupported","pointFromDistance"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/geometry/support/geodesicUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import e from\"../../core/Error.js\";import{convertUnit as t}from\"../../core/unitUtils.js\";import{spheroids as n,WKT_SPHEROID_REGEX as i,toRadians as s}from\"./geodesicConstants.js\";import{isGeographic as a,equals as r}from\"./spatialReferenceUtils.js\";import o from\"../Polyline.js\";import c from\"../Polygon.js\";import l from\"../Point.js\";import h from\"../SpatialReference.js\";function f(e){if(!e)return null;if(a(e)&&e.wkid){const t=n[e.wkid];if(t)return t}if(e.wkt){const t=p(e.wkt);if(t)return t}return null}function p(e){const t=i.exec(e);if(!t||2!==t.length)return null;const n=t[1].split(\",\");if(!n||n.length<3)return null;const s=parseFloat(n[1]),a=parseFloat(n[2]);if(isNaN(s)||isNaN(a))return null;return{a:s,f:0===a?0:1/a}}function u(e){const t=f(e||h.WGS84);if(d(t))return t;const n=t.a*(1-t.f);return Object.assign(t,{b:n,eSq:1-(n/t.a)**2,radius:(2*t.a+n)/3,densificationRatio:1e4/((2*t.a+n)/3)})}function d(e){return\"b\"in e&&\"eSq\"in e&&\"radius\"in e}function m(e){return e<0?e+360:e}function g(e,t,n){const{a:i,eSq:a}=u(n),r=Math.sqrt(a),o=Math.sin(t[1]*s),c=i*t[0]*s;let l;if(a>0){l=i*((1-a)*(o/(1-a*(o*o))-1/(2*r)*Math.log((1-r*o)/(1+r*o))))*.5}else l=i*o;return e[0]=c,e[1]=l,e}function M(e){return null!==f(e)}function w(n,i=\"square-meters\"){if(n.some((e=>!M(e.spatialReference))))throw new e(\"geodesic-areas:invalid-spatial-reference\",\"the input geometries spatial reference is not supported\");const s=[];for(let e=0;e<n.length;e++){const t=n[e],i=t.spatialReference,{radius:a,densificationRatio:r}=u(i),o=a*r;s.push(R(t,o))}const a=[],r=[0,0],o=[0,0];for(let e=0;e<s.length;e++){const{rings:n,spatialReference:c}=s[e];let l=0;for(let e=0;e<n.length;e++){const t=n[e];g(r,t[0],c),g(o,t[t.length-1],c);let i=o[0]*r[1]-r[0]*o[1];for(let e=0;e<t.length-1;e++)g(r,t[e+1],c),g(o,t[e],c),i+=o[0]*r[1]-r[0]*o[1];l+=i}l=t(l,\"square-meters\",i),a.push(l/-2)}return a}function y(n,i=\"meters\"){if(!n)throw new e(\"geodesic-lengths:invalid-geometries\",\"the input geometries type is not supported\");if(n.some((e=>!M(e.spatialReference))))throw new e(\"geodesic-lengths:invalid-spatial-reference\",\"the input geometries spatial reference is not supported\");const s=[];for(let e=0;e<n.length;e++){const a=n[e],{spatialReference:r}=a,o=\"polyline\"===a.type?a.paths:a.rings;let c=0;for(let e=0;e<o.length;e++){const t=o[e];let n=0;for(let e=1;e<t.length;e++){const i=t[e-1][0],s=t[e][0],a=t[e-1][1],o=t[e][1];if(a!==o||i!==s){const e={distance:null};z(e,[i,a],[s,o],r),n+=e.distance}}c+=n}c=t(c,\"meters\",i),s.push(c)}return s}function R(t,n){if(\"polyline\"!==t.type&&\"polygon\"!==t.type)throw new e(\"geodesic-densify:invalid-geometry\",\"the input geometry is neither polyline nor polygon\");const{spatialReference:i}=t;if(!M(i))throw new e(\"geodesic-densify:invalid-spatial-reference\",\"the input geometry spatial reference is not supported\");const s=\"polyline\"===t.type?t.paths:t.rings,a=[],r=[0,0],l={distance:null};for(const e of s){const t=[];a.push(t),t.push([e[0][0],e[0][1]]);let s,o,c=e[0][0],h=e[0][1];for(let a=0;a<e.length-1;a++){if(s=e[a+1][0],o=e[a+1][1],c===s&&h===o)continue;const f=[c,h];z(l,[c,h],[s,o],i);const{azimuth:p,distance:u}=l,d=u/n;if(d>1){for(let e=1;e<=d-1;e++){v(r,f,p,e*n,i),t.push(r.slice(0))}v(r,f,p,(u+Math.floor(d-1)*n)/2,i),t.push(r.slice(0))}v(r,f,p,u,i),t.push(r.slice(0)),c=r[0],h=r[1]}}return\"polyline\"===t.type?new o({paths:a,spatialReference:i}):new c({rings:a,spatialReference:i})}function v(e,t,n,i,a){const r=t[0],o=t[1],c=r*s,l=o*s,h=n*s,{a:f,b:p,f:d}=u(a),m=Math.sin(h),g=Math.cos(h),M=(1-d)*Math.tan(l),w=1/Math.sqrt(1+M*M),y=M*w,R=Math.atan2(M,g),v=w*m,z=v*v,b=1-z,j=b*(f*f-p*p)/(p*p),q=1+j/16384*(4096+j*(j*(320-175*j)-768)),x=j/1024*(256+j*(j*(74-47*j)-128));let A,N,S,k,P=i/(p*q),F=2*Math.PI;for(;Math.abs(P-F)>1e-12;)S=Math.cos(2*R+P),A=Math.sin(P),N=Math.cos(P),k=x*A*(S+x/4*(N*(2*S*S-1)-x/6*S*(4*A*A-3)*(4*S*S-3))),F=P,P=i/(p*q)+k;const U=y*A-w*N*g,C=Math.atan2(y*N+w*A*g,(1-d)*Math.sqrt(z+U*U)),E=Math.atan2(A*m,w*N-y*A*g),G=d/16*b*(4+d*(4-3*b)),I=C/s,O=(c+(E-(1-G)*d*v*(P+G*A*(S+G*N*(2*S*S-1)))))/s;return e[0]=O,e[1]=I,e}function z(e,t,n,i){const a=t[0]*s,r=t[1]*s,o=n[0]*s,c=n[1]*s,{a:l,b:h,f,radius:p}=u(i),d=o-a,m=Math.atan((1-f)*Math.tan(r)),g=Math.atan((1-f)*Math.tan(c)),M=Math.sin(m),w=Math.cos(m),y=Math.sin(g),R=Math.cos(g);let v,z,b,j,q,x,A,N,S,k,P=1e3,F=d;do{if(A=Math.sin(F),N=Math.cos(F),b=Math.sqrt(R*A*(R*A)+(w*y-M*R*N)*(w*y-M*R*N)),0===b)return e.distance=0,e.azimuth=void 0,e.reverseAzimuth=void 0,e;q=M*y+w*R*N,x=Math.atan2(b,q),S=w*R*A/b,z=1-S*S,j=q-2*M*y/z,isNaN(j)&&(j=0),k=f/16*z*(4+f*(4-3*z)),v=F,F=d+(1-k)*f*S*(x+k*b*(j+k*q*(2*j*j-1)))}while(Math.abs(F-v)>1e-12&&--P>0);if(0===P){const t=p,n=Math.acos(Math.sin(r)*Math.sin(c)+Math.cos(r)*Math.cos(c)*Math.cos(o-a))*t,i=o-a,l=Math.sin(i)*Math.cos(c),h=Math.cos(r)*Math.sin(c)-Math.sin(r)*Math.cos(c)*Math.cos(i),f=Math.atan2(l,h);return e.azimuth=f/s,e.distance=n,e.reverseAzimuth=void 0,e}const U=z*(l*l-h*h)/(h*h),C=U/1024*(256+U*(U*(74-47*U)-128)),E=h*(1+U/16384*(4096+U*(U*(320-175*U)-768)))*(x-C*b*(j+C/4*(q*(2*j*j-1)-C/6*j*(4*b*b-3)*(4*j*j-3)))),G=Math.atan2(R*Math.sin(F),w*y-M*R*Math.cos(F)),I=Math.atan2(w*Math.sin(F),w*y*Math.cos(F)-M*R);return e.azimuth=G/s,e.distance=E,e.reverseAzimuth=I/s,e}function b(n,i,s=\"meters\"){if(!n||!i)throw new e(\"geodesic-distance:missing-parameters\",\"one or both input parameters are missing\");if(!n.spatialReference||!i.spatialReference)throw new e(\"geodesic-distance:invalid-parameters\",\"one or both input points do not have a spatial reference\");if(!r(n.spatialReference,i.spatialReference))throw new e(\"geodesic-distance:invalid-parameters\",\"spatial references of input parameters do not match\");const{spatialReference:a}=n;if(!M(a))throw new e(\"geodesic-distance:not-supported\",\"input geometry spatial reference is not supported\");if(n.x===i.x&&n.y===i.y)return{distance:0,azimuth:0,reverseAzimuth:0};const o={distance:null};return z(o,[n.x,n.y],[i.x,i.y],a),o.distance=t(o.distance,\"meters\",s),o.azimuth=m(o.azimuth),o.reverseAzimuth=m(o.reverseAzimuth),o}function j(t,n,i){if(!t||null==n||null==i)throw new e(\"point-from-distance:missing-parameters\",\"one or more input parameters are missing or undefined\");if(i<0||i>360)throw new e(\"point-from-distance:-of-bounds\",\"azimuth is restricted to angles between, and including, 0° to 360° degrees\");if(!t.spatialReference)throw new e(\"point-from-distance:missing-spatial-reference\",\"the input point must have a spatial reference\");const{spatialReference:s}=t;if(!M(s))throw new e(\"geodesic-distance:not-supported\",\"input geometry spatial reference is not supported\");const a=[0,0];return v(a,[t.x,t.y],i,n,s),new l({x:a[0],y:a[1],spatialReference:s})}export{v as directGeodeticSolver,w as geodesicAreas,R as geodesicDensify,b as geodesicDistance,y as geodesicLengths,z as inverseGeodeticSolver,M as isSupported,j as pointFromDistance};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}