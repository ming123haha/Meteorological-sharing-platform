{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport t from \"../core/CircularArray.js\";\nimport { isSome as e, mapOr as s } from \"../core/maybe.js\";\nimport { decodeGeohashXY as i } from \"./geohashUtils.js\";\nimport n from \"../geometry/SpatialReference.js\";\nimport { convertFromPolygon as o, quantizeOptimizedGeometry as a, convertFromPoint as r } from \"../layers/graphics/featureConversionUtils.js\";\nimport l from \"../layers/graphics/OptimizedGeometry.js\";\nimport { project as h } from \"../layers/graphics/data/projectionSupport.js\";\nimport { FeatureSetReaderJSON as c } from \"../views/2d/layers/features/support/FeatureSetReaderJSON.js\";\n\nclass u {\n  constructor(e = [], s, i = 8096) {\n    this.onRelease = t => {}, this._nodes = 0, this._root = new d(this, 0, 0, 0), this._statisticFields = e, this._pool = i ? new t(8096) : null, this._serviceInfo = s;\n  }\n\n  destroy() {\n    this.clear();\n  }\n\n  _acquire(t, s, i) {\n    this._nodes++;\n    let n = null;\n    return e(this._pool) && (n = this._pool.dequeue()), e(n) ? n.realloc(t, s, i) : n = new d(this, t, s, i), n;\n  }\n\n  _release(t) {\n    this.onRelease(t), this._nodes--, e(this._pool) && this._pool.enqueue(t);\n  }\n\n  get count() {\n    return this._root.count;\n  }\n\n  get size() {\n    return this._nodes;\n  }\n\n  get poolSize() {\n    return s(this._pool, 0, t => t.size);\n  }\n\n  get depth() {\n    let t = 0;\n    return this.forEach(e => t = Math.max(t, e.depth)), t;\n  }\n\n  dropLevels(t) {\n    this.forEach(e => {\n      if (e.depth >= t) for (let t = 0; t < e.children.length; t++) {\n        const s = e.children[t];\n        s && this._release(s);\n      }\n    }), this.forEach(e => {\n      if (e.depth >= t) for (let t = 0; t < e.children.length; t++) e.children[t] = null;\n    });\n  }\n\n  clear() {\n    this.forEach(t => this._release(t)), this._root = new d(this, 0, 0, 0);\n  }\n\n  insert(t, e, s = 0) {\n    const i = c.fromOptimizedFeatures([t], this._serviceInfo).getCursor();\n    i.next();\n    const n = i.readGeometry();\n    if (!n) return;\n    const [o, a] = n.coords,\n          r = t.geohashX,\n          l = t.geohashY;\n    this.insertCursor(i, t.displayId, o, a, r, l, e, s);\n  }\n\n  insertCursor(t, e, s, i, n, o, a, r = 0) {\n    let l = this._root,\n        h = 0,\n        c = 0,\n        u = 0;\n\n    for (; null !== l;) {\n      if (l.depth >= r && (l.count += 1, l.xTotal += s, l.yTotal += i, l.xGeohashTotal += n, l.yGeohashTotal += o, l.referenceId = e, this._updateStatisticsCursor(t, l, 1)), h >= a) return void l.add(e);\n\n      const d = Math.ceil((h + 1) / 2),\n            f = Math.floor((h + 1) / 2),\n            x = 1 - h % 2,\n            m = 30 - (3 * d + 2 * f),\n            g = 30 - (2 * d + 3 * f),\n            y = (n & 7 * x + 3 * (1 - x) << m) >> m,\n            p = (o & 3 * x + 7 * (1 - x) << g) >> g,\n            _ = y + p * (8 * x + 4 * (1 - x));\n\n      c = c << 3 * x + 2 * (1 - x) | y, u = u << 2 * x + 3 * (1 - x) | p, null == l.children[_] && (l.children[_] = this._acquire(c, u, h + 1)), h += 1, l = l.children[_];\n    }\n  }\n\n  remove(t, e) {\n    const s = c.fromOptimizedFeatures([t], this._serviceInfo).getCursor();\n    s.next();\n    const i = s.readGeometry();\n    if (!i) return;\n    const [n, o] = i.coords,\n          a = t.geohashX,\n          r = t.geohashY;\n    this.removeCursor(s, n, o, a, r, e);\n  }\n\n  removeCursor(t, e, s, i, n, o) {\n    let a = this._root,\n        r = 0;\n\n    for (; null !== a;) {\n      if (a.count -= 1, a.xTotal -= e, a.yTotal -= s, a.xGeohashTotal -= i, a.yGeohashTotal -= n, this._updateStatisticsCursor(t, a, -1), r >= o) return void a.remove(t.getDisplayId());\n      const l = Math.ceil((r + 1) / 2),\n            h = Math.floor((r + 1) / 2),\n            c = 1 - r % 2,\n            u = 30 - (3 * l + 2 * h),\n            d = 30 - (2 * l + 3 * h),\n            f = ((i & 7 * c + 3 * (1 - c) << u) >> u) + ((n & 3 * c + 7 * (1 - c) << d) >> d) * (8 * c + 4 * (1 - c)),\n            x = a.children[f];\n      1 === x?.count && (this._release(x), a.children[f] = null), r += 1, a = x;\n    }\n  }\n\n  forEach(t) {\n    let e = this._root;\n\n    for (; null !== e;) {\n      const s = this._linkChildren(e) || e.next;\n      t(e), e = s;\n    }\n  }\n\n  find(t, e, s) {\n    return this._root.find(t, e, s, 0, 0, 0);\n  }\n\n  findIf(t) {\n    let e = null;\n    return this.forEach(s => {\n      t(s) && (e = s);\n    }), e;\n  }\n\n  findAllIf(t) {\n    const e = [];\n    return this.forEach(s => {\n      t(s) && e.push(s);\n    }), e;\n  }\n\n  findSingleOccupancyNode(t, e, s, i, n) {\n    let o = this._root;\n\n    for (; null !== o;) {\n      const a = o.depth,\n            r = o.xNode,\n            l = o.yNode,\n            h = 1 - a % 2,\n            c = o.xGeohashTotal / o.count,\n            u = o.yGeohashTotal / o.count;\n      if (1 === o.count && t < c && c <= s && e < u && u <= i) return o;\n\n      if (a >= n) {\n        o = o.next;\n        continue;\n      }\n\n      const d = Math.ceil((a + 1) / 2),\n            f = Math.floor((a + 1) / 2),\n            x = 30 - (3 * d + 2 * f),\n            m = 30 - (2 * d + 3 * f),\n            g = ~((1 << x) - 1),\n            y = ~((1 << m) - 1),\n            p = (t & g) >> x,\n            _ = (e & y) >> m,\n            v = (s & g) >> x,\n            M = (i & y) >> m,\n            T = r << 3 * h + 2 * (1 - h),\n            b = l << 2 * h + 3 * (1 - h),\n            k = T + 8 * h + 4 * (1 - h),\n            N = b + 4 * h + 8 * (1 - h),\n            I = Math.max(T, p),\n            C = Math.max(b, _),\n            G = Math.min(k, v),\n            L = Math.min(N, M);\n\n      let S = null,\n          w = null;\n\n      for (let t = C; t <= L; t++) for (let e = I; e <= G; e++) {\n        const s = e - T + (t - b) * (8 * h + 4 * (1 - h)),\n              i = o.children[s];\n        i && (S || (S = i, S.next = o.next), w && (w.next = i), w = i, i.next = o.next);\n      }\n\n      o = S || o.next;\n    }\n\n    return null;\n  }\n\n  getRegionDisplayIds(t) {\n    let e = this._root;\n    const {\n      bounds: s,\n      geohashBounds: i,\n      level: n\n    } = t,\n          [o, a, r, l] = s,\n          h = [];\n\n    for (; null !== e;) {\n      const t = e.depth,\n            s = e.xNode,\n            c = e.yNode;\n\n      if (t >= n) {\n        const t = e.xTotal / e.count,\n              s = e.yTotal / e.count;\n        t >= o && t <= r && s >= a && s <= l && e.displayIds.forEach(t => h.push(t)), e = e.next;\n        continue;\n      }\n\n      const u = Math.ceil((t + 1) / 2),\n            d = Math.floor((t + 1) / 2),\n            f = 1 - t % 2,\n            x = 30 - (3 * u + 2 * d),\n            m = 30 - (2 * u + 3 * d),\n            g = ~((1 << x) - 1),\n            y = ~((1 << m) - 1),\n            p = (i.xLL & g) >> x,\n            _ = (i.yLL & y) >> m,\n            v = (i.xTR & g) >> x,\n            M = (i.yTR & y) >> m,\n            T = s << 3 * f + 2 * (1 - f),\n            b = c << 2 * f + 3 * (1 - f),\n            k = T + 8 * f + 4 * (1 - f),\n            N = b + 4 * f + 8 * (1 - f),\n            I = Math.max(T, p),\n            C = Math.max(b, _),\n            G = Math.min(k, v),\n            L = Math.min(N, M);\n\n      let S = null,\n          w = null;\n\n      for (let i = C; i <= L; i++) for (let t = I; t <= G; t++) {\n        const s = t - T + (i - b) * (8 * f + 4 * (1 - f)),\n              n = e.children[s];\n        n && (S || (S = n, S.next = e.next), w && (w.next = n), w = n, n.next = e.next);\n      }\n\n      e = S || e.next;\n    }\n\n    return h;\n  }\n\n  getRegionStatistics(t) {\n    let e = this._root,\n        s = 0,\n        i = 0,\n        n = 0;\n    const o = {},\n          {\n      bounds: a,\n      geohashBounds: r,\n      level: l\n    } = t,\n          [h, c, u, d] = a;\n    let f = 0;\n\n    for (; null !== e;) {\n      const t = e.depth,\n            a = e.xNode,\n            x = e.yNode;\n\n      if (t >= l) {\n        const t = e.xTotal / e.count,\n              a = e.yTotal / e.count;\n        t > h && t <= u && a > c && a <= d && (s += e.count, i += e.xTotal, n += e.yTotal, 1 === e.count && (f = e.referenceId), this._aggregateStatistics(o, e.statistics)), e = e.next;\n        continue;\n      }\n\n      const m = Math.ceil((t + 1) / 2),\n            g = Math.floor((t + 1) / 2),\n            y = 1 - t % 2,\n            p = 30 - (3 * m + 2 * g),\n            _ = 30 - (2 * m + 3 * g),\n            v = ~((1 << p) - 1),\n            M = ~((1 << _) - 1),\n            T = (r.xLL & v) >> p,\n            b = (r.yLL & M) >> _,\n            k = (r.xTR & v) >> p,\n            N = (r.yTR & M) >> _,\n            I = a << 3 * y + 2 * (1 - y),\n            C = x << 2 * y + 3 * (1 - y),\n            G = I + 8 * y + 4 * (1 - y),\n            L = C + 4 * y + 8 * (1 - y),\n            S = Math.max(I, T),\n            w = Math.max(C, b),\n            R = Math.min(G, k),\n            F = Math.min(L, N);\n\n      let j = null,\n          z = null;\n\n      for (let r = w; r <= F; r++) for (let t = S; t <= R; t++) {\n        const a = t - I + (r - C) * (8 * y + 4 * (1 - y)),\n              l = e.children[a];\n\n        if (l) {\n          if (r !== w && r !== F && t !== S && t !== R) {\n            const t = l.xTotal / l.count,\n                  e = l.yTotal / l.count;\n            t > h && t <= u && e > c && e <= d && (s += l.count, i += l.xTotal, n += l.yTotal, 1 === l.count && (f = l.referenceId), this._aggregateStatistics(o, l.statistics));\n            continue;\n          }\n\n          j || (j = l, j.next = e.next), z && (z.next = l), z = l, l.next = e.next;\n        }\n      }\n\n      e = j || e.next;\n    }\n\n    return {\n      count: s,\n      attributes: this.normalizeStatistics(o, s),\n      xTotal: i,\n      yTotal: n,\n      referenceId: f\n    };\n  }\n\n  getBins(t) {\n    const e = [],\n          {\n      geohashBounds: s,\n      level: i\n    } = t;\n    let n = this._root;\n\n    for (; null !== n;) {\n      const t = n.depth,\n            o = n.xNode,\n            a = n.yNode;\n\n      if (t >= i) {\n        e.push(n), n = n.next;\n        continue;\n      }\n\n      const r = Math.ceil((t + 1) / 2),\n            l = Math.floor((t + 1) / 2),\n            h = 1 - t % 2,\n            c = 30 - (3 * r + 2 * l),\n            u = 30 - (2 * r + 3 * l),\n            d = ~((1 << c) - 1),\n            f = ~((1 << u) - 1),\n            x = (s.xLL & d) >> c,\n            m = (s.yLL & f) >> u,\n            g = (s.xTR & d) >> c,\n            y = (s.yTR & f) >> u,\n            p = o << 3 * h + 2 * (1 - h),\n            _ = a << 2 * h + 3 * (1 - h),\n            v = p + 8 * h + 4 * (1 - h),\n            M = _ + 4 * h + 8 * (1 - h),\n            T = Math.max(p, x),\n            b = Math.max(_, m),\n            k = Math.min(v, g),\n            N = Math.min(M, y);\n\n      let I = null,\n          C = null;\n\n      for (let e = b; e <= N; e++) for (let t = T; t <= k; t++) {\n        const s = t - p + (e - _) * (8 * h + 4 * (1 - h)),\n              i = n.children[s];\n        i && (I || (I = i, I.next = n.next), C && (C.next = i), C = i, i.next = n.next);\n      }\n\n      n = I || n.next;\n    }\n\n    return e;\n  }\n\n  _linkChildren(t) {\n    let e = null,\n        s = null;\n\n    for (let i = 0; i <= t.children.length; i++) {\n      const n = t.children[i];\n      n && (e || (e = n, e.next = t.next), s && (s.next = n), s = n, n.next = t.next);\n    }\n\n    return e;\n  }\n\n  _updateStatisticsCursor(t, e, s) {\n    for (const i of this._statisticFields) {\n      const n = i.name,\n            o = i.inField ? t.readAttribute(i.inField) : t.getComputedNumericAtIndex(i.inFieldIndex);\n\n      switch (i.statisticType) {\n        case \"min\":\n          {\n            if (isNaN(o)) break;\n\n            if (!e.statistics[n]) {\n              e.statistics[n] = {\n                value: o\n              };\n              break;\n            }\n\n            const t = e.statistics[n].value;\n            e.statistics[n].value = Math.min(t, o);\n            break;\n          }\n\n        case \"max\":\n          {\n            if (isNaN(o)) break;\n\n            if (!e.statistics[n]) {\n              e.statistics[n] = {\n                value: o\n              };\n              break;\n            }\n\n            const t = e.statistics[n].value;\n            e.statistics[n].value = Math.max(t, o);\n            break;\n          }\n\n        case \"count\":\n          break;\n\n        case \"sum\":\n        case \"avg\":\n          {\n            e.statistics[n] || (e.statistics[n] = {\n              value: 0,\n              nanCount: 0\n            });\n            const t = e.statistics[n].value,\n                  i = e.statistics[n].nanCount ?? 0;\n            null == o || isNaN(o) ? e.statistics[n].nanCount = i + s : e.statistics[n].value = t + s * o;\n            break;\n          }\n\n        case \"avg_angle\":\n          {\n            e.statistics[n] || (e.statistics[n] = {\n              x: 0,\n              y: 0,\n              nanCount: 0\n            });\n            const t = e.statistics[n].x,\n                  i = e.statistics[n].y,\n                  a = e.statistics[n].nanCount ?? 0,\n                  r = Math.PI / 180;\n            null == o || isNaN(o) ? e.statistics[n].nanCount = a + s : (e.statistics[n].x = t + s * Math.cos(o * r), e.statistics[n].y = i + s * Math.sin(o * r));\n            break;\n          }\n\n        case \"mode\":\n          {\n            e.statistics[n] || (e.statistics[n] = {});\n            const t = e.statistics[n][o] || 0;\n            e.statistics[n][o] = t + s;\n            break;\n          }\n      }\n    }\n  }\n\n  _aggregateStatistics(t, e) {\n    for (const s of this._statisticFields) {\n      const i = s.name;\n\n      switch (s.statisticType) {\n        case \"min\":\n          {\n            if (!t[i]) {\n              t[i] = {\n                value: e[i].value\n              };\n              break;\n            }\n\n            const s = t[i].value;\n            t[i].value = Math.min(s, e[i].value);\n            break;\n          }\n\n        case \"max\":\n          {\n            if (!t[i]) {\n              t[i] = {\n                value: e[i].value\n              };\n              break;\n            }\n\n            const s = t[i].value;\n            t[i].value = Math.max(s, e[i].value);\n            break;\n          }\n\n        case \"count\":\n          break;\n\n        case \"sum\":\n        case \"avg\":\n        case \"avg_angle\":\n        case \"mode\":\n          t[i] || (t[i] = {});\n\n          for (const s in e[i]) {\n            const n = t[i][s] || 0;\n            t[i][s] = n + e[i][s];\n          }\n\n      }\n    }\n  }\n\n  normalizeStatistics(t, e) {\n    const s = {};\n\n    for (const i of this._statisticFields) {\n      const n = i.name;\n\n      switch (i.statisticType) {\n        case \"min\":\n        case \"max\":\n          {\n            const i = t[n];\n            if (!e || !i) break;\n            s[n] = i.value;\n            break;\n          }\n\n        case \"count\":\n          if (!e) break;\n          s[n] = e;\n          break;\n\n        case \"sum\":\n          {\n            if (!e) break;\n            const {\n              value: i,\n              nanCount: o\n            } = t[n];\n            if (!(e - o)) break;\n            s[n] = i;\n            break;\n          }\n\n        case \"avg\":\n          {\n            if (!e) break;\n            const {\n              value: i,\n              nanCount: o\n            } = t[n];\n            if (!(e - o)) break;\n            s[n] = i / (e - o);\n            break;\n          }\n\n        case \"avg_angle\":\n          {\n            if (!e) break;\n            const {\n              x: i,\n              y: o,\n              nanCount: a\n            } = t[n];\n            if (!(e - a)) break;\n            const r = i / (e - a),\n                  l = o / (e - a),\n                  h = 180 / Math.PI,\n                  c = Math.atan2(l, r) * h;\n            s[n] = c;\n            break;\n          }\n\n        case \"mode\":\n          {\n            const e = t[n];\n            let i = 0,\n                o = 0,\n                a = null;\n\n            for (const t in e) {\n              const s = e[t];\n              s === i ? o += 1 : s > i && (i = s, o = 1, a = t);\n            }\n\n            s[n] = \"null\" === a || o > 1 ? null : a;\n            break;\n          }\n      }\n    }\n\n    return s;\n  }\n\n}\n\nclass d {\n  constructor(t, e, s, i) {\n    this.count = 0, this.xTotal = 0, this.yTotal = 0, this.statistics = {}, this.displayId = 0, this.referenceId = 0, this.displayIds = new Set(), this.next = null, this.depth = 0, this.xNode = 0, this.yNode = 0, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this._tree = t, this.children = new Array(32);\n\n    for (let n = 0; n < this.children.length; n++) this.children[n] = null;\n\n    this.xNode = e, this.yNode = s, this.depth = i;\n  }\n\n  realloc(t, e, s) {\n    for (let i = 0; i < this.children.length; i++) this.children[i] = null;\n\n    return this.xNode = t, this.yNode = e, this.depth = s, this.next = null, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this.displayId = 0, this.referenceId = 0, this.xTotal = 0, this.yTotal = 0, this.count = 0, this.statistics = {}, this.displayIds.clear(), this;\n  }\n\n  get id() {\n    return `${this.xNode}.${this.yNode}`;\n  }\n\n  add(t) {\n    this.displayIds.add(t);\n  }\n\n  remove(t) {\n    this.displayIds.delete(t);\n  }\n\n  getAttributes() {\n    const t = this._tree.normalizeStatistics(this.statistics, this.count);\n\n    return t.referenceId = null, t.aggregateId = this.id, t.aggregateCount = this.count, t;\n  }\n\n  getGeometry(t, s) {\n    const i = this.getLngLatBounds(),\n          [r, c, u, d] = i,\n          f = h({\n      rings: [[[r, c], [r, d], [u, d], [u, c], [r, c]]]\n    }, n.WGS84, t),\n          x = o(new l(), f, !1, !1);\n\n    if (e(s)) {\n      return a(new l(), x, !1, !1, \"esriGeometryPolygon\", s, !1, !1);\n    }\n\n    return x;\n  }\n\n  getGeometryCentroid(t, s) {\n    const i = this.getLngLatBounds(),\n          [o, c, u, d] = i,\n          f = h({\n      x: (o + u) / 2,\n      y: (c + d) / 2\n    }, n.WGS84, t),\n          x = r(new l(), f);\n\n    if (e(s)) {\n      return a(new l(), x, !1, !1, \"esriGeometryPoint\", s, !1, !1);\n    }\n\n    return x;\n  }\n\n  getLngLatBounds() {\n    const t = this.depth,\n          e = Math.ceil(t / 2),\n          s = Math.floor(t / 2),\n          n = 30 - (3 * e + 2 * s),\n          o = 30 - (2 * e + 3 * s),\n          a = this.xNode << n,\n          r = this.yNode << o;\n    return i({\n      geohashX: a,\n      geohashY: r\n    }, this.depth);\n  }\n\n  find(t, e, s, i, n, o) {\n    if (i >= s) return this;\n    const a = 1 - i % 2,\n          r = 3 * a + 2 * (1 - a),\n          l = 2 * a + 3 * (1 - a),\n          h = 30 - n - r,\n          c = 30 - o - l,\n          u = ((t & 7 * a + 3 * (1 - a) << h) >> h) + ((e & 3 * a + 7 * (1 - a) << c) >> c) * (8 * a + 4 * (1 - a)),\n          d = this.children[u];\n    return null == d ? null : d.find(t, e, s, i + 1, n + r, o + l);\n  }\n\n}\n\nexport { d as GeohashNode, u as GeohashTree };","map":{"version":3,"names":["t","isSome","e","mapOr","s","decodeGeohashXY","i","n","convertFromPolygon","o","quantizeOptimizedGeometry","a","convertFromPoint","r","l","project","h","FeatureSetReaderJSON","c","u","constructor","onRelease","_nodes","_root","d","_statisticFields","_pool","_serviceInfo","destroy","clear","_acquire","dequeue","realloc","_release","enqueue","count","size","poolSize","depth","forEach","Math","max","dropLevels","children","length","insert","fromOptimizedFeatures","getCursor","next","readGeometry","coords","geohashX","geohashY","insertCursor","displayId","xTotal","yTotal","xGeohashTotal","yGeohashTotal","referenceId","_updateStatisticsCursor","add","ceil","f","floor","x","m","g","y","p","_","remove","removeCursor","getDisplayId","_linkChildren","find","findIf","findAllIf","push","findSingleOccupancyNode","xNode","yNode","v","M","T","b","k","N","I","C","G","min","L","S","w","getRegionDisplayIds","bounds","geohashBounds","level","displayIds","xLL","yLL","xTR","yTR","getRegionStatistics","_aggregateStatistics","statistics","R","F","j","z","attributes","normalizeStatistics","getBins","name","inField","readAttribute","getComputedNumericAtIndex","inFieldIndex","statisticType","isNaN","value","nanCount","PI","cos","sin","atan2","Set","_tree","Array","id","delete","getAttributes","aggregateId","aggregateCount","getGeometry","getLngLatBounds","rings","WGS84","getGeometryCentroid","GeohashNode","GeohashTree"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/geohash/GeohashTree.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport t from\"../core/CircularArray.js\";import{isSome as e,mapOr as s}from\"../core/maybe.js\";import{decodeGeohashXY as i}from\"./geohashUtils.js\";import n from\"../geometry/SpatialReference.js\";import{convertFromPolygon as o,quantizeOptimizedGeometry as a,convertFromPoint as r}from\"../layers/graphics/featureConversionUtils.js\";import l from\"../layers/graphics/OptimizedGeometry.js\";import{project as h}from\"../layers/graphics/data/projectionSupport.js\";import{FeatureSetReaderJSON as c}from\"../views/2d/layers/features/support/FeatureSetReaderJSON.js\";class u{constructor(e=[],s,i=8096){this.onRelease=t=>{},this._nodes=0,this._root=new d(this,0,0,0),this._statisticFields=e,this._pool=i?new t(8096):null,this._serviceInfo=s}destroy(){this.clear()}_acquire(t,s,i){this._nodes++;let n=null;return e(this._pool)&&(n=this._pool.dequeue()),e(n)?n.realloc(t,s,i):n=new d(this,t,s,i),n}_release(t){this.onRelease(t),this._nodes--,e(this._pool)&&this._pool.enqueue(t)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return s(this._pool,0,(t=>t.size))}get depth(){let t=0;return this.forEach((e=>t=Math.max(t,e.depth))),t}dropLevels(t){this.forEach((e=>{if(e.depth>=t)for(let t=0;t<e.children.length;t++){const s=e.children[t];s&&this._release(s)}})),this.forEach((e=>{if(e.depth>=t)for(let t=0;t<e.children.length;t++)e.children[t]=null}))}clear(){this.forEach((t=>this._release(t))),this._root=new d(this,0,0,0)}insert(t,e,s=0){const i=c.fromOptimizedFeatures([t],this._serviceInfo).getCursor();i.next();const n=i.readGeometry();if(!n)return;const[o,a]=n.coords,r=t.geohashX,l=t.geohashY;this.insertCursor(i,t.displayId,o,a,r,l,e,s)}insertCursor(t,e,s,i,n,o,a,r=0){let l=this._root,h=0,c=0,u=0;for(;null!==l;){if(l.depth>=r&&(l.count+=1,l.xTotal+=s,l.yTotal+=i,l.xGeohashTotal+=n,l.yGeohashTotal+=o,l.referenceId=e,this._updateStatisticsCursor(t,l,1)),h>=a)return void l.add(e);const d=Math.ceil((h+1)/2),f=Math.floor((h+1)/2),x=1-h%2,m=30-(3*d+2*f),g=30-(2*d+3*f),y=(n&7*x+3*(1-x)<<m)>>m,p=(o&3*x+7*(1-x)<<g)>>g,_=y+p*(8*x+4*(1-x));c=c<<3*x+2*(1-x)|y,u=u<<2*x+3*(1-x)|p,null==l.children[_]&&(l.children[_]=this._acquire(c,u,h+1)),h+=1,l=l.children[_]}}remove(t,e){const s=c.fromOptimizedFeatures([t],this._serviceInfo).getCursor();s.next();const i=s.readGeometry();if(!i)return;const[n,o]=i.coords,a=t.geohashX,r=t.geohashY;this.removeCursor(s,n,o,a,r,e)}removeCursor(t,e,s,i,n,o){let a=this._root,r=0;for(;null!==a;){if(a.count-=1,a.xTotal-=e,a.yTotal-=s,a.xGeohashTotal-=i,a.yGeohashTotal-=n,this._updateStatisticsCursor(t,a,-1),r>=o)return void a.remove(t.getDisplayId());const l=Math.ceil((r+1)/2),h=Math.floor((r+1)/2),c=1-r%2,u=30-(3*l+2*h),d=30-(2*l+3*h),f=((i&7*c+3*(1-c)<<u)>>u)+((n&3*c+7*(1-c)<<d)>>d)*(8*c+4*(1-c)),x=a.children[f];1===x?.count&&(this._release(x),a.children[f]=null),r+=1,a=x}}forEach(t){let e=this._root;for(;null!==e;){const s=this._linkChildren(e)||e.next;t(e),e=s}}find(t,e,s){return this._root.find(t,e,s,0,0,0)}findIf(t){let e=null;return this.forEach((s=>{t(s)&&(e=s)})),e}findAllIf(t){const e=[];return this.forEach((s=>{t(s)&&e.push(s)})),e}findSingleOccupancyNode(t,e,s,i,n){let o=this._root;for(;null!==o;){const a=o.depth,r=o.xNode,l=o.yNode,h=1-a%2,c=o.xGeohashTotal/o.count,u=o.yGeohashTotal/o.count;if(1===o.count&&t<c&&c<=s&&e<u&&u<=i)return o;if(a>=n){o=o.next;continue}const d=Math.ceil((a+1)/2),f=Math.floor((a+1)/2),x=30-(3*d+2*f),m=30-(2*d+3*f),g=~((1<<x)-1),y=~((1<<m)-1),p=(t&g)>>x,_=(e&y)>>m,v=(s&g)>>x,M=(i&y)>>m,T=r<<3*h+2*(1-h),b=l<<2*h+3*(1-h),k=T+8*h+4*(1-h),N=b+4*h+8*(1-h),I=Math.max(T,p),C=Math.max(b,_),G=Math.min(k,v),L=Math.min(N,M);let S=null,w=null;for(let t=C;t<=L;t++)for(let e=I;e<=G;e++){const s=e-T+(t-b)*(8*h+4*(1-h)),i=o.children[s];i&&(S||(S=i,S.next=o.next),w&&(w.next=i),w=i,i.next=o.next)}o=S||o.next}return null}getRegionDisplayIds(t){let e=this._root;const{bounds:s,geohashBounds:i,level:n}=t,[o,a,r,l]=s,h=[];for(;null!==e;){const t=e.depth,s=e.xNode,c=e.yNode;if(t>=n){const t=e.xTotal/e.count,s=e.yTotal/e.count;t>=o&&t<=r&&s>=a&&s<=l&&e.displayIds.forEach((t=>h.push(t))),e=e.next;continue}const u=Math.ceil((t+1)/2),d=Math.floor((t+1)/2),f=1-t%2,x=30-(3*u+2*d),m=30-(2*u+3*d),g=~((1<<x)-1),y=~((1<<m)-1),p=(i.xLL&g)>>x,_=(i.yLL&y)>>m,v=(i.xTR&g)>>x,M=(i.yTR&y)>>m,T=s<<3*f+2*(1-f),b=c<<2*f+3*(1-f),k=T+8*f+4*(1-f),N=b+4*f+8*(1-f),I=Math.max(T,p),C=Math.max(b,_),G=Math.min(k,v),L=Math.min(N,M);let S=null,w=null;for(let i=C;i<=L;i++)for(let t=I;t<=G;t++){const s=t-T+(i-b)*(8*f+4*(1-f)),n=e.children[s];n&&(S||(S=n,S.next=e.next),w&&(w.next=n),w=n,n.next=e.next)}e=S||e.next}return h}getRegionStatistics(t){let e=this._root,s=0,i=0,n=0;const o={},{bounds:a,geohashBounds:r,level:l}=t,[h,c,u,d]=a;let f=0;for(;null!==e;){const t=e.depth,a=e.xNode,x=e.yNode;if(t>=l){const t=e.xTotal/e.count,a=e.yTotal/e.count;t>h&&t<=u&&a>c&&a<=d&&(s+=e.count,i+=e.xTotal,n+=e.yTotal,1===e.count&&(f=e.referenceId),this._aggregateStatistics(o,e.statistics)),e=e.next;continue}const m=Math.ceil((t+1)/2),g=Math.floor((t+1)/2),y=1-t%2,p=30-(3*m+2*g),_=30-(2*m+3*g),v=~((1<<p)-1),M=~((1<<_)-1),T=(r.xLL&v)>>p,b=(r.yLL&M)>>_,k=(r.xTR&v)>>p,N=(r.yTR&M)>>_,I=a<<3*y+2*(1-y),C=x<<2*y+3*(1-y),G=I+8*y+4*(1-y),L=C+4*y+8*(1-y),S=Math.max(I,T),w=Math.max(C,b),R=Math.min(G,k),F=Math.min(L,N);let j=null,z=null;for(let r=w;r<=F;r++)for(let t=S;t<=R;t++){const a=t-I+(r-C)*(8*y+4*(1-y)),l=e.children[a];if(l){if(r!==w&&r!==F&&t!==S&&t!==R){const t=l.xTotal/l.count,e=l.yTotal/l.count;t>h&&t<=u&&e>c&&e<=d&&(s+=l.count,i+=l.xTotal,n+=l.yTotal,1===l.count&&(f=l.referenceId),this._aggregateStatistics(o,l.statistics));continue}j||(j=l,j.next=e.next),z&&(z.next=l),z=l,l.next=e.next}}e=j||e.next}return{count:s,attributes:this.normalizeStatistics(o,s),xTotal:i,yTotal:n,referenceId:f}}getBins(t){const e=[],{geohashBounds:s,level:i}=t;let n=this._root;for(;null!==n;){const t=n.depth,o=n.xNode,a=n.yNode;if(t>=i){e.push(n),n=n.next;continue}const r=Math.ceil((t+1)/2),l=Math.floor((t+1)/2),h=1-t%2,c=30-(3*r+2*l),u=30-(2*r+3*l),d=~((1<<c)-1),f=~((1<<u)-1),x=(s.xLL&d)>>c,m=(s.yLL&f)>>u,g=(s.xTR&d)>>c,y=(s.yTR&f)>>u,p=o<<3*h+2*(1-h),_=a<<2*h+3*(1-h),v=p+8*h+4*(1-h),M=_+4*h+8*(1-h),T=Math.max(p,x),b=Math.max(_,m),k=Math.min(v,g),N=Math.min(M,y);let I=null,C=null;for(let e=b;e<=N;e++)for(let t=T;t<=k;t++){const s=t-p+(e-_)*(8*h+4*(1-h)),i=n.children[s];i&&(I||(I=i,I.next=n.next),C&&(C.next=i),C=i,i.next=n.next)}n=I||n.next}return e}_linkChildren(t){let e=null,s=null;for(let i=0;i<=t.children.length;i++){const n=t.children[i];n&&(e||(e=n,e.next=t.next),s&&(s.next=n),s=n,n.next=t.next)}return e}_updateStatisticsCursor(t,e,s){for(const i of this._statisticFields){const n=i.name,o=i.inField?t.readAttribute(i.inField):t.getComputedNumericAtIndex(i.inFieldIndex);switch(i.statisticType){case\"min\":{if(isNaN(o))break;if(!e.statistics[n]){e.statistics[n]={value:o};break}const t=e.statistics[n].value;e.statistics[n].value=Math.min(t,o);break}case\"max\":{if(isNaN(o))break;if(!e.statistics[n]){e.statistics[n]={value:o};break}const t=e.statistics[n].value;e.statistics[n].value=Math.max(t,o);break}case\"count\":break;case\"sum\":case\"avg\":{e.statistics[n]||(e.statistics[n]={value:0,nanCount:0});const t=e.statistics[n].value,i=e.statistics[n].nanCount??0;null==o||isNaN(o)?e.statistics[n].nanCount=i+s:e.statistics[n].value=t+s*o;break}case\"avg_angle\":{e.statistics[n]||(e.statistics[n]={x:0,y:0,nanCount:0});const t=e.statistics[n].x,i=e.statistics[n].y,a=e.statistics[n].nanCount??0,r=Math.PI/180;null==o||isNaN(o)?e.statistics[n].nanCount=a+s:(e.statistics[n].x=t+s*Math.cos(o*r),e.statistics[n].y=i+s*Math.sin(o*r));break}case\"mode\":{e.statistics[n]||(e.statistics[n]={});const t=e.statistics[n][o]||0;e.statistics[n][o]=t+s;break}}}}_aggregateStatistics(t,e){for(const s of this._statisticFields){const i=s.name;switch(s.statisticType){case\"min\":{if(!t[i]){t[i]={value:e[i].value};break}const s=t[i].value;t[i].value=Math.min(s,e[i].value);break}case\"max\":{if(!t[i]){t[i]={value:e[i].value};break}const s=t[i].value;t[i].value=Math.max(s,e[i].value);break}case\"count\":break;case\"sum\":case\"avg\":case\"avg_angle\":case\"mode\":t[i]||(t[i]={});for(const s in e[i]){const n=t[i][s]||0;t[i][s]=n+e[i][s]}}}}normalizeStatistics(t,e){const s={};for(const i of this._statisticFields){const n=i.name;switch(i.statisticType){case\"min\":case\"max\":{const i=t[n];if(!e||!i)break;s[n]=i.value;break}case\"count\":if(!e)break;s[n]=e;break;case\"sum\":{if(!e)break;const{value:i,nanCount:o}=t[n];if(!(e-o))break;s[n]=i;break}case\"avg\":{if(!e)break;const{value:i,nanCount:o}=t[n];if(!(e-o))break;s[n]=i/(e-o);break}case\"avg_angle\":{if(!e)break;const{x:i,y:o,nanCount:a}=t[n];if(!(e-a))break;const r=i/(e-a),l=o/(e-a),h=180/Math.PI,c=Math.atan2(l,r)*h;s[n]=c;break}case\"mode\":{const e=t[n];let i=0,o=0,a=null;for(const t in e){const s=e[t];s===i?o+=1:s>i&&(i=s,o=1,a=t)}s[n]=\"null\"===a||o>1?null:a;break}}}return s}}class d{constructor(t,e,s,i){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.referenceId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this._tree=t,this.children=new Array(32);for(let n=0;n<this.children.length;n++)this.children[n]=null;this.xNode=e,this.yNode=s,this.depth=i}realloc(t,e,s){for(let i=0;i<this.children.length;i++)this.children[i]=null;return this.xNode=t,this.yNode=e,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.displayId=0,this.referenceId=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}get id(){return`${this.xNode}.${this.yNode}`}add(t){this.displayIds.add(t)}remove(t){this.displayIds.delete(t)}getAttributes(){const t=this._tree.normalizeStatistics(this.statistics,this.count);return t.referenceId=null,t.aggregateId=this.id,t.aggregateCount=this.count,t}getGeometry(t,s){const i=this.getLngLatBounds(),[r,c,u,d]=i,f=h({rings:[[[r,c],[r,d],[u,d],[u,c],[r,c]]]},n.WGS84,t),x=o(new l,f,!1,!1);if(e(s)){return a(new l,x,!1,!1,\"esriGeometryPolygon\",s,!1,!1)}return x}getGeometryCentroid(t,s){const i=this.getLngLatBounds(),[o,c,u,d]=i,f=h({x:(o+u)/2,y:(c+d)/2},n.WGS84,t),x=r(new l,f);if(e(s)){return a(new l,x,!1,!1,\"esriGeometryPoint\",s,!1,!1)}return x}getLngLatBounds(){const t=this.depth,e=Math.ceil(t/2),s=Math.floor(t/2),n=30-(3*e+2*s),o=30-(2*e+3*s),a=this.xNode<<n,r=this.yNode<<o;return i({geohashX:a,geohashY:r},this.depth)}find(t,e,s,i,n,o){if(i>=s)return this;const a=1-i%2,r=3*a+2*(1-a),l=2*a+3*(1-a),h=30-n-r,c=30-o-l,u=((t&7*a+3*(1-a)<<h)>>h)+((e&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),d=this.children[u];return null==d?null:d.find(t,e,s,i+1,n+r,o+l)}}export{d as GeohashNode,u as GeohashTree};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}