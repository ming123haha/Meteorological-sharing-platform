{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { FeatureServiceDatabaseType as e } from \"./shared.js\";\nimport { toWhereClauseFromTree as r } from \"./sqlUtils.js\";\nimport { WhereClause as t } from \"../../../core/sql/WhereClause.js\";\n\nfunction a(a) {\n  if (\"function\" === a.parseTree.type) {\n    if (0 === a.parseTree.args.value.length) return {\n      name: a.parseTree.name,\n      expr: null\n    };\n    if (a.parseTree.args.value.length > 1) throw new Error(\"Statistic does not have 1 or 0 Parameters\");\n    const n = t.create(r(a.parseTree.args.value[0], e.Standardised, a.parameters), a.fieldsIndex);\n    return {\n      name: a.parseTree.name,\n      expr: n\n    };\n  }\n\n  return null;\n}\n\nclass n {\n  clone() {\n    const e = new n();\n    return e.field = this.field, e.tofieldname = this.tofieldname, e.typeofstat = this.typeofstat, e.workingexpr = this.workingexpr, e;\n  }\n\n  static parseStatField(e, r, i) {\n    const s = new n();\n    s.field = e;\n    const o = t.create(r, i),\n          l = a(o);\n    if (null === l) throw new Error(\"Invalid Statistic Function\");\n    const p = l.name.toUpperCase().trim();\n\n    if (\"MIN\" === p) {\n      if (s.typeofstat = \"MIN\", s.workingexpr = l.expr, null === o) throw new Error(\"Invalid Statistic Function Parameters\");\n    } else if (\"MAX\" === p) {\n      if (s.typeofstat = \"MAX\", s.workingexpr = l.expr, null === o) throw new Error(\"Invalid Statistic Function Parameters\");\n    } else if (\"COUNT\" === p) s.typeofstat = \"COUNT\", s.workingexpr = l.expr;else if (\"STDEV\" === p) {\n      if (s.typeofstat = \"STDDEV\", s.workingexpr = l.expr, null === o) throw new Error(\"Invalid Statistic Function Parameters\");\n    } else if (\"SUM\" === p) {\n      if (s.typeofstat = \"SUM\", s.workingexpr = l.expr, null === o) throw new Error(\"Invalid Statistic Function Parameters\");\n    } else if (\"MEAN\" === p) {\n      if (s.typeofstat = \"AVG\", s.workingexpr = l.expr, null === o) throw new Error(\"Invalid Statistic Function Parameters\");\n    } else if (\"AVG\" === p) {\n      if (s.typeofstat = \"AVG\", s.workingexpr = l.expr, null === o) throw new Error(\"Invalid Statistic Function Parameters\");\n    } else {\n      if (\"VAR\" !== p) throw new Error(\"Invalid Statistic Function\");\n      if (s.typeofstat = \"VAR\", s.workingexpr = l.expr, null === o) throw new Error(\"Invalid Statistic Function Parameters\");\n    }\n\n    return s;\n  }\n\n  toStatisticsName() {\n    switch (this.typeofstat.toUpperCase()) {\n      case \"MIN\":\n        return \"min\";\n\n      case \"MAX\":\n        return \"max\";\n\n      case \"SUM\":\n        return \"sum\";\n\n      case \"COUNT\":\n      default:\n        return \"count\";\n\n      case \"VAR\":\n        return \"var\";\n\n      case \"STDDEV\":\n        return \"stddev\";\n\n      case \"AVG\":\n        return \"avg\";\n    }\n  }\n\n}\n\nexport { n as default };","map":{"version":3,"names":["FeatureServiceDatabaseType","e","toWhereClauseFromTree","r","WhereClause","t","a","parseTree","type","args","value","length","name","expr","Error","n","create","Standardised","parameters","fieldsIndex","clone","field","tofieldname","typeofstat","workingexpr","parseStatField","i","s","o","l","p","toUpperCase","trim","toStatisticsName","default"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/arcade/featureset/support/StatsField.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{FeatureServiceDatabaseType as e}from\"./shared.js\";import{toWhereClauseFromTree as r}from\"./sqlUtils.js\";import{WhereClause as t}from\"../../../core/sql/WhereClause.js\";function a(a){if(\"function\"===a.parseTree.type){if(0===a.parseTree.args.value.length)return{name:a.parseTree.name,expr:null};if(a.parseTree.args.value.length>1)throw new Error(\"Statistic does not have 1 or 0 Parameters\");const n=t.create(r(a.parseTree.args.value[0],e.Standardised,a.parameters),a.fieldsIndex);return{name:a.parseTree.name,expr:n}}return null}class n{clone(){const e=new n;return e.field=this.field,e.tofieldname=this.tofieldname,e.typeofstat=this.typeofstat,e.workingexpr=this.workingexpr,e}static parseStatField(e,r,i){const s=new n;s.field=e;const o=t.create(r,i),l=a(o);if(null===l)throw new Error(\"Invalid Statistic Function\");const p=l.name.toUpperCase().trim();if(\"MIN\"===p){if(s.typeofstat=\"MIN\",s.workingexpr=l.expr,null===o)throw new Error(\"Invalid Statistic Function Parameters\")}else if(\"MAX\"===p){if(s.typeofstat=\"MAX\",s.workingexpr=l.expr,null===o)throw new Error(\"Invalid Statistic Function Parameters\")}else if(\"COUNT\"===p)s.typeofstat=\"COUNT\",s.workingexpr=l.expr;else if(\"STDEV\"===p){if(s.typeofstat=\"STDDEV\",s.workingexpr=l.expr,null===o)throw new Error(\"Invalid Statistic Function Parameters\")}else if(\"SUM\"===p){if(s.typeofstat=\"SUM\",s.workingexpr=l.expr,null===o)throw new Error(\"Invalid Statistic Function Parameters\")}else if(\"MEAN\"===p){if(s.typeofstat=\"AVG\",s.workingexpr=l.expr,null===o)throw new Error(\"Invalid Statistic Function Parameters\")}else if(\"AVG\"===p){if(s.typeofstat=\"AVG\",s.workingexpr=l.expr,null===o)throw new Error(\"Invalid Statistic Function Parameters\")}else{if(\"VAR\"!==p)throw new Error(\"Invalid Statistic Function\");if(s.typeofstat=\"VAR\",s.workingexpr=l.expr,null===o)throw new Error(\"Invalid Statistic Function Parameters\")}return s}toStatisticsName(){switch(this.typeofstat.toUpperCase()){case\"MIN\":return\"min\";case\"MAX\":return\"max\";case\"SUM\":return\"sum\";case\"COUNT\":default:return\"count\";case\"VAR\":return\"var\";case\"STDDEV\":return\"stddev\";case\"AVG\":return\"avg\"}}}export{n as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}