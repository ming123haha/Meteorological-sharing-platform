{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport { rasterRendererTypes as t } from \"../../rasterRenderers.js\";\nimport r from \"../../request.js\";\nimport i from \"../../core/Logger.js\";\nimport { isNone as s, isSome as n } from \"../../core/maybe.js\";\nimport { aliasOf as o } from \"../../core/accessorSupport/decorators/aliasOf.js\";\nimport \"../../core/arrayUtils.js\";\nimport \"../../core/has.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport { property as a } from \"../../core/accessorSupport/decorators/property.js\";\nimport { subclass as l } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { getInfo as m } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { sanitizeUrl as d } from \"../support/arcgisLayerUrl.js\";\nimport { url as u } from \"../support/commonProperties.js\";\nimport p from \"../support/DimensionalDefinition.js\";\nimport h from \"../support/RasterJobHandler.js\";\nimport c from \"../support/TileInfo.js\";\nimport { getDefaultMultidimensionalDefinition as f, isMultiSliceOrRangeDefinition as y } from \"../support/rasterDatasets/multidimensionalUtils.js\";\nimport { convertVectorFieldData as b } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { normalizeRendererJSON as g, getDefaultInterpolation as I, getDefaultBandCombination as J, createDefaultRenderer as _ } from \"../../renderers/support/rasterRendererHelper.js\";\nimport x from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as v } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport R from \"../../geometry/Extent.js\";\nimport S from \"../../geometry/SpatialReference.js\";\n\nconst j = i.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),\n      H = i => {\n  let H = class extends i {\n    constructor() {\n      super(...arguments), this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this.bandIds = null, this.copyright = null, this.fullExtent = null, this.interpolation = \"nearest\", this.multidimensionalDefinition = null, this.raster = null, this.rasterInfo = null, this.sourceJSON = null, this.spatialReference = null, this.tileInfo = null, this.symbolizer = null;\n    }\n\n    set url(e) {\n      this._set(\"url\", d(e, j));\n    }\n\n    set renderer(e) {\n      this._set(\"renderer\", e), this.updateRenderer();\n    }\n\n    async convertVectorFieldData(e, t) {\n      if (s(e)) return null;\n      const r = this._rasterJobHandler.instance,\n            i = this.rasterInfo.dataType;\n      return r ? r.convertVectorFieldData({\n        pixelBlock: e,\n        dataType: i\n      }, t) : b(e, i);\n    }\n\n    async createFlowMesh(e, t) {\n      const r = this._rasterJobHandler.instance;\n      return r ? r.createFlowMesh(e, t) : v(e.meshType, e.simulationSettings, e.flowData, n(t.signal) ? t.signal : new AbortController().signal);\n    }\n\n    normalizeRasterFetchOptions(e) {\n      const {\n        multidimensionalInfo: t\n      } = this.rasterInfo;\n      if (s(t)) return e;\n      let r = e.multidimensionalDefinition || this.multidimensionalDefinition;\n      !s(r) && r.length || (r = f(this.raster.rasterInfo));\n      const i = e.timeExtent || this.timeExtent;\n\n      if (n(r) && n(i) && (n(i.start) || n(i.end))) {\n        r = r.map(e => e.clone());\n        const o = t.variables.find(({\n          name: e\n        }) => e === r[0].variableName)?.dimensions?.find(({\n          name: e\n        }) => \"StdTime\" === e),\n              a = r.find(({\n          dimensionName: e\n        }) => \"StdTime\" === e);\n        if (!o || !a) return { ...e,\n          multidimensionalDefinition: null\n        };\n        const {\n          start: l,\n          end: m\n        } = i,\n              d = s(l) ? null : l.getTime(),\n              u = s(m) ? null : m.getTime(),\n              p = d ?? u,\n              h = u ?? d;\n\n        if (n(o.values)) {\n          const e = o.values.filter(e => {\n            if (Array.isArray(e)) {\n              if (p === h) return e[0] <= p && e[1] >= p;\n              const t = e[0] <= p && e[1] > p || e[0] < h && e[1] >= h,\n                    r = e[0] >= p && e[1] <= h || e[0] < p && e[1] > h;\n              return t || r;\n            }\n\n            return p === h ? e === p : e >= p && e <= h;\n          });\n\n          if (e.length) {\n            const t = e.sort((e, t) => {\n              if (p === h) return (e[0] ?? e) - (t[0] ?? t);\n              return Math.abs((e[1] ?? e) - h) - Math.abs((t[1] ?? t) - h);\n            })[0];\n            a.values = [t];\n          } else r = null;\n        } else if (o.hasRegularIntervals && o.extent) {\n          const [e, t] = o.extent;\n          p > t || h < e ? r = null : a.values = p === h ? [p] : [Math.max(e, p), Math.min(t, h)];\n        }\n      }\n\n      return { ...e,\n        multidimensionalDefinition: r\n      };\n    }\n\n    async updateRenderer() {\n      if (!this.loaded) return;\n      if (JSON.stringify(this._cachedRendererJson) === JSON.stringify(this.renderer)) return;\n      const e = this._rasterJobHandler.instance;\n      e && (this.symbolizer.rendererJSON = g(this.renderer.toJSON()), this.symbolizer.bind(), await e.updateSymbolizer(this.symbolizer), this._cachedRendererJson = this.renderer.toJSON());\n    }\n\n    async applyRenderer(e, t) {\n      const r = e && e.pixelBlock;\n      if (!(n(r) && r.pixels && r.pixels.length > 0)) return null;\n      let i;\n      await this.updateRenderer();\n      const s = this._rasterJobHandler.instance,\n            {\n        bandIds: o\n      } = this;\n      return i = s ? await s.symbolize({ ...e,\n        simpleStretchParams: t,\n        bandIds: o\n      }) : this.symbolizer.symbolize({ ...e,\n        simpleStretchParams: t,\n        bandIds: o\n      }), i;\n    }\n\n    getTileUrl(e, t, r) {\n      return \"RasterTileServer\" === this.raster.datasetFormat ? `${this.url}/tile/${e}/${t}/${r}` : \"\";\n    }\n\n    getCompatibleTileInfo(e, t, r = !1) {\n      if (!this.loaded || s(t)) return null;\n      if (r && e.equals(this.spatialReference)) return this.tileInfo;\n      const i = m(e);\n      return c.create({\n        size: 256,\n        spatialReference: e,\n        origin: i ? {\n          x: i.origin[0],\n          y: i.origin[1]\n        } : {\n          x: t.xmin,\n          y: t.ymax\n        }\n      });\n    }\n\n    getCompatibleFullExtent(e) {\n      return this.loaded ? (this._compatibleFullExtent && this._compatibleFullExtent.spatialReference.equals(e) || (this._compatibleFullExtent = this.raster.computeExtent(e)), this._compatibleFullExtent) : null;\n    }\n\n    async fetchTile(e, t, i, o = {}) {\n      if (o.requestAsImageElement) {\n        const s = this.getTileUrl(e, t, i);\n        return r(s, {\n          responseType: \"image\",\n          query: { ...this.refreshParameters,\n            ...this.raster.ioConfig.customFetchParameters\n          },\n          signal: o.signal\n        }).then(e => e.data);\n      }\n\n      if (n(this.rasterInfo.multidimensionalInfo) && (o = this.normalizeRasterFetchOptions(o), s(o.multidimensionalDefinition))) {\n        const r = o.tileInfo || this.rasterInfo.storageInfo.tileInfo;\n        return {\n          extent: this.raster.getTileExtentFromTileInfo(e, t, i, r),\n          pixelBlock: null\n        };\n      }\n\n      return await this._initJobHandler(), \"raster-shaded-relief\" === this.renderer.type && (o = { ...o,\n        buffer: {\n          cols: 1,\n          rows: 1\n        }\n      }), this.raster.fetchTile(e, t, i, o);\n    }\n\n    async fetchPixels(e, t, r, i = {}) {\n      return n(this.rasterInfo.multidimensionalInfo) && (i = this.normalizeRasterFetchOptions(i), s(i.multidimensionalDefinition)) ? {\n        extent: e,\n        pixelBlock: null\n      } : (await this._initJobHandler(), this.raster.fetchPixels(e, t, r, i));\n    }\n\n    async identify(e, t = {}) {\n      if (n(this.rasterInfo.multidimensionalInfo)) {\n        if (!(this.rasterInfo.hasMultidimensionalTranspose && !!(y(t.multidimensionalDefinition) || t.transposedVariableName || t.timeExtent)) && (t = this.normalizeRasterFetchOptions(t), s(t.multidimensionalDefinition))) return {\n          location: e,\n          value: null\n        };\n      }\n\n      return this.raster.identify(e, t);\n    }\n\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n\n    hasStandardTime() {\n      const e = this.rasterInfo.multidimensionalInfo;\n      if (s(e) || \"standard-time\" !== this.rasterInfo.dataType) return !1;\n      const t = this.multidimensionalDefinition[0]?.variableName;\n      return e.variables.some(e => e.name === t && e.dimensions.some(e => \"StdTime\" === e.name));\n    }\n\n    getStandardTimeValue(e) {\n      return new Date(24 * (e - 25569) * 3600 * 1e3).toString();\n    }\n\n    _configDefaultSettings() {\n      this._configDefaultInterpolation(), this.multidimensionalDefinition || (this.multidimensionalDefinition = f(this.raster.rasterInfo)), this._configDefaultRenderer();\n    }\n\n    _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new h();\n      return this._rasterJobHandler.connectionPromise = e.initialize().then(() => {\n        this._rasterJobHandler.instance = e, this.raster.rasterJobHandler = e, this.renderer && this.updateRenderer();\n      }).catch(() => null), this._rasterJobHandler.connectionPromise;\n    }\n\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this.raster.rasterJobHandler = null, this._cachedRendererJson = null;\n    }\n\n    _configDefaultInterpolation() {\n      if (null == this.interpolation) {\n        const e = I(this.rasterInfo, this.raster.tileType, this.sourceJSON?.defaultResamplingMethod);\n\n        this._set(\"interpolation\", e);\n      }\n    }\n\n    _configDefaultRenderer() {\n      const e = this.raster.rasterInfo;\n\n      if (this.bandIds || (this.bandIds = J(e)), !this.renderer) {\n        const t = _(e, {\n          bandIds: this.bandIds,\n          variableName: n(this.multidimensionalDefinition) ? this.multidimensionalDefinition[0]?.variableName : null\n        });\n\n        \"WCSServer\" === this.raster.datasetFormat && \"raster-stretch\" === t.type && (e.statistics?.[0].max > 1e24 || e.statistics?.[0].min < -1e24) && (t.dynamicRangeAdjustment = !0, t.statistics = null, \"none\" === t.stretchType && (t.stretchType = \"min-max\")), this.renderer = t;\n      }\n\n      this.symbolizer ? (this.symbolizer.rendererJSON = g(this.renderer.toJSON()), this.symbolizer.rasterInfo = e) : this.symbolizer = new x({\n        rendererJSON: this.renderer.toJSON(),\n        rasterInfo: e\n      });\n      const t = this.symbolizer.bind();\n      t.success || j.warn(\"imagery-tile-mixin\", t.error || \"The given renderer is not supported by the layer.\");\n    }\n\n  };\n  return e([a()], H.prototype, \"_cachedRendererJson\", void 0), e([a()], H.prototype, \"_compatibleFullExtent\", void 0), e([a()], H.prototype, \"_rasterJobHandler\", void 0), e([a()], H.prototype, \"bandIds\", void 0), e([a({\n    json: {\n      origins: {\n        service: {\n          read: {\n            source: \"copyrightText\"\n          }\n        }\n      }\n    }\n  })], H.prototype, \"copyright\", void 0), e([a({\n    type: R,\n    json: {\n      read: !1\n    }\n  }), o(\"rasterInfo.extent\")], H.prototype, \"fullExtent\", void 0), e([a()], H.prototype, \"interpolation\", void 0), e([a()], H.prototype, \"ioConfig\", void 0), e([a({\n    type: [p]\n  })], H.prototype, \"multidimensionalDefinition\", void 0), e([a()], H.prototype, \"raster\", void 0), e([a({\n    readOnly: !0\n  }), o(\"raster.rasterInfo\")], H.prototype, \"rasterInfo\", void 0), e([a()], H.prototype, \"sourceJSON\", void 0), e([a({\n    type: S,\n    json: {\n      read: !1\n    }\n  }), o(\"rasterInfo.spatialReference\")], H.prototype, \"spatialReference\", void 0), e([a({\n    type: c,\n    json: {\n      read: !1\n    }\n  }), o(\"rasterInfo.storageInfo.tileInfo\")], H.prototype, \"tileInfo\", void 0), e([a(u)], H.prototype, \"url\", null), e([a({\n    types: t\n  })], H.prototype, \"renderer\", null), e([a()], H.prototype, \"symbolizer\", void 0), H = e([l(\"esri.layers.ImageryTileMixin\")], H), H;\n};\n\nexport { H as ImageryTileMixin };","map":{"version":3,"names":["_","e","rasterRendererTypes","t","r","i","isNone","s","isSome","n","aliasOf","o","property","a","subclass","l","getInfo","m","sanitizeUrl","d","url","u","p","h","c","getDefaultMultidimensionalDefinition","f","isMultiSliceOrRangeDefinition","y","convertVectorFieldData","b","normalizeRendererJSON","g","getDefaultInterpolation","I","getDefaultBandCombination","J","createDefaultRenderer","x","createFlowMesh","v","R","S","j","getLogger","H","constructor","arguments","_rasterJobHandler","instance","refCount","connectionPromise","bandIds","copyright","fullExtent","interpolation","multidimensionalDefinition","raster","rasterInfo","sourceJSON","spatialReference","tileInfo","symbolizer","_set","renderer","updateRenderer","dataType","pixelBlock","meshType","simulationSettings","flowData","signal","AbortController","normalizeRasterFetchOptions","multidimensionalInfo","length","timeExtent","start","end","map","clone","variables","find","name","variableName","dimensions","dimensionName","getTime","values","filter","Array","isArray","sort","Math","abs","hasRegularIntervals","extent","max","min","loaded","JSON","stringify","_cachedRendererJson","rendererJSON","toJSON","bind","updateSymbolizer","applyRenderer","pixels","symbolize","simpleStretchParams","getTileUrl","datasetFormat","getCompatibleTileInfo","equals","create","size","origin","xmin","ymax","getCompatibleFullExtent","_compatibleFullExtent","computeExtent","fetchTile","requestAsImageElement","responseType","query","refreshParameters","ioConfig","customFetchParameters","then","data","storageInfo","getTileExtentFromTileInfo","_initJobHandler","type","buffer","cols","rows","fetchPixels","identify","hasMultidimensionalTranspose","transposedVariableName","location","value","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_shutdownJobHandler","hasStandardTime","some","getStandardTimeValue","Date","toString","_configDefaultSettings","_configDefaultInterpolation","_configDefaultRenderer","initialize","rasterJobHandler","catch","destroy","tileType","defaultResamplingMethod","statistics","dynamicRangeAdjustment","stretchType","success","warn","error","prototype","json","origins","service","read","source","readOnly","types","ImageryTileMixin"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import{rasterRendererTypes as t}from\"../../rasterRenderers.js\";import r from\"../../request.js\";import i from\"../../core/Logger.js\";import{isNone as s,isSome as n}from\"../../core/maybe.js\";import{aliasOf as o}from\"../../core/accessorSupport/decorators/aliasOf.js\";import\"../../core/arrayUtils.js\";import\"../../core/has.js\";import\"../../core/accessorSupport/ensureType.js\";import{property as a}from\"../../core/accessorSupport/decorators/property.js\";import{subclass as l}from\"../../core/accessorSupport/decorators/subclass.js\";import{getInfo as m}from\"../../geometry/support/spatialReferenceUtils.js\";import{sanitizeUrl as d}from\"../support/arcgisLayerUrl.js\";import{url as u}from\"../support/commonProperties.js\";import p from\"../support/DimensionalDefinition.js\";import h from\"../support/RasterJobHandler.js\";import c from\"../support/TileInfo.js\";import{getDefaultMultidimensionalDefinition as f,isMultiSliceOrRangeDefinition as y}from\"../support/rasterDatasets/multidimensionalUtils.js\";import{convertVectorFieldData as b}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{normalizeRendererJSON as g,getDefaultInterpolation as I,getDefaultBandCombination as J,createDefaultRenderer as _}from\"../../renderers/support/rasterRendererHelper.js\";import x from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as v}from\"../../views/2d/engine/flow/dataUtils.js\";import R from\"../../geometry/Extent.js\";import S from\"../../geometry/SpatialReference.js\";const j=i.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),H=i=>{let H=class extends i{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation=\"nearest\",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set(\"url\",d(e,j))}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}async convertVectorFieldData(e,t){if(s(e))return null;const r=this._rasterJobHandler.instance,i=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:i},t):b(e,i)}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):v(e.meshType,e.simulationSettings,e.flowData,n(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if(s(t))return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;!s(r)&&r.length||(r=f(this.raster.rasterInfo));const i=e.timeExtent||this.timeExtent;if(n(r)&&n(i)&&(n(i.start)||n(i.end))){r=r.map((e=>e.clone()));const o=t.variables.find((({name:e})=>e===r[0].variableName))?.dimensions?.find((({name:e})=>\"StdTime\"===e)),a=r.find((({dimensionName:e})=>\"StdTime\"===e));if(!o||!a)return{...e,multidimensionalDefinition:null};const{start:l,end:m}=i,d=s(l)?null:l.getTime(),u=s(m)?null:m.getTime(),p=d??u,h=u??d;if(n(o.values)){const e=o.values.filter((e=>{if(Array.isArray(e)){if(p===h)return e[0]<=p&&e[1]>=p;const t=e[0]<=p&&e[1]>p||e[0]<h&&e[1]>=h,r=e[0]>=p&&e[1]<=h||e[0]<p&&e[1]>h;return t||r}return p===h?e===p:e>=p&&e<=h}));if(e.length){const t=e.sort(((e,t)=>{if(p===h)return(e[0]??e)-(t[0]??t);return Math.abs((e[1]??e)-h)-Math.abs((t[1]??t)-h)}))[0];a.values=[t]}else r=null}else if(o.hasRegularIntervals&&o.extent){const[e,t]=o.extent;p>t||h<e?r=null:a.values=p===h?[p]:[Math.max(e,p),Math.min(t,h)]}}return{...e,multidimensionalDefinition:r}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=g(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!(n(r)&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:o}=this;return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:o}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:o}),i}getTileUrl(e,t,r){return\"RasterTileServer\"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:\"\"}getCompatibleTileInfo(e,t,r=!1){if(!this.loaded||s(t))return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const i=m(e);return c.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,o={}){if(o.requestAsImageElement){const s=this.getTileUrl(e,t,i);return r(s,{responseType:\"image\",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:o.signal}).then((e=>e.data))}if(n(this.rasterInfo.multidimensionalInfo)&&(o=this.normalizeRasterFetchOptions(o),s(o.multidimensionalDefinition))){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,r),pixelBlock:null}}return await this._initJobHandler(),\"raster-shaded-relief\"===this.renderer.type&&(o={...o,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,o)}async fetchPixels(e,t,r,i={}){return n(this.rasterInfo.multidimensionalInfo)&&(i=this.normalizeRasterFetchOptions(i),s(i.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,r,i))}async identify(e,t={}){if(n(this.rasterInfo.multidimensionalInfo)){if(!(this.rasterInfo.hasMultidimensionalTranspose&&!!(y(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&(t=this.normalizeRasterFetchOptions(t),s(t.multidimensionalDefinition)))return{location:e,value:null}}return this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.rasterInfo.multidimensionalInfo;if(s(e)||\"standard-time\"!==this.rasterInfo.dataType)return!1;const t=this.multidimensionalDefinition[0]?.variableName;return e.variables.some((e=>e.name===t&&e.dimensions.some((e=>\"StdTime\"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=f(this.raster.rasterInfo)),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new h;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null,this._cachedRendererJson=null}_configDefaultInterpolation(){if(null==this.interpolation){const e=I(this.rasterInfo,this.raster.tileType,this.sourceJSON?.defaultResamplingMethod);this._set(\"interpolation\",e)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=J(e)),!this.renderer){const t=_(e,{bandIds:this.bandIds,variableName:n(this.multidimensionalDefinition)?this.multidimensionalDefinition[0]?.variableName:null});\"WCSServer\"===this.raster.datasetFormat&&\"raster-stretch\"===t.type&&(e.statistics?.[0].max>1e24||e.statistics?.[0].min<-1e24)&&(t.dynamicRangeAdjustment=!0,t.statistics=null,\"none\"===t.stretchType&&(t.stretchType=\"min-max\")),this.renderer=t}this.symbolizer?(this.symbolizer.rendererJSON=g(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new x({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const t=this.symbolizer.bind();t.success||j.warn(\"imagery-tile-mixin\",t.error||\"The given renderer is not supported by the layer.\")}};return e([a()],H.prototype,\"_cachedRendererJson\",void 0),e([a()],H.prototype,\"_compatibleFullExtent\",void 0),e([a()],H.prototype,\"_rasterJobHandler\",void 0),e([a()],H.prototype,\"bandIds\",void 0),e([a({json:{origins:{service:{read:{source:\"copyrightText\"}}}}})],H.prototype,\"copyright\",void 0),e([a({type:R,json:{read:!1}}),o(\"rasterInfo.extent\")],H.prototype,\"fullExtent\",void 0),e([a()],H.prototype,\"interpolation\",void 0),e([a()],H.prototype,\"ioConfig\",void 0),e([a({type:[p]})],H.prototype,\"multidimensionalDefinition\",void 0),e([a()],H.prototype,\"raster\",void 0),e([a({readOnly:!0}),o(\"raster.rasterInfo\")],H.prototype,\"rasterInfo\",void 0),e([a()],H.prototype,\"sourceJSON\",void 0),e([a({type:S,json:{read:!1}}),o(\"rasterInfo.spatialReference\")],H.prototype,\"spatialReference\",void 0),e([a({type:c,json:{read:!1}}),o(\"rasterInfo.storageInfo.tileInfo\")],H.prototype,\"tileInfo\",void 0),e([a(u)],H.prototype,\"url\",null),e([a({types:t})],H.prototype,\"renderer\",null),e([a()],H.prototype,\"symbolizer\",void 0),H=e([l(\"esri.layers.ImageryTileMixin\")],H),H};export{H as ImageryTileMixin};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}