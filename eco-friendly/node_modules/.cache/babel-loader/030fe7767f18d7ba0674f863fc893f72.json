{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { isNone as e, isSome as t } from \"../../../core/maybe.js\";\nimport { polygonCentroid as i, extentCentroid as s } from \"../../../geometry/support/centroid.js\";\nimport { getPolygonExtent as a, getGeometryExtent as r } from \"../../../geometry/support/extentUtils.js\";\nimport { toQuantizationTransform as n } from \"../../../geometry/support/quantizationUtils.js\";\nimport { isValid as o, equals as l } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport u from \"./AttributesBuilder.js\";\nimport { project as c } from \"./projectionSupport.js\";\nimport { makeEdgeCandidate as d, makeVertexCandidate as m } from \"./SnappingCandidate.js\";\nimport { cleanFromGeometryEngine as h, getGeometry as f, transformCentroid as g } from \"./utils.js\";\nimport { isStringField as p } from \"../../support/fieldUtils.js\";\nimport { isNullCountSupported as y, calculateStringStatistics as x, calculateStatistics as I, processSummaryStatisticsResult as T, calculateUniqueValuesCount as V, createUVResult as F, calculateClassBreaks as z, resolveCBResult as S, calculateHistogram as _, getAttributeComparator as b, calculatePercentile as v } from \"../../../statistics/utils.js\";\nimport { loadArcade as R } from \"../../../support/arcadeOnDemand.js\";\n\nclass A {\n  constructor(e, t, i) {\n    this.items = e, this.query = t, this.geometryType = i.geometryType, this.hasM = i.hasM, this.hasZ = i.hasZ, this.fieldsIndex = i.fieldsIndex, this.objectIdField = i.objectIdField, this.spatialReference = i.spatialReference, this.featureAdapter = i.featureAdapter;\n  }\n\n  get size() {\n    return this.items.length;\n  }\n\n  createQueryResponseForCount() {\n    const e = new u(this.query, this.featureAdapter, this.fieldsIndex);\n    if (!this.query.outStatistics) return e.countDistinctValues(this.items);\n    const {\n      groupByFieldsForStatistics: t,\n      having: i,\n      outStatistics: s\n    } = this.query,\n          a = t?.length;\n    if (!!!a) return 1;\n    const r = new Map(),\n          n = new Map(),\n          o = new Set();\n\n    for (const l of s) {\n      const {\n        statisticType: s\n      } = l,\n            a = \"exceedslimit\" !== s ? l.onStatisticField : void 0;\n\n      if (!n.has(a)) {\n        const i = [];\n\n        for (const s of t) {\n          const t = this._getAttributeValues(e, s, r);\n\n          i.push(t);\n        }\n\n        n.set(a, this._calculateUniqueValues(i, e.returnDistinctValues));\n      }\n\n      const u = n.get(a);\n\n      for (const t in u) {\n        const {\n          data: s,\n          items: a\n        } = u[t],\n              r = s.join(\",\");\n        i && !e.validateItems(a, i) || o.add(r);\n      }\n    }\n\n    return o.size;\n  }\n\n  async createQueryResponse() {\n    let e;\n\n    if (this.query.outStatistics) {\n      e = this.query.outStatistics.some(e => \"exceedslimit\" === e.statisticType) ? this._createExceedsLimitQueryResponse(this.query) : await this._createStatisticsQueryResponse(this.query);\n    } else e = this._createFeatureQueryResponse(this.query);\n\n    return this.query.returnQueryGeometry && (o(this.query.outSR) && !l(this.query.geometry.spatialReference, this.query.outSR) ? e.queryGeometry = h({\n      spatialReference: this.query.outSR,\n      ...c(this.query.geometry, this.query.geometry.spatialReference, this.query.outSR)\n    }) : e.queryGeometry = h({\n      spatialReference: this.query.outSR,\n      ...this.query.geometry\n    })), e;\n  }\n\n  createSnappingResponse(t, i) {\n    const s = this.featureAdapter,\n          a = N(this.hasZ, this.hasM),\n          {\n      point: r\n    } = t,\n          n = \"number\" == typeof t.distance ? t.distance : t.distance.x,\n          o = \"number\" == typeof t.distance ? t.distance : t.distance.y,\n          l = {\n      candidates: []\n    },\n          u = \"esriGeometryPolygon\" === this.geometryType,\n          c = null != r.z,\n          h = null != r.m,\n          f = this._getPointCreator(r, c, h, this.spatialReference, i),\n          g = new D(null, 0),\n          p = new D(null, 0),\n          y = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n\n    for (const x of this.items) {\n      const i = s.getGeometry(x);\n      if (e(i)) continue;\n      const {\n        coords: c,\n        lengths: h\n      } = i;\n\n      if (g.coords = c, p.coords = c, t.types & q.EDGE) {\n        let e = 0;\n\n        for (let t = 0; t < h.length; t++) {\n          const i = h[t];\n\n          for (let t = 0; t < i; t++, e += a) {\n            const u = g;\n\n            if (u.coordsIndex = e, t !== i - 1) {\n              const t = p;\n              t.coordsIndex = e + a;\n              const i = y;\n              E(y, r, u, t);\n              const c = (r.x - i.x) / n,\n                    m = (r.y - i.y) / o,\n                    h = c * c + m * m;\n              h <= 1 && l.candidates.push(d(s.getObjectId(x), f(i), Math.sqrt(h), f(u), f(t)));\n            }\n          }\n        }\n      }\n\n      if (t.types & q.VERTEX) {\n        const e = u ? c.length - a : c.length;\n\n        for (let t = 0; t < e; t += a) {\n          const e = g;\n          e.coordsIndex = t;\n          const i = (r.x - e.x) / n,\n                a = (r.y - e.y) / o,\n                u = i * i + a * a;\n          u <= 1 && l.candidates.push(m(s.getObjectId(x), f(e), Math.sqrt(u)));\n        }\n      }\n    }\n\n    return l.candidates.sort((e, t) => e.distance - t.distance), l;\n  }\n\n  _getPointCreator(e, i, s, a, r) {\n    const n = t(r) && !l(a, r) ? e => c(e, a, r) : e => e,\n          {\n      hasZ: o\n    } = this,\n          u = 0,\n          d = e.m;\n    return i && s ? o ? ({\n      x: e,\n      y: t,\n      z: i\n    }) => n({\n      x: e,\n      y: t,\n      z: i,\n      m: d\n    }) : ({\n      x: e,\n      y: t\n    }) => n({\n      x: e,\n      y: t,\n      z: u,\n      m: d\n    }) : i ? o ? ({\n      x: e,\n      y: t,\n      z: i\n    }) => n({\n      x: e,\n      y: t,\n      z: i\n    }) : ({\n      x: e,\n      y: t\n    }) => n({\n      x: e,\n      y: t,\n      z: u\n    }) : s ? ({\n      x: e,\n      y: t\n    }) => n({\n      x: e,\n      y: t,\n      m: d\n    }) : ({\n      x: e,\n      y: t\n    }) => n({\n      x: e,\n      y: t\n    });\n  }\n\n  async createSummaryStatisticsResponse(e) {\n    const {\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      minValue: n,\n      maxValue: o,\n      scale: l\n    } = e,\n          u = this.fieldsIndex.isDateField(t),\n          c = await this._getDataValues({\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      scale: l\n    }),\n          d = y({\n      normalizationType: a,\n      normalizationField: s,\n      minValue: n,\n      maxValue: o\n    }),\n          m = this.fieldsIndex.get(t),\n          h = {\n      value: .5,\n      fieldType: m?.type\n    },\n          f = p(m) ? x({\n      values: c,\n      supportsNullCount: d,\n      percentileParams: h\n    }) : I({\n      values: c,\n      minValue: n,\n      maxValue: o,\n      useSampleStdDev: !a,\n      supportsNullCount: d,\n      percentileParams: h\n    });\n    return T(f, u);\n  }\n\n  async createUniqueValuesResponse(e) {\n    const {\n      field: t,\n      valueExpression: i,\n      domains: s,\n      returnAllCodedValues: a,\n      scale: r\n    } = e,\n          n = await this._getDataValues({\n      field: t,\n      field2: e.field2,\n      field3: e.field3,\n      fieldDelimiter: e.fieldDelimiter,\n      valueExpression: i,\n      scale: r\n    }),\n          o = V(n);\n    return F(o, s, a, e.fieldDelimiter);\n  }\n\n  async createClassBreaksResponse(e) {\n    const {\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numClasses: c,\n      scale: d\n    } = e,\n          m = await this._getDataValues({\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      scale: d\n    }),\n          h = z(m, {\n      field: t,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numClasses: c\n    });\n    return S(h, n);\n  }\n\n  async createHistogramResponse(e) {\n    const {\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numBins: c,\n      scale: d\n    } = e,\n          m = await this._getDataValues({\n      field: t,\n      valueExpression: i,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      scale: d\n    });\n    return _(m, {\n      field: t,\n      normalizationField: s,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numBins: c\n    });\n  }\n\n  _sortFeatures(e, t, i) {\n    if (e.length > 1 && t && t.length) for (const s of t.reverse()) {\n      const t = s.split(\" \"),\n            a = t[0],\n            r = this.fieldsIndex.get(a),\n            n = t[1] && \"desc\" === t[1].toLowerCase(),\n            o = b(r?.type, n);\n      e.sort((e, t) => {\n        const s = i(e, a, r),\n              n = i(t, a, r);\n        return o(s, n);\n      });\n    }\n  }\n\n  _createFeatureQueryResponse(e) {\n    const t = this.items,\n          {\n      geometryType: i,\n      hasM: s,\n      hasZ: a,\n      objectIdField: r,\n      spatialReference: o\n    } = this,\n          {\n      outFields: l,\n      outSR: u,\n      quantizationParameters: c,\n      resultRecordCount: d,\n      resultOffset: m,\n      returnZ: f,\n      returnM: g\n    } = e,\n          p = null != d && t.length > (m || 0) + d,\n          y = l && (l.includes(\"*\") ? [...this.fieldsIndex.fields] : l.map(e => this.fieldsIndex.get(e)));\n    return {\n      exceededTransferLimit: p,\n      features: this._createFeatures(e, t),\n      fields: y,\n      geometryType: i,\n      hasM: s && g,\n      hasZ: a && f,\n      objectIdFieldName: r,\n      spatialReference: h(u || o),\n      transform: c && n(c) || null\n    };\n  }\n\n  _createFeatures(e, t) {\n    const i = new u(e, this.featureAdapter, this.fieldsIndex),\n          {\n      hasM: s,\n      hasZ: a\n    } = this,\n          {\n      orderByFields: r,\n      quantizationParameters: o,\n      returnGeometry: l,\n      returnCentroid: c,\n      maxAllowableOffset: d,\n      resultOffset: m,\n      resultRecordCount: h,\n      returnZ: p = !1,\n      returnM: y = !1\n    } = e,\n          x = a && p,\n          I = s && y;\n    let T = [],\n        V = 0;\n    const F = [...t];\n\n    if (this._sortFeatures(F, r, (e, t, s) => i.getFieldValue(e, t, s)), l || c) {\n      const e = n(o);\n      if (l && !c) for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        geometry: f(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(t), d, e, x, I)\n      };else if (!l && c) for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        centroid: g(this, this.featureAdapter.getCentroid(t, this), e)\n      };else for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        centroid: g(this, this.featureAdapter.getCentroid(t, this), e),\n        geometry: f(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(t), d, e, x, I)\n      };\n    } else for (const n of F) {\n      const e = i.getAttributes(n);\n      e && (T[V++] = {\n        attributes: e\n      });\n    }\n\n    const z = m || 0;\n\n    if (null != h) {\n      const e = z + h;\n      T = T.slice(z, Math.min(T.length, e));\n    }\n\n    return T;\n  }\n\n  _createExceedsLimitQueryResponse(e) {\n    let i = !1,\n        s = Number.POSITIVE_INFINITY,\n        a = Number.POSITIVE_INFINITY,\n        r = Number.POSITIVE_INFINITY;\n\n    for (const t of e.outStatistics) if (\"exceedslimit\" === t.statisticType) {\n      s = null != t.maxPointCount ? t.maxPointCount : Number.POSITIVE_INFINITY, a = null != t.maxRecordCount ? t.maxRecordCount : Number.POSITIVE_INFINITY, r = null != t.maxVertexCount ? t.maxVertexCount : Number.POSITIVE_INFINITY;\n      break;\n    }\n\n    if (\"esriGeometryPoint\" === this.geometryType) i = this.items.length > s;else if (this.items.length > a) i = !0;else {\n      const e = N(this.hasZ, this.hasM),\n            s = this.featureAdapter;\n      i = this.items.reduce((e, i) => {\n        const a = s.getGeometry(i);\n        return e + (t(a) && a.coords.length || 0);\n      }, 0) / e > r;\n    }\n    return {\n      fields: [{\n        name: \"exceedslimit\",\n        type: \"esriFieldTypeInteger\",\n        alias: \"exceedslimit\",\n        sqlType: \"sqlTypeInteger\",\n        domain: null,\n        defaultValue: null\n      }],\n      features: [{\n        attributes: {\n          exceedslimit: Number(i)\n        }\n      }]\n    };\n  }\n\n  async _createStatisticsQueryResponse(e) {\n    const t = {\n      attributes: {}\n    },\n          i = [],\n          s = new Map(),\n          a = new Map(),\n          r = new Map(),\n          n = new Map(),\n          o = new u(e, this.featureAdapter, this.fieldsIndex),\n          l = e.outStatistics,\n          {\n      groupByFieldsForStatistics: c,\n      having: d,\n      orderByFields: m\n    } = e,\n          h = c && c.length,\n          f = !!h,\n          g = f && c[0],\n          p = f && !this.fieldsIndex.get(g);\n\n    for (const u of l) {\n      const {\n        outStatisticFieldName: e,\n        statisticType: l\n      } = u,\n            m = u,\n            y = \"exceedslimit\" !== l ? u.onStatisticField : void 0,\n            x = \"percentile_disc\" === l || \"percentile_cont\" === l,\n            I = \"EnvelopeAggregate\" === l || \"CentroidAggregate\" === l || \"ConvexHullAggregate\" === l,\n            T = f && 1 === h && (y === g || p) && \"count\" === l;\n\n      if (f) {\n        if (!r.has(y)) {\n          const e = [];\n\n          for (const t of c) {\n            const i = this._getAttributeValues(o, t, s);\n\n            e.push(i);\n          }\n\n          r.set(y, this._calculateUniqueValues(e, !I && o.returnDistinctValues));\n        }\n\n        const t = r.get(y);\n\n        for (const i in t) {\n          const {\n            count: a,\n            data: r,\n            items: l,\n            itemPositions: u\n          } = t[i],\n                h = r.join(\",\");\n\n          if (!d || o.validateItems(l, d)) {\n            const t = n.get(h) || {\n              attributes: {}\n            };\n\n            if (I) {\n              t.aggregateGeometries || (t.aggregateGeometries = {});\n              const {\n                aggregateGeometries: e,\n                outStatisticFieldName: i\n              } = await this._getAggregateGeometry(m, l);\n              t.aggregateGeometries[i] = e;\n            } else {\n              let i = null;\n              if (T) i = a;else {\n                const e = this._getAttributeValues(o, y, s),\n                      t = u.map(t => e[t]);\n\n                i = x && \"statisticParameters\" in m ? this._getPercentileValue(m, t) : this._getStatisticValue(m, t, null, o.returnDistinctValues);\n              }\n              t.attributes[e] = i;\n            }\n\n            let i = 0;\n            c.forEach((e, s) => t.attributes[this.fieldsIndex.get(e) ? e : \"EXPR_\" + ++i] = r[s]), n.set(h, t);\n          }\n        }\n      } else if (I) {\n        t.aggregateGeometries || (t.aggregateGeometries = {});\n        const {\n          aggregateGeometries: e,\n          outStatisticFieldName: i\n        } = await this._getAggregateGeometry(m, this.items);\n        t.aggregateGeometries[i] = e;\n      } else {\n        const i = this._getAttributeValues(o, y, s);\n\n        t.attributes[e] = x && \"statisticParameters\" in m ? this._getPercentileValue(m, i) : this._getStatisticValue(m, i, a, o.returnDistinctValues);\n      }\n\n      i.push({\n        name: e,\n        alias: e,\n        type: \"esriFieldTypeDouble\"\n      });\n    }\n\n    const y = f ? Array.from(n.values()) : [t];\n    return this._sortFeatures(y, m, (e, t) => e.attributes[t]), {\n      fields: i,\n      features: y\n    };\n  }\n\n  async _getAggregateGeometry(e, t) {\n    const n = await import(\"../../../geometry/geometryEngineJSON.js\"),\n          {\n      statisticType: o,\n      outStatisticFieldName: l\n    } = e,\n          {\n      featureAdapter: u,\n      spatialReference: c,\n      geometryType: d,\n      hasZ: m,\n      hasM: h\n    } = this,\n          g = t.map(e => f(d, m, h, u.getGeometry(e))),\n          p = n.convexHull(c, g, !0)[0],\n          y = {\n      aggregateGeometries: null,\n      outStatisticFieldName: null\n    };\n\n    if (\"EnvelopeAggregate\" === o) {\n      const e = p ? a(p) : r(n.union(c, g));\n      y.aggregateGeometries = { ...e,\n        spatialReference: c\n      }, y.outStatisticFieldName = l || \"extent\";\n    } else if (\"CentroidAggregate\" === o) {\n      const e = p ? i(p) : s(r(n.union(c, g)));\n      y.aggregateGeometries = {\n        x: e[0],\n        y: e[1],\n        spatialReference: c\n      }, y.outStatisticFieldName = l || \"centroid\";\n    } else \"ConvexHullAggregate\" === o && (y.aggregateGeometries = p, y.outStatisticFieldName = l || \"convexHull\");\n\n    return y;\n  }\n\n  _getStatisticValue(e, t, i, s) {\n    const {\n      onStatisticField: a,\n      statisticType: r\n    } = e;\n    let n = null;\n    n = i?.has(a) ? i.get(a) : p(this.fieldsIndex.get(a)) ? x({\n      values: t,\n      returnDistinct: s\n    }) : I({\n      values: t,\n      minValue: null,\n      maxValue: null,\n      useSampleStdDev: !0\n    }), i && i.set(a, n);\n    return n[\"var\" === r ? \"variance\" : r];\n  }\n\n  _getPercentileValue(e, t) {\n    const {\n      onStatisticField: i,\n      statisticParameters: s,\n      statisticType: a\n    } = e,\n          {\n      value: r,\n      orderBy: n\n    } = s,\n          o = this.fieldsIndex.get(i);\n    return v(t, {\n      value: r,\n      orderBy: n,\n      fieldType: o?.type,\n      isDiscrete: \"percentile_disc\" === a\n    });\n  }\n\n  _getAttributeValues(e, t, i) {\n    if (i.has(t)) return i.get(t);\n    const s = this.fieldsIndex.get(t),\n          a = this.items.map(i => e.getFieldValue(i, t, s));\n    return i.set(t, a), a;\n  }\n\n  _getAttributeDataValues(e, t) {\n    return this.items.map(i => e.getDataValue(i, {\n      field: t.field,\n      field2: t.field2,\n      field3: t.field3,\n      fieldDelimiter: t.fieldDelimiter,\n      normalizationField: t.normalizationField,\n      normalizationType: t.normalizationType,\n      normalizationTotal: t.normalizationTotal\n    }));\n  }\n\n  async _getAttributeExpressionValues(e, t, i) {\n    const {\n      arcadeUtils: s\n    } = await R(),\n          a = s.createFunction(t),\n          r = i && s.getViewInfo(i);\n    return e.getExpressionValues(this.items, a, r, s);\n  }\n\n  _calculateUniqueValues(e, t) {\n    const i = {},\n          s = this.items,\n          a = s.length;\n\n    for (let r = 0; r < a; r++) {\n      const a = s[r],\n            n = [];\n\n      for (const t of e) n.push(t[r]);\n\n      const o = n.join(\",\");\n      t ? null == i[o] && (i[o] = {\n        count: 1,\n        data: n,\n        items: [a],\n        itemPositions: [r]\n      }) : null == i[o] ? i[o] = {\n        count: 1,\n        data: n,\n        items: [a],\n        itemPositions: [r]\n      } : (i[o].count++, i[o].items.push(a), i[o].itemPositions.push(r));\n    }\n\n    return i;\n  }\n\n  async _getDataValues(e) {\n    const t = new u(this.query, this.featureAdapter, this.fieldsIndex),\n          {\n      valueExpression: i,\n      field: s,\n      normalizationField: a,\n      normalizationType: r,\n      normalizationTotal: n,\n      scale: o\n    } = e,\n          l = i ? {\n      viewingMode: \"map\",\n      scale: o,\n      spatialReference: this.query.outSR || this.spatialReference\n    } : null;\n    return i ? this._getAttributeExpressionValues(t, i, l) : this._getAttributeDataValues(t, {\n      field: s,\n      field2: e.field2,\n      field3: e.field3,\n      fieldDelimiter: e.fieldDelimiter,\n      normalizationField: a,\n      normalizationType: r,\n      normalizationTotal: n\n    });\n  }\n\n}\n\nfunction E(e, t, i, s) {\n  const a = s.x - i.x,\n        r = s.y - i.y,\n        n = a * a + r * r,\n        o = (t.x - i.x) * a + (t.y - i.y) * r,\n        l = Math.min(1, Math.max(0, o / n));\n  e.x = i.x + a * l, e.y = i.y + r * l;\n}\n\nfunction N(e, t) {\n  return e ? t ? 4 : 3 : t ? 3 : 2;\n}\n\nvar q;\n!function (e) {\n  e[e.NONE = 0] = \"NONE\", e[e.EDGE = 1] = \"EDGE\", e[e.VERTEX = 2] = \"VERTEX\";\n}(q || (q = {}));\n\nclass D {\n  constructor(e, t) {\n    this.coords = e, this.coordsIndex = t;\n  }\n\n  get x() {\n    return this.coords[this.coordsIndex];\n  }\n\n  get y() {\n    return this.coords[this.coordsIndex + 1];\n  }\n\n  get z() {\n    return this.coords[this.coordsIndex + 2];\n  }\n\n}\n\nexport { A as QueryEngineResult, q as SnappingTypes };","map":{"version":3,"names":["isNone","e","isSome","t","polygonCentroid","i","extentCentroid","s","getPolygonExtent","a","getGeometryExtent","r","toQuantizationTransform","n","isValid","o","equals","l","u","project","c","makeEdgeCandidate","d","makeVertexCandidate","m","cleanFromGeometryEngine","h","getGeometry","f","transformCentroid","g","isStringField","p","isNullCountSupported","y","calculateStringStatistics","x","calculateStatistics","I","processSummaryStatisticsResult","T","calculateUniqueValuesCount","V","createUVResult","F","calculateClassBreaks","z","resolveCBResult","S","calculateHistogram","_","getAttributeComparator","b","calculatePercentile","v","loadArcade","R","A","constructor","items","query","geometryType","hasM","hasZ","fieldsIndex","objectIdField","spatialReference","featureAdapter","size","length","createQueryResponseForCount","outStatistics","countDistinctValues","groupByFieldsForStatistics","having","Map","Set","statisticType","onStatisticField","has","_getAttributeValues","push","set","_calculateUniqueValues","returnDistinctValues","get","data","join","validateItems","add","createQueryResponse","some","_createExceedsLimitQueryResponse","_createStatisticsQueryResponse","_createFeatureQueryResponse","returnQueryGeometry","outSR","geometry","queryGeometry","createSnappingResponse","N","point","distance","candidates","_getPointCreator","D","coords","lengths","types","q","EDGE","coordsIndex","E","getObjectId","Math","sqrt","VERTEX","sort","createSummaryStatisticsResponse","field","valueExpression","normalizationField","normalizationType","normalizationTotal","minValue","maxValue","scale","isDateField","_getDataValues","value","fieldType","type","values","supportsNullCount","percentileParams","useSampleStdDev","createUniqueValuesResponse","domains","returnAllCodedValues","field2","field3","fieldDelimiter","createClassBreaksResponse","classificationMethod","standardDeviationInterval","numClasses","createHistogramResponse","numBins","_sortFeatures","reverse","split","toLowerCase","outFields","quantizationParameters","resultRecordCount","resultOffset","returnZ","returnM","includes","fields","map","exceededTransferLimit","features","_createFeatures","objectIdFieldName","transform","orderByFields","returnGeometry","returnCentroid","maxAllowableOffset","getFieldValue","attributes","getAttributes","centroid","getCentroid","slice","min","Number","POSITIVE_INFINITY","maxPointCount","maxRecordCount","maxVertexCount","reduce","name","alias","sqlType","domain","defaultValue","exceedslimit","outStatisticFieldName","count","itemPositions","aggregateGeometries","_getAggregateGeometry","_getPercentileValue","_getStatisticValue","forEach","Array","from","convexHull","union","returnDistinct","statisticParameters","orderBy","isDiscrete","_getAttributeDataValues","getDataValue","_getAttributeExpressionValues","arcadeUtils","createFunction","getViewInfo","getExpressionValues","viewingMode","max","NONE","QueryEngineResult","SnappingTypes"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/graphics/data/QueryEngineResult.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{isNone as e,isSome as t}from\"../../../core/maybe.js\";import{polygonCentroid as i,extentCentroid as s}from\"../../../geometry/support/centroid.js\";import{getPolygonExtent as a,getGeometryExtent as r}from\"../../../geometry/support/extentUtils.js\";import{toQuantizationTransform as n}from\"../../../geometry/support/quantizationUtils.js\";import{isValid as o,equals as l}from\"../../../geometry/support/spatialReferenceUtils.js\";import u from\"./AttributesBuilder.js\";import{project as c}from\"./projectionSupport.js\";import{makeEdgeCandidate as d,makeVertexCandidate as m}from\"./SnappingCandidate.js\";import{cleanFromGeometryEngine as h,getGeometry as f,transformCentroid as g}from\"./utils.js\";import{isStringField as p}from\"../../support/fieldUtils.js\";import{isNullCountSupported as y,calculateStringStatistics as x,calculateStatistics as I,processSummaryStatisticsResult as T,calculateUniqueValuesCount as V,createUVResult as F,calculateClassBreaks as z,resolveCBResult as S,calculateHistogram as _,getAttributeComparator as b,calculatePercentile as v}from\"../../../statistics/utils.js\";import{loadArcade as R}from\"../../../support/arcadeOnDemand.js\";class A{constructor(e,t,i){this.items=e,this.query=t,this.geometryType=i.geometryType,this.hasM=i.hasM,this.hasZ=i.hasZ,this.fieldsIndex=i.fieldsIndex,this.objectIdField=i.objectIdField,this.spatialReference=i.spatialReference,this.featureAdapter=i.featureAdapter}get size(){return this.items.length}createQueryResponseForCount(){const e=new u(this.query,this.featureAdapter,this.fieldsIndex);if(!this.query.outStatistics)return e.countDistinctValues(this.items);const{groupByFieldsForStatistics:t,having:i,outStatistics:s}=this.query,a=t?.length;if(!!!a)return 1;const r=new Map,n=new Map,o=new Set;for(const l of s){const{statisticType:s}=l,a=\"exceedslimit\"!==s?l.onStatisticField:void 0;if(!n.has(a)){const i=[];for(const s of t){const t=this._getAttributeValues(e,s,r);i.push(t)}n.set(a,this._calculateUniqueValues(i,e.returnDistinctValues))}const u=n.get(a);for(const t in u){const{data:s,items:a}=u[t],r=s.join(\",\");i&&!e.validateItems(a,i)||o.add(r)}}return o.size}async createQueryResponse(){let e;if(this.query.outStatistics){e=this.query.outStatistics.some((e=>\"exceedslimit\"===e.statisticType))?this._createExceedsLimitQueryResponse(this.query):await this._createStatisticsQueryResponse(this.query)}else e=this._createFeatureQueryResponse(this.query);return this.query.returnQueryGeometry&&(o(this.query.outSR)&&!l(this.query.geometry.spatialReference,this.query.outSR)?e.queryGeometry=h({spatialReference:this.query.outSR,...c(this.query.geometry,this.query.geometry.spatialReference,this.query.outSR)}):e.queryGeometry=h({spatialReference:this.query.outSR,...this.query.geometry})),e}createSnappingResponse(t,i){const s=this.featureAdapter,a=N(this.hasZ,this.hasM),{point:r}=t,n=\"number\"==typeof t.distance?t.distance:t.distance.x,o=\"number\"==typeof t.distance?t.distance:t.distance.y,l={candidates:[]},u=\"esriGeometryPolygon\"===this.geometryType,c=null!=r.z,h=null!=r.m,f=this._getPointCreator(r,c,h,this.spatialReference,i),g=new D(null,0),p=new D(null,0),y={x:0,y:0,z:0};for(const x of this.items){const i=s.getGeometry(x);if(e(i))continue;const{coords:c,lengths:h}=i;if(g.coords=c,p.coords=c,t.types&q.EDGE){let e=0;for(let t=0;t<h.length;t++){const i=h[t];for(let t=0;t<i;t++,e+=a){const u=g;if(u.coordsIndex=e,t!==i-1){const t=p;t.coordsIndex=e+a;const i=y;E(y,r,u,t);const c=(r.x-i.x)/n,m=(r.y-i.y)/o,h=c*c+m*m;h<=1&&l.candidates.push(d(s.getObjectId(x),f(i),Math.sqrt(h),f(u),f(t)))}}}}if(t.types&q.VERTEX){const e=u?c.length-a:c.length;for(let t=0;t<e;t+=a){const e=g;e.coordsIndex=t;const i=(r.x-e.x)/n,a=(r.y-e.y)/o,u=i*i+a*a;u<=1&&l.candidates.push(m(s.getObjectId(x),f(e),Math.sqrt(u)))}}}return l.candidates.sort(((e,t)=>e.distance-t.distance)),l}_getPointCreator(e,i,s,a,r){const n=t(r)&&!l(a,r)?e=>c(e,a,r):e=>e,{hasZ:o}=this,u=0,d=e.m;return i&&s?o?({x:e,y:t,z:i})=>n({x:e,y:t,z:i,m:d}):({x:e,y:t})=>n({x:e,y:t,z:u,m:d}):i?o?({x:e,y:t,z:i})=>n({x:e,y:t,z:i}):({x:e,y:t})=>n({x:e,y:t,z:u}):s?({x:e,y:t})=>n({x:e,y:t,m:d}):({x:e,y:t})=>n({x:e,y:t})}async createSummaryStatisticsResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,minValue:n,maxValue:o,scale:l}=e,u=this.fieldsIndex.isDateField(t),c=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:l}),d=y({normalizationType:a,normalizationField:s,minValue:n,maxValue:o}),m=this.fieldsIndex.get(t),h={value:.5,fieldType:m?.type},f=p(m)?x({values:c,supportsNullCount:d,percentileParams:h}):I({values:c,minValue:n,maxValue:o,useSampleStdDev:!a,supportsNullCount:d,percentileParams:h});return T(f,u)}async createUniqueValuesResponse(e){const{field:t,valueExpression:i,domains:s,returnAllCodedValues:a,scale:r}=e,n=await this._getDataValues({field:t,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,valueExpression:i,scale:r}),o=V(n);return F(o,s,a,e.fieldDelimiter)}async createClassBreaksResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c,scale:d}=e,m=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:d}),h=z(m,{field:t,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c});return S(h,n)}async createHistogramResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c,scale:d}=e,m=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:d});return _(m,{field:t,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c})}_sortFeatures(e,t,i){if(e.length>1&&t&&t.length)for(const s of t.reverse()){const t=s.split(\" \"),a=t[0],r=this.fieldsIndex.get(a),n=t[1]&&\"desc\"===t[1].toLowerCase(),o=b(r?.type,n);e.sort(((e,t)=>{const s=i(e,a,r),n=i(t,a,r);return o(s,n)}))}}_createFeatureQueryResponse(e){const t=this.items,{geometryType:i,hasM:s,hasZ:a,objectIdField:r,spatialReference:o}=this,{outFields:l,outSR:u,quantizationParameters:c,resultRecordCount:d,resultOffset:m,returnZ:f,returnM:g}=e,p=null!=d&&t.length>(m||0)+d,y=l&&(l.includes(\"*\")?[...this.fieldsIndex.fields]:l.map((e=>this.fieldsIndex.get(e))));return{exceededTransferLimit:p,features:this._createFeatures(e,t),fields:y,geometryType:i,hasM:s&&g,hasZ:a&&f,objectIdFieldName:r,spatialReference:h(u||o),transform:c&&n(c)||null}}_createFeatures(e,t){const i=new u(e,this.featureAdapter,this.fieldsIndex),{hasM:s,hasZ:a}=this,{orderByFields:r,quantizationParameters:o,returnGeometry:l,returnCentroid:c,maxAllowableOffset:d,resultOffset:m,resultRecordCount:h,returnZ:p=!1,returnM:y=!1}=e,x=a&&p,I=s&&y;let T=[],V=0;const F=[...t];if(this._sortFeatures(F,r,((e,t,s)=>i.getFieldValue(e,t,s))),l||c){const e=n(o);if(l&&!c)for(const t of F)T[V++]={attributes:i.getAttributes(t),geometry:f(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,x,I)};else if(!l&&c)for(const t of F)T[V++]={attributes:i.getAttributes(t),centroid:g(this,this.featureAdapter.getCentroid(t,this),e)};else for(const t of F)T[V++]={attributes:i.getAttributes(t),centroid:g(this,this.featureAdapter.getCentroid(t,this),e),geometry:f(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,x,I)}}else for(const n of F){const e=i.getAttributes(n);e&&(T[V++]={attributes:e})}const z=m||0;if(null!=h){const e=z+h;T=T.slice(z,Math.min(T.length,e))}return T}_createExceedsLimitQueryResponse(e){let i=!1,s=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY;for(const t of e.outStatistics)if(\"exceedslimit\"===t.statisticType){s=null!=t.maxPointCount?t.maxPointCount:Number.POSITIVE_INFINITY,a=null!=t.maxRecordCount?t.maxRecordCount:Number.POSITIVE_INFINITY,r=null!=t.maxVertexCount?t.maxVertexCount:Number.POSITIVE_INFINITY;break}if(\"esriGeometryPoint\"===this.geometryType)i=this.items.length>s;else if(this.items.length>a)i=!0;else{const e=N(this.hasZ,this.hasM),s=this.featureAdapter;i=this.items.reduce(((e,i)=>{const a=s.getGeometry(i);return e+(t(a)&&a.coords.length||0)}),0)/e>r}return{fields:[{name:\"exceedslimit\",type:\"esriFieldTypeInteger\",alias:\"exceedslimit\",sqlType:\"sqlTypeInteger\",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(i)}}]}}async _createStatisticsQueryResponse(e){const t={attributes:{}},i=[],s=new Map,a=new Map,r=new Map,n=new Map,o=new u(e,this.featureAdapter,this.fieldsIndex),l=e.outStatistics,{groupByFieldsForStatistics:c,having:d,orderByFields:m}=e,h=c&&c.length,f=!!h,g=f&&c[0],p=f&&!this.fieldsIndex.get(g);for(const u of l){const{outStatisticFieldName:e,statisticType:l}=u,m=u,y=\"exceedslimit\"!==l?u.onStatisticField:void 0,x=\"percentile_disc\"===l||\"percentile_cont\"===l,I=\"EnvelopeAggregate\"===l||\"CentroidAggregate\"===l||\"ConvexHullAggregate\"===l,T=f&&1===h&&(y===g||p)&&\"count\"===l;if(f){if(!r.has(y)){const e=[];for(const t of c){const i=this._getAttributeValues(o,t,s);e.push(i)}r.set(y,this._calculateUniqueValues(e,!I&&o.returnDistinctValues))}const t=r.get(y);for(const i in t){const{count:a,data:r,items:l,itemPositions:u}=t[i],h=r.join(\",\");if(!d||o.validateItems(l,d)){const t=n.get(h)||{attributes:{}};if(I){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:i}=await this._getAggregateGeometry(m,l);t.aggregateGeometries[i]=e}else{let i=null;if(T)i=a;else{const e=this._getAttributeValues(o,y,s),t=u.map((t=>e[t]));i=x&&\"statisticParameters\"in m?this._getPercentileValue(m,t):this._getStatisticValue(m,t,null,o.returnDistinctValues)}t.attributes[e]=i}let i=0;c.forEach(((e,s)=>t.attributes[this.fieldsIndex.get(e)?e:\"EXPR_\"+ ++i]=r[s])),n.set(h,t)}}}else if(I){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:i}=await this._getAggregateGeometry(m,this.items);t.aggregateGeometries[i]=e}else{const i=this._getAttributeValues(o,y,s);t.attributes[e]=x&&\"statisticParameters\"in m?this._getPercentileValue(m,i):this._getStatisticValue(m,i,a,o.returnDistinctValues)}i.push({name:e,alias:e,type:\"esriFieldTypeDouble\"})}const y=f?Array.from(n.values()):[t];return this._sortFeatures(y,m,((e,t)=>e.attributes[t])),{fields:i,features:y}}async _getAggregateGeometry(e,t){const n=await import(\"../../../geometry/geometryEngineJSON.js\"),{statisticType:o,outStatisticFieldName:l}=e,{featureAdapter:u,spatialReference:c,geometryType:d,hasZ:m,hasM:h}=this,g=t.map((e=>f(d,m,h,u.getGeometry(e)))),p=n.convexHull(c,g,!0)[0],y={aggregateGeometries:null,outStatisticFieldName:null};if(\"EnvelopeAggregate\"===o){const e=p?a(p):r(n.union(c,g));y.aggregateGeometries={...e,spatialReference:c},y.outStatisticFieldName=l||\"extent\"}else if(\"CentroidAggregate\"===o){const e=p?i(p):s(r(n.union(c,g)));y.aggregateGeometries={x:e[0],y:e[1],spatialReference:c},y.outStatisticFieldName=l||\"centroid\"}else\"ConvexHullAggregate\"===o&&(y.aggregateGeometries=p,y.outStatisticFieldName=l||\"convexHull\");return y}_getStatisticValue(e,t,i,s){const{onStatisticField:a,statisticType:r}=e;let n=null;n=i?.has(a)?i.get(a):p(this.fieldsIndex.get(a))?x({values:t,returnDistinct:s}):I({values:t,minValue:null,maxValue:null,useSampleStdDev:!0}),i&&i.set(a,n);return n[\"var\"===r?\"variance\":r]}_getPercentileValue(e,t){const{onStatisticField:i,statisticParameters:s,statisticType:a}=e,{value:r,orderBy:n}=s,o=this.fieldsIndex.get(i);return v(t,{value:r,orderBy:n,fieldType:o?.type,isDiscrete:\"percentile_disc\"===a})}_getAttributeValues(e,t,i){if(i.has(t))return i.get(t);const s=this.fieldsIndex.get(t),a=this.items.map((i=>e.getFieldValue(i,t,s)));return i.set(t,a),a}_getAttributeDataValues(e,t){return this.items.map((i=>e.getDataValue(i,{field:t.field,field2:t.field2,field3:t.field3,fieldDelimiter:t.fieldDelimiter,normalizationField:t.normalizationField,normalizationType:t.normalizationType,normalizationTotal:t.normalizationTotal})))}async _getAttributeExpressionValues(e,t,i){const{arcadeUtils:s}=await R(),a=s.createFunction(t),r=i&&s.getViewInfo(i);return e.getExpressionValues(this.items,a,r,s)}_calculateUniqueValues(e,t){const i={},s=this.items,a=s.length;for(let r=0;r<a;r++){const a=s[r],n=[];for(const t of e)n.push(t[r]);const o=n.join(\",\");t?null==i[o]&&(i[o]={count:1,data:n,items:[a],itemPositions:[r]}):null==i[o]?i[o]={count:1,data:n,items:[a],itemPositions:[r]}:(i[o].count++,i[o].items.push(a),i[o].itemPositions.push(r))}return i}async _getDataValues(e){const t=new u(this.query,this.featureAdapter,this.fieldsIndex),{valueExpression:i,field:s,normalizationField:a,normalizationType:r,normalizationTotal:n,scale:o}=e,l=i?{viewingMode:\"map\",scale:o,spatialReference:this.query.outSR||this.spatialReference}:null;return i?this._getAttributeExpressionValues(t,i,l):this._getAttributeDataValues(t,{field:s,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,normalizationField:a,normalizationType:r,normalizationTotal:n})}}function E(e,t,i,s){const a=s.x-i.x,r=s.y-i.y,n=a*a+r*r,o=(t.x-i.x)*a+(t.y-i.y)*r,l=Math.min(1,Math.max(0,o/n));e.x=i.x+a*l,e.y=i.y+r*l}function N(e,t){return e?t?4:3:t?3:2}var q;!function(e){e[e.NONE=0]=\"NONE\",e[e.EDGE=1]=\"EDGE\",e[e.VERTEX=2]=\"VERTEX\"}(q||(q={}));class D{constructor(e,t){this.coords=e,this.coordsIndex=t}get x(){return this.coords[this.coordsIndex]}get y(){return this.coords[this.coordsIndex+1]}get z(){return this.coords[this.coordsIndex+2]}}export{A as QueryEngineResult,q as SnappingTypes};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAAOA,MAAM,IAAIC,CAAjB,EAAmBC,MAAM,IAAIC,CAA7B,QAAmC,wBAAnC;AAA4D,SAAOC,eAAe,IAAIC,CAA1B,EAA4BC,cAAc,IAAIC,CAA9C,QAAoD,uCAApD;AAA4F,SAAOC,gBAAgB,IAAIC,CAA3B,EAA6BC,iBAAiB,IAAIC,CAAlD,QAAwD,0CAAxD;AAAmG,SAAOC,uBAAuB,IAAIC,CAAlC,QAAwC,gDAAxC;AAAyF,SAAOC,OAAO,IAAIC,CAAlB,EAAoBC,MAAM,IAAIC,CAA9B,QAAoC,oDAApC;AAAyF,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,wBAAxB;AAAiD,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,mBAAmB,IAAIC,CAArD,QAA2D,wBAA3D;AAAoF,SAAOC,uBAAuB,IAAIC,CAAlC,EAAoCC,WAAW,IAAIC,CAAnD,EAAqDC,iBAAiB,IAAIC,CAA1E,QAAgF,YAAhF;AAA6F,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,6BAA9B;AAA4D,SAAOC,oBAAoB,IAAIC,CAA/B,EAAiCC,yBAAyB,IAAIC,CAA9D,EAAgEC,mBAAmB,IAAIC,CAAvF,EAAyFC,8BAA8B,IAAIC,CAA3H,EAA6HC,0BAA0B,IAAIC,CAA3J,EAA6JC,cAAc,IAAIC,CAA/K,EAAiLC,oBAAoB,IAAIC,CAAzM,EAA2MC,eAAe,IAAIC,CAA9N,EAAgOC,kBAAkB,IAAIC,CAAtP,EAAwPC,sBAAsB,IAAIC,CAAlR,EAAoRC,mBAAmB,IAAIC,CAA3S,QAAiT,8BAAjT;AAAgV,SAAOC,UAAU,IAAIC,CAArB,QAA2B,oCAA3B;;AAAgE,MAAMC,CAAN,CAAO;EAACC,WAAW,CAACzD,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;IAAC,KAAKsD,KAAL,GAAW1D,CAAX,EAAa,KAAK2D,KAAL,GAAWzD,CAAxB,EAA0B,KAAK0D,YAAL,GAAkBxD,CAAC,CAACwD,YAA9C,EAA2D,KAAKC,IAAL,GAAUzD,CAAC,CAACyD,IAAvE,EAA4E,KAAKC,IAAL,GAAU1D,CAAC,CAAC0D,IAAxF,EAA6F,KAAKC,WAAL,GAAiB3D,CAAC,CAAC2D,WAAhH,EAA4H,KAAKC,aAAL,GAAmB5D,CAAC,CAAC4D,aAAjJ,EAA+J,KAAKC,gBAAL,GAAsB7D,CAAC,CAAC6D,gBAAvL,EAAwM,KAAKC,cAAL,GAAoB9D,CAAC,CAAC8D,cAA9N;EAA6O;;EAAQ,IAAJC,IAAI,GAAE;IAAC,OAAO,KAAKT,KAAL,CAAWU,MAAlB;EAAyB;;EAAAC,2BAA2B,GAAE;IAAC,MAAMrE,CAAC,GAAC,IAAIiB,CAAJ,CAAM,KAAK0C,KAAX,EAAiB,KAAKO,cAAtB,EAAqC,KAAKH,WAA1C,CAAR;IAA+D,IAAG,CAAC,KAAKJ,KAAL,CAAWW,aAAf,EAA6B,OAAOtE,CAAC,CAACuE,mBAAF,CAAsB,KAAKb,KAA3B,CAAP;IAAyC,MAAK;MAACc,0BAA0B,EAACtE,CAA5B;MAA8BuE,MAAM,EAACrE,CAArC;MAAuCkE,aAAa,EAAChE;IAArD,IAAwD,KAAKqD,KAAlE;IAAA,MAAwEnD,CAAC,GAACN,CAAC,EAAEkE,MAA7E;IAAoF,IAAG,CAAC,CAAC,CAAC5D,CAAN,EAAQ,OAAO,CAAP;IAAS,MAAME,CAAC,GAAC,IAAIgE,GAAJ,EAAR;IAAA,MAAgB9D,CAAC,GAAC,IAAI8D,GAAJ,EAAlB;IAAA,MAA0B5D,CAAC,GAAC,IAAI6D,GAAJ,EAA5B;;IAAoC,KAAI,MAAM3D,CAAV,IAAeV,CAAf,EAAiB;MAAC,MAAK;QAACsE,aAAa,EAACtE;MAAf,IAAkBU,CAAvB;MAAA,MAAyBR,CAAC,GAAC,mBAAiBF,CAAjB,GAAmBU,CAAC,CAAC6D,gBAArB,GAAsC,KAAK,CAAtE;;MAAwE,IAAG,CAACjE,CAAC,CAACkE,GAAF,CAAMtE,CAAN,CAAJ,EAAa;QAAC,MAAMJ,CAAC,GAAC,EAAR;;QAAW,KAAI,MAAME,CAAV,IAAeJ,CAAf,EAAiB;UAAC,MAAMA,CAAC,GAAC,KAAK6E,mBAAL,CAAyB/E,CAAzB,EAA2BM,CAA3B,EAA6BI,CAA7B,CAAR;;UAAwCN,CAAC,CAAC4E,IAAF,CAAO9E,CAAP;QAAU;;QAAAU,CAAC,CAACqE,GAAF,CAAMzE,CAAN,EAAQ,KAAK0E,sBAAL,CAA4B9E,CAA5B,EAA8BJ,CAAC,CAACmF,oBAAhC,CAAR;MAA+D;;MAAA,MAAMlE,CAAC,GAACL,CAAC,CAACwE,GAAF,CAAM5E,CAAN,CAAR;;MAAiB,KAAI,MAAMN,CAAV,IAAee,CAAf,EAAiB;QAAC,MAAK;UAACoE,IAAI,EAAC/E,CAAN;UAAQoD,KAAK,EAAClD;QAAd,IAAiBS,CAAC,CAACf,CAAD,CAAvB;QAAA,MAA2BQ,CAAC,GAACJ,CAAC,CAACgF,IAAF,CAAO,GAAP,CAA7B;QAAyClF,CAAC,IAAE,CAACJ,CAAC,CAACuF,aAAF,CAAgB/E,CAAhB,EAAkBJ,CAAlB,CAAJ,IAA0BU,CAAC,CAAC0E,GAAF,CAAM9E,CAAN,CAA1B;MAAmC;IAAC;;IAAA,OAAOI,CAAC,CAACqD,IAAT;EAAc;;EAAyB,MAAnBsB,mBAAmB,GAAE;IAAC,IAAIzF,CAAJ;;IAAM,IAAG,KAAK2D,KAAL,CAAWW,aAAd,EAA4B;MAACtE,CAAC,GAAC,KAAK2D,KAAL,CAAWW,aAAX,CAAyBoB,IAAzB,CAA+B1F,CAAC,IAAE,mBAAiBA,CAAC,CAAC4E,aAArD,IAAqE,KAAKe,gCAAL,CAAsC,KAAKhC,KAA3C,CAArE,GAAuH,MAAM,KAAKiC,8BAAL,CAAoC,KAAKjC,KAAzC,CAA/H;IAA+K,CAA5M,MAAiN3D,CAAC,GAAC,KAAK6F,2BAAL,CAAiC,KAAKlC,KAAtC,CAAF;;IAA+C,OAAO,KAAKA,KAAL,CAAWmC,mBAAX,KAAiChF,CAAC,CAAC,KAAK6C,KAAL,CAAWoC,KAAZ,CAAD,IAAqB,CAAC/E,CAAC,CAAC,KAAK2C,KAAL,CAAWqC,QAAX,CAAoB/B,gBAArB,EAAsC,KAAKN,KAAL,CAAWoC,KAAjD,CAAvB,GAA+E/F,CAAC,CAACiG,aAAF,GAAgBxE,CAAC,CAAC;MAACwC,gBAAgB,EAAC,KAAKN,KAAL,CAAWoC,KAA7B;MAAmC,GAAG5E,CAAC,CAAC,KAAKwC,KAAL,CAAWqC,QAAZ,EAAqB,KAAKrC,KAAL,CAAWqC,QAAX,CAAoB/B,gBAAzC,EAA0D,KAAKN,KAAL,CAAWoC,KAArE;IAAvC,CAAD,CAAhG,GAAsN/F,CAAC,CAACiG,aAAF,GAAgBxE,CAAC,CAAC;MAACwC,gBAAgB,EAAC,KAAKN,KAAL,CAAWoC,KAA7B;MAAmC,GAAG,KAAKpC,KAAL,CAAWqC;IAAjD,CAAD,CAAxQ,GAAsUhG,CAA7U;EAA+U;;EAAAkG,sBAAsB,CAAChG,CAAD,EAAGE,CAAH,EAAK;IAAC,MAAME,CAAC,GAAC,KAAK4D,cAAb;IAAA,MAA4B1D,CAAC,GAAC2F,CAAC,CAAC,KAAKrC,IAAN,EAAW,KAAKD,IAAhB,CAA/B;IAAA,MAAqD;MAACuC,KAAK,EAAC1F;IAAP,IAAUR,CAA/D;IAAA,MAAiEU,CAAC,GAAC,YAAU,OAAOV,CAAC,CAACmG,QAAnB,GAA4BnG,CAAC,CAACmG,QAA9B,GAAuCnG,CAAC,CAACmG,QAAF,CAAWlE,CAArH;IAAA,MAAuHrB,CAAC,GAAC,YAAU,OAAOZ,CAAC,CAACmG,QAAnB,GAA4BnG,CAAC,CAACmG,QAA9B,GAAuCnG,CAAC,CAACmG,QAAF,CAAWpE,CAA3K;IAAA,MAA6KjB,CAAC,GAAC;MAACsF,UAAU,EAAC;IAAZ,CAA/K;IAAA,MAA+LrF,CAAC,GAAC,0BAAwB,KAAK2C,YAA9N;IAAA,MAA2OzC,CAAC,GAAC,QAAMT,CAAC,CAACmC,CAArP;IAAA,MAAuPpB,CAAC,GAAC,QAAMf,CAAC,CAACa,CAAjQ;IAAA,MAAmQI,CAAC,GAAC,KAAK4E,gBAAL,CAAsB7F,CAAtB,EAAwBS,CAAxB,EAA0BM,CAA1B,EAA4B,KAAKwC,gBAAjC,EAAkD7D,CAAlD,CAArQ;IAAA,MAA0TyB,CAAC,GAAC,IAAI2E,CAAJ,CAAM,IAAN,EAAW,CAAX,CAA5T;IAAA,MAA0UzE,CAAC,GAAC,IAAIyE,CAAJ,CAAM,IAAN,EAAW,CAAX,CAA5U;IAAA,MAA0VvE,CAAC,GAAC;MAACE,CAAC,EAAC,CAAH;MAAKF,CAAC,EAAC,CAAP;MAASY,CAAC,EAAC;IAAX,CAA5V;;IAA0W,KAAI,MAAMV,CAAV,IAAe,KAAKuB,KAApB,EAA0B;MAAC,MAAMtD,CAAC,GAACE,CAAC,CAACoB,WAAF,CAAcS,CAAd,CAAR;MAAyB,IAAGnC,CAAC,CAACI,CAAD,CAAJ,EAAQ;MAAS,MAAK;QAACqG,MAAM,EAACtF,CAAR;QAAUuF,OAAO,EAACjF;MAAlB,IAAqBrB,CAA1B;;MAA4B,IAAGyB,CAAC,CAAC4E,MAAF,GAAStF,CAAT,EAAWY,CAAC,CAAC0E,MAAF,GAAStF,CAApB,EAAsBjB,CAAC,CAACyG,KAAF,GAAQC,CAAC,CAACC,IAAnC,EAAwC;QAAC,IAAI7G,CAAC,GAAC,CAAN;;QAAQ,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACuB,CAAC,CAAC2C,MAAhB,EAAuBlE,CAAC,EAAxB,EAA2B;UAAC,MAAME,CAAC,GAACqB,CAAC,CAACvB,CAAD,CAAT;;UAAa,KAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAd,EAAgBF,CAAC,IAAGF,CAAC,IAAEQ,CAAvB,EAAyB;YAAC,MAAMS,CAAC,GAACY,CAAR;;YAAU,IAAGZ,CAAC,CAAC6F,WAAF,GAAc9G,CAAd,EAAgBE,CAAC,KAAGE,CAAC,GAAC,CAAzB,EAA2B;cAAC,MAAMF,CAAC,GAAC6B,CAAR;cAAU7B,CAAC,CAAC4G,WAAF,GAAc9G,CAAC,GAACQ,CAAhB;cAAkB,MAAMJ,CAAC,GAAC6B,CAAR;cAAU8E,CAAC,CAAC9E,CAAD,EAAGvB,CAAH,EAAKO,CAAL,EAAOf,CAAP,CAAD;cAAW,MAAMiB,CAAC,GAAC,CAACT,CAAC,CAACyB,CAAF,GAAI/B,CAAC,CAAC+B,CAAP,IAAUvB,CAAlB;cAAA,MAAoBW,CAAC,GAAC,CAACb,CAAC,CAACuB,CAAF,GAAI7B,CAAC,CAAC6B,CAAP,IAAUnB,CAAhC;cAAA,MAAkCW,CAAC,GAACN,CAAC,GAACA,CAAF,GAAII,CAAC,GAACA,CAA1C;cAA4CE,CAAC,IAAE,CAAH,IAAMT,CAAC,CAACsF,UAAF,CAAatB,IAAb,CAAkB3D,CAAC,CAACf,CAAC,CAAC0G,WAAF,CAAc7E,CAAd,CAAD,EAAkBR,CAAC,CAACvB,CAAD,CAAnB,EAAuB6G,IAAI,CAACC,IAAL,CAAUzF,CAAV,CAAvB,EAAoCE,CAAC,CAACV,CAAD,CAArC,EAAyCU,CAAC,CAACzB,CAAD,CAA1C,CAAnB,CAAN;YAAyE;UAAC;QAAC;MAAC;;MAAA,IAAGA,CAAC,CAACyG,KAAF,GAAQC,CAAC,CAACO,MAAb,EAAoB;QAAC,MAAMnH,CAAC,GAACiB,CAAC,GAACE,CAAC,CAACiD,MAAF,GAAS5D,CAAV,GAAYW,CAAC,CAACiD,MAAvB;;QAA8B,KAAI,IAAIlE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgBE,CAAC,IAAEM,CAAnB,EAAqB;UAAC,MAAMR,CAAC,GAAC6B,CAAR;UAAU7B,CAAC,CAAC8G,WAAF,GAAc5G,CAAd;UAAgB,MAAME,CAAC,GAAC,CAACM,CAAC,CAACyB,CAAF,GAAInC,CAAC,CAACmC,CAAP,IAAUvB,CAAlB;UAAA,MAAoBJ,CAAC,GAAC,CAACE,CAAC,CAACuB,CAAF,GAAIjC,CAAC,CAACiC,CAAP,IAAUnB,CAAhC;UAAA,MAAkCG,CAAC,GAACb,CAAC,GAACA,CAAF,GAAII,CAAC,GAACA,CAA1C;UAA4CS,CAAC,IAAE,CAAH,IAAMD,CAAC,CAACsF,UAAF,CAAatB,IAAb,CAAkBzD,CAAC,CAACjB,CAAC,CAAC0G,WAAF,CAAc7E,CAAd,CAAD,EAAkBR,CAAC,CAAC3B,CAAD,CAAnB,EAAuBiH,IAAI,CAACC,IAAL,CAAUjG,CAAV,CAAvB,CAAnB,CAAN;QAA+D;MAAC;IAAC;;IAAA,OAAOD,CAAC,CAACsF,UAAF,CAAac,IAAb,CAAmB,CAACpH,CAAD,EAAGE,CAAH,KAAOF,CAAC,CAACqG,QAAF,GAAWnG,CAAC,CAACmG,QAAvC,GAAkDrF,CAAzD;EAA2D;;EAAAuF,gBAAgB,CAACvG,CAAD,EAAGI,CAAH,EAAKE,CAAL,EAAOE,CAAP,EAASE,CAAT,EAAW;IAAC,MAAME,CAAC,GAACV,CAAC,CAACQ,CAAD,CAAD,IAAM,CAACM,CAAC,CAACR,CAAD,EAAGE,CAAH,CAAR,GAAcV,CAAC,IAAEmB,CAAC,CAACnB,CAAD,EAAGQ,CAAH,EAAKE,CAAL,CAAlB,GAA0BV,CAAC,IAAEA,CAArC;IAAA,MAAuC;MAAC8D,IAAI,EAAChD;IAAN,IAAS,IAAhD;IAAA,MAAqDG,CAAC,GAAC,CAAvD;IAAA,MAAyDI,CAAC,GAACrB,CAAC,CAACuB,CAA7D;IAA+D,OAAOnB,CAAC,IAAEE,CAAH,GAAKQ,CAAC,GAAC,CAAC;MAACqB,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B,CAAP;MAAS2C,CAAC,EAACzC;IAAX,CAAD,KAAiBQ,CAAC,CAAC;MAACuB,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B,CAAP;MAAS2C,CAAC,EAACzC,CAAX;MAAamB,CAAC,EAACF;IAAf,CAAD,CAAnB,GAAuC,CAAC;MAACc,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B;IAAP,CAAD,KAAaU,CAAC,CAAC;MAACuB,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B,CAAP;MAAS2C,CAAC,EAAC5B,CAAX;MAAaM,CAAC,EAACF;IAAf,CAAD,CAA3D,GAA+EjB,CAAC,GAACU,CAAC,GAAC,CAAC;MAACqB,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B,CAAP;MAAS2C,CAAC,EAACzC;IAAX,CAAD,KAAiBQ,CAAC,CAAC;MAACuB,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B,CAAP;MAAS2C,CAAC,EAACzC;IAAX,CAAD,CAAnB,GAAmC,CAAC;MAAC+B,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B;IAAP,CAAD,KAAaU,CAAC,CAAC;MAACuB,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B,CAAP;MAAS2C,CAAC,EAAC5B;IAAX,CAAD,CAAnD,GAAmEX,CAAC,GAAC,CAAC;MAAC6B,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B;IAAP,CAAD,KAAaU,CAAC,CAAC;MAACuB,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B,CAAP;MAASqB,CAAC,EAACF;IAAX,CAAD,CAAf,GAA+B,CAAC;MAACc,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B;IAAP,CAAD,KAAaU,CAAC,CAAC;MAACuB,CAAC,EAACnC,CAAH;MAAKiC,CAAC,EAAC/B;IAAP,CAAD,CAAxM;EAAoN;;EAAqC,MAA/BmH,+BAA+B,CAACrH,CAAD,EAAG;IAAC,MAAK;MAACsH,KAAK,EAACpH,CAAP;MAASqH,eAAe,EAACnH,CAAzB;MAA2BoH,kBAAkB,EAAClH,CAA9C;MAAgDmH,iBAAiB,EAACjH,CAAlE;MAAoEkH,kBAAkB,EAAChH,CAAvF;MAAyFiH,QAAQ,EAAC/G,CAAlG;MAAoGgH,QAAQ,EAAC9G,CAA7G;MAA+G+G,KAAK,EAAC7G;IAArH,IAAwHhB,CAA7H;IAAA,MAA+HiB,CAAC,GAAC,KAAK8C,WAAL,CAAiB+D,WAAjB,CAA6B5H,CAA7B,CAAjI;IAAA,MAAiKiB,CAAC,GAAC,MAAM,KAAK4G,cAAL,CAAoB;MAACT,KAAK,EAACpH,CAAP;MAASqH,eAAe,EAACnH,CAAzB;MAA2BoH,kBAAkB,EAAClH,CAA9C;MAAgDmH,iBAAiB,EAACjH,CAAlE;MAAoEkH,kBAAkB,EAAChH,CAAvF;MAAyFmH,KAAK,EAAC7G;IAA/F,CAApB,CAAzK;IAAA,MAAgSK,CAAC,GAACY,CAAC,CAAC;MAACwF,iBAAiB,EAACjH,CAAnB;MAAqBgH,kBAAkB,EAAClH,CAAxC;MAA0CqH,QAAQ,EAAC/G,CAAnD;MAAqDgH,QAAQ,EAAC9G;IAA9D,CAAD,CAAnS;IAAA,MAAsWS,CAAC,GAAC,KAAKwC,WAAL,CAAiBqB,GAAjB,CAAqBlF,CAArB,CAAxW;IAAA,MAAgYuB,CAAC,GAAC;MAACuG,KAAK,EAAC,EAAP;MAAUC,SAAS,EAAC1G,CAAC,EAAE2G;IAAvB,CAAlY;IAAA,MAA+ZvG,CAAC,GAACI,CAAC,CAACR,CAAD,CAAD,GAAKY,CAAC,CAAC;MAACgG,MAAM,EAAChH,CAAR;MAAUiH,iBAAiB,EAAC/G,CAA5B;MAA8BgH,gBAAgB,EAAC5G;IAA/C,CAAD,CAAN,GAA0DY,CAAC,CAAC;MAAC8F,MAAM,EAAChH,CAAR;MAAUwG,QAAQ,EAAC/G,CAAnB;MAAqBgH,QAAQ,EAAC9G,CAA9B;MAAgCwH,eAAe,EAAC,CAAC9H,CAAjD;MAAmD4H,iBAAiB,EAAC/G,CAArE;MAAuEgH,gBAAgB,EAAC5G;IAAxF,CAAD,CAA5d;IAAyjB,OAAOc,CAAC,CAACZ,CAAD,EAAGV,CAAH,CAAR;EAAc;;EAAgC,MAA1BsH,0BAA0B,CAACvI,CAAD,EAAG;IAAC,MAAK;MAACsH,KAAK,EAACpH,CAAP;MAASqH,eAAe,EAACnH,CAAzB;MAA2BoI,OAAO,EAAClI,CAAnC;MAAqCmI,oBAAoB,EAACjI,CAA1D;MAA4DqH,KAAK,EAACnH;IAAlE,IAAqEV,CAA1E;IAAA,MAA4EY,CAAC,GAAC,MAAM,KAAKmH,cAAL,CAAoB;MAACT,KAAK,EAACpH,CAAP;MAASwI,MAAM,EAAC1I,CAAC,CAAC0I,MAAlB;MAAyBC,MAAM,EAAC3I,CAAC,CAAC2I,MAAlC;MAAyCC,cAAc,EAAC5I,CAAC,CAAC4I,cAA1D;MAAyErB,eAAe,EAACnH,CAAzF;MAA2FyH,KAAK,EAACnH;IAAjG,CAApB,CAApF;IAAA,MAA6MI,CAAC,GAAC2B,CAAC,CAAC7B,CAAD,CAAhN;IAAoN,OAAO+B,CAAC,CAAC7B,CAAD,EAAGR,CAAH,EAAKE,CAAL,EAAOR,CAAC,CAAC4I,cAAT,CAAR;EAAiC;;EAA+B,MAAzBC,yBAAyB,CAAC7I,CAAD,EAAG;IAAC,MAAK;MAACsH,KAAK,EAACpH,CAAP;MAASqH,eAAe,EAACnH,CAAzB;MAA2BoH,kBAAkB,EAAClH,CAA9C;MAAgDmH,iBAAiB,EAACjH,CAAlE;MAAoEkH,kBAAkB,EAAChH,CAAvF;MAAyFoI,oBAAoB,EAAClI,CAA9G;MAAgHmI,yBAAyB,EAACjI,CAA1I;MAA4I6G,QAAQ,EAAC3G,CAArJ;MAAuJ4G,QAAQ,EAAC3G,CAAhK;MAAkK+H,UAAU,EAAC7H,CAA7K;MAA+K0G,KAAK,EAACxG;IAArL,IAAwLrB,CAA7L;IAAA,MAA+LuB,CAAC,GAAC,MAAM,KAAKwG,cAAL,CAAoB;MAACT,KAAK,EAACpH,CAAP;MAASqH,eAAe,EAACnH,CAAzB;MAA2BoH,kBAAkB,EAAClH,CAA9C;MAAgDmH,iBAAiB,EAACjH,CAAlE;MAAoEkH,kBAAkB,EAAChH,CAAvF;MAAyFmH,KAAK,EAACxG;IAA/F,CAApB,CAAvM;IAAA,MAA8TI,CAAC,GAACoB,CAAC,CAACtB,CAAD,EAAG;MAAC+F,KAAK,EAACpH,CAAP;MAASsH,kBAAkB,EAAClH,CAA5B;MAA8BmH,iBAAiB,EAACjH,CAAhD;MAAkDkH,kBAAkB,EAAChH,CAArE;MAAuEoI,oBAAoB,EAAClI,CAA5F;MAA8FmI,yBAAyB,EAACjI,CAAxH;MAA0H6G,QAAQ,EAAC3G,CAAnI;MAAqI4G,QAAQ,EAAC3G,CAA9I;MAAgJ+H,UAAU,EAAC7H;IAA3J,CAAH,CAAjU;IAAme,OAAO4B,CAAC,CAACtB,CAAD,EAAGb,CAAH,CAAR;EAAc;;EAA6B,MAAvBqI,uBAAuB,CAACjJ,CAAD,EAAG;IAAC,MAAK;MAACsH,KAAK,EAACpH,CAAP;MAASqH,eAAe,EAACnH,CAAzB;MAA2BoH,kBAAkB,EAAClH,CAA9C;MAAgDmH,iBAAiB,EAACjH,CAAlE;MAAoEkH,kBAAkB,EAAChH,CAAvF;MAAyFoI,oBAAoB,EAAClI,CAA9G;MAAgHmI,yBAAyB,EAACjI,CAA1I;MAA4I6G,QAAQ,EAAC3G,CAArJ;MAAuJ4G,QAAQ,EAAC3G,CAAhK;MAAkKiI,OAAO,EAAC/H,CAA1K;MAA4K0G,KAAK,EAACxG;IAAlL,IAAqLrB,CAA1L;IAAA,MAA4LuB,CAAC,GAAC,MAAM,KAAKwG,cAAL,CAAoB;MAACT,KAAK,EAACpH,CAAP;MAASqH,eAAe,EAACnH,CAAzB;MAA2BoH,kBAAkB,EAAClH,CAA9C;MAAgDmH,iBAAiB,EAACjH,CAAlE;MAAoEkH,kBAAkB,EAAChH,CAAvF;MAAyFmH,KAAK,EAACxG;IAA/F,CAApB,CAApM;IAA2T,OAAO4B,CAAC,CAAC1B,CAAD,EAAG;MAAC+F,KAAK,EAACpH,CAAP;MAASsH,kBAAkB,EAAClH,CAA5B;MAA8BmH,iBAAiB,EAACjH,CAAhD;MAAkDkH,kBAAkB,EAAChH,CAArE;MAAuEoI,oBAAoB,EAAClI,CAA5F;MAA8FmI,yBAAyB,EAACjI,CAAxH;MAA0H6G,QAAQ,EAAC3G,CAAnI;MAAqI4G,QAAQ,EAAC3G,CAA9I;MAAgJiI,OAAO,EAAC/H;IAAxJ,CAAH,CAAR;EAAuK;;EAAAgI,aAAa,CAACnJ,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;IAAC,IAAGJ,CAAC,CAACoE,MAAF,GAAS,CAAT,IAAYlE,CAAZ,IAAeA,CAAC,CAACkE,MAApB,EAA2B,KAAI,MAAM9D,CAAV,IAAeJ,CAAC,CAACkJ,OAAF,EAAf,EAA2B;MAAC,MAAMlJ,CAAC,GAACI,CAAC,CAAC+I,KAAF,CAAQ,GAAR,CAAR;MAAA,MAAqB7I,CAAC,GAACN,CAAC,CAAC,CAAD,CAAxB;MAAA,MAA4BQ,CAAC,GAAC,KAAKqD,WAAL,CAAiBqB,GAAjB,CAAqB5E,CAArB,CAA9B;MAAA,MAAsDI,CAAC,GAACV,CAAC,CAAC,CAAD,CAAD,IAAM,WAASA,CAAC,CAAC,CAAD,CAAD,CAAKoJ,WAAL,EAAvE;MAAA,MAA0FxI,CAAC,GAACqC,CAAC,CAACzC,CAAC,EAAEwH,IAAJ,EAAStH,CAAT,CAA7F;MAAyGZ,CAAC,CAACoH,IAAF,CAAQ,CAACpH,CAAD,EAAGE,CAAH,KAAO;QAAC,MAAMI,CAAC,GAACF,CAAC,CAACJ,CAAD,EAAGQ,CAAH,EAAKE,CAAL,CAAT;QAAA,MAAiBE,CAAC,GAACR,CAAC,CAACF,CAAD,EAAGM,CAAH,EAAKE,CAAL,CAApB;QAA4B,OAAOI,CAAC,CAACR,CAAD,EAAGM,CAAH,CAAR;MAAc,CAA1D;IAA6D;EAAC;;EAAAiF,2BAA2B,CAAC7F,CAAD,EAAG;IAAC,MAAME,CAAC,GAAC,KAAKwD,KAAb;IAAA,MAAmB;MAACE,YAAY,EAACxD,CAAd;MAAgByD,IAAI,EAACvD,CAArB;MAAuBwD,IAAI,EAACtD,CAA5B;MAA8BwD,aAAa,EAACtD,CAA5C;MAA8CuD,gBAAgB,EAACnD;IAA/D,IAAkE,IAArF;IAAA,MAA0F;MAACyI,SAAS,EAACvI,CAAX;MAAa+E,KAAK,EAAC9E,CAAnB;MAAqBuI,sBAAsB,EAACrI,CAA5C;MAA8CsI,iBAAiB,EAACpI,CAAhE;MAAkEqI,YAAY,EAACnI,CAA/E;MAAiFoI,OAAO,EAAChI,CAAzF;MAA2FiI,OAAO,EAAC/H;IAAnG,IAAsG7B,CAAhM;IAAA,MAAkM+B,CAAC,GAAC,QAAMV,CAAN,IAASnB,CAAC,CAACkE,MAAF,GAAS,CAAC7C,CAAC,IAAE,CAAJ,IAAOF,CAA7N;IAAA,MAA+NY,CAAC,GAACjB,CAAC,KAAGA,CAAC,CAAC6I,QAAF,CAAW,GAAX,IAAgB,CAAC,GAAG,KAAK9F,WAAL,CAAiB+F,MAArB,CAAhB,GAA6C9I,CAAC,CAAC+I,GAAF,CAAO/J,CAAC,IAAE,KAAK+D,WAAL,CAAiBqB,GAAjB,CAAqBpF,CAArB,CAAV,CAAhD,CAAlO;IAAuT,OAAM;MAACgK,qBAAqB,EAACjI,CAAvB;MAAyBkI,QAAQ,EAAC,KAAKC,eAAL,CAAqBlK,CAArB,EAAuBE,CAAvB,CAAlC;MAA4D4J,MAAM,EAAC7H,CAAnE;MAAqE2B,YAAY,EAACxD,CAAlF;MAAoFyD,IAAI,EAACvD,CAAC,IAAEuB,CAA5F;MAA8FiC,IAAI,EAACtD,CAAC,IAAEmB,CAAtG;MAAwGwI,iBAAiB,EAACzJ,CAA1H;MAA4HuD,gBAAgB,EAACxC,CAAC,CAACR,CAAC,IAAEH,CAAJ,CAA9I;MAAqJsJ,SAAS,EAACjJ,CAAC,IAAEP,CAAC,CAACO,CAAD,CAAJ,IAAS;IAAxK,CAAN;EAAoL;;EAAA+I,eAAe,CAAClK,CAAD,EAAGE,CAAH,EAAK;IAAC,MAAME,CAAC,GAAC,IAAIa,CAAJ,CAAMjB,CAAN,EAAQ,KAAKkE,cAAb,EAA4B,KAAKH,WAAjC,CAAR;IAAA,MAAsD;MAACF,IAAI,EAACvD,CAAN;MAAQwD,IAAI,EAACtD;IAAb,IAAgB,IAAtE;IAAA,MAA2E;MAAC6J,aAAa,EAAC3J,CAAf;MAAiB8I,sBAAsB,EAAC1I,CAAxC;MAA0CwJ,cAAc,EAACtJ,CAAzD;MAA2DuJ,cAAc,EAACpJ,CAA1E;MAA4EqJ,kBAAkB,EAACnJ,CAA/F;MAAiGqI,YAAY,EAACnI,CAA9G;MAAgHkI,iBAAiB,EAAChI,CAAlI;MAAoIkI,OAAO,EAAC5H,CAAC,GAAC,CAAC,CAA/I;MAAiJ6H,OAAO,EAAC3H,CAAC,GAAC,CAAC;IAA5J,IAA+JjC,CAA1O;IAAA,MAA4OmC,CAAC,GAAC3B,CAAC,IAAEuB,CAAjP;IAAA,MAAmPM,CAAC,GAAC/B,CAAC,IAAE2B,CAAxP;IAA0P,IAAIM,CAAC,GAAC,EAAN;IAAA,IAASE,CAAC,GAAC,CAAX;IAAa,MAAME,CAAC,GAAC,CAAC,GAAGzC,CAAJ,CAAR;;IAAe,IAAG,KAAKiJ,aAAL,CAAmBxG,CAAnB,EAAqBjC,CAArB,EAAwB,CAACV,CAAD,EAAGE,CAAH,EAAKI,CAAL,KAASF,CAAC,CAACqK,aAAF,CAAgBzK,CAAhB,EAAkBE,CAAlB,EAAoBI,CAApB,CAAjC,GAA0DU,CAAC,IAAEG,CAAhE,EAAkE;MAAC,MAAMnB,CAAC,GAACY,CAAC,CAACE,CAAD,CAAT;MAAa,IAAGE,CAAC,IAAE,CAACG,CAAP,EAAS,KAAI,MAAMjB,CAAV,IAAeyC,CAAf,EAAiBJ,CAAC,CAACE,CAAC,EAAF,CAAD,GAAO;QAACiI,UAAU,EAACtK,CAAC,CAACuK,aAAF,CAAgBzK,CAAhB,CAAZ;QAA+B8F,QAAQ,EAACrE,CAAC,CAAC,KAAKiC,YAAN,EAAmB,KAAKE,IAAxB,EAA6B,KAAKD,IAAlC,EAAuC,KAAKK,cAAL,CAAoBxC,WAApB,CAAgCxB,CAAhC,CAAvC,EAA0EmB,CAA1E,EAA4ErB,CAA5E,EAA8EmC,CAA9E,EAAgFE,CAAhF;MAAzC,CAAP,CAA1B,KAAmK,IAAG,CAACrB,CAAD,IAAIG,CAAP,EAAS,KAAI,MAAMjB,CAAV,IAAeyC,CAAf,EAAiBJ,CAAC,CAACE,CAAC,EAAF,CAAD,GAAO;QAACiI,UAAU,EAACtK,CAAC,CAACuK,aAAF,CAAgBzK,CAAhB,CAAZ;QAA+B0K,QAAQ,EAAC/I,CAAC,CAAC,IAAD,EAAM,KAAKqC,cAAL,CAAoB2G,WAApB,CAAgC3K,CAAhC,EAAkC,IAAlC,CAAN,EAA8CF,CAA9C;MAAzC,CAAP,CAA1B,KAAiI,KAAI,MAAME,CAAV,IAAeyC,CAAf,EAAiBJ,CAAC,CAACE,CAAC,EAAF,CAAD,GAAO;QAACiI,UAAU,EAACtK,CAAC,CAACuK,aAAF,CAAgBzK,CAAhB,CAAZ;QAA+B0K,QAAQ,EAAC/I,CAAC,CAAC,IAAD,EAAM,KAAKqC,cAAL,CAAoB2G,WAApB,CAAgC3K,CAAhC,EAAkC,IAAlC,CAAN,EAA8CF,CAA9C,CAAzC;QAA0FgG,QAAQ,EAACrE,CAAC,CAAC,KAAKiC,YAAN,EAAmB,KAAKE,IAAxB,EAA6B,KAAKD,IAAlC,EAAuC,KAAKK,cAAL,CAAoBxC,WAApB,CAAgCxB,CAAhC,CAAvC,EAA0EmB,CAA1E,EAA4ErB,CAA5E,EAA8EmC,CAA9E,EAAgFE,CAAhF;MAApG,CAAP;IAA+L,CAApkB,MAAykB,KAAI,MAAMzB,CAAV,IAAe+B,CAAf,EAAiB;MAAC,MAAM3C,CAAC,GAACI,CAAC,CAACuK,aAAF,CAAgB/J,CAAhB,CAAR;MAA2BZ,CAAC,KAAGuC,CAAC,CAACE,CAAC,EAAF,CAAD,GAAO;QAACiI,UAAU,EAAC1K;MAAZ,CAAV,CAAD;IAA2B;;IAAA,MAAM6C,CAAC,GAACtB,CAAC,IAAE,CAAX;;IAAa,IAAG,QAAME,CAAT,EAAW;MAAC,MAAMzB,CAAC,GAAC6C,CAAC,GAACpB,CAAV;MAAYc,CAAC,GAACA,CAAC,CAACuI,KAAF,CAAQjI,CAAR,EAAUoE,IAAI,CAAC8D,GAAL,CAASxI,CAAC,CAAC6B,MAAX,EAAkBpE,CAAlB,CAAV,CAAF;IAAkC;;IAAA,OAAOuC,CAAP;EAAS;;EAAAoD,gCAAgC,CAAC3F,CAAD,EAAG;IAAC,IAAII,CAAC,GAAC,CAAC,CAAP;IAAA,IAASE,CAAC,GAAC0K,MAAM,CAACC,iBAAlB;IAAA,IAAoCzK,CAAC,GAACwK,MAAM,CAACC,iBAA7C;IAAA,IAA+DvK,CAAC,GAACsK,MAAM,CAACC,iBAAxE;;IAA0F,KAAI,MAAM/K,CAAV,IAAeF,CAAC,CAACsE,aAAjB,EAA+B,IAAG,mBAAiBpE,CAAC,CAAC0E,aAAtB,EAAoC;MAACtE,CAAC,GAAC,QAAMJ,CAAC,CAACgL,aAAR,GAAsBhL,CAAC,CAACgL,aAAxB,GAAsCF,MAAM,CAACC,iBAA/C,EAAiEzK,CAAC,GAAC,QAAMN,CAAC,CAACiL,cAAR,GAAuBjL,CAAC,CAACiL,cAAzB,GAAwCH,MAAM,CAACC,iBAAlH,EAAoIvK,CAAC,GAAC,QAAMR,CAAC,CAACkL,cAAR,GAAuBlL,CAAC,CAACkL,cAAzB,GAAwCJ,MAAM,CAACC,iBAArL;MAAuM;IAAM;;IAAA,IAAG,wBAAsB,KAAKrH,YAA9B,EAA2CxD,CAAC,GAAC,KAAKsD,KAAL,CAAWU,MAAX,GAAkB9D,CAApB,CAA3C,KAAsE,IAAG,KAAKoD,KAAL,CAAWU,MAAX,GAAkB5D,CAArB,EAAuBJ,CAAC,GAAC,CAAC,CAAH,CAAvB,KAAgC;MAAC,MAAMJ,CAAC,GAACmG,CAAC,CAAC,KAAKrC,IAAN,EAAW,KAAKD,IAAhB,CAAT;MAAA,MAA+BvD,CAAC,GAAC,KAAK4D,cAAtC;MAAqD9D,CAAC,GAAC,KAAKsD,KAAL,CAAW2H,MAAX,CAAmB,CAACrL,CAAD,EAAGI,CAAH,KAAO;QAAC,MAAMI,CAAC,GAACF,CAAC,CAACoB,WAAF,CAActB,CAAd,CAAR;QAAyB,OAAOJ,CAAC,IAAEE,CAAC,CAACM,CAAD,CAAD,IAAMA,CAAC,CAACiG,MAAF,CAASrC,MAAf,IAAuB,CAAzB,CAAR;MAAoC,CAAxF,EAA0F,CAA1F,IAA6FpE,CAA7F,GAA+FU,CAAjG;IAAmG;IAAA,OAAM;MAACoJ,MAAM,EAAC,CAAC;QAACwB,IAAI,EAAC,cAAN;QAAqBpD,IAAI,EAAC,sBAA1B;QAAiDqD,KAAK,EAAC,cAAvD;QAAsEC,OAAO,EAAC,gBAA9E;QAA+FC,MAAM,EAAC,IAAtG;QAA2GC,YAAY,EAAC;MAAxH,CAAD,CAAR;MAAwIzB,QAAQ,EAAC,CAAC;QAACS,UAAU,EAAC;UAACiB,YAAY,EAACX,MAAM,CAAC5K,CAAD;QAApB;MAAZ,CAAD;IAAjJ,CAAN;EAAgM;;EAAoC,MAA9BwF,8BAA8B,CAAC5F,CAAD,EAAG;IAAC,MAAME,CAAC,GAAC;MAACwK,UAAU,EAAC;IAAZ,CAAR;IAAA,MAAwBtK,CAAC,GAAC,EAA1B;IAAA,MAA6BE,CAAC,GAAC,IAAIoE,GAAJ,EAA/B;IAAA,MAAuClE,CAAC,GAAC,IAAIkE,GAAJ,EAAzC;IAAA,MAAiDhE,CAAC,GAAC,IAAIgE,GAAJ,EAAnD;IAAA,MAA2D9D,CAAC,GAAC,IAAI8D,GAAJ,EAA7D;IAAA,MAAqE5D,CAAC,GAAC,IAAIG,CAAJ,CAAMjB,CAAN,EAAQ,KAAKkE,cAAb,EAA4B,KAAKH,WAAjC,CAAvE;IAAA,MAAqH/C,CAAC,GAAChB,CAAC,CAACsE,aAAzH;IAAA,MAAuI;MAACE,0BAA0B,EAACrD,CAA5B;MAA8BsD,MAAM,EAACpD,CAArC;MAAuCgJ,aAAa,EAAC9I;IAArD,IAAwDvB,CAA/L;IAAA,MAAiMyB,CAAC,GAACN,CAAC,IAAEA,CAAC,CAACiD,MAAxM;IAAA,MAA+MzC,CAAC,GAAC,CAAC,CAACF,CAAnN;IAAA,MAAqNI,CAAC,GAACF,CAAC,IAAER,CAAC,CAAC,CAAD,CAA3N;IAAA,MAA+NY,CAAC,GAACJ,CAAC,IAAE,CAAC,KAAKoC,WAAL,CAAiBqB,GAAjB,CAAqBvD,CAArB,CAArO;;IAA6P,KAAI,MAAMZ,CAAV,IAAeD,CAAf,EAAiB;MAAC,MAAK;QAAC4K,qBAAqB,EAAC5L,CAAvB;QAAyB4E,aAAa,EAAC5D;MAAvC,IAA0CC,CAA/C;MAAA,MAAiDM,CAAC,GAACN,CAAnD;MAAA,MAAqDgB,CAAC,GAAC,mBAAiBjB,CAAjB,GAAmBC,CAAC,CAAC4D,gBAArB,GAAsC,KAAK,CAAlG;MAAA,MAAoG1C,CAAC,GAAC,sBAAoBnB,CAApB,IAAuB,sBAAoBA,CAAjJ;MAAA,MAAmJqB,CAAC,GAAC,wBAAsBrB,CAAtB,IAAyB,wBAAsBA,CAA/C,IAAkD,0BAAwBA,CAA/N;MAAA,MAAiOuB,CAAC,GAACZ,CAAC,IAAE,MAAIF,CAAP,KAAWQ,CAAC,KAAGJ,CAAJ,IAAOE,CAAlB,KAAsB,YAAUf,CAAnQ;;MAAqQ,IAAGW,CAAH,EAAK;QAAC,IAAG,CAACjB,CAAC,CAACoE,GAAF,CAAM7C,CAAN,CAAJ,EAAa;UAAC,MAAMjC,CAAC,GAAC,EAAR;;UAAW,KAAI,MAAME,CAAV,IAAeiB,CAAf,EAAiB;YAAC,MAAMf,CAAC,GAAC,KAAK2E,mBAAL,CAAyBjE,CAAzB,EAA2BZ,CAA3B,EAA6BI,CAA7B,CAAR;;YAAwCN,CAAC,CAACgF,IAAF,CAAO5E,CAAP;UAAU;;UAAAM,CAAC,CAACuE,GAAF,CAAMhD,CAAN,EAAQ,KAAKiD,sBAAL,CAA4BlF,CAA5B,EAA8B,CAACqC,CAAD,IAAIvB,CAAC,CAACqE,oBAApC,CAAR;QAAmE;;QAAA,MAAMjF,CAAC,GAACQ,CAAC,CAAC0E,GAAF,CAAMnD,CAAN,CAAR;;QAAiB,KAAI,MAAM7B,CAAV,IAAeF,CAAf,EAAiB;UAAC,MAAK;YAAC2L,KAAK,EAACrL,CAAP;YAAS6E,IAAI,EAAC3E,CAAd;YAAgBgD,KAAK,EAAC1C,CAAtB;YAAwB8K,aAAa,EAAC7K;UAAtC,IAAyCf,CAAC,CAACE,CAAD,CAA/C;UAAA,MAAmDqB,CAAC,GAACf,CAAC,CAAC4E,IAAF,CAAO,GAAP,CAArD;;UAAiE,IAAG,CAACjE,CAAD,IAAIP,CAAC,CAACyE,aAAF,CAAgBvE,CAAhB,EAAkBK,CAAlB,CAAP,EAA4B;YAAC,MAAMnB,CAAC,GAACU,CAAC,CAACwE,GAAF,CAAM3D,CAAN,KAAU;cAACiJ,UAAU,EAAC;YAAZ,CAAlB;;YAAkC,IAAGrI,CAAH,EAAK;cAACnC,CAAC,CAAC6L,mBAAF,KAAwB7L,CAAC,CAAC6L,mBAAF,GAAsB,EAA9C;cAAkD,MAAK;gBAACA,mBAAmB,EAAC/L,CAArB;gBAAuB4L,qBAAqB,EAACxL;cAA7C,IAAgD,MAAM,KAAK4L,qBAAL,CAA2BzK,CAA3B,EAA6BP,CAA7B,CAA3D;cAA2Fd,CAAC,CAAC6L,mBAAF,CAAsB3L,CAAtB,IAAyBJ,CAAzB;YAA2B,CAA9K,MAAkL;cAAC,IAAII,CAAC,GAAC,IAAN;cAAW,IAAGmC,CAAH,EAAKnC,CAAC,GAACI,CAAF,CAAL,KAAa;gBAAC,MAAMR,CAAC,GAAC,KAAK+E,mBAAL,CAAyBjE,CAAzB,EAA2BmB,CAA3B,EAA6B3B,CAA7B,CAAR;gBAAA,MAAwCJ,CAAC,GAACe,CAAC,CAAC8I,GAAF,CAAO7J,CAAC,IAAEF,CAAC,CAACE,CAAD,CAAX,CAA1C;;gBAA2DE,CAAC,GAAC+B,CAAC,IAAE,yBAAwBZ,CAA3B,GAA6B,KAAK0K,mBAAL,CAAyB1K,CAAzB,EAA2BrB,CAA3B,CAA7B,GAA2D,KAAKgM,kBAAL,CAAwB3K,CAAxB,EAA0BrB,CAA1B,EAA4B,IAA5B,EAAiCY,CAAC,CAACqE,oBAAnC,CAA7D;cAAsH;cAAAjF,CAAC,CAACwK,UAAF,CAAa1K,CAAb,IAAgBI,CAAhB;YAAkB;;YAAA,IAAIA,CAAC,GAAC,CAAN;YAAQe,CAAC,CAACgL,OAAF,CAAW,CAACnM,CAAD,EAAGM,CAAH,KAAOJ,CAAC,CAACwK,UAAF,CAAa,KAAK3G,WAAL,CAAiBqB,GAAjB,CAAqBpF,CAArB,IAAwBA,CAAxB,GAA0B,UAAS,EAAEI,CAAlD,IAAqDM,CAAC,CAACJ,CAAD,CAAxE,GAA8EM,CAAC,CAACqE,GAAF,CAAMxD,CAAN,EAAQvB,CAAR,CAA9E;UAAyF;QAAC;MAAC,CAA3zB,MAAg0B,IAAGmC,CAAH,EAAK;QAACnC,CAAC,CAAC6L,mBAAF,KAAwB7L,CAAC,CAAC6L,mBAAF,GAAsB,EAA9C;QAAkD,MAAK;UAACA,mBAAmB,EAAC/L,CAArB;UAAuB4L,qBAAqB,EAACxL;QAA7C,IAAgD,MAAM,KAAK4L,qBAAL,CAA2BzK,CAA3B,EAA6B,KAAKmC,KAAlC,CAA3D;QAAoGxD,CAAC,CAAC6L,mBAAF,CAAsB3L,CAAtB,IAAyBJ,CAAzB;MAA2B,CAAvL,MAA2L;QAAC,MAAMI,CAAC,GAAC,KAAK2E,mBAAL,CAAyBjE,CAAzB,EAA2BmB,CAA3B,EAA6B3B,CAA7B,CAAR;;QAAwCJ,CAAC,CAACwK,UAAF,CAAa1K,CAAb,IAAgBmC,CAAC,IAAE,yBAAwBZ,CAA3B,GAA6B,KAAK0K,mBAAL,CAAyB1K,CAAzB,EAA2BnB,CAA3B,CAA7B,GAA2D,KAAK8L,kBAAL,CAAwB3K,CAAxB,EAA0BnB,CAA1B,EAA4BI,CAA5B,EAA8BM,CAAC,CAACqE,oBAAhC,CAA3E;MAAiI;;MAAA/E,CAAC,CAAC4E,IAAF,CAAO;QAACsG,IAAI,EAACtL,CAAN;QAAQuL,KAAK,EAACvL,CAAd;QAAgBkI,IAAI,EAAC;MAArB,CAAP;IAAoD;;IAAA,MAAMjG,CAAC,GAACN,CAAC,GAACyK,KAAK,CAACC,IAAN,CAAWzL,CAAC,CAACuH,MAAF,EAAX,CAAD,GAAwB,CAACjI,CAAD,CAAjC;IAAqC,OAAO,KAAKiJ,aAAL,CAAmBlH,CAAnB,EAAqBV,CAArB,EAAwB,CAACvB,CAAD,EAAGE,CAAH,KAAOF,CAAC,CAAC0K,UAAF,CAAaxK,CAAb,CAA/B,GAAiD;MAAC4J,MAAM,EAAC1J,CAAR;MAAU6J,QAAQ,EAAChI;IAAnB,CAAxD;EAA8E;;EAA2B,MAArB+J,qBAAqB,CAAChM,CAAD,EAAGE,CAAH,EAAK;IAAC,MAAMU,CAAC,GAAC,MAAM,OAAO,yCAAP,CAAd;IAAA,MAAgE;MAACgE,aAAa,EAAC9D,CAAf;MAAiB8K,qBAAqB,EAAC5K;IAAvC,IAA0ChB,CAA1G;IAAA,MAA4G;MAACkE,cAAc,EAACjD,CAAhB;MAAkBgD,gBAAgB,EAAC9C,CAAnC;MAAqCyC,YAAY,EAACvC,CAAlD;MAAoDyC,IAAI,EAACvC,CAAzD;MAA2DsC,IAAI,EAACpC;IAAhE,IAAmE,IAA/K;IAAA,MAAoLI,CAAC,GAAC3B,CAAC,CAAC6J,GAAF,CAAO/J,CAAC,IAAE2B,CAAC,CAACN,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAOR,CAAC,CAACS,WAAF,CAAc1B,CAAd,CAAP,CAAX,CAAtL;IAAA,MAA4N+B,CAAC,GAACnB,CAAC,CAAC0L,UAAF,CAAanL,CAAb,EAAeU,CAAf,EAAiB,CAAC,CAAlB,EAAqB,CAArB,CAA9N;IAAA,MAAsPI,CAAC,GAAC;MAAC8J,mBAAmB,EAAC,IAArB;MAA0BH,qBAAqB,EAAC;IAAhD,CAAxP;;IAA8S,IAAG,wBAAsB9K,CAAzB,EAA2B;MAAC,MAAMd,CAAC,GAAC+B,CAAC,GAACvB,CAAC,CAACuB,CAAD,CAAF,GAAMrB,CAAC,CAACE,CAAC,CAAC2L,KAAF,CAAQpL,CAAR,EAAUU,CAAV,CAAD,CAAhB;MAA+BI,CAAC,CAAC8J,mBAAF,GAAsB,EAAC,GAAG/L,CAAJ;QAAMiE,gBAAgB,EAAC9C;MAAvB,CAAtB,EAAgDc,CAAC,CAAC2J,qBAAF,GAAwB5K,CAAC,IAAE,QAA3E;IAAoF,CAA/I,MAAoJ,IAAG,wBAAsBF,CAAzB,EAA2B;MAAC,MAAMd,CAAC,GAAC+B,CAAC,GAAC3B,CAAC,CAAC2B,CAAD,CAAF,GAAMzB,CAAC,CAACI,CAAC,CAACE,CAAC,CAAC2L,KAAF,CAAQpL,CAAR,EAAUU,CAAV,CAAD,CAAF,CAAhB;MAAkCI,CAAC,CAAC8J,mBAAF,GAAsB;QAAC5J,CAAC,EAACnC,CAAC,CAAC,CAAD,CAAJ;QAAQiC,CAAC,EAACjC,CAAC,CAAC,CAAD,CAAX;QAAeiE,gBAAgB,EAAC9C;MAAhC,CAAtB,EAAyDc,CAAC,CAAC2J,qBAAF,GAAwB5K,CAAC,IAAE,UAApF;IAA+F,CAA7J,MAAiK,0BAAwBF,CAAxB,KAA4BmB,CAAC,CAAC8J,mBAAF,GAAsBhK,CAAtB,EAAwBE,CAAC,CAAC2J,qBAAF,GAAwB5K,CAAC,IAAE,YAA/E;;IAA6F,OAAOiB,CAAP;EAAS;;EAAAiK,kBAAkB,CAAClM,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAOE,CAAP,EAAS;IAAC,MAAK;MAACuE,gBAAgB,EAACrE,CAAlB;MAAoBoE,aAAa,EAAClE;IAAlC,IAAqCV,CAA1C;IAA4C,IAAIY,CAAC,GAAC,IAAN;IAAWA,CAAC,GAACR,CAAC,EAAE0E,GAAH,CAAOtE,CAAP,IAAUJ,CAAC,CAACgF,GAAF,CAAM5E,CAAN,CAAV,GAAmBuB,CAAC,CAAC,KAAKgC,WAAL,CAAiBqB,GAAjB,CAAqB5E,CAArB,CAAD,CAAD,GAA2B2B,CAAC,CAAC;MAACgG,MAAM,EAACjI,CAAR;MAAUsM,cAAc,EAAClM;IAAzB,CAAD,CAA5B,GAA0D+B,CAAC,CAAC;MAAC8F,MAAM,EAACjI,CAAR;MAAUyH,QAAQ,EAAC,IAAnB;MAAwBC,QAAQ,EAAC,IAAjC;MAAsCU,eAAe,EAAC,CAAC;IAAvD,CAAD,CAAhF,EAA4IlI,CAAC,IAAEA,CAAC,CAAC6E,GAAF,CAAMzE,CAAN,EAAQI,CAAR,CAA/I;IAA0J,OAAOA,CAAC,CAAC,UAAQF,CAAR,GAAU,UAAV,GAAqBA,CAAtB,CAAR;EAAiC;;EAAAuL,mBAAmB,CAACjM,CAAD,EAAGE,CAAH,EAAK;IAAC,MAAK;MAAC2E,gBAAgB,EAACzE,CAAlB;MAAoBqM,mBAAmB,EAACnM,CAAxC;MAA0CsE,aAAa,EAACpE;IAAxD,IAA2DR,CAAhE;IAAA,MAAkE;MAACgI,KAAK,EAACtH,CAAP;MAASgM,OAAO,EAAC9L;IAAjB,IAAoBN,CAAtF;IAAA,MAAwFQ,CAAC,GAAC,KAAKiD,WAAL,CAAiBqB,GAAjB,CAAqBhF,CAArB,CAA1F;IAAkH,OAAOiD,CAAC,CAACnD,CAAD,EAAG;MAAC8H,KAAK,EAACtH,CAAP;MAASgM,OAAO,EAAC9L,CAAjB;MAAmBqH,SAAS,EAACnH,CAAC,EAAEoH,IAAhC;MAAqCyE,UAAU,EAAC,sBAAoBnM;IAApE,CAAH,CAAR;EAAmF;;EAAAuE,mBAAmB,CAAC/E,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;IAAC,IAAGA,CAAC,CAAC0E,GAAF,CAAM5E,CAAN,CAAH,EAAY,OAAOE,CAAC,CAACgF,GAAF,CAAMlF,CAAN,CAAP;IAAgB,MAAMI,CAAC,GAAC,KAAKyD,WAAL,CAAiBqB,GAAjB,CAAqBlF,CAArB,CAAR;IAAA,MAAgCM,CAAC,GAAC,KAAKkD,KAAL,CAAWqG,GAAX,CAAgB3J,CAAC,IAAEJ,CAAC,CAACyK,aAAF,CAAgBrK,CAAhB,EAAkBF,CAAlB,EAAoBI,CAApB,CAAnB,CAAlC;IAA8E,OAAOF,CAAC,CAAC6E,GAAF,CAAM/E,CAAN,EAAQM,CAAR,GAAWA,CAAlB;EAAoB;;EAAAoM,uBAAuB,CAAC5M,CAAD,EAAGE,CAAH,EAAK;IAAC,OAAO,KAAKwD,KAAL,CAAWqG,GAAX,CAAgB3J,CAAC,IAAEJ,CAAC,CAAC6M,YAAF,CAAezM,CAAf,EAAiB;MAACkH,KAAK,EAACpH,CAAC,CAACoH,KAAT;MAAeoB,MAAM,EAACxI,CAAC,CAACwI,MAAxB;MAA+BC,MAAM,EAACzI,CAAC,CAACyI,MAAxC;MAA+CC,cAAc,EAAC1I,CAAC,CAAC0I,cAAhE;MAA+EpB,kBAAkB,EAACtH,CAAC,CAACsH,kBAApG;MAAuHC,iBAAiB,EAACvH,CAAC,CAACuH,iBAA3I;MAA6JC,kBAAkB,EAACxH,CAAC,CAACwH;IAAlL,CAAjB,CAAnB,CAAP;EAAoP;;EAAmC,MAA7BoF,6BAA6B,CAAC9M,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAO;IAAC,MAAK;MAAC2M,WAAW,EAACzM;IAAb,IAAgB,MAAMiD,CAAC,EAA5B;IAAA,MAA+B/C,CAAC,GAACF,CAAC,CAAC0M,cAAF,CAAiB9M,CAAjB,CAAjC;IAAA,MAAqDQ,CAAC,GAACN,CAAC,IAAEE,CAAC,CAAC2M,WAAF,CAAc7M,CAAd,CAA1D;IAA2E,OAAOJ,CAAC,CAACkN,mBAAF,CAAsB,KAAKxJ,KAA3B,EAAiClD,CAAjC,EAAmCE,CAAnC,EAAqCJ,CAArC,CAAP;EAA+C;;EAAA4E,sBAAsB,CAAClF,CAAD,EAAGE,CAAH,EAAK;IAAC,MAAME,CAAC,GAAC,EAAR;IAAA,MAAWE,CAAC,GAAC,KAAKoD,KAAlB;IAAA,MAAwBlD,CAAC,GAACF,CAAC,CAAC8D,MAA5B;;IAAmC,KAAI,IAAI1D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAd,EAAgBE,CAAC,EAAjB,EAAoB;MAAC,MAAMF,CAAC,GAACF,CAAC,CAACI,CAAD,CAAT;MAAA,MAAaE,CAAC,GAAC,EAAf;;MAAkB,KAAI,MAAMV,CAAV,IAAeF,CAAf,EAAiBY,CAAC,CAACoE,IAAF,CAAO9E,CAAC,CAACQ,CAAD,CAAR;;MAAa,MAAMI,CAAC,GAACF,CAAC,CAAC0E,IAAF,CAAO,GAAP,CAAR;MAAoBpF,CAAC,GAAC,QAAME,CAAC,CAACU,CAAD,CAAP,KAAaV,CAAC,CAACU,CAAD,CAAD,GAAK;QAAC+K,KAAK,EAAC,CAAP;QAASxG,IAAI,EAACzE,CAAd;QAAgB8C,KAAK,EAAC,CAAClD,CAAD,CAAtB;QAA0BsL,aAAa,EAAC,CAACpL,CAAD;MAAxC,CAAlB,CAAD,GAAiE,QAAMN,CAAC,CAACU,CAAD,CAAP,GAAWV,CAAC,CAACU,CAAD,CAAD,GAAK;QAAC+K,KAAK,EAAC,CAAP;QAASxG,IAAI,EAACzE,CAAd;QAAgB8C,KAAK,EAAC,CAAClD,CAAD,CAAtB;QAA0BsL,aAAa,EAAC,CAACpL,CAAD;MAAxC,CAAhB,IAA8DN,CAAC,CAACU,CAAD,CAAD,CAAK+K,KAAL,IAAazL,CAAC,CAACU,CAAD,CAAD,CAAK4C,KAAL,CAAWsB,IAAX,CAAgBxE,CAAhB,CAAb,EAAgCJ,CAAC,CAACU,CAAD,CAAD,CAAKgL,aAAL,CAAmB9G,IAAnB,CAAwBtE,CAAxB,CAA9F,CAAlE;IAA4L;;IAAA,OAAON,CAAP;EAAS;;EAAoB,MAAd2H,cAAc,CAAC/H,CAAD,EAAG;IAAC,MAAME,CAAC,GAAC,IAAIe,CAAJ,CAAM,KAAK0C,KAAX,EAAiB,KAAKO,cAAtB,EAAqC,KAAKH,WAA1C,CAAR;IAAA,MAA+D;MAACwD,eAAe,EAACnH,CAAjB;MAAmBkH,KAAK,EAAChH,CAAzB;MAA2BkH,kBAAkB,EAAChH,CAA9C;MAAgDiH,iBAAiB,EAAC/G,CAAlE;MAAoEgH,kBAAkB,EAAC9G,CAAvF;MAAyFiH,KAAK,EAAC/G;IAA/F,IAAkGd,CAAjK;IAAA,MAAmKgB,CAAC,GAACZ,CAAC,GAAC;MAAC+M,WAAW,EAAC,KAAb;MAAmBtF,KAAK,EAAC/G,CAAzB;MAA2BmD,gBAAgB,EAAC,KAAKN,KAAL,CAAWoC,KAAX,IAAkB,KAAK9B;IAAnE,CAAD,GAAsF,IAA5P;IAAiQ,OAAO7D,CAAC,GAAC,KAAK0M,6BAAL,CAAmC5M,CAAnC,EAAqCE,CAArC,EAAuCY,CAAvC,CAAD,GAA2C,KAAK4L,uBAAL,CAA6B1M,CAA7B,EAA+B;MAACoH,KAAK,EAAChH,CAAP;MAASoI,MAAM,EAAC1I,CAAC,CAAC0I,MAAlB;MAAyBC,MAAM,EAAC3I,CAAC,CAAC2I,MAAlC;MAAyCC,cAAc,EAAC5I,CAAC,CAAC4I,cAA1D;MAAyEpB,kBAAkB,EAAChH,CAA5F;MAA8FiH,iBAAiB,EAAC/G,CAAhH;MAAkHgH,kBAAkB,EAAC9G;IAArI,CAA/B,CAAnD;EAA2N;;AAA/4X;;AAAg5X,SAASmG,CAAT,CAAW/G,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAAiBE,CAAjB,EAAmB;EAAC,MAAME,CAAC,GAACF,CAAC,CAAC6B,CAAF,GAAI/B,CAAC,CAAC+B,CAAd;EAAA,MAAgBzB,CAAC,GAACJ,CAAC,CAAC2B,CAAF,GAAI7B,CAAC,CAAC6B,CAAxB;EAAA,MAA0BrB,CAAC,GAACJ,CAAC,GAACA,CAAF,GAAIE,CAAC,GAACA,CAAlC;EAAA,MAAoCI,CAAC,GAAC,CAACZ,CAAC,CAACiC,CAAF,GAAI/B,CAAC,CAAC+B,CAAP,IAAU3B,CAAV,GAAY,CAACN,CAAC,CAAC+B,CAAF,GAAI7B,CAAC,CAAC6B,CAAP,IAAUvB,CAA5D;EAAA,MAA8DM,CAAC,GAACiG,IAAI,CAAC8D,GAAL,CAAS,CAAT,EAAW9D,IAAI,CAACmG,GAAL,CAAS,CAAT,EAAWtM,CAAC,GAACF,CAAb,CAAX,CAAhE;EAA4FZ,CAAC,CAACmC,CAAF,GAAI/B,CAAC,CAAC+B,CAAF,GAAI3B,CAAC,GAACQ,CAAV,EAAYhB,CAAC,CAACiC,CAAF,GAAI7B,CAAC,CAAC6B,CAAF,GAAIvB,CAAC,GAACM,CAAtB;AAAwB;;AAAA,SAASmF,CAAT,CAAWnG,CAAX,EAAaE,CAAb,EAAe;EAAC,OAAOF,CAAC,GAACE,CAAC,GAAC,CAAD,GAAG,CAAL,GAAOA,CAAC,GAAC,CAAD,GAAG,CAAnB;AAAqB;;AAAA,IAAI0G,CAAJ;AAAM,CAAC,UAAS5G,CAAT,EAAW;EAACA,CAAC,CAACA,CAAC,CAACqN,IAAF,GAAO,CAAR,CAAD,GAAY,MAAZ,EAAmBrN,CAAC,CAACA,CAAC,CAAC6G,IAAF,GAAO,CAAR,CAAD,GAAY,MAA/B,EAAsC7G,CAAC,CAACA,CAAC,CAACmH,MAAF,GAAS,CAAV,CAAD,GAAc,QAApD;AAA6D,CAAzE,CAA0EP,CAAC,KAAGA,CAAC,GAAC,EAAL,CAA3E,CAAD;;AAAsF,MAAMJ,CAAN,CAAO;EAAC/C,WAAW,CAACzD,CAAD,EAAGE,CAAH,EAAK;IAAC,KAAKuG,MAAL,GAAYzG,CAAZ,EAAc,KAAK8G,WAAL,GAAiB5G,CAA/B;EAAiC;;EAAK,IAADiC,CAAC,GAAE;IAAC,OAAO,KAAKsE,MAAL,CAAY,KAAKK,WAAjB,CAAP;EAAqC;;EAAK,IAAD7E,CAAC,GAAE;IAAC,OAAO,KAAKwE,MAAL,CAAY,KAAKK,WAAL,GAAiB,CAA7B,CAAP;EAAuC;;EAAK,IAADjE,CAAC,GAAE;IAAC,OAAO,KAAK4D,MAAL,CAAY,KAAKK,WAAL,GAAiB,CAA7B,CAAP;EAAuC;;AAA9L;;AAA+L,SAAOtD,CAAC,IAAI8J,iBAAZ,EAA8B1G,CAAC,IAAI2G,aAAnC"},"metadata":{},"sourceType":"module"}