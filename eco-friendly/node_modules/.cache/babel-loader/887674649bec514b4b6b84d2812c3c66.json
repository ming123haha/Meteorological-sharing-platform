{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport \"../../../../../geometry.js\";\nimport e from \"../../../../../core/Evented.js\";\nimport has from \"../../../../../core/has.js\";\nimport { isNone as t, isSome as s, applySome as r } from \"../../../../../core/maybe.js\";\nimport { diff as o, hasDiff as a } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport { GeohashTree as i } from \"../../../../../geohash/GeohashTree.js\";\nimport { setGeohashBuf as h, setGeohashXY as n } from \"../../../../../geohash/geohashUtils.js\";\nimport { fromRect as l } from \"../../../../../geometry/support/aaBoundingBox.js\";\nimport { earth as u } from \"../../../../../geometry/support/Ellipsoid.js\";\nimport { getInfo as g } from \"../../../../../geometry/support/spatialReferenceUtils.js\";\nimport { getBoundsOptimizedGeometry as c, quantizeX as d, quantizeY as f, convertFromPolygon as p } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeatureWithGeometry as m, OptimizedFeature as _ } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport y from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { checkProjectionSupport as I, project as b } from \"../../../../../layers/graphics/data/projectionSupport.js\";\nimport { TILE_SIZE as v } from \"../../../engine/webgl/definitions.js\";\nimport { DISPLAY_ID_TEXEL_MASK as R } from \"../../../engine/webgl/DisplayId.js\";\nimport { featureAdapter as M } from \"../FeatureStore2D.js\";\nimport { Store2D as x } from \"../Store2D.js\";\nimport { FeatureSetReaderJSON as C } from \"./FeatureSetReaderJSON.js\";\nimport j from \"../../../../../geometry/SpatialReference.js\";\nimport L from \"../../../../../geometry/Polygon.js\";\nimport B from \"../../../../../geometry/Extent.js\";\nconst F = 12,\n      w = 64,\n      S = 1;\n\nclass V extends m {\n  constructor(e, t, s, r, o) {\n    super(new y([], [t, s]), r, null, e), this.geohashBoundsInfo = o;\n  }\n\n  get count() {\n    return this.attributes.cluster_count;\n  }\n\n  static create(e, t, s, r, o, a, i, h) {\n    const n = new V(t, s, r, a, i);\n    return n.displayId = e.createDisplayId(!0), n.referenceId = h, n.tileLevel = o, n;\n  }\n\n  update(e, t, s, r, o, a) {\n    return this.geometry.coords[0] = e, this.geometry.coords[1] = t, this.tileLevel = s, this.attributes = r, this.geohashBoundsInfo = o, this.referenceId = null, this.referenceId = a, this;\n  }\n\n  toJSON() {\n    return {\n      attributes: { ...this.attributes,\n        aggregateId: this.objectId,\n        referenceId: 1 === this.attributes.cluster_count ? this.referenceId : null\n      },\n      geometry: {\n        x: this.geometry.coords[0],\n        y: this.geometry.coords[1]\n      }\n    };\n  }\n\n}\n\nfunction T(e) {\n  return 57.29577951308232 * e;\n}\n\nclass D extends x {\n  constructor(t, s, r, o) {\n    super(t, r), this.type = \"cluster\", this.events = new e(), this.objectIdField = \"aggregateId\", this.featureAdapter = M, this._geohashLevel = 0, this._tileLevel = 0, this._aggregateValueRanges = {}, this._aggregateValueRangesChanged = !1, this._geohashBuf = [], this._clusters = new Map(), this._tiles = new Map(), this._serviceInfo = o, this.geometryInfo = t.geometryInfo, this._spatialReference = s, this._projectionSupportCheck = I(s, j.WGS84), this._bitsets.geohash = r.getBitset(r.createBitset()), this._bitsets.inserted = r.getBitset(r.createBitset());\n  }\n\n  destroy() {\n    this._tree.destroy();\n  }\n\n  get featureSpatialReference() {\n    return this._spatialReference;\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  async updateSchema(e, s) {\n    const r = this._schema;\n\n    try {\n      await super.updateSchema(e, s), await this._projectionSupportCheck;\n    } catch (n) {}\n\n    this._fields = this._schema.params.fields;\n    const h = o(r, s);\n    s && (!t(h) || e.source || e.storage.filters) ? ((a(h, \"params.fields\") || !this._tree || e.source) && (this._tree && this._tree.destroy(), this._tree = new i(this._statisticFields, this._serviceInfo), this._rebuildTree(), has(\"esri-2d-update-debug\") && console.debug(\"Aggregate mesh needs update due to tree changing\")), has(\"esri-2d-update-debug\") && console.debug(\"Applying Update - ClusterStore:\", h), e.targets[s.name] = !0, e.mesh = !1, this._aggregateValueRanges = {}) : r && (e.mesh = !0);\n  }\n\n  clear() {\n    this._rebuildTree();\n  }\n\n  sweepFeatures(e, t) {\n    this._bitsets.inserted.forEachSet(s => {\n      if (!e.has(s)) {\n        const e = t.lookupByDisplayIdUnsafe(s);\n\n        this._remove(e);\n      }\n    });\n  }\n\n  sweepAggregates(e, t, s) {\n    this._clusters.forEach((r, o) => {\n      r && r.tileLevel !== s && (e.releaseDisplayId(r.displayId), t.unsetAttributeData(r.displayId), this._clusters.delete(o));\n    });\n  }\n\n  onTileData(e, s, r, o, a = !0) {\n    if (!this._schema || t(s.addOrUpdate)) return s;\n    this.events.emit(\"changed\");\n\n    const i = this._getTransforms(e, this._spatialReference);\n\n    {\n      const e = s.addOrUpdate.getCursor();\n\n      for (; e.next();) this._update(e, o);\n    }\n    if (s.status.mesh || !a) return s;\n    const h = new Array(),\n          n = this._schema.params.clusterRadius;\n    this._getClustersForTile(h, e, n, r, i), s.addOrUpdate = C.fromOptimizedFeatures(h, this._serviceInfo), s.addOrUpdate.attachStorage(r), s.clear = !0, s.end = !0;\n    {\n      const t = s.addOrUpdate.getCursor();\n\n      for (; t.next();) {\n        const s = t.getDisplayId();\n        this._bitsets.computed.unset(s), this.setComputedAttributes(r, t, s, e.scale);\n      }\n    }\n    return this._aggregateValueRangesChanged && s.end && (this.events.emit(\"valueRangesChanged\", {\n      valueRanges: this._aggregateValueRanges\n    }), this._aggregateValueRangesChanged = !1), s;\n  }\n\n  onTileUpdate({\n    added: e,\n    removed: t\n  }) {\n    if (e.length) {\n      const t = e[0].level;\n      this._tileLevel = t, this._setGeohashLevel(t);\n    }\n\n    if (!this._schema) return;\n    const s = this._schema.params.clusterRadius;\n    t.forEach(e => {\n      this._tiles.delete(e.key.id), this._markTileClustersForDeletion(e, s);\n    });\n  }\n\n  getAggregate(e) {\n    for (const t of this._clusters.values()) if ((t?.displayId & R) == (e & R)) return t.toJSON();\n\n    return null;\n  }\n\n  getAggregates() {\n    const e = [];\n\n    for (const t of this._clusters.values()) t?.tileLevel === this._tileLevel && e.push(t.toJSON());\n\n    return e;\n  }\n\n  getDisplayId(e) {\n    const t = this._clusters.get(e);\n\n    return t ? t.displayId : null;\n  }\n\n  getFeatureDisplayIdsForAggregate(e) {\n    const t = this._clusters.get(e);\n\n    return t ? this._tree.getRegionDisplayIds(t.geohashBoundsInfo) : [];\n  }\n\n  getDisplayIdForReferenceId(e) {\n    for (const t of this._clusters.values()) if (t?.referenceId === e) return t.displayId;\n\n    return null;\n  }\n\n  getAggregateValueRanges() {\n    return this._aggregateValueRanges;\n  }\n\n  forEach(e) {\n    this._clusters.forEach(t => {\n      if (!t) return;\n      const s = t.toJSON(),\n            r = C.fromFeatures([s], {\n        objectIdField: this.objectIdField,\n        globalIdField: null,\n        geometryType: this.geometryInfo.geometryType,\n        fields: this.fields\n      }).getCursor();\n      r.next(), e(r);\n    });\n  }\n\n  forEachInBounds(e, t) {}\n\n  forEachBounds(e, s, r) {\n    const {\n      hasM: o,\n      hasZ: a\n    } = this.geometryInfo;\n\n    for (const i of e) {\n      const e = c([0, 0, 0, 0], i.readGeometry(), a, o);\n      t(e) || s(l(r, e));\n    }\n  }\n\n  toArray() {\n    const e = [];\n    return this.forEach(t => e.push(t)), e;\n  }\n\n  size() {\n    let e = 0;\n    return this.forEach(t => e++), e;\n  }\n\n  _rebuildTree() {\n    this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();\n  }\n\n  _remove(e) {\n    const t = e.getDisplayId(),\n          s = e.getXHydrated(),\n          r = e.getYHydrated(),\n          o = this._geohashBuf[2 * t],\n          a = this._geohashBuf[2 * t + 1];\n    this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, o, a, this._geohashLevel));\n  }\n\n  _update(e, t) {\n    const s = e.getDisplayId(),\n          r = this._bitsets.inserted,\n          o = t.isVisible(s);\n    if (o === r.has(s)) return;\n    if (!o) return void this._remove(e);\n    const a = e.getXHydrated(),\n          i = e.getYHydrated();\n    if (!this._setGeohash(s, a, i)) return;\n    const h = this._geohashBuf[2 * s],\n          n = this._geohashBuf[2 * s + 1];\n    this._tree.insertCursor(e, s, a, i, h, n, this._geohashLevel), r.set(s);\n  }\n\n  _setGeohash(e, t, s) {\n    if (this._bitsets.geohash.has(e)) return !0;\n    const r = this._geohashBuf;\n\n    if (this._spatialReference.isWebMercator) {\n      const o = T(t / u.radius),\n            a = o - 360 * Math.floor((o + 180) / 360),\n            i = T(Math.PI / 2 - 2 * Math.atan(Math.exp(-s / u.radius)));\n      h(r, e, i, a, F);\n    } else {\n      const o = b({\n        x: t,\n        y: s\n      }, this._spatialReference, j.WGS84);\n      if (!o) return !1;\n      h(r, e, o.y, o.x, F);\n    }\n\n    return this._bitsets.geohash.set(e), !0;\n  }\n\n  _getClustersForTile(e, o, a, i, h, n = !0) {\n    const l = this._schema.params.clusterPixelBuffer,\n          u = 2 * a,\n          g = Math.ceil(2 ** o.key.level * v / u) + 1,\n          c = Math.ceil(l / u) + 0,\n          p = Math.ceil(v / u),\n          {\n      row: m,\n      col: y\n    } = o.key,\n          I = y * v,\n          b = m * v,\n          R = Math.floor(I / u) - c,\n          M = Math.floor(b / u) - c,\n          x = R + p + 2 * c,\n          C = M + p + 2 * c,\n          j = o.tileInfoView.getLODInfoAt(o.key.level);\n\n    for (let v = R; v <= x; v++) for (let a = M; a <= C; a++) {\n      let l = v;\n      j.wrap && (l = v < 0 ? v + g : v % g);\n\n      const u = j.wrap && v < 0,\n            c = j.wrap && v % g !== v,\n            p = this._lookupCluster(i, j, o.key.level, l, a, o);\n\n      if (s(p)) {\n        const o = r(h, e => u ? e.left : c ? e.right : e.tile);\n        if (n && t(o)) continue;\n        if (!p.count) continue;\n\n        if (s(o) && n) {\n          const t = p.geometry.clone();\n          let r = p.attributes;\n          t.coords[0] = d(o, t.coords[0]), t.coords[1] = f(o, t.coords[1]), 1 === p.count && s(p.referenceId) && (r = { ...p.attributes,\n            referenceId: p.referenceId\n          });\n          const a = new _(t, r);\n          a.displayId = p.displayId, e.push(a);\n        }\n      }\n    }\n  }\n\n  _getGeohashLevel(e) {\n    return Math.min(Math.ceil(e / 2 + 2), F);\n  }\n\n  _setGeohashLevel(e) {\n    const t = this._getGeohashLevel(e),\n          s = (Math.floor(t / S) + 1) * S - 1;\n\n    if (this._geohashLevel !== s) return this._geohashLevel = s, this._rebuildTree(), void this._bitsets.geohash.clear();\n  }\n\n  _getTransforms(e, t) {\n    const s = {\n      originPosition: \"upperLeft\",\n      scale: [e.resolution, e.resolution],\n      translate: [e.bounds[0], e.bounds[3]]\n    },\n          r = g(t);\n    if (!r) return {\n      tile: s,\n      left: null,\n      right: null\n    };\n    const [o, a] = r.valid;\n    return {\n      tile: s,\n      left: { ...s,\n        translate: [a, e.bounds[3]]\n      },\n      right: { ...s,\n        translate: [o - a + e.bounds[0], e.bounds[3]]\n      }\n    };\n  }\n\n  _getClusterId(e, t, s) {\n    return (15 & e) << 28 | (16383 & t) << 14 | 16383 & s;\n  }\n\n  _markForDeletion(e, t, s) {\n    const r = this._getClusterId(e, t, s);\n\n    this._clusters.delete(r);\n  }\n\n  _getClusterBounds(e, t, s) {\n    const r = this._schema.params.clusterRadius,\n          o = 2 * r;\n    let a = s % 2 ? t * o : t * o - r;\n    const i = s * o;\n    let h = a + o;\n    const n = i - o,\n          l = 2 ** e.level * v;\n    e.wrap && a < 0 && (a = 0), e.wrap && h > l && (h = l);\n    const u = a / v,\n          g = i / v,\n          c = h / v,\n          d = n / v;\n    return [e.getXForColumn(u), e.getYForRow(g), e.getXForColumn(c), e.getYForRow(d)];\n  }\n\n  _getGeohash(e, t, s) {\n    const r = {\n      geohashX: 0,\n      geohashY: 0\n    };\n    return n(r, t, e, s), r;\n  }\n\n  _getGeohashBounds(e, t) {\n    const s = this._getGeohashLevel(e.key.level);\n\n    if (this._spatialReference.isWebMercator) {\n      const [e, r, o, a] = t,\n            i = {\n        x: e,\n        y: r\n      },\n            h = {\n        x: o,\n        y: a\n      };\n      let l = 0,\n          g = 0,\n          c = 0,\n          d = 0;\n      {\n        const e = T(i.x / u.radius);\n        l = e - 360 * Math.floor((e + 180) / 360), g = T(Math.PI / 2 - 2 * Math.atan(Math.exp(-i.y / u.radius)));\n      }\n      {\n        const e = T(h.x / u.radius);\n        c = e - 360 * Math.floor((e + 180) / 360), d = T(Math.PI / 2 - 2 * Math.atan(Math.exp(-h.y / u.radius)));\n      }\n      const f = {\n        geohashX: 0,\n        geohashY: 0\n      },\n            p = {\n        geohashX: 0,\n        geohashY: 0\n      };\n      n(f, g, l, s), n(p, d, c, s);\n      return {\n        bounds: [e, r, o, a],\n        geohashBounds: {\n          xLL: f.geohashX,\n          yLL: f.geohashY,\n          xTR: p.geohashX,\n          yTR: p.geohashY\n        },\n        level: s\n      };\n    }\n\n    const r = L.fromExtent(B.fromBounds(t, this._spatialReference)),\n          o = b(r, this._spatialReference, j.WGS84, {\n      densificationStep: e.resolution * w\n    });\n    if (!o) return null;\n\n    const a = p(new y(), o, !1, !1),\n          i = a.coords.filter((e, t) => !(t % 2)),\n          h = a.coords.filter((e, t) => t % 2),\n          l = Math.min(...i),\n          g = Math.min(...h),\n          c = Math.max(...i),\n          d = Math.max(...h),\n          f = this._getGeohash(l, g, s),\n          m = this._getGeohash(c, d, s);\n\n    return {\n      bounds: t,\n      geohashBounds: {\n        xLL: f.geohashX,\n        yLL: f.geohashY,\n        xTR: m.geohashX,\n        yTR: m.geohashY\n      },\n      level: s\n    };\n  }\n\n  _lookupCluster(e, r, o, a, i, h) {\n    const n = this._getClusterId(o, a, i),\n          l = this._clusters.get(n),\n          u = this._getClusterBounds(r, a, i),\n          g = this._getGeohashBounds(h, u);\n\n    if (t(g)) return null;\n\n    const c = this._tree.getRegionStatistics(g),\n          {\n      count: d,\n      xTotal: f,\n      yTotal: p,\n      referenceId: m\n    } = c,\n          _ = d ? f / d : 0,\n          y = d ? p / d : 0;\n\n    if (0 === d) return this._clusters.set(n, null), null;\n    const I = {\n      cluster_count: d,\n      ...c.attributes\n    },\n          b = s(l) ? l.update(_, y, o, I, g, m) : V.create(e, n, _, y, o, I, g, m);\n\n    if (0 === d) {\n      const [e, t, s, r] = u;\n      b.geometry.coords[0] = (e + s) / 2, b.geometry.coords[1] = (t + r) / 2;\n    }\n\n    return this._clusters.set(n, b), this._updateAggregateValueRangeForCluster(b, b.tileLevel), b;\n  }\n\n  _updateAggregateValueRangeForCluster(e, t) {\n    const s = this._aggregateValueRanges[t] || {\n      minValue: 1 / 0,\n      maxValue: 0\n    },\n          r = s.minValue,\n          o = s.maxValue;\n    s.minValue = Math.min(r, e.count), s.maxValue = Math.max(o, e.count), this._aggregateValueRanges[t] = s, r === s.minValue && o === s.maxValue || (this._aggregateValueRangesChanged = !0);\n  }\n\n  _markTileClustersForDeletion(e, t) {\n    const s = 2 * t,\n          r = Math.ceil(v / s),\n          {\n      row: o,\n      col: a\n    } = e.key,\n          i = a * v,\n          h = o * v,\n          n = Math.floor(i / s),\n          l = Math.floor(h / s);\n\n    for (let u = n; u < n + r; u++) for (let t = l; t < l + r; t++) this._markForDeletion(e.key.level, u, t);\n  }\n\n}\n\nexport { V as ClusterInfo, D as ClusterStore };","map":{"version":3,"names":["e","has","isNone","t","isSome","s","applySome","r","diff","o","hasDiff","a","GeohashTree","i","setGeohashBuf","h","setGeohashXY","n","fromRect","l","earth","u","getInfo","g","getBoundsOptimizedGeometry","c","quantizeX","d","quantizeY","f","convertFromPolygon","p","OptimizedFeatureWithGeometry","m","OptimizedFeature","_","y","checkProjectionSupport","I","project","b","TILE_SIZE","v","DISPLAY_ID_TEXEL_MASK","R","featureAdapter","M","Store2D","x","FeatureSetReaderJSON","C","j","L","B","F","w","S","V","constructor","geohashBoundsInfo","count","attributes","cluster_count","create","displayId","createDisplayId","referenceId","tileLevel","update","geometry","coords","toJSON","aggregateId","objectId","T","D","type","events","objectIdField","_geohashLevel","_tileLevel","_aggregateValueRanges","_aggregateValueRangesChanged","_geohashBuf","_clusters","Map","_tiles","_serviceInfo","geometryInfo","_spatialReference","_projectionSupportCheck","WGS84","_bitsets","geohash","getBitset","createBitset","inserted","destroy","_tree","featureSpatialReference","fields","_fields","updateSchema","_schema","params","source","storage","filters","_statisticFields","_rebuildTree","console","debug","targets","name","mesh","clear","sweepFeatures","forEachSet","lookupByDisplayIdUnsafe","_remove","sweepAggregates","forEach","releaseDisplayId","unsetAttributeData","delete","onTileData","addOrUpdate","emit","_getTransforms","getCursor","next","_update","status","Array","clusterRadius","_getClustersForTile","fromOptimizedFeatures","attachStorage","end","getDisplayId","computed","unset","setComputedAttributes","scale","valueRanges","onTileUpdate","added","removed","length","level","_setGeohashLevel","key","id","_markTileClustersForDeletion","getAggregate","values","getAggregates","push","get","getFeatureDisplayIdsForAggregate","getRegionDisplayIds","getDisplayIdForReferenceId","getAggregateValueRanges","fromFeatures","globalIdField","geometryType","forEachInBounds","forEachBounds","hasM","hasZ","readGeometry","toArray","size","getXHydrated","getYHydrated","removeCursor","isVisible","_setGeohash","insertCursor","set","isWebMercator","radius","Math","floor","PI","atan","exp","clusterPixelBuffer","ceil","row","col","tileInfoView","getLODInfoAt","wrap","_lookupCluster","left","right","tile","clone","_getGeohashLevel","min","originPosition","resolution","translate","bounds","valid","_getClusterId","_markForDeletion","_getClusterBounds","getXForColumn","getYForRow","_getGeohash","geohashX","geohashY","_getGeohashBounds","geohashBounds","xLL","yLL","xTR","yTR","fromExtent","fromBounds","densificationStep","filter","max","getRegionStatistics","xTotal","yTotal","_updateAggregateValueRangeForCluster","minValue","maxValue","ClusterInfo","ClusterStore"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/2d/layers/features/support/ClusterStore.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport\"../../../../../geometry.js\";import e from\"../../../../../core/Evented.js\";import has from\"../../../../../core/has.js\";import{isNone as t,isSome as s,applySome as r}from\"../../../../../core/maybe.js\";import{diff as o,hasDiff as a}from\"../../../../../core/accessorSupport/diffUtils.js\";import{GeohashTree as i}from\"../../../../../geohash/GeohashTree.js\";import{setGeohashBuf as h,setGeohashXY as n}from\"../../../../../geohash/geohashUtils.js\";import{fromRect as l}from\"../../../../../geometry/support/aaBoundingBox.js\";import{earth as u}from\"../../../../../geometry/support/Ellipsoid.js\";import{getInfo as g}from\"../../../../../geometry/support/spatialReferenceUtils.js\";import{getBoundsOptimizedGeometry as c,quantizeX as d,quantizeY as f,convertFromPolygon as p}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{OptimizedFeatureWithGeometry as m,OptimizedFeature as _}from\"../../../../../layers/graphics/OptimizedFeature.js\";import y from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{checkProjectionSupport as I,project as b}from\"../../../../../layers/graphics/data/projectionSupport.js\";import{TILE_SIZE as v}from\"../../../engine/webgl/definitions.js\";import{DISPLAY_ID_TEXEL_MASK as R}from\"../../../engine/webgl/DisplayId.js\";import{featureAdapter as M}from\"../FeatureStore2D.js\";import{Store2D as x}from\"../Store2D.js\";import{FeatureSetReaderJSON as C}from\"./FeatureSetReaderJSON.js\";import j from\"../../../../../geometry/SpatialReference.js\";import L from\"../../../../../geometry/Polygon.js\";import B from\"../../../../../geometry/Extent.js\";const F=12,w=64,S=1;class V extends m{constructor(e,t,s,r,o){super(new y([],[t,s]),r,null,e),this.geohashBoundsInfo=o}get count(){return this.attributes.cluster_count}static create(e,t,s,r,o,a,i,h){const n=new V(t,s,r,a,i);return n.displayId=e.createDisplayId(!0),n.referenceId=h,n.tileLevel=o,n}update(e,t,s,r,o,a){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=o,this.referenceId=null,this.referenceId=a,this}toJSON(){return{attributes:{...this.attributes,aggregateId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function T(e){return 57.29577951308232*e}class D extends x{constructor(t,s,r,o){super(t,r),this.type=\"cluster\",this.events=new e,this.objectIdField=\"aggregateId\",this.featureAdapter=M,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this._serviceInfo=o,this.geometryInfo=t.geometryInfo,this._spatialReference=s,this._projectionSupportCheck=I(s,j.WGS84),this._bitsets.geohash=r.getBitset(r.createBitset()),this._bitsets.inserted=r.getBitset(r.createBitset())}destroy(){this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,s){const r=this._schema;try{await super.updateSchema(e,s),await this._projectionSupportCheck}catch(n){}this._fields=this._schema.params.fields;const h=o(r,s);s&&(!t(h)||e.source||e.storage.filters)?((a(h,\"params.fields\")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new i(this._statisticFields,this._serviceInfo),this._rebuildTree(),has(\"esri-2d-update-debug\")&&console.debug(\"Aggregate mesh needs update due to tree changing\")),has(\"esri-2d-update-debug\")&&console.debug(\"Applying Update - ClusterStore:\",h),e.targets[s.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):r&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepAggregates(e,t,s){this._clusters.forEach(((r,o)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(o))}))}onTileData(e,s,r,o,a=!0){if(!this._schema||t(s.addOrUpdate))return s;this.events.emit(\"changed\");const i=this._getTransforms(e,this._spatialReference);{const e=s.addOrUpdate.getCursor();for(;e.next();)this._update(e,o)}if(s.status.mesh||!a)return s;const h=new Array,n=this._schema.params.clusterRadius;this._getClustersForTile(h,e,n,r,i),s.addOrUpdate=C.fromOptimizedFeatures(h,this._serviceInfo),s.addOrUpdate.attachStorage(r),s.clear=!0,s.end=!0;{const t=s.addOrUpdate.getCursor();for(;t.next();){const s=t.getDisplayId();this._bitsets.computed.unset(s),this.setComputedAttributes(r,t,s,e.scale)}}return this._aggregateValueRangesChanged&&s.end&&(this.events.emit(\"valueRangesChanged\",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),s}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._tileLevel=t,this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){for(const t of this._clusters.values())if((t?.displayId&R)==(e&R))return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())t?.tileLevel===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);return t?this._tree.getRegionDisplayIds(t.geohashBoundsInfo):[]}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if(t?.referenceId===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){this._clusters.forEach((t=>{if(!t)return;const s=t.toJSON(),r=C.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)}))}forEachInBounds(e,t){}forEachBounds(e,s,r){const{hasM:o,hasZ:a}=this.geometryInfo;for(const i of e){const e=c([0,0,0,0],i.readGeometry(),a,o);t(e)||s(l(r,e))}}toArray(){const e=[];return this.forEach((t=>e.push(t))),e}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),o=this._geohashBuf[2*t],a=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,o,a,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,o=t.isVisible(s);if(o===r.has(s))return;if(!o)return void this._remove(e);const a=e.getXHydrated(),i=e.getYHydrated();if(!this._setGeohash(s,a,i))return;const h=this._geohashBuf[2*s],n=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,a,i,h,n,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const o=T(t/u.radius),a=o-360*Math.floor((o+180)/360),i=T(Math.PI/2-2*Math.atan(Math.exp(-s/u.radius)));h(r,e,i,a,F)}else{const o=b({x:t,y:s},this._spatialReference,j.WGS84);if(!o)return!1;h(r,e,o.y,o.x,F)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,o,a,i,h,n=!0){const l=this._schema.params.clusterPixelBuffer,u=2*a,g=Math.ceil(2**o.key.level*v/u)+1,c=Math.ceil(l/u)+0,p=Math.ceil(v/u),{row:m,col:y}=o.key,I=y*v,b=m*v,R=Math.floor(I/u)-c,M=Math.floor(b/u)-c,x=R+p+2*c,C=M+p+2*c,j=o.tileInfoView.getLODInfoAt(o.key.level);for(let v=R;v<=x;v++)for(let a=M;a<=C;a++){let l=v;j.wrap&&(l=v<0?v+g:v%g);const u=j.wrap&&v<0,c=j.wrap&&v%g!==v,p=this._lookupCluster(i,j,o.key.level,l,a,o);if(s(p)){const o=r(h,(e=>u?e.left:c?e.right:e.tile));if(n&&t(o))continue;if(!p.count)continue;if(s(o)&&n){const t=p.geometry.clone();let r=p.attributes;t.coords[0]=d(o,t.coords[0]),t.coords[1]=f(o,t.coords[1]),1===p.count&&s(p.referenceId)&&(r={...p.attributes,referenceId:p.referenceId});const a=new _(t,r);a.displayId=p.displayId,e.push(a)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),F)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=(Math.floor(t/S)+1)*S-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:\"upperLeft\",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=g(t);if(!r)return{tile:s,left:null,right:null};const[o,a]=r.valid;return{tile:s,left:{...s,translate:[a,e.bounds[3]]},right:{...s,translate:[o-a+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,o=2*r;let a=s%2?t*o:t*o-r;const i=s*o;let h=a+o;const n=i-o,l=2**e.level*v;e.wrap&&a<0&&(a=0),e.wrap&&h>l&&(h=l);const u=a/v,g=i/v,c=h/v,d=n/v;return[e.getXForColumn(u),e.getYForRow(g),e.getXForColumn(c),e.getYForRow(d)]}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return n(r,t,e,s),r}_getGeohashBounds(e,t){const s=this._getGeohashLevel(e.key.level);if(this._spatialReference.isWebMercator){const[e,r,o,a]=t,i={x:e,y:r},h={x:o,y:a};let l=0,g=0,c=0,d=0;{const e=T(i.x/u.radius);l=e-360*Math.floor((e+180)/360),g=T(Math.PI/2-2*Math.atan(Math.exp(-i.y/u.radius)))}{const e=T(h.x/u.radius);c=e-360*Math.floor((e+180)/360),d=T(Math.PI/2-2*Math.atan(Math.exp(-h.y/u.radius)))}const f={geohashX:0,geohashY:0},p={geohashX:0,geohashY:0};n(f,g,l,s),n(p,d,c,s);return{bounds:[e,r,o,a],geohashBounds:{xLL:f.geohashX,yLL:f.geohashY,xTR:p.geohashX,yTR:p.geohashY},level:s}}const r=L.fromExtent(B.fromBounds(t,this._spatialReference)),o=b(r,this._spatialReference,j.WGS84,{densificationStep:e.resolution*w});if(!o)return null;const a=p(new y,o,!1,!1),i=a.coords.filter(((e,t)=>!(t%2))),h=a.coords.filter(((e,t)=>t%2)),l=Math.min(...i),g=Math.min(...h),c=Math.max(...i),d=Math.max(...h),f=this._getGeohash(l,g,s),m=this._getGeohash(c,d,s);return{bounds:t,geohashBounds:{xLL:f.geohashX,yLL:f.geohashY,xTR:m.geohashX,yTR:m.geohashY},level:s}}_lookupCluster(e,r,o,a,i,h){const n=this._getClusterId(o,a,i),l=this._clusters.get(n),u=this._getClusterBounds(r,a,i),g=this._getGeohashBounds(h,u);if(t(g))return null;const c=this._tree.getRegionStatistics(g),{count:d,xTotal:f,yTotal:p,referenceId:m}=c,_=d?f/d:0,y=d?p/d:0;if(0===d)return this._clusters.set(n,null),null;const I={cluster_count:d,...c.attributes},b=s(l)?l.update(_,y,o,I,g,m):V.create(e,n,_,y,o,I,g,m);if(0===d){const[e,t,s,r]=u;b.geometry.coords[0]=(e+s)/2,b.geometry.coords[1]=(t+r)/2}return this._clusters.set(n,b),this._updateAggregateValueRangeForCluster(b,b.tileLevel),b}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,o=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(o,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&o===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(v/s),{row:o,col:a}=e.key,i=a*v,h=o*v,n=Math.floor(i/s),l=Math.floor(h/s);for(let u=n;u<n+r;u++)for(let t=l;t<l+r;t++)this._markForDeletion(e.key.level,u,t)}}export{V as ClusterInfo,D as ClusterStore};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}