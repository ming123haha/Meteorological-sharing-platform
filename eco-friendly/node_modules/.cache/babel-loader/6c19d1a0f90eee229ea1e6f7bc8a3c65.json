{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport e from \"../../../request.js\";\nimport i from \"../../../core/Error.js\";\nimport { JSONSupport as o } from \"../../../core/JSONSupport.js\";\nimport r from \"../../../core/Logger.js\";\nimport { isSome as n, unwrap as s, isNone as a, unwrapOrThrow as l } from \"../../../core/maybe.js\";\nimport { EsriPromiseMixin as c } from \"../../../core/Promise.js\";\nimport { onAbort as m } from \"../../../core/promiseUtils.js\";\nimport { property as f } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { ensureClass as h } from \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as u } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { sanitizeUrl as p } from \"../arcgisLayerUrl.js\";\nimport { url as d } from \"../commonProperties.js\";\nimport x from \"../DimensionalDefinition.js\";\nimport g from \"../RasterStorageInfo.js\";\nimport y from \"../TileInfo.js\";\nimport { isMultiSliceOrRangeDefinition as I, getSliceIndex as R, createSlices as w, getSliceIds as k } from \"./multidimensionalUtils.js\";\nimport { getRasterId as b, getBlock as v, putBlock as S, deleteBlock as T, decreaseRefCount as B } from \"./RawBlockCache.js\";\nimport { decode as P } from \"../rasterFormats/RasterCodec.js\";\nimport { mosaic as W, approximateTransform as M, getLocalArithmeticNorthRotations as C } from \"../rasterFunctions/pixelUtils.js\";\nimport { load as _, getWorldWidth as j, projectPoint as H, snapPyramid as E, snapExtent as L, getWorldWrapCount as D, projectExtent as z, getProjectionOffsetGrid as A, getRasterDatasetAlignmentInfo as F, projectResolution as O } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport { convertToLocalDirections as q, uvComponentToVector as G } from \"../rasterFunctions/vectorFieldUtils.js\";\nimport J from \"../../../geometry/Extent.js\";\nimport N from \"../../../geometry/Point.js\";\nconst V = 8;\nlet $ = class extends c(o) {\n  constructor() {\n    super(...arguments), this.rasterJobHandler = null, this.datasetName = null, this.datasetFormat = null, this.rasterInfo = null, this.ioConfig = {\n      sampling: \"closest\"\n    };\n  }\n\n  async init() {\n    const t = _();\n\n    this.addResolvingPromise(t), await this.when();\n  }\n\n  normalizeCtorArgs(t) {\n    return t && t.ioConfig && (t = { ...t,\n      ioConfig: {\n        resolution: null,\n        bandIds: null,\n        sampling: \"closest\",\n        tileInfo: y.create(),\n        ...t.ioConfig\n      }\n    }), t;\n  }\n\n  get _isGlobalWrappableSource() {\n    const {\n      rasterInfo: t\n    } = this,\n          e = j(t.spatialReference);\n    return n(e) && t.extent.width >= e / 2;\n  }\n\n  set url(t) {\n    this._set(\"url\", p(t, r.getLogger(this.declaredClass)));\n  }\n\n  async open(t) {\n    throw new i(\"BaseRaster:open-not-implemented\", \"open() is not implemented\");\n  }\n\n  async fetchTile(t, e, i, o = {}) {\n    const r = o.tileInfo || this.rasterInfo.storageInfo.tileInfo,\n          n = this.getTileExtentFromTileInfo(t, e, i, r);\n    return this.fetchPixels(n, r.size[0], r.size[1], o);\n  }\n\n  async identify(t, e = {}) {\n    t = h(N, t).clone().normalize();\n    const {\n      multidimensionalDefinition: i,\n      timeExtent: o\n    } = e,\n          {\n      hasMultidimensionalTranspose: r,\n      multidimensionalInfo: l\n    } = this.rasterInfo;\n    let {\n      transposedVariableName: c\n    } = e;\n    const m = n(l) && r && (null != o || I(i));\n\n    if (m && !c) {\n      c = n(i) && i.length > 0 ? i[0].variableName ?? void 0 : l.variables[0].name, e = { ...e,\n        transposedVariableName: c\n      };\n    }\n\n    e = this._getRequestOptionsWithSliceId(e);\n    const {\n      spatialReference: f,\n      extent: u\n    } = this.rasterInfo,\n          {\n      datumTransformation: p\n    } = e;\n    let d = H(t, f, p);\n    if (!u.intersects(d)) return {\n      location: d,\n      value: null\n    };\n\n    if (n(this.rasterInfo.transform)) {\n      const t = this.rasterInfo.transform.inverseTransform(d);\n      if (!this.rasterInfo.nativeExtent.intersects(t)) return {\n        location: t,\n        value: null\n      };\n      d = t;\n    }\n\n    let x = 0;\n    const g = n(c) && n(l) && this.rasterInfo.hasMultidimensionalTranspose;\n    if (!g) if (e.srcResolution) {\n      x = E(e.srcResolution, this.rasterInfo, this.ioConfig.sampling).pyramidLevel;\n    } else if (x = await this.computeBestPyramidLevelForLocation(t, e), null == x) return {\n      location: d,\n      value: null\n    };\n    const y = this.identifyPixelLocation(d, x, null, g);\n    if (null === y) return {\n      location: d,\n      value: null\n    };\n    const {\n      row: R,\n      col: w,\n      rowOffset: k,\n      colOffset: T,\n      blockWidth: B\n    } = y,\n          P = c ?? s(e.sliceId),\n          W = b(this.url, P),\n          M = `${x}/${R}/${w}`;\n    let C = v(W, null, M);\n    a(C) && (C = this.fetchRawTile(x, R, w, e), S(W, null, M, C));\n\n    const _ = await C;\n\n    if (a(_) || !_.pixels?.length) return {\n      location: d,\n      value: null\n    };\n    const j = k * B + T;\n    return this._processIdentifyResult(_, {\n      srcLocation: d,\n      position: j,\n      pyramidLevel: x,\n      useTransposedTile: !!g,\n      requestSomeSlices: m,\n      identifyOptions: e\n    });\n  }\n\n  async fetchPixels(t, e, i, o = {}) {\n    if (t = L(t), (o = this._getRequestOptionsWithSliceId(o)).requestRawData) return this._fetchPixels(t, e, i, o);\n    const r = j(t.spatialReference),\n          n = D(t);\n    if (a(r) || 0 === n || 1 === n && this._isGlobalWrappableSource) return this._fetchPixels(t, e, i, o);\n    if (n >= 3) return {\n      extent: t,\n      pixelBlock: null\n    };\n    const s = [],\n          {\n      xmin: l,\n      xmax: c\n    } = t,\n          m = Math.round(r / (c - l) * e),\n          f = m - Math.round((r / 2 - l) / (c - l) * e);\n    let h = 0;\n    const u = [];\n\n    for (let a = 0; a <= n; a++) {\n      const p = new J({\n        xmin: 0 === a ? l : -r / 2,\n        xmax: a === n ? c - r * a : r / 2,\n        ymin: t.ymin,\n        ymax: t.ymax,\n        spatialReference: t.spatialReference\n      }),\n            d = 0 === a ? m - f : a === n ? e - h : m;\n      h += d, u.push(d);\n      const x = o.disableWrapAround && a > 0 ? null : this._fetchPixels(p, d, i, o);\n      s.push(x);\n    }\n\n    const p = (await Promise.all(s)).map(t => t?.pixelBlock);\n    let d = null;\n    const x = {\n      width: e,\n      height: i\n    };\n\n    if (this.rasterJobHandler) {\n      d = (await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: p,\n        srcMosaicSize: x,\n        destDimension: null,\n        coefs: null,\n        sampleSpacing: null,\n        interpolation: \"nearest\",\n        alignmentInfo: null,\n        blockWidths: u\n      }, o)).pixelBlock;\n    } else d = W(p, x, {\n      blockWidths: u\n    });\n\n    return {\n      extent: t,\n      srcExtent: z(t, this.rasterInfo.spatialReference, o.datumTransformation),\n      pixelBlock: d\n    };\n  }\n\n  async fetchRawPixels(t, e, i, o = {}) {\n    e = {\n      x: Math.floor(e.x),\n      y: Math.floor(e.y)\n    };\n    const r = await this._fetchRawTiles(t, e, i, o),\n          {\n      nativeExtent: s,\n      nativePixelSize: a,\n      storageInfo: l\n    } = this.rasterInfo,\n          c = 2 ** t,\n          m = a.x * c,\n          f = a.y * c,\n          h = new J({\n      xmin: s.xmin + m * e.x,\n      xmax: s.xmin + m * (e.x + i.width - 1),\n      ymin: s.ymax - f * (e.y + i.height - 1),\n      ymax: s.ymax - f * e.y,\n      spatialReference: s.spatialReference\n    });\n    if (!r) return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: null\n    };\n    const {\n      pixelBlocks: u,\n      mosaicSize: p\n    } = r;\n    if (1 === u.length && n(u[0]) && u[0].width === i.width && u[0].height === i.height) return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: r.pixelBlocks[0]\n    };\n    const d = t > 0 ? l.pyramidBlockWidth : l.blockWidth,\n          x = t > 0 ? l.pyramidBlockHeight : l.blockHeight,\n          g = {\n      x: e.x % d,\n      y: e.y % x\n    };\n    let y;\n\n    if (this.rasterJobHandler) {\n      y = (await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: u,\n        srcMosaicSize: p,\n        destDimension: i,\n        clipOffset: g,\n        clipSize: i,\n        coefs: null,\n        sampleSpacing: null,\n        interpolation: o.interpolation,\n        alignmentInfo: null,\n        blockWidths: null\n      }, o)).pixelBlock;\n    } else y = W(u, p, {\n      clipOffset: g,\n      clipSize: i\n    });\n\n    return {\n      extent: h,\n      srcExtent: h,\n      pixelBlock: y\n    };\n  }\n\n  fetchRawTile(t, e, o, r) {\n    throw new i(\"BaseRaster:read-not-implemented\", \"fetchRawTile() is not implemented\");\n  }\n\n  computeExtent(t) {\n    return z(this.rasterInfo.extent, t);\n  }\n\n  decodePixelBlock(t, e) {\n    return !this.rasterJobHandler || e.useCanvas ? P(t, e) : this.rasterJobHandler.decode({\n      data: t,\n      options: e\n    });\n  }\n\n  async request(t, i, o = 0) {\n    const {\n      customFetchParameters: r\n    } = this.ioConfig,\n          {\n      range: n,\n      query: s,\n      headers: a\n    } = i;\n    o = o ?? i.retryCount ?? this.ioConfig.retryCount;\n    const l = n ? {\n      Range: `bytes=${n.from}-${n.to}`\n    } : null;\n\n    try {\n      return await e(t, { ...i,\n        query: { ...s,\n          ...r\n        },\n        headers: { ...a,\n          ...l\n        }\n      });\n    } catch (c) {\n      if (o > 0) return o--, this.request(t, i, o);\n      throw c;\n    }\n  }\n\n  getSliceIndex(t) {\n    const {\n      multidimensionalInfo: e\n    } = this.rasterInfo;\n    return a(e) || a(t) || 0 === t.length ? null : R(t, e);\n  }\n\n  getTileExtentFromTileInfo(t, e, i, o) {\n    const r = l(o.lodAt(t));\n    return this.getTileExtent({\n      x: r.resolution,\n      y: r.resolution\n    }, e, i, o.origin, o.spatialReference, o.size);\n  }\n\n  updateTileInfo() {\n    const {\n      storageInfo: t,\n      spatialReference: e,\n      extent: i,\n      pixelSize: o\n    } = this.rasterInfo;\n\n    if (!t.tileInfo) {\n      const r = [],\n            n = t.maximumPyramidLevel || 0;\n      let s = Math.max(o.x, o.y),\n          a = 1 / .0254 * 96 * s;\n\n      for (let t = 0; t <= n; t++) r.push({\n        level: n - t,\n        resolution: s,\n        scale: a\n      }), s *= 2, a *= 2;\n\n      const l = new N({\n        x: i.xmin,\n        y: i.ymax,\n        spatialReference: e\n      });\n      t.tileInfo = new y({\n        origin: l,\n        size: [t.blockWidth, t.blockHeight],\n        spatialReference: e,\n        lods: r\n      }), t.isVirtualTileInfo = !0;\n    }\n  }\n\n  createRemoteDatasetStorageInfo(t, e = 512, i = 512, o) {\n    const {\n      width: r,\n      height: n,\n      nativeExtent: s,\n      pixelSize: a,\n      spatialReference: l\n    } = t,\n          c = new N({\n      x: s.xmin,\n      y: s.ymax,\n      spatialReference: l\n    });\n    null == o && (o = Math.max(0, Math.round(Math.log(Math.max(r, n)) / Math.LN2 - 8)));\n    const m = this.computeBlockBoundary(s, 512, 512, {\n      x: s.xmin,\n      y: s.ymax\n    }, [a], o);\n    t.storageInfo = new g({\n      blockWidth: e,\n      blockHeight: i,\n      pyramidBlockWidth: e,\n      pyramidBlockHeight: i,\n      origin: c,\n      firstPyramidLevel: 1,\n      maximumPyramidLevel: o,\n      blockBoundary: m\n    });\n  }\n\n  async computeBestPyramidLevelForLocation(t, e = {}) {\n    return 0;\n  }\n\n  computeBlockBoundary(t, e, i, o, r, n = 0, s = 2) {\n    if (1 === r.length && n > 0) {\n      r = [...r];\n      let {\n        x: t,\n        y: e\n      } = r[0];\n\n      for (let i = 0; i < n; i++) t *= s, e *= s, r.push({\n        x: t,\n        y: e\n      });\n    }\n\n    const a = [],\n          {\n      x: l,\n      y: c\n    } = o;\n\n    for (let m = 0; m < r.length; m++) {\n      const {\n        x: o,\n        y: n\n      } = r[m];\n      a.push({\n        minCol: Math.floor((t.xmin - l + .1 * o) / e / o),\n        maxCol: Math.floor((t.xmax - l - .1 * o) / e / o),\n        minRow: Math.floor((c - t.ymax + .1 * n) / i / n),\n        maxRow: Math.floor((c - t.ymin - .1 * n) / i / n)\n      });\n    }\n\n    return a;\n  }\n\n  getPyramidPixelSize(t) {\n    const {\n      nativePixelSize: e\n    } = this.rasterInfo,\n          {\n      pyramidResolutions: i,\n      pyramidScalingFactor: o\n    } = this.rasterInfo.storageInfo;\n    if (0 === t) return e;\n    if (n(i) && i.length) return i[t - 1];\n    const r = o ** t;\n    return {\n      x: e.x * r,\n      y: e.y * r\n    };\n  }\n\n  identifyPixelLocation(t, e, i, o) {\n    const {\n      spatialReference: r,\n      nativeExtent: s,\n      storageInfo: a\n    } = this.rasterInfo,\n          {\n      maximumPyramidLevel: l,\n      origin: c,\n      transposeInfo: m\n    } = a,\n          f = o && n(m) ? m.tileSize[0] : a.blockWidth,\n          h = o && n(m) ? m.tileSize[1] : a.blockHeight,\n          u = H(t, r, i);\n    if (!s.intersects(u)) return null;\n    if (e < 0 || e > l) return null;\n    const p = this.getPyramidPixelSize(e),\n          {\n      x: d,\n      y: x\n    } = p,\n          g = (c.y - u.y) / x / h,\n          y = (u.x - c.x) / d / f,\n          I = Math.min(h - 1, Math.floor((g - Math.floor(g)) * h)),\n          R = Math.min(f - 1, Math.floor((y - Math.floor(y)) * f));\n    return {\n      pyramidLevel: e,\n      row: Math.floor(g),\n      col: Math.floor(y),\n      rowOffset: I,\n      colOffset: R,\n      blockWidth: f,\n      srcLocation: u\n    };\n  }\n\n  getTileExtent(t, e, i, o, r, n) {\n    const [s, a] = n,\n          l = o.x + i * s * t.x,\n          c = l + s * t.x,\n          m = o.y - e * a * t.y,\n          f = m - a * t.y;\n    return new J({\n      xmin: l,\n      xmax: c,\n      ymin: f,\n      ymax: m,\n      spatialReference: r\n    });\n  }\n\n  getBlockWidthHeight(t) {\n    return {\n      blockWidth: t > 0 ? this.rasterInfo.storageInfo.pyramidBlockWidth : this.rasterInfo.storageInfo.blockWidth,\n      blockHeight: t > 0 ? this.rasterInfo.storageInfo.pyramidBlockHeight : this.rasterInfo.storageInfo.blockHeight\n    };\n  }\n\n  isBlockOutside(t, e, i) {\n    const o = this.rasterInfo.storageInfo.blockBoundary[t];\n    return !o || o.maxRow < e || o.maxCol < i || o.minRow > e || o.minCol > i;\n  }\n\n  async _fetchPixels(t, e, i, o = {}) {\n    let r = D(t);\n    if (r >= 2) return {\n      extent: t,\n      pixelBlock: null\n    };\n\n    const a = this._getSourceDataInfo(t, e, i, o),\n          {\n      pyramidLevel: l,\n      pyramidResolution: c,\n      srcResolution: m,\n      srcExtent: f,\n      srcWidth: h,\n      srcHeight: u\n    } = a;\n\n    if (0 === h || 0 === u) return {\n      extent: t,\n      srcExtent: f,\n      pixelBlock: null\n    };\n    const p = s(this.rasterInfo.transform),\n          d = \"gcs-shift\" === p?.type,\n          x = n(j(t.spatialReference));\n    !d && x || (r = D(a.srcExtent, d));\n    const g = this.rasterInfo.storageInfo,\n          y = {\n      x: Math.floor((f.xmin - g.origin.x) / c.x + .1),\n      y: Math.floor((g.origin.y - f.ymax) / c.y + .1)\n    },\n          I = await this._fetchRawTiles(l, y, {\n      width: h,\n      height: u,\n      wrapCount: r\n    }, o);\n    if (!I) return {\n      extent: t,\n      srcExtent: f,\n      pixelBlock: null\n    };\n    const R = l > 0 ? g.pyramidBlockWidth : g.blockWidth,\n          w = l > 0 ? g.pyramidBlockHeight : g.blockHeight,\n          k = R === h && w === u && y.x % R == 0 && y.y % w == 0,\n          b = new N({\n      x: (t.xmax - t.xmin) / e,\n      y: (t.ymax - t.ymin) / i,\n      spatialReference: t.spatialReference\n    }),\n          v = !t.spatialReference.equals(this.rasterInfo.spatialReference),\n          {\n      datumTransformation: S\n    } = o;\n    if (!v && k && 1 === I.pixelBlocks.length && R === e && w === i && m.x === b.x && m.y === b.y) return {\n      extent: t,\n      srcExtent: f,\n      pixelBlock: I.pixelBlocks[0]\n    };\n    const T = x && n(j(f.spatialReference)),\n          B = o.requestProjectedLocalDirections && this.rasterInfo.dataType.startsWith(\"vector\");\n    B && !this.rasterJobHandler && (await _());\n    const P = this.rasterJobHandler ? await this.rasterJobHandler.getProjectionOffsetGrid({\n      projectedExtent: t,\n      srcBufferExtent: I.extent,\n      pixelSize: b.toJSON(),\n      datumTransformation: S,\n      rasterTransform: p,\n      hasWrapAround: r > 0 || T,\n      isAdaptive: !1 !== this.ioConfig.optimizeProjectionAccuracy,\n      includeGCSGrid: B\n    }, o) : A({\n      projectedExtent: t,\n      srcBufferExtent: I.extent,\n      pixelSize: b,\n      datumTransformation: S,\n      rasterTransform: p,\n      hasWrapAround: r > 0 || T,\n      isAdaptive: !1,\n      includeGCSGrid: B\n    });\n    let H;\n    const E = !o.requestRawData,\n          L = {\n      rows: P.spacing[0],\n      cols: P.spacing[1]\n    },\n          z = s(this._getRasterTileAlignmentInfo(l, I.extent.xmin)),\n          {\n      pixelBlocks: F,\n      mosaicSize: O,\n      isPartiallyFilled: G\n    } = I;\n    let J = null;\n\n    if (this.rasterJobHandler) {\n      const t = await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: F,\n        srcMosaicSize: O,\n        destDimension: E ? {\n          width: e,\n          height: i\n        } : null,\n        coefs: E ? P.coefficients : null,\n        sampleSpacing: E ? L : null,\n        projectDirections: B,\n        gcsGrid: B ? P.gcsGrid : null,\n        isUV: \"vector-uv\" === this.rasterInfo.dataType,\n        interpolation: o.interpolation,\n        alignmentInfo: z,\n        blockWidths: null\n      }, o);\n      ({\n        pixelBlock: H,\n        localNorthDirections: J\n      } = t);\n    } else {\n      const t = W(F, O, {\n        alignmentInfo: z\n      });\n      H = E ? M(t, {\n        width: e,\n        height: i\n      }, P.coefficients, L, o.interpolation) : t, B && P.gcsGrid && (J = C({\n        width: e,\n        height: i\n      }, P.gcsGrid), H = q(H, this.rasterInfo.dataType, J));\n    }\n\n    return o.requestRawData || B ? {\n      srcExtent: f,\n      pixelBlock: H,\n      transformGrid: P,\n      localNorthDirections: J,\n      extent: t,\n      isPartiallyFilled: G\n    } : {\n      srcExtent: f,\n      extent: t,\n      pixelBlock: H\n    };\n  }\n\n  async _fetchRawTiles(t, e, i, o) {\n    const {\n      origin: r,\n      blockBoundary: s\n    } = this.rasterInfo.storageInfo,\n          {\n      blockWidth: a,\n      blockHeight: l\n    } = this.getBlockWidthHeight(t);\n    let {\n      x: c,\n      y: m\n    } = e,\n        {\n      width: f,\n      height: h,\n      wrapCount: u\n    } = i;\n\n    const p = this._getRasterTileAlignmentInfo(t, 0);\n\n    o.buffer && (c -= o.buffer.cols, m -= o.buffer.rows, f += 2 * o.buffer.cols, h += 2 * o.buffer.rows);\n    let d = 0,\n        x = 0,\n        g = 0;\n\n    if (u && n(p)) {\n      ({\n        worldColumnCountFromOrigin: x,\n        originColumnOffset: g,\n        rightPadding: d\n      } = p);\n      x * p.blockWidth - d >= c + f && (d = 0);\n    }\n\n    const y = Math.floor(c / a),\n          I = Math.floor(m / l),\n          R = Math.floor((c + f + d - 1) / a),\n          w = Math.floor((m + h + d - 1) / l),\n          k = s[t];\n    if (!k) return null;\n    const {\n      minRow: b,\n      minCol: v,\n      maxCol: S,\n      maxRow: T\n    } = k;\n    if (0 === u && (w < b || R < v || I > T || y > S)) return null;\n    const B = new Array();\n    let P = !1;\n    const W = null == this.ioConfig.allowPartialFill ? o.allowPartialFill : this.ioConfig.allowPartialFill;\n\n    for (let L = I; L <= w; L++) for (let e = y; e <= R; e++) {\n      let i = e;\n\n      if (!o.disableWrapAround && u && n(p) && x <= e && (i = e - x - g), L >= b && i >= v && T >= L && S >= i) {\n        const e = this._fetchRawTile(t, L, i, o);\n\n        W ? B.push(new Promise(t => {\n          e.then(e => t(e)).catch(() => {\n            P = !0, t(null);\n          });\n        })) : B.push(e);\n      } else B.push(Promise.resolve(null));\n    }\n\n    if (0 === B.length) return null;\n    const M = await Promise.all(B),\n          C = {\n      height: (w - I + 1) * l,\n      width: (R - y + 1) * a\n    },\n          {\n      spatialReference: _\n    } = this.rasterInfo,\n          j = this.getPyramidPixelSize(t),\n          {\n      x: H,\n      y: E\n    } = j;\n    return {\n      extent: new J({\n        xmin: r.x + y * a * H,\n        xmax: r.x + (R + 1) * a * H,\n        ymin: r.y - (w + 1) * l * E,\n        ymax: r.y - I * l * E,\n        spatialReference: _\n      }),\n      pixelBlocks: M,\n      mosaicSize: C,\n      isPartiallyFilled: P\n    };\n  }\n\n  _fetchRawTile(t, e, i, o) {\n    const r = this.rasterInfo.storageInfo.blockBoundary[t];\n    if (!r) return Promise.resolve(null);\n    const {\n      minRow: n,\n      minCol: s,\n      maxCol: l,\n      maxRow: c\n    } = r;\n    if (e < n || i < s || e > c || i > l) return Promise.resolve(null);\n    const f = b(this.url, o.sliceId),\n          h = `${t}/${e}/${i}`;\n    let u = v(f, o.registryId, h);\n\n    if (a(u)) {\n      const r = new AbortController();\n      u = this.fetchRawTile(t, e, i, { ...o,\n        signal: r.signal\n      }), S(f, o.registryId, h, u, r), u.catch(() => T(f, o.registryId, h));\n    }\n\n    return o.signal && m(o, () => {\n      B(f, o.registryId, h);\n    }), u;\n  }\n\n  _computeMagDirValues(t) {\n    const {\n      bandCount: e,\n      dataType: i\n    } = this.rasterInfo;\n    if (!(2 === e && \"vector-magdir\" === i || \"vector-uv\" === i) || 2 !== t?.length || !t[0]?.length) return null;\n    const o = t[0].length;\n\n    if (\"vector-magdir\" === i) {\n      const e = t[1].map(t => (t + 360) % 360);\n      return [t[0], e];\n    }\n\n    const [r, n] = t,\n          s = [],\n          a = [];\n\n    for (let l = 0; l < o; l++) {\n      const [t, e] = G([r[l], n[l]]);\n      s.push(t), a.push(e);\n    }\n\n    return [s, a];\n  }\n\n  _getRasterTileAlignmentInfo(t, e) {\n    return null == this._rasterTileAlighmentInfo && (this._rasterTileAlighmentInfo = F(this.rasterInfo)), a(this._rasterTileAlighmentInfo.pyramidsInfo) ? null : {\n      startX: e,\n      halfWorldWidth: this._rasterTileAlighmentInfo.halfWorldWidth,\n      hasGCSSShiftTransform: this._rasterTileAlighmentInfo.hasGCSSShiftTransform,\n      ...this._rasterTileAlighmentInfo.pyramidsInfo[t]\n    };\n  }\n\n  _getSourceDataInfo(t, e, i, o = {}) {\n    const r = {\n      datumTransformation: o.datumTransformation,\n      pyramidLevel: 0,\n      pyramidResolution: null,\n      srcExtent: null,\n      srcHeight: 0,\n      srcResolution: null,\n      srcWidth: 0\n    };\n    o.srcResolution && (r.srcResolution = o.srcResolution, this._updateSourceDataInfo(t, r));\n    const n = this.rasterInfo.storageInfo.maximumPyramidLevel || 0,\n          {\n      srcWidth: s,\n      srcHeight: a,\n      pyramidLevel: l\n    } = r,\n          c = s / e,\n          m = a / i,\n          f = l < n && c * m >= 16;\n\n    if (f || l === n && (c > V || m > V) || 0 === s || 0 === a) {\n      const s = new N({\n        x: (t.xmax - t.xmin) / e,\n        y: (t.ymax - t.ymin) / i,\n        spatialReference: t.spatialReference\n      });\n      let a = O(s, this.rasterInfo.spatialReference, t, r.datumTransformation);\n      const h = !a || o.srcResolution && a.x + a.y < o.srcResolution.x + o.srcResolution.y;\n\n      if (f && o.srcResolution && h) {\n        const t = Math.round(Math.log(Math.max(c, m)) / Math.LN2) - 1;\n\n        if (n - l + 3 >= t) {\n          const e = 2 ** t;\n          a = {\n            x: o.srcResolution.x * e,\n            y: o.srcResolution.y * e\n          };\n        }\n      }\n\n      a && (r.srcResolution = a, this._updateSourceDataInfo(t, r));\n    }\n\n    return (r.srcWidth / e > V || r.srcHeight / i > V) && (r.srcWidth = 0, r.srcHeight = 0), r;\n  }\n\n  _updateSourceDataInfo(t, e) {\n    e.srcWidth = 0, e.srcHeight = 0;\n    const i = this.rasterInfo.spatialReference,\n          {\n      srcResolution: o,\n      datumTransformation: r\n    } = e,\n          {\n      pyramidLevel: n,\n      pyramidResolution: a,\n      excessiveReading: l\n    } = E(o, this.rasterInfo, this.ioConfig.sampling);\n    if (l) return;\n    let c = e.srcExtent || z(t, i, r);\n    if (null == c) return;\n    const m = s(this.rasterInfo.transform);\n    m && (c = m.inverseTransform(c)), e.srcExtent = c;\n    const f = Math.ceil((c.xmax - c.xmin) / a.x - .1),\n          h = Math.ceil((c.ymax - c.ymin) / a.y - .1);\n    e.pyramidLevel = n, e.pyramidResolution = a, e.srcWidth = f, e.srcHeight = h;\n  }\n\n  _getRequestOptionsWithSliceId(t) {\n    return n(this.rasterInfo.multidimensionalInfo) && null == t.sliceId && (t = { ...t,\n      sliceId: this.getSliceIndex(t.multidimensionalDefinition)\n    }), t;\n  }\n\n  _processIdentifyResult(t, e) {\n    const {\n      srcLocation: i,\n      position: o,\n      pyramidLevel: r,\n      useTransposedTile: n\n    } = e,\n          l = t.pixels[0].length / t.width / t.height;\n    if (!(!t.mask || t.mask[o])) return {\n      location: i,\n      value: null\n    };\n    const {\n      multidimensionalInfo: c\n    } = this.rasterInfo;\n\n    if (a(c) || !n) {\n      const e = t.pixels.map(t => t[o]),\n            n = {\n        location: i,\n        value: e,\n        pyramidLevel: r\n      },\n            s = this._computeMagDirValues(e.map(t => [t]));\n\n      return s?.length && (n.magdirValue = s.map(t => t[0])), n;\n    }\n\n    let m = t.pixels.map(t => Array.prototype.slice.call(t, o * l, o * l + l)),\n        f = this._computeMagDirValues(m);\n\n    const {\n      requestSomeSlices: h,\n      identifyOptions: u\n    } = e;\n    let p = w(c, u.transposedVariableName);\n\n    if (h) {\n      const t = k(p, s(u.multidimensionalDefinition), s(u.timeExtent));\n      m = m.map(e => t.map(t => e[t])), f = f?.map(e => t.map(t => e[t])), p = t.map(t => p[t]);\n    }\n\n    return {\n      location: i,\n      value: null,\n      dataSeries: p.map((t, e) => {\n        const i = {\n          value: m.map(t => t[e]),\n          multidimensionalDefinition: t.multidimensionalDefinition.map(t => new x({ ...t,\n            isSlice: !0\n          }))\n        };\n        return f?.length && (i.magdirValue = [f[0][e], f[1][e]]), i;\n      }),\n      pyramidLevel: r\n    };\n  }\n\n};\nt([f()], $.prototype, \"_rasterTileAlighmentInfo\", void 0), t([f({\n  readOnly: !0\n})], $.prototype, \"_isGlobalWrappableSource\", null), t([f(d)], $.prototype, \"url\", null), t([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], $.prototype, \"datasetName\", void 0), t([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], $.prototype, \"datasetFormat\", void 0), t([f()], $.prototype, \"rasterInfo\", void 0), t([f()], $.prototype, \"ioConfig\", void 0), t([f()], $.prototype, \"sourceJSON\", void 0), $ = t([u(\"esri.layers.support.rasterDatasets.BaseRaster\")], $);\nconst U = $;\nexport { U as default };","map":{"version":3,"names":["_","t","e","i","JSONSupport","o","r","isSome","n","unwrap","s","isNone","a","unwrapOrThrow","l","EsriPromiseMixin","c","onAbort","m","property","f","ensureClass","h","subclass","u","sanitizeUrl","p","url","d","x","g","y","isMultiSliceOrRangeDefinition","I","getSliceIndex","R","createSlices","w","getSliceIds","k","getRasterId","b","getBlock","v","putBlock","S","deleteBlock","T","decreaseRefCount","B","decode","P","mosaic","W","approximateTransform","M","getLocalArithmeticNorthRotations","C","load","getWorldWidth","j","projectPoint","H","snapPyramid","E","snapExtent","L","getWorldWrapCount","D","projectExtent","z","getProjectionOffsetGrid","A","getRasterDatasetAlignmentInfo","F","projectResolution","O","convertToLocalDirections","q","uvComponentToVector","G","J","N","V","$","constructor","arguments","rasterJobHandler","datasetName","datasetFormat","rasterInfo","ioConfig","sampling","init","addResolvingPromise","when","normalizeCtorArgs","resolution","bandIds","tileInfo","create","_isGlobalWrappableSource","spatialReference","extent","width","_set","getLogger","declaredClass","open","fetchTile","storageInfo","getTileExtentFromTileInfo","fetchPixels","size","identify","clone","normalize","multidimensionalDefinition","timeExtent","hasMultidimensionalTranspose","multidimensionalInfo","transposedVariableName","length","variableName","variables","name","_getRequestOptionsWithSliceId","datumTransformation","intersects","location","value","transform","inverseTransform","nativeExtent","srcResolution","pyramidLevel","computeBestPyramidLevelForLocation","identifyPixelLocation","row","col","rowOffset","colOffset","blockWidth","sliceId","fetchRawTile","pixels","_processIdentifyResult","srcLocation","position","useTransposedTile","requestSomeSlices","identifyOptions","requestRawData","_fetchPixels","pixelBlock","xmin","xmax","Math","round","ymin","ymax","push","disableWrapAround","Promise","all","map","height","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","destDimension","coefs","sampleSpacing","interpolation","alignmentInfo","blockWidths","srcExtent","fetchRawPixels","floor","_fetchRawTiles","nativePixelSize","pixelBlocks","mosaicSize","pyramidBlockWidth","pyramidBlockHeight","blockHeight","clipOffset","clipSize","computeExtent","decodePixelBlock","useCanvas","data","options","request","customFetchParameters","range","query","headers","retryCount","Range","from","to","lodAt","getTileExtent","origin","updateTileInfo","pixelSize","maximumPyramidLevel","max","level","scale","lods","isVirtualTileInfo","createRemoteDatasetStorageInfo","log","LN2","computeBlockBoundary","firstPyramidLevel","blockBoundary","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","pyramidResolutions","pyramidScalingFactor","transposeInfo","tileSize","min","getBlockWidthHeight","isBlockOutside","_getSourceDataInfo","pyramidResolution","srcWidth","srcHeight","type","wrapCount","equals","requestProjectedLocalDirections","dataType","startsWith","projectedExtent","srcBufferExtent","toJSON","rasterTransform","hasWrapAround","isAdaptive","optimizeProjectionAccuracy","includeGCSGrid","rows","spacing","cols","_getRasterTileAlignmentInfo","isPartiallyFilled","coefficients","projectDirections","gcsGrid","isUV","localNorthDirections","transformGrid","buffer","worldColumnCountFromOrigin","originColumnOffset","rightPadding","Array","allowPartialFill","_fetchRawTile","then","catch","resolve","registryId","AbortController","signal","_computeMagDirValues","bandCount","_rasterTileAlighmentInfo","pyramidsInfo","startX","halfWorldWidth","hasGCSSShiftTransform","_updateSourceDataInfo","excessiveReading","ceil","mask","magdirValue","prototype","slice","call","dataSeries","isSlice","readOnly","String","json","write","U","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import e from\"../../../request.js\";import i from\"../../../core/Error.js\";import{JSONSupport as o}from\"../../../core/JSONSupport.js\";import r from\"../../../core/Logger.js\";import{isSome as n,unwrap as s,isNone as a,unwrapOrThrow as l}from\"../../../core/maybe.js\";import{EsriPromiseMixin as c}from\"../../../core/Promise.js\";import{onAbort as m}from\"../../../core/promiseUtils.js\";import{property as f}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import{ensureClass as h}from\"../../../core/accessorSupport/ensureType.js\";import{subclass as u}from\"../../../core/accessorSupport/decorators/subclass.js\";import{sanitizeUrl as p}from\"../arcgisLayerUrl.js\";import{url as d}from\"../commonProperties.js\";import x from\"../DimensionalDefinition.js\";import g from\"../RasterStorageInfo.js\";import y from\"../TileInfo.js\";import{isMultiSliceOrRangeDefinition as I,getSliceIndex as R,createSlices as w,getSliceIds as k}from\"./multidimensionalUtils.js\";import{getRasterId as b,getBlock as v,putBlock as S,deleteBlock as T,decreaseRefCount as B}from\"./RawBlockCache.js\";import{decode as P}from\"../rasterFormats/RasterCodec.js\";import{mosaic as W,approximateTransform as M,getLocalArithmeticNorthRotations as C}from\"../rasterFunctions/pixelUtils.js\";import{load as _,getWorldWidth as j,projectPoint as H,snapPyramid as E,snapExtent as L,getWorldWrapCount as D,projectExtent as z,getProjectionOffsetGrid as A,getRasterDatasetAlignmentInfo as F,projectResolution as O}from\"../rasterFunctions/rasterProjectionHelper.js\";import{convertToLocalDirections as q,uvComponentToVector as G}from\"../rasterFunctions/vectorFieldUtils.js\";import J from\"../../../geometry/Extent.js\";import N from\"../../../geometry/Point.js\";const V=8;let $=class extends(c(o)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:\"closest\"}}async init(){const t=_();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:\"closest\",tileInfo:y.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=j(t.spatialReference);return n(e)&&t.extent.width>=e/2}set url(t){this._set(\"url\",p(t,r.getLogger(this.declaredClass)))}async open(t){throw new i(\"BaseRaster:open-not-implemented\",\"open() is not implemented\")}async fetchTile(t,e,i,o={}){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(t,e,i,r);return this.fetchPixels(n,r.size[0],r.size[1],o)}async identify(t,e={}){t=h(N,t).clone().normalize();const{multidimensionalDefinition:i,timeExtent:o}=e,{hasMultidimensionalTranspose:r,multidimensionalInfo:l}=this.rasterInfo;let{transposedVariableName:c}=e;const m=n(l)&&r&&(null!=o||I(i));if(m&&!c){c=n(i)&&i.length>0?i[0].variableName??void 0:l.variables[0].name,e={...e,transposedVariableName:c}}e=this._getRequestOptionsWithSliceId(e);const{spatialReference:f,extent:u}=this.rasterInfo,{datumTransformation:p}=e;let d=H(t,f,p);if(!u.intersects(d))return{location:d,value:null};if(n(this.rasterInfo.transform)){const t=this.rasterInfo.transform.inverseTransform(d);if(!this.rasterInfo.nativeExtent.intersects(t))return{location:t,value:null};d=t}let x=0;const g=n(c)&&n(l)&&this.rasterInfo.hasMultidimensionalTranspose;if(!g)if(e.srcResolution){x=E(e.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel}else if(x=await this.computeBestPyramidLevelForLocation(t,e),null==x)return{location:d,value:null};const y=this.identifyPixelLocation(d,x,null,g);if(null===y)return{location:d,value:null};const{row:R,col:w,rowOffset:k,colOffset:T,blockWidth:B}=y,P=c??s(e.sliceId),W=b(this.url,P),M=`${x}/${R}/${w}`;let C=v(W,null,M);a(C)&&(C=this.fetchRawTile(x,R,w,e),S(W,null,M,C));const _=await C;if(a(_)||!_.pixels?.length)return{location:d,value:null};const j=k*B+T;return this._processIdentifyResult(_,{srcLocation:d,position:j,pyramidLevel:x,useTransposedTile:!!g,requestSomeSlices:m,identifyOptions:e})}async fetchPixels(t,e,i,o={}){if(t=L(t),(o=this._getRequestOptionsWithSliceId(o)).requestRawData)return this._fetchPixels(t,e,i,o);const r=j(t.spatialReference),n=D(t);if(a(r)||0===n||1===n&&this._isGlobalWrappableSource)return this._fetchPixels(t,e,i,o);if(n>=3)return{extent:t,pixelBlock:null};const s=[],{xmin:l,xmax:c}=t,m=Math.round(r/(c-l)*e),f=m-Math.round((r/2-l)/(c-l)*e);let h=0;const u=[];for(let a=0;a<=n;a++){const p=new J({xmin:0===a?l:-r/2,xmax:a===n?c-r*a:r/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),d=0===a?m-f:a===n?e-h:m;h+=d,u.push(d);const x=o.disableWrapAround&&a>0?null:this._fetchPixels(p,d,i,o);s.push(x)}const p=(await Promise.all(s)).map((t=>t?.pixelBlock));let d=null;const x={width:e,height:i};if(this.rasterJobHandler){d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:\"nearest\",alignmentInfo:null,blockWidths:u},o)).pixelBlock}else d=W(p,x,{blockWidths:u});return{extent:t,srcExtent:z(t,this.rasterInfo.spatialReference,o.datumTransformation),pixelBlock:d}}async fetchRawPixels(t,e,i,o={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const r=await this._fetchRawTiles(t,e,i,o),{nativeExtent:s,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**t,m=a.x*c,f=a.y*c,h=new J({xmin:s.xmin+m*e.x,xmax:s.xmin+m*(e.x+i.width-1),ymin:s.ymax-f*(e.y+i.height-1),ymax:s.ymax-f*e.y,spatialReference:s.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:u,mosaicSize:p}=r;if(1===u.length&&n(u[0])&&u[0].width===i.width&&u[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const d=t>0?l.pyramidBlockWidth:l.blockWidth,x=t>0?l.pyramidBlockHeight:l.blockHeight,g={x:e.x%d,y:e.y%x};let y;if(this.rasterJobHandler){y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:p,destDimension:i,clipOffset:g,clipSize:i,coefs:null,sampleSpacing:null,interpolation:o.interpolation,alignmentInfo:null,blockWidths:null},o)).pixelBlock}else y=W(u,p,{clipOffset:g,clipSize:i});return{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(t,e,o,r){throw new i(\"BaseRaster:read-not-implemented\",\"fetchRawTile() is not implemented\")}computeExtent(t){return z(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?P(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,i,o=0){const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:a}=i;o=o??i.retryCount??this.ioConfig.retryCount;const l=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await e(t,{...i,query:{...s,...r},headers:{...a,...l}})}catch(c){if(o>0)return o--,this.request(t,i,o);throw c}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return a(e)||a(t)||0===t.length?null:R(t,e)}getTileExtentFromTileInfo(t,e,i,o){const r=l(o.lodAt(t));return this.getTileExtent({x:r.resolution,y:r.resolution},e,i,o.origin,o.spatialReference,o.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:i,pixelSize:o}=this.rasterInfo;if(!t.tileInfo){const r=[],n=t.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let t=0;t<=n;t++)r.push({level:n-t,resolution:s,scale:a}),s*=2,a*=2;const l=new N({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new y({origin:l,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:r}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,o){const{width:r,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=t,c=new N({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const m=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[a],o);t.storageInfo=new g({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,i,o,r,n=0,s=2){if(1===r.length&&n>0){r=[...r];let{x:t,y:e}=r[0];for(let i=0;i<n;i++)t*=s,e*=s,r.push({x:t,y:e})}const a=[],{x:l,y:c}=o;for(let m=0;m<r.length;m++){const{x:o,y:n}=r[m];a.push({minCol:Math.floor((t.xmin-l+.1*o)/e/o),maxCol:Math.floor((t.xmax-l-.1*o)/e/o),minRow:Math.floor((c-t.ymax+.1*n)/i/n),maxRow:Math.floor((c-t.ymin-.1*n)/i/n)})}return a}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===t)return e;if(n(i)&&i.length)return i[t-1];const r=o**t;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(t,e,i,o){const{spatialReference:r,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:m}=a,f=o&&n(m)?m.tileSize[0]:a.blockWidth,h=o&&n(m)?m.tileSize[1]:a.blockHeight,u=H(t,r,i);if(!s.intersects(u))return null;if(e<0||e>l)return null;const p=this.getPyramidPixelSize(e),{x:d,y:x}=p,g=(c.y-u.y)/x/h,y=(u.x-c.x)/d/f,I=Math.min(h-1,Math.floor((g-Math.floor(g))*h)),R=Math.min(f-1,Math.floor((y-Math.floor(y))*f));return{pyramidLevel:e,row:Math.floor(g),col:Math.floor(y),rowOffset:I,colOffset:R,blockWidth:f,srcLocation:u}}getTileExtent(t,e,i,o,r,n){const[s,a]=n,l=o.x+i*s*t.x,c=l+s*t.x,m=o.y-e*a*t.y,f=m-a*t.y;return new J({xmin:l,xmax:c,ymin:f,ymax:m,spatialReference:r})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,i){const o=this.rasterInfo.storageInfo.blockBoundary[t];return!o||o.maxRow<e||o.maxCol<i||o.minRow>e||o.minCol>i}async _fetchPixels(t,e,i,o={}){let r=D(t);if(r>=2)return{extent:t,pixelBlock:null};const a=this._getSourceDataInfo(t,e,i,o),{pyramidLevel:l,pyramidResolution:c,srcResolution:m,srcExtent:f,srcWidth:h,srcHeight:u}=a;if(0===h||0===u)return{extent:t,srcExtent:f,pixelBlock:null};const p=s(this.rasterInfo.transform),d=\"gcs-shift\"===p?.type,x=n(j(t.spatialReference));!d&&x||(r=D(a.srcExtent,d));const g=this.rasterInfo.storageInfo,y={x:Math.floor((f.xmin-g.origin.x)/c.x+.1),y:Math.floor((g.origin.y-f.ymax)/c.y+.1)},I=await this._fetchRawTiles(l,y,{width:h,height:u,wrapCount:r},o);if(!I)return{extent:t,srcExtent:f,pixelBlock:null};const R=l>0?g.pyramidBlockWidth:g.blockWidth,w=l>0?g.pyramidBlockHeight:g.blockHeight,k=R===h&&w===u&&y.x%R==0&&y.y%w==0,b=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),v=!t.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:S}=o;if(!v&&k&&1===I.pixelBlocks.length&&R===e&&w===i&&m.x===b.x&&m.y===b.y)return{extent:t,srcExtent:f,pixelBlock:I.pixelBlocks[0]};const T=x&&n(j(f.spatialReference)),B=o.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith(\"vector\");B&&!this.rasterJobHandler&&await _();const P=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:b.toJSON(),datumTransformation:S,rasterTransform:p,hasWrapAround:r>0||T,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:B},o):A({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:b,datumTransformation:S,rasterTransform:p,hasWrapAround:r>0||T,isAdaptive:!1,includeGCSGrid:B});let H;const E=!o.requestRawData,L={rows:P.spacing[0],cols:P.spacing[1]},z=s(this._getRasterTileAlignmentInfo(l,I.extent.xmin)),{pixelBlocks:F,mosaicSize:O,isPartiallyFilled:G}=I;let J=null;if(this.rasterJobHandler){const t=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:O,destDimension:E?{width:e,height:i}:null,coefs:E?P.coefficients:null,sampleSpacing:E?L:null,projectDirections:B,gcsGrid:B?P.gcsGrid:null,isUV:\"vector-uv\"===this.rasterInfo.dataType,interpolation:o.interpolation,alignmentInfo:z,blockWidths:null},o);({pixelBlock:H,localNorthDirections:J}=t)}else{const t=W(F,O,{alignmentInfo:z});H=E?M(t,{width:e,height:i},P.coefficients,L,o.interpolation):t,B&&P.gcsGrid&&(J=C({width:e,height:i},P.gcsGrid),H=q(H,this.rasterInfo.dataType,J))}return o.requestRawData||B?{srcExtent:f,pixelBlock:H,transformGrid:P,localNorthDirections:J,extent:t,isPartiallyFilled:G}:{srcExtent:f,extent:t,pixelBlock:H}}async _fetchRawTiles(t,e,i,o){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(t);let{x:c,y:m}=e,{width:f,height:h,wrapCount:u}=i;const p=this._getRasterTileAlignmentInfo(t,0);o.buffer&&(c-=o.buffer.cols,m-=o.buffer.rows,f+=2*o.buffer.cols,h+=2*o.buffer.rows);let d=0,x=0,g=0;if(u&&n(p)){({worldColumnCountFromOrigin:x,originColumnOffset:g,rightPadding:d}=p);x*p.blockWidth-d>=c+f&&(d=0)}const y=Math.floor(c/a),I=Math.floor(m/l),R=Math.floor((c+f+d-1)/a),w=Math.floor((m+h+d-1)/l),k=s[t];if(!k)return null;const{minRow:b,minCol:v,maxCol:S,maxRow:T}=k;if(0===u&&(w<b||R<v||I>T||y>S))return null;const B=new Array;let P=!1;const W=null==this.ioConfig.allowPartialFill?o.allowPartialFill:this.ioConfig.allowPartialFill;for(let L=I;L<=w;L++)for(let e=y;e<=R;e++){let i=e;if(!o.disableWrapAround&&u&&n(p)&&x<=e&&(i=e-x-g),L>=b&&i>=v&&T>=L&&S>=i){const e=this._fetchRawTile(t,L,i,o);W?B.push(new Promise((t=>{e.then((e=>t(e))).catch((()=>{P=!0,t(null)}))}))):B.push(e)}else B.push(Promise.resolve(null))}if(0===B.length)return null;const M=await Promise.all(B),C={height:(w-I+1)*l,width:(R-y+1)*a},{spatialReference:_}=this.rasterInfo,j=this.getPyramidPixelSize(t),{x:H,y:E}=j;return{extent:new J({xmin:r.x+y*a*H,xmax:r.x+(R+1)*a*H,ymin:r.y-(w+1)*l*E,ymax:r.y-I*l*E,spatialReference:_}),pixelBlocks:M,mosaicSize:C,isPartiallyFilled:P}}_fetchRawTile(t,e,i,o){const r=this.rasterInfo.storageInfo.blockBoundary[t];if(!r)return Promise.resolve(null);const{minRow:n,minCol:s,maxCol:l,maxRow:c}=r;if(e<n||i<s||e>c||i>l)return Promise.resolve(null);const f=b(this.url,o.sliceId),h=`${t}/${e}/${i}`;let u=v(f,o.registryId,h);if(a(u)){const r=new AbortController;u=this.fetchRawTile(t,e,i,{...o,signal:r.signal}),S(f,o.registryId,h,u,r),u.catch((()=>T(f,o.registryId,h)))}return o.signal&&m(o,(()=>{B(f,o.registryId,h)})),u}_computeMagDirValues(t){const{bandCount:e,dataType:i}=this.rasterInfo;if(!(2===e&&\"vector-magdir\"===i||\"vector-uv\"===i)||2!==t?.length||!t[0]?.length)return null;const o=t[0].length;if(\"vector-magdir\"===i){const e=t[1].map((t=>(t+360)%360));return[t[0],e]}const[r,n]=t,s=[],a=[];for(let l=0;l<o;l++){const[t,e]=G([r[l],n[l]]);s.push(t),a.push(e)}return[s,a]}_getRasterTileAlignmentInfo(t,e){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=F(this.rasterInfo)),a(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,i,o={}){const r={datumTransformation:o.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};o.srcResolution&&(r.srcResolution=o.srcResolution,this._updateSourceDataInfo(t,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:a,pyramidLevel:l}=r,c=s/e,m=a/i,f=l<n&&c*m>=16;if(f||l===n&&(c>V||m>V)||(0===s||0===a)){const s=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference});let a=O(s,this.rasterInfo.spatialReference,t,r.datumTransformation);const h=!a||o.srcResolution&&a.x+a.y<o.srcResolution.x+o.srcResolution.y;if(f&&o.srcResolution&&h){const t=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(n-l+3>=t){const e=2**t;a={x:o.srcResolution.x*e,y:o.srcResolution.y*e}}}a&&(r.srcResolution=a,this._updateSourceDataInfo(t,r))}return(r.srcWidth/e>V||r.srcHeight/i>V)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:o,datumTransformation:r}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:l}=E(o,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||z(t,i,r);if(null==c)return;const m=s(this.rasterInfo.transform);m&&(c=m.inverseTransform(c)),e.srcExtent=c;const f=Math.ceil((c.xmax-c.xmin)/a.x-.1),h=Math.ceil((c.ymax-c.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=f,e.srcHeight=h}_getRequestOptionsWithSliceId(t){return n(this.rasterInfo.multidimensionalInfo)&&null==t.sliceId&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:i,position:o,pyramidLevel:r,useTransposedTile:n}=e,l=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[o]))return{location:i,value:null};const{multidimensionalInfo:c}=this.rasterInfo;if(a(c)||!n){const e=t.pixels.map((t=>t[o])),n={location:i,value:e,pyramidLevel:r},s=this._computeMagDirValues(e.map((t=>[t])));return s?.length&&(n.magdirValue=s.map((t=>t[0]))),n}let m=t.pixels.map((t=>Array.prototype.slice.call(t,o*l,o*l+l))),f=this._computeMagDirValues(m);const{requestSomeSlices:h,identifyOptions:u}=e;let p=w(c,u.transposedVariableName);if(h){const t=k(p,s(u.multidimensionalDefinition),s(u.timeExtent));m=m.map((e=>t.map((t=>e[t])))),f=f?.map((e=>t.map((t=>e[t])))),p=t.map((t=>p[t]))}return{location:i,value:null,dataSeries:p.map(((t,e)=>{const i={value:m.map((t=>t[e])),multidimensionalDefinition:t.multidimensionalDefinition.map((t=>new x({...t,isSlice:!0})))};return f?.length&&(i.magdirValue=[f[0][e],f[1][e]]),i})),pyramidLevel:r}}};t([f()],$.prototype,\"_rasterTileAlighmentInfo\",void 0),t([f({readOnly:!0})],$.prototype,\"_isGlobalWrappableSource\",null),t([f(d)],$.prototype,\"url\",null),t([f({type:String,json:{write:!0}})],$.prototype,\"datasetName\",void 0),t([f({type:String,json:{write:!0}})],$.prototype,\"datasetFormat\",void 0),t([f()],$.prototype,\"rasterInfo\",void 0),t([f()],$.prototype,\"ioConfig\",void 0),t([f()],$.prototype,\"sourceJSON\",void 0),$=t([u(\"esri.layers.support.rasterDatasets.BaseRaster\")],$);const U=$;export{U as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}