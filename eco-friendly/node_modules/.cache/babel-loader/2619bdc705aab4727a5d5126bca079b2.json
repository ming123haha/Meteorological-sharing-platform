{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isNone as i, assertIsSome as s, isSome as r, unwrap as a } from \"../../../core/maybe.js\";\nimport { urlToObject as l } from \"../../../core/urlUtils.js\";\nimport { property as o } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as n } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport c from \"../RasterInfo.js\";\nimport m from \"../RasterStorageInfo.js\";\nimport { readServiceTileInfo as h } from \"../serviceTileInfoProperty.js\";\nimport f from \"../TileInfo.js\";\nimport { TilemapCache as p } from \"../TilemapCache.js\";\nimport u from \"./BaseRaster.js\";\nimport { setValidBoundary as y } from \"../rasterFunctions/pixelUtils.js\";\nimport d from \"../rasterTransforms/GCSShiftTransform.js\";\nimport { fetchServiceRasterInfo as x } from \"../../../rest/imageService/fetchRasterInfo.js\";\nimport g from \"../../../geometry/SpatialReference.js\";\nimport v from \"../../../geometry/Point.js\";\nimport S from \"../../../geometry/Extent.js\";\nlet I = class extends u {\n  constructor() {\n    super(...arguments), this._levelOffset = 0, this._tilemapCache = null, this._slices = null, this.datasetFormat = \"RasterTileServer\", this.tileType = null;\n  }\n\n  async open(e) {\n    await this.init();\n    const r = e && e.signal,\n          a = this.sourceJSON ? {\n      data: this.sourceJSON\n    } : await this.request(this.url, {\n      query: {\n        f: \"json\"\n      },\n      signal: r\n    });\n    a.ssl && (this.url = this.url.replace(/^http:/i, \"https:\"));\n    const o = a.data;\n    if (this.sourceJSON = o, !o) throw new t(\"imageserverraster:open\", \"cannot initialize tiled image service, missing service info\");\n    if (!o.tileInfo) throw new t(\"imageserverraster:open\", \"use ImageryLayer to open non-tiled image services\");\n\n    this._fixScaleInServiceInfo();\n\n    const n = [\"jpg\", \"jpeg\", \"png\", \"png8\", \"png24\", \"png32\", \"mixed\"];\n    this.tileType = o.cacheType, null == this.tileType && (n.includes(o.tileInfo.format.toLowerCase()) ? this.tileType = \"Map\" : \"lerc\" === o.tileInfo.format.toLowerCase() ? this.tileType = \"Elevation\" : this.tileType = \"Raster\"), this.datasetName = o.name?.slice(o.name.indexOf(\"/\") + 1) ?? \"\";\n    const c = await this._fetchRasterInfo({\n      signal: r\n    });\n    if (i(c)) throw new t(\"image-server-raster:open\", \"cannot initialize image service\");\n    const u = \"Map\" === this.tileType ? h(o.tileInfo, o) : f.fromJSON(o.tileInfo);\n    s(u);\n\n    const [y, d] = this._computeMinMaxLOD(c, u),\n          {\n      extent: x,\n      pixelSize: g\n    } = c,\n          v = .5 / c.width * g.x,\n          S = Math.max(g.x, g.y),\n          {\n      lods: I\n    } = u;\n\n    (\"Map\" !== this.tileType && 0 !== o.maxScale || Math.abs(g.x - g.y) > v || !I.some(e => Math.abs(e.resolution - S) < v)) && (g.x = g.y = y.resolution, c.width = Math.ceil((x.xmax - x.xmin) / g.x - .1), c.height = Math.ceil((x.ymax - x.ymin) / g.y - .1));\n    const w = y.level - d.level,\n          [j, T] = u.size,\n          b = [];\n    I.forEach(e => {\n      e.level >= d.level && e.level <= y.level && b.push({\n        x: e.resolution,\n        y: e.resolution\n      });\n    }), b.sort((e, t) => e.x - t.x);\n\n    const _ = this.computeBlockBoundary(x, j, T, u.origin, b, w),\n          M = b.length > 1 ? b.slice(1) : null;\n\n    let R;\n\n    if (o.transposeInfo && (R = {\n      tileSize: [o.transposeInfo.rows, o.transposeInfo.cols],\n      packetSize: c.keyProperties?._yxs.PacketSize ?? 0\n    }), c.storageInfo = new m({\n      blockWidth: u.size[0],\n      blockHeight: u.size[1],\n      pyramidBlockWidth: u.size[0],\n      pyramidBlockHeight: u.size[1],\n      pyramidResolutions: M,\n      compression: u.format,\n      origin: u.origin,\n      firstPyramidLevel: 1,\n      maximumPyramidLevel: w,\n      tileInfo: u,\n      transposeInfo: R,\n      blockBoundary: _\n    }), this._fixGCSShift(c), this._set(\"rasterInfo\", c), o.capabilities.toLowerCase().includes(\"tilemap\")) {\n      const e = {\n        tileInfo: c.storageInfo.tileInfo,\n        parsedUrl: l(this.url),\n        url: this.url,\n        tileServers: [],\n        type: \"tile\"\n      };\n      this._tilemapCache = new p({\n        layer: e\n      });\n    }\n  }\n\n  async fetchRawTile(e, t, i, s = {}) {\n    const {\n      storageInfo: a,\n      extent: l\n    } = this.rasterInfo,\n          {\n      transposeInfo: o\n    } = a,\n          n = r(o) && !!s.transposedVariableName;\n    if (this._slices && !n && null == s.sliceId) return null;\n    const c = n ? 0 : a.maximumPyramidLevel - e + this._levelOffset,\n          m = `${this.url}/tile/${c}/${t}/${i}`,\n          h = this._slices ? n ? {\n      variable: s.transposedVariableName\n    } : {\n      sliceId: s.sliceId || 0\n    } : null,\n          {\n      data: f\n    } = await this.request(m, {\n      query: h,\n      responseType: \"array-buffer\",\n      signal: s.signal\n    });\n    if (!f) return null;\n    const p = n ? o.tileSize : a.tileInfo.size,\n          u = await this.decodePixelBlock(f, {\n      width: p[0],\n      height: p[1],\n      planes: null,\n      pixelType: null,\n      isPoint: \"Elevation\" === this.tileType,\n      returnInterleaved: n\n    }),\n          d = a.blockBoundary[e];\n    if (\"jpg\" !== a.compression || i > d.minCol && i < d.maxCol && t > d.minRow && t < d.maxRow) return u;\n\n    const {\n      origin: x,\n      blockWidth: g,\n      blockHeight: v\n    } = a,\n          {\n      x: S,\n      y: I\n    } = this.getPyramidPixelSize(e),\n          w = Math.round((l.xmin - x.x) / S) % g,\n          j = Math.round((l.xmax - x.x) / S) % g || g,\n          T = Math.round((x.y - l.ymax) / I) % v,\n          b = Math.round((x.y - l.ymin) / I) % v || v,\n          _ = i === d.minCol ? w : 0,\n          M = t === d.minRow ? T : 0,\n          R = i === d.maxCol ? j : g,\n          z = t === d.maxRow ? b : v;\n\n    return y(u, {\n      x: _,\n      y: M\n    }, {\n      width: R - _,\n      height: z - M\n    }), u;\n  }\n\n  getSliceIndex(e) {\n    if (!this._slices || i(e) || 0 === e.length) return null;\n    const t = e;\n\n    for (let i = 0; i < this._slices.length; i++) {\n      const e = this._slices[i].multidimensionalDefinition;\n      if (e.length === t.length && !e.some(e => {\n        const i = t.find(t => e.variableName === t.variableName && t.dimensionName === e.dimensionName);\n        if (!i) return !0;\n        return (Array.isArray(e.values[0]) ? `${e.values[0][0]}-${e.values[0][1]}` : e.values[0]) !== (Array.isArray(i.values[0]) ? `${i.values[0][0]}-${i.values[0][1]}` : i.values[0]);\n      })) return i;\n    }\n\n    return null;\n  }\n\n  async fetchVariableStatisticsHistograms(e, t) {\n    const i = this.request(this.url + \"/statistics\", {\n      query: {\n        variable: e,\n        f: \"json\"\n      },\n      signal: t\n    }).then(e => e.data?.statistics),\n          s = this.request(this.url + \"/histograms\", {\n      query: {\n        variable: e,\n        f: \"json\"\n      },\n      signal: t\n    }).then(e => e.data?.histograms),\n          r = await Promise.all([i, s]);\n    return r[0] && r[0].forEach(e => {\n      e.avg = e.mean, e.stddev = e.standardDeviation;\n    }), {\n      statistics: r[0] || null,\n      histograms: r[1] || null\n    };\n  }\n\n  async computeBestPyramidLevelForLocation(e, t = {}) {\n    if (!this._tilemapCache) return 0;\n    let i = this.identifyPixelLocation(e, 0, a(t.datumTransformation));\n    if (null === i) return null;\n    let s = 0;\n    const {\n      maximumPyramidLevel: r\n    } = this.rasterInfo.storageInfo;\n    let l = r - s + this._levelOffset;\n    const o = i.srcLocation;\n\n    for (; l >= 0;) {\n      try {\n        if (\"available\" === (await this._tilemapCache.fetchAvailability(l, i.row, i.col, t))) break;\n      } catch {}\n\n      if (l--, s++, i = this.identifyPixelLocation(o, s, a(t.datumTransformation)), null === i) return null;\n    }\n\n    return -1 === l || null == i ? null : s;\n  }\n\n  async _fetchRasterInfo(e) {\n    const t = this.sourceJSON;\n\n    if (\"Map\" === this.tileType) {\n      const e = t.fullExtent || t.extent,\n            i = Math.ceil((e.xmax - e.xmin) / t.pixelSizeX - .1),\n            s = Math.ceil((e.ymax - e.ymin) / t.pixelSizeY - .1),\n            r = g.fromJSON(t.spatialReference || e.spatialReference),\n            a = new v({\n        x: t.pixelSizeX,\n        y: t.pixelSizeY,\n        spatialReference: r\n      });\n      return new c({\n        width: i,\n        height: s,\n        bandCount: 3,\n        extent: S.fromJSON(e),\n        spatialReference: r,\n        pixelSize: a,\n        pixelType: \"u8\",\n        statistics: null,\n        keyProperties: {\n          DataType: \"processed\"\n        }\n      });\n    }\n\n    const {\n      signal: i\n    } = e,\n          s = x(this.url, this.sourceJSON, {\n      signal: i,\n      query: this.ioConfig.customFetchParameters\n    }),\n          r = t.hasMultidimensions ? this.request(`${this.url}/slices`, {\n      query: {\n        f: \"json\"\n      },\n      signal: i\n    }).then(e => e.data && e.data.slices).catch(() => null) : null,\n          a = await Promise.all([s, r]);\n    return this._slices = a[1], a[0];\n  }\n\n  _fixScaleInServiceInfo() {\n    const {\n      sourceJSON: e\n    } = this;\n    e.minScale && e.minScale < 0 && (e.minScale = 0), e.maxScale && e.maxScale < 0 && (e.maxScale = 0);\n  }\n\n  _fixGCSShift(e) {\n    const {\n      extent: t,\n      spatialReference: i\n    } = e;\n    t.xmin > -1 && t.xmax > 181 && i?.wkid && i.isGeographic && (e.nativeExtent = e.extent, e.transform = new d(), e.extent = e.transform.forwardTransform(t));\n  }\n\n  _computeMinMaxLOD(e, t) {\n    const {\n      pixelSize: i\n    } = e,\n          s = .5 / e.width * i.x,\n          {\n      lods: r\n    } = t,\n          a = t.lodAt(Math.max.apply(null, r.map(e => e.level))),\n          l = t.lodAt(Math.min.apply(null, r.map(e => e.level))),\n          {\n      tileType: o\n    } = this;\n    if (\"Map\" === o) return this._levelOffset = r[0].level, [a, l];\n\n    if (\"Raster\" === o) {\n      return [r.find(e => e.resolution === i.x) ?? a, l];\n    }\n\n    const {\n      minScale: n,\n      maxScale: c\n    } = this.sourceJSON;\n    let m = a;\n    c > 0 && (m = r.find(e => Math.abs(e.scale - c) < s), m || (m = r.filter(e => e.scale > c).sort((e, t) => e.scale > t.scale ? 1 : -1)[0] ?? a));\n    let h = l;\n    return n > 0 && (h = r.find(e => Math.abs(e.scale - n) < s) ?? l, this._levelOffset = h.level - l.level), [m, h];\n  }\n\n};\ne([o({\n  type: String,\n  json: {\n    write: !0\n  }\n})], I.prototype, \"datasetFormat\", void 0), e([o()], I.prototype, \"tileType\", void 0), I = e([n(\"esri.layers.support.rasterDatasets.ImageServerRaster\")], I);\nconst w = I;\nexport { w as default };","map":{"version":3,"names":["_","e","t","isNone","i","assertIsSome","s","isSome","r","unwrap","a","urlToObject","l","property","o","subclass","n","c","m","readServiceTileInfo","h","f","TilemapCache","p","u","setValidBoundary","y","d","fetchServiceRasterInfo","x","g","v","S","I","constructor","arguments","_levelOffset","_tilemapCache","_slices","datasetFormat","tileType","open","init","signal","sourceJSON","data","request","url","query","ssl","replace","tileInfo","_fixScaleInServiceInfo","cacheType","includes","format","toLowerCase","datasetName","name","slice","indexOf","_fetchRasterInfo","fromJSON","_computeMinMaxLOD","extent","pixelSize","width","Math","max","lods","maxScale","abs","some","resolution","ceil","xmax","xmin","height","ymax","ymin","w","level","j","T","size","b","forEach","push","sort","computeBlockBoundary","origin","M","length","R","transposeInfo","tileSize","rows","cols","packetSize","keyProperties","_yxs","PacketSize","storageInfo","blockWidth","blockHeight","pyramidBlockWidth","pyramidBlockHeight","pyramidResolutions","compression","firstPyramidLevel","maximumPyramidLevel","blockBoundary","_fixGCSShift","_set","capabilities","parsedUrl","tileServers","type","layer","fetchRawTile","rasterInfo","transposedVariableName","sliceId","variable","responseType","decodePixelBlock","planes","pixelType","isPoint","returnInterleaved","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","round","z","getSliceIndex","multidimensionalDefinition","find","variableName","dimensionName","Array","isArray","values","fetchVariableStatisticsHistograms","then","statistics","histograms","Promise","all","avg","mean","stddev","standardDeviation","computeBestPyramidLevelForLocation","identifyPixelLocation","datumTransformation","srcLocation","fetchAvailability","row","col","fullExtent","pixelSizeX","pixelSizeY","spatialReference","bandCount","DataType","ioConfig","customFetchParameters","hasMultidimensions","slices","catch","minScale","wkid","isGeographic","nativeExtent","transform","forwardTransform","lodAt","apply","map","min","scale","filter","String","json","write","prototype","default"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isNone as i,assertIsSome as s,isSome as r,unwrap as a}from\"../../../core/maybe.js\";import{urlToObject as l}from\"../../../core/urlUtils.js\";import{property as o}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as n}from\"../../../core/accessorSupport/decorators/subclass.js\";import c from\"../RasterInfo.js\";import m from\"../RasterStorageInfo.js\";import{readServiceTileInfo as h}from\"../serviceTileInfoProperty.js\";import f from\"../TileInfo.js\";import{TilemapCache as p}from\"../TilemapCache.js\";import u from\"./BaseRaster.js\";import{setValidBoundary as y}from\"../rasterFunctions/pixelUtils.js\";import d from\"../rasterTransforms/GCSShiftTransform.js\";import{fetchServiceRasterInfo as x}from\"../../../rest/imageService/fetchRasterInfo.js\";import g from\"../../../geometry/SpatialReference.js\";import v from\"../../../geometry/Point.js\";import S from\"../../../geometry/Extent.js\";let I=class extends u{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat=\"RasterTileServer\",this.tileType=null}async open(e){await this.init();const r=e&&e.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:\"json\"},signal:r});a.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\"));const o=a.data;if(this.sourceJSON=o,!o)throw new t(\"imageserverraster:open\",\"cannot initialize tiled image service, missing service info\");if(!o.tileInfo)throw new t(\"imageserverraster:open\",\"use ImageryLayer to open non-tiled image services\");this._fixScaleInServiceInfo();const n=[\"jpg\",\"jpeg\",\"png\",\"png8\",\"png24\",\"png32\",\"mixed\"];this.tileType=o.cacheType,null==this.tileType&&(n.includes(o.tileInfo.format.toLowerCase())?this.tileType=\"Map\":\"lerc\"===o.tileInfo.format.toLowerCase()?this.tileType=\"Elevation\":this.tileType=\"Raster\"),this.datasetName=o.name?.slice(o.name.indexOf(\"/\")+1)??\"\";const c=await this._fetchRasterInfo({signal:r});if(i(c))throw new t(\"image-server-raster:open\",\"cannot initialize image service\");const u=\"Map\"===this.tileType?h(o.tileInfo,o):f.fromJSON(o.tileInfo);s(u);const[y,d]=this._computeMinMaxLOD(c,u),{extent:x,pixelSize:g}=c,v=.5/c.width*g.x,S=Math.max(g.x,g.y),{lods:I}=u;(\"Map\"!==this.tileType&&0!==o.maxScale||Math.abs(g.x-g.y)>v||!I.some((e=>Math.abs(e.resolution-S)<v)))&&(g.x=g.y=y.resolution,c.width=Math.ceil((x.xmax-x.xmin)/g.x-.1),c.height=Math.ceil((x.ymax-x.ymin)/g.y-.1));const w=y.level-d.level,[j,T]=u.size,b=[];I.forEach((e=>{e.level>=d.level&&e.level<=y.level&&b.push({x:e.resolution,y:e.resolution})})),b.sort(((e,t)=>e.x-t.x));const _=this.computeBlockBoundary(x,j,T,u.origin,b,w),M=b.length>1?b.slice(1):null;let R;if(o.transposeInfo&&(R={tileSize:[o.transposeInfo.rows,o.transposeInfo.cols],packetSize:c.keyProperties?._yxs.PacketSize??0}),c.storageInfo=new m({blockWidth:u.size[0],blockHeight:u.size[1],pyramidBlockWidth:u.size[0],pyramidBlockHeight:u.size[1],pyramidResolutions:M,compression:u.format,origin:u.origin,firstPyramidLevel:1,maximumPyramidLevel:w,tileInfo:u,transposeInfo:R,blockBoundary:_}),this._fixGCSShift(c),this._set(\"rasterInfo\",c),o.capabilities.toLowerCase().includes(\"tilemap\")){const e={tileInfo:c.storageInfo.tileInfo,parsedUrl:l(this.url),url:this.url,tileServers:[],type:\"tile\"};this._tilemapCache=new p({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:l}=this.rasterInfo,{transposeInfo:o}=a,n=r(o)&&!!s.transposedVariableName;if(this._slices&&!n&&null==s.sliceId)return null;const c=n?0:a.maximumPyramidLevel-e+this._levelOffset,m=`${this.url}/tile/${c}/${t}/${i}`,h=this._slices?n?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:f}=await this.request(m,{query:h,responseType:\"array-buffer\",signal:s.signal});if(!f)return null;const p=n?o.tileSize:a.tileInfo.size,u=await this.decodePixelBlock(f,{width:p[0],height:p[1],planes:null,pixelType:null,isPoint:\"Elevation\"===this.tileType,returnInterleaved:n}),d=a.blockBoundary[e];if(\"jpg\"!==a.compression||i>d.minCol&&i<d.maxCol&&t>d.minRow&&t<d.maxRow)return u;const{origin:x,blockWidth:g,blockHeight:v}=a,{x:S,y:I}=this.getPyramidPixelSize(e),w=Math.round((l.xmin-x.x)/S)%g,j=Math.round((l.xmax-x.x)/S)%g||g,T=Math.round((x.y-l.ymax)/I)%v,b=Math.round((x.y-l.ymin)/I)%v||v,_=i===d.minCol?w:0,M=t===d.minRow?T:0,R=i===d.maxCol?j:g,z=t===d.maxRow?b:v;return y(u,{x:_,y:M},{width:R-_,height:z-M}),u}getSliceIndex(e){if(!this._slices||i(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));if(!i)return!0;return(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+\"/statistics\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+\"/histograms\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,a(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let l=r-s+this._levelOffset;const o=i.srcLocation;for(;l>=0;){try{if(\"available\"===await this._tilemapCache.fetchAvailability(l,i.row,i.col,t))break}catch{}if(l--,s++,i=this.identifyPixelLocation(o,s,a(t.datumTransformation)),null===i)return null}return-1===l||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if(\"Map\"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=g.fromJSON(t.spatialReference||e.spatialReference),a=new v({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new c({width:i,height:s,bandCount:3,extent:S.fromJSON(e),spatialReference:r,pixelSize:a,pixelType:\"u8\",statistics:null,keyProperties:{DataType:\"processed\"}})}const{signal:i}=e,s=x(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:\"json\"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,a=await Promise.all([s,r]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new d,e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:r}=t,a=t.lodAt(Math.max.apply(null,r.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,r.map((e=>e.level)))),{tileType:o}=this;if(\"Map\"===o)return this._levelOffset=r[0].level,[a,l];if(\"Raster\"===o){return[r.find((e=>e.resolution===i.x))??a,l]}const{minScale:n,maxScale:c}=this.sourceJSON;let m=a;c>0&&(m=r.find((e=>Math.abs(e.scale-c)<s)),m||(m=r.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??a));let h=l;return n>0&&(h=r.find((e=>Math.abs(e.scale-n)<s))??l,this._levelOffset=h.level-l.level),[m,h]}};e([o({type:String,json:{write:!0}})],I.prototype,\"datasetFormat\",void 0),e([o()],I.prototype,\"tileType\",void 0),I=e([n(\"esri.layers.support.rasterDatasets.ImageServerRaster\")],I);const w=I;export{w as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}