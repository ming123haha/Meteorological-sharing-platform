{"ast":null,"code":"/**\r\n * Copyright 2004-present Facebook. All Rights Reserved.\r\n *\r\n * @providesModule UserAgent_DEPRECATED\r\n */\n\n/**\r\n *  Provides entirely client-side User Agent and OS detection. You should prefer\r\n *  the non-deprecated UserAgent module when possible, which exposes our\r\n *  authoritative server-side PHP-based detection to the client.\r\n *\r\n *  Usage is straightforward:\r\n *\r\n *    if (UserAgent_DEPRECATED.ie()) {\r\n *      //  IE\r\n *    }\r\n *\r\n *  You can also do version checks:\r\n *\r\n *    if (UserAgent_DEPRECATED.ie() >= 7) {\r\n *      //  IE7 or better\r\n *    }\r\n *\r\n *  The browser functions will return NaN if the browser does not match, so\r\n *  you can also do version compares the other way:\r\n *\r\n *    if (UserAgent_DEPRECATED.ie() < 7) {\r\n *      //  IE6 or worse\r\n *    }\r\n *\r\n *  Note that the version is a float and may include a minor version number,\r\n *  so you should always use range operators to perform comparisons, not\r\n *  strict equality.\r\n *\r\n *  **Note:** You should **strongly** prefer capability detection to browser\r\n *  version detection where it's reasonable:\r\n *\r\n *    http://www.quirksmode.org/js/support.html\r\n *\r\n *  Further, we have a large number of mature wrapper functions and classes\r\n *  which abstract away many browser irregularities. Check the documentation,\r\n *  grep for things, or ask on javascript@lists.facebook.com before writing yet\r\n *  another copy of \"event || window.event\".\r\n *\r\n */\nvar _populated = false; // Browsers\n\nvar _ie, _firefox, _opera, _webkit, _chrome; // Actual IE browser for compatibility mode\n\n\nvar _ie_real_version; // Platforms\n\n\nvar _osx, _windows, _linux, _android; // Architectures\n\n\nvar _win64; // Devices\n\n\nvar _iphone, _ipad, _native;\n\nvar _mobile;\n\nfunction _populate() {\n  if (_populated) {\n    return;\n  }\n\n  _populated = true; // To work around buggy JS libraries that can't handle multi-digit\n  // version numbers, Opera 10's user agent string claims it's Opera\n  // 9, then later includes a Version/X.Y field:\n  //\n  // Opera/9.80 (foo) Presto/2.2.15 Version/10.10\n\n  var uas = navigator.userAgent;\n  var agent = /(?:MSIE.(\\d+\\.\\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\\d+\\.\\d+))|(?:Opera(?:.+Version.|.)(\\d+\\.\\d+))|(?:AppleWebKit.(\\d+(?:\\.\\d+)?))|(?:Trident\\/\\d+\\.\\d+.*rv:(\\d+\\.\\d+))/.exec(uas);\n  var os = /(Mac OS X)|(Windows)|(Linux)/.exec(uas);\n  _iphone = /\\b(iPhone|iP[ao]d)/.exec(uas);\n  _ipad = /\\b(iP[ao]d)/.exec(uas);\n  _android = /Android/i.exec(uas);\n  _native = /FBAN\\/\\w+;/i.exec(uas);\n  _mobile = /Mobile/i.exec(uas); // Note that the IE team blog would have you believe you should be checking\n  // for 'Win64; x64'.  But MSDN then reveals that you can actually be coming\n  // from either x64 or ia64;  so ultimately, you should just check for Win64\n  // as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit\n  // Windows will send 'WOW64' instead.\n\n  _win64 = !!/Win64/.exec(uas);\n\n  if (agent) {\n    _ie = agent[1] ? parseFloat(agent[1]) : agent[5] ? parseFloat(agent[5]) : NaN; // IE compatibility mode\n\n    if (_ie && document && document.documentMode) {\n      _ie = document.documentMode;\n    } // grab the \"true\" ie version from the trident token if available\n\n\n    var trident = /(?:Trident\\/(\\d+.\\d+))/.exec(uas);\n    _ie_real_version = trident ? parseFloat(trident[1]) + 4 : _ie;\n    _firefox = agent[2] ? parseFloat(agent[2]) : NaN;\n    _opera = agent[3] ? parseFloat(agent[3]) : NaN;\n    _webkit = agent[4] ? parseFloat(agent[4]) : NaN;\n\n    if (_webkit) {\n      // We do not add the regexp to the above test, because it will always\n      // match 'safari' only since 'AppleWebKit' appears before 'Chrome' in\n      // the userAgent string.\n      agent = /(?:Chrome\\/(\\d+\\.\\d+))/.exec(uas);\n      _chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN;\n    } else {\n      _chrome = NaN;\n    }\n  } else {\n    _ie = _firefox = _opera = _chrome = _webkit = NaN;\n  }\n\n  if (os) {\n    if (os[1]) {\n      // Detect OS X version.  If no version number matches, set _osx to true.\n      // Version examples:  10, 10_6_1, 10.7\n      // Parses version number as a float, taking only first two sets of\n      // digits.  If only one set of digits is found, returns just the major\n      // version number.\n      var ver = /(?:Mac OS X (\\d+(?:[._]\\d+)?))/.exec(uas);\n      _osx = ver ? parseFloat(ver[1].replace('_', '.')) : true;\n    } else {\n      _osx = false;\n    }\n\n    _windows = !!os[2];\n    _linux = !!os[3];\n  } else {\n    _osx = _windows = _linux = false;\n  }\n}\n\nvar UserAgent_DEPRECATED = {\n  /**\r\n   *  Check if the UA is Internet Explorer.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\n  ie: function () {\n    return _populate() || _ie;\n  },\n\n  /**\r\n   * Check if we're in Internet Explorer compatibility mode.\r\n   *\r\n   * @return bool true if in compatibility mode, false if\r\n   * not compatibility mode or not ie\r\n   */\n  ieCompatibilityMode: function () {\n    return _populate() || _ie_real_version > _ie;\n  },\n\n  /**\r\n   * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we\r\n   * only need this because Skype can't handle 64-bit IE yet.  We need to remove\r\n   * this when we don't need it -- tracked by #601957.\r\n   */\n  ie64: function () {\n    return UserAgent_DEPRECATED.ie() && _win64;\n  },\n\n  /**\r\n   *  Check if the UA is Firefox.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\n  firefox: function () {\n    return _populate() || _firefox;\n  },\n\n  /**\r\n   *  Check if the UA is Opera.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\n  opera: function () {\n    return _populate() || _opera;\n  },\n\n  /**\r\n   *  Check if the UA is WebKit.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\n  webkit: function () {\n    return _populate() || _webkit;\n  },\n\n  /**\r\n   *  For Push\r\n   *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit\r\n   */\n  safari: function () {\n    return UserAgent_DEPRECATED.webkit();\n  },\n\n  /**\r\n   *  Check if the UA is a Chrome browser.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\n  chrome: function () {\n    return _populate() || _chrome;\n  },\n\n  /**\r\n   *  Check if the user is running Windows.\r\n   *\r\n   *  @return bool `true' if the user's OS is Windows.\r\n   */\n  windows: function () {\n    return _populate() || _windows;\n  },\n\n  /**\r\n   *  Check if the user is running Mac OS X.\r\n   *\r\n   *  @return float|bool   Returns a float if a version number is detected,\r\n   *                       otherwise true/false.\r\n   */\n  osx: function () {\n    return _populate() || _osx;\n  },\n\n  /**\r\n   * Check if the user is running Linux.\r\n   *\r\n   * @return bool `true' if the user's OS is some flavor of Linux.\r\n   */\n  linux: function () {\n    return _populate() || _linux;\n  },\n\n  /**\r\n   * Check if the user is running on an iPhone or iPod platform.\r\n   *\r\n   * @return bool `true' if the user is running some flavor of the\r\n   *    iPhone OS.\r\n   */\n  iphone: function () {\n    return _populate() || _iphone;\n  },\n  mobile: function () {\n    return _populate() || _iphone || _ipad || _android || _mobile;\n  },\n  nativeApp: function () {\n    // webviews inside of the native apps\n    return _populate() || _native;\n  },\n  android: function () {\n    return _populate() || _android;\n  },\n  ipad: function () {\n    return _populate() || _ipad;\n  }\n};\nmodule.exports = UserAgent_DEPRECATED;","map":{"version":3,"names":["_populated","_ie","_firefox","_opera","_webkit","_chrome","_ie_real_version","_osx","_windows","_linux","_android","_win64","_iphone","_ipad","_native","_mobile","_populate","uas","navigator","userAgent","agent","exec","os","parseFloat","NaN","document","documentMode","trident","ver","replace","UserAgent_DEPRECATED","ie","ieCompatibilityMode","ie64","firefox","opera","webkit","safari","chrome","windows","osx","linux","iphone","mobile","nativeApp","android","ipad","module","exports"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/normalize-wheel/src/UserAgent_DEPRECATED.js"],"sourcesContent":["/**\r\n * Copyright 2004-present Facebook. All Rights Reserved.\r\n *\r\n * @providesModule UserAgent_DEPRECATED\r\n */\r\n\r\n/**\r\n *  Provides entirely client-side User Agent and OS detection. You should prefer\r\n *  the non-deprecated UserAgent module when possible, which exposes our\r\n *  authoritative server-side PHP-based detection to the client.\r\n *\r\n *  Usage is straightforward:\r\n *\r\n *    if (UserAgent_DEPRECATED.ie()) {\r\n *      //  IE\r\n *    }\r\n *\r\n *  You can also do version checks:\r\n *\r\n *    if (UserAgent_DEPRECATED.ie() >= 7) {\r\n *      //  IE7 or better\r\n *    }\r\n *\r\n *  The browser functions will return NaN if the browser does not match, so\r\n *  you can also do version compares the other way:\r\n *\r\n *    if (UserAgent_DEPRECATED.ie() < 7) {\r\n *      //  IE6 or worse\r\n *    }\r\n *\r\n *  Note that the version is a float and may include a minor version number,\r\n *  so you should always use range operators to perform comparisons, not\r\n *  strict equality.\r\n *\r\n *  **Note:** You should **strongly** prefer capability detection to browser\r\n *  version detection where it's reasonable:\r\n *\r\n *    http://www.quirksmode.org/js/support.html\r\n *\r\n *  Further, we have a large number of mature wrapper functions and classes\r\n *  which abstract away many browser irregularities. Check the documentation,\r\n *  grep for things, or ask on javascript@lists.facebook.com before writing yet\r\n *  another copy of \"event || window.event\".\r\n *\r\n */\r\n\r\nvar _populated = false;\r\n\r\n// Browsers\r\nvar _ie, _firefox, _opera, _webkit, _chrome;\r\n\r\n// Actual IE browser for compatibility mode\r\nvar _ie_real_version;\r\n\r\n// Platforms\r\nvar _osx, _windows, _linux, _android;\r\n\r\n// Architectures\r\nvar _win64;\r\n\r\n// Devices\r\nvar _iphone, _ipad, _native;\r\n\r\nvar _mobile;\r\n\r\nfunction _populate() {\r\n  if (_populated) {\r\n    return;\r\n  }\r\n\r\n  _populated = true;\r\n\r\n  // To work around buggy JS libraries that can't handle multi-digit\r\n  // version numbers, Opera 10's user agent string claims it's Opera\r\n  // 9, then later includes a Version/X.Y field:\r\n  //\r\n  // Opera/9.80 (foo) Presto/2.2.15 Version/10.10\r\n  var uas = navigator.userAgent;\r\n  var agent = /(?:MSIE.(\\d+\\.\\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\\d+\\.\\d+))|(?:Opera(?:.+Version.|.)(\\d+\\.\\d+))|(?:AppleWebKit.(\\d+(?:\\.\\d+)?))|(?:Trident\\/\\d+\\.\\d+.*rv:(\\d+\\.\\d+))/.exec(uas);\r\n  var os    = /(Mac OS X)|(Windows)|(Linux)/.exec(uas);\r\n\r\n  _iphone = /\\b(iPhone|iP[ao]d)/.exec(uas);\r\n  _ipad = /\\b(iP[ao]d)/.exec(uas);\r\n  _android = /Android/i.exec(uas);\r\n  _native = /FBAN\\/\\w+;/i.exec(uas);\r\n  _mobile = /Mobile/i.exec(uas);\r\n\r\n  // Note that the IE team blog would have you believe you should be checking\r\n  // for 'Win64; x64'.  But MSDN then reveals that you can actually be coming\r\n  // from either x64 or ia64;  so ultimately, you should just check for Win64\r\n  // as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit\r\n  // Windows will send 'WOW64' instead.\r\n  _win64 = !!(/Win64/.exec(uas));\r\n\r\n  if (agent) {\r\n    _ie = agent[1] ? parseFloat(agent[1]) : (\r\n          agent[5] ? parseFloat(agent[5]) : NaN);\r\n    // IE compatibility mode\r\n    if (_ie && document && document.documentMode) {\r\n      _ie = document.documentMode;\r\n    }\r\n    // grab the \"true\" ie version from the trident token if available\r\n    var trident = /(?:Trident\\/(\\d+.\\d+))/.exec(uas);\r\n    _ie_real_version = trident ? parseFloat(trident[1]) + 4 : _ie;\r\n\r\n    _firefox = agent[2] ? parseFloat(agent[2]) : NaN;\r\n    _opera   = agent[3] ? parseFloat(agent[3]) : NaN;\r\n    _webkit  = agent[4] ? parseFloat(agent[4]) : NaN;\r\n    if (_webkit) {\r\n      // We do not add the regexp to the above test, because it will always\r\n      // match 'safari' only since 'AppleWebKit' appears before 'Chrome' in\r\n      // the userAgent string.\r\n      agent = /(?:Chrome\\/(\\d+\\.\\d+))/.exec(uas);\r\n      _chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN;\r\n    } else {\r\n      _chrome = NaN;\r\n    }\r\n  } else {\r\n    _ie = _firefox = _opera = _chrome = _webkit = NaN;\r\n  }\r\n\r\n  if (os) {\r\n    if (os[1]) {\r\n      // Detect OS X version.  If no version number matches, set _osx to true.\r\n      // Version examples:  10, 10_6_1, 10.7\r\n      // Parses version number as a float, taking only first two sets of\r\n      // digits.  If only one set of digits is found, returns just the major\r\n      // version number.\r\n      var ver = /(?:Mac OS X (\\d+(?:[._]\\d+)?))/.exec(uas);\r\n\r\n      _osx = ver ? parseFloat(ver[1].replace('_', '.')) : true;\r\n    } else {\r\n      _osx = false;\r\n    }\r\n    _windows = !!os[2];\r\n    _linux   = !!os[3];\r\n  } else {\r\n    _osx = _windows = _linux = false;\r\n  }\r\n}\r\n\r\nvar UserAgent_DEPRECATED = {\r\n\r\n  /**\r\n   *  Check if the UA is Internet Explorer.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\r\n  ie: function() {\r\n    return _populate() || _ie;\r\n  },\r\n\r\n  /**\r\n   * Check if we're in Internet Explorer compatibility mode.\r\n   *\r\n   * @return bool true if in compatibility mode, false if\r\n   * not compatibility mode or not ie\r\n   */\r\n  ieCompatibilityMode: function() {\r\n    return _populate() || (_ie_real_version > _ie);\r\n  },\r\n\r\n\r\n  /**\r\n   * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we\r\n   * only need this because Skype can't handle 64-bit IE yet.  We need to remove\r\n   * this when we don't need it -- tracked by #601957.\r\n   */\r\n  ie64: function() {\r\n    return UserAgent_DEPRECATED.ie() && _win64;\r\n  },\r\n\r\n  /**\r\n   *  Check if the UA is Firefox.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\r\n  firefox: function() {\r\n    return _populate() || _firefox;\r\n  },\r\n\r\n\r\n  /**\r\n   *  Check if the UA is Opera.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\r\n  opera: function() {\r\n    return _populate() || _opera;\r\n  },\r\n\r\n\r\n  /**\r\n   *  Check if the UA is WebKit.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\r\n  webkit: function() {\r\n    return _populate() || _webkit;\r\n  },\r\n\r\n  /**\r\n   *  For Push\r\n   *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit\r\n   */\r\n  safari: function() {\r\n    return UserAgent_DEPRECATED.webkit();\r\n  },\r\n\r\n  /**\r\n   *  Check if the UA is a Chrome browser.\r\n   *\r\n   *\r\n   *  @return float|NaN Version number (if match) or NaN.\r\n   */\r\n  chrome : function() {\r\n    return _populate() || _chrome;\r\n  },\r\n\r\n\r\n  /**\r\n   *  Check if the user is running Windows.\r\n   *\r\n   *  @return bool `true' if the user's OS is Windows.\r\n   */\r\n  windows: function() {\r\n    return _populate() || _windows;\r\n  },\r\n\r\n\r\n  /**\r\n   *  Check if the user is running Mac OS X.\r\n   *\r\n   *  @return float|bool   Returns a float if a version number is detected,\r\n   *                       otherwise true/false.\r\n   */\r\n  osx: function() {\r\n    return _populate() || _osx;\r\n  },\r\n\r\n  /**\r\n   * Check if the user is running Linux.\r\n   *\r\n   * @return bool `true' if the user's OS is some flavor of Linux.\r\n   */\r\n  linux: function() {\r\n    return _populate() || _linux;\r\n  },\r\n\r\n  /**\r\n   * Check if the user is running on an iPhone or iPod platform.\r\n   *\r\n   * @return bool `true' if the user is running some flavor of the\r\n   *    iPhone OS.\r\n   */\r\n  iphone: function() {\r\n    return _populate() || _iphone;\r\n  },\r\n\r\n  mobile: function() {\r\n    return _populate() || (_iphone || _ipad || _android || _mobile);\r\n  },\r\n\r\n  nativeApp: function() {\r\n    // webviews inside of the native apps\r\n    return _populate() || _native;\r\n  },\r\n\r\n  android: function() {\r\n    return _populate() || _android;\r\n  },\r\n\r\n  ipad: function() {\r\n    return _populate() || _ipad;\r\n  }\r\n};\r\n\r\nmodule.exports = UserAgent_DEPRECATED;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}