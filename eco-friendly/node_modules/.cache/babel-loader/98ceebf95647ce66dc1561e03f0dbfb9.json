{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { deg2rad as t } from \"../../../../core/mathUtils.js\";\nimport { isSome as i, isNone as e } from \"../../../../core/maybe.js\";\nimport { g as s, i as n, h as r } from \"../../../../chunks/vec2.js\";\nimport { a as h } from \"../../../../chunks/vec2f64.js\";\nimport { r as a, e as o, o as c, f as _, n as l, a as p, g, z as d, c as f } from \"../../../../chunks/vec3.js\";\nimport { c as m, f as u } from \"../../../../chunks/vec3f64.js\";\nimport { create as D, fromPositionAndNormal as E, signedDistance as x, copy as b, intersectLine as I, normal as V } from \"../../../../geometry/support/plane.js\";\nimport { angle as M, projectPointSignedLength as N } from \"../../../../geometry/support/vector.js\";\nimport { intersectLineAndRay as y, LineType as P } from \"../../../support/geometry2dUtils.js\";\n\nclass X {\n  constructor(t, i, e, s = 0, n = Z.IMMEDIATE) {\n    this.helper = t, this.planeType = i, this.edge = e, this.distance = s, this._plane = D(), this._offsetPlane = D(), this._minDistance = -1 / 0, this._maxDistance = 1 / 0, n === Z.IMMEDIATE && this._initialize();\n  }\n\n  get plane() {\n    return this._plane;\n  }\n\n  get requiresSplitEdgeLeft() {\n    return !this._left.isOriginalDirection;\n  }\n\n  get requiresSplitEdgeRight() {\n    return !this._right.isOriginalDirection;\n  }\n\n  get edgeDirection() {\n    return this._edgeDirection;\n  }\n\n  _initialize() {\n    this._initializeNeighbors(), this._initializePlane(), this._initializeDistanceConstraints();\n  }\n\n  _initializeNeighbors() {\n    const t = this._toXYZ(this.edge.leftVertex.pos),\n          i = this._toXYZ(this.edge.leftVertex.leftEdge?.leftVertex?.pos),\n          e = this._toXYZ(this.edge.rightVertex.pos),\n          s = this._toXYZ(this.edge.rightVertex.rightEdge?.rightVertex?.pos);\n\n    this._edgeDirection = a(m(), t, e), this._left = this._computeNeighbor(t, i, this._edgeDirection), this._right = this._computeNeighbor(e, s, this._edgeDirection);\n  }\n\n  _toXYZ(t) {\n    return i(t) ? this.helper.toXYZ(t) : null;\n  }\n\n  _computeNeighbor(t, i, s) {\n    if (e(i)) return {\n      start: t,\n      end: i,\n      direction: u(-s[1], s[0], 0),\n      isOriginalDirection: !0\n    };\n    const n = a(m(), t, i),\n          r = !this._passesBisectingAngleThreshold(n, s);\n    return {\n      start: t,\n      end: i,\n      direction: r ? this._bisectVectorsPerpendicular(s, n) : n,\n      isOriginalDirection: !r\n    };\n  }\n\n  _passesBisectingAngleThreshold(t, i) {\n    const e = Math.abs(M(i, t));\n    return e >= Y && e <= Math.PI - Y;\n  }\n\n  _bisectVectorsPerpendicular(t, i) {\n    const e = o(t, i) < 0 ? t : c(m(), t),\n          s = Math.abs(o(e, i));\n    if (!(s < .001 || s > .999)) return this._bisectDirection(e, i);\n\n    const n = _(m(), e, [0, 0, 1]);\n\n    return l(n, n);\n  }\n\n  _bisectDirection(t, i) {\n    const e = p(m(), t, i);\n    return l(e, e);\n  }\n\n  _initializePlane() {\n    const t = this._computeNormalDirection(this._left),\n          i = this._computeNormalDirection(this._right);\n\n    o(t, i) < 0 && c(i, i), E(this._left.start, this._bisectDirection(t, i), this._plane);\n  }\n\n  _computeNormalDirection(t) {\n    const i = _(m(), t.direction, this._edgeDirection);\n\n    l(i, i);\n\n    const e = _(m(), this._edgeDirection, i);\n\n    return this.planeType === T.XY && (e[2] = 0), l(e, e);\n  }\n\n  _initializeDistanceConstraints() {\n    i(this._left.end) && !this.requiresSplitEdgeLeft && this._updateDistanceConstraint(x(this._plane, this._left.end)), i(this._right.end) && !this.requiresSplitEdgeRight && this._updateDistanceConstraint(x(this._plane, this._right.end)), this._updateIntersectDistanceConstraint(this._plane);\n  }\n\n  _updateDistanceConstraint(t) {\n    t <= 0 && (this._minDistance = Math.max(this._minDistance, t)), t >= 0 && (this._maxDistance = Math.min(this._maxDistance, t));\n  }\n\n  _updateIntersectDistanceConstraint(t) {\n    const i = V(t),\n          e = this._edgeDirection,\n          a = p(m(), this._left.start, this._left.direction),\n          o = p(m(), this._right.start, this._right.direction),\n          c = this._pointInBasis2D(h(), i, e, this._left.start),\n          _ = this._pointInBasis2D(h(), i, e, a),\n          l = this._pointInBasis2D(h(), i, e, this._right.start),\n          d = this._pointInBasis2D(h(), i, e, o),\n          [f] = y({\n      start: _,\n      end: c,\n      type: P.LINE\n    }, {\n      start: d,\n      end: l,\n      type: P.LINE\n    });\n\n    if (!f) return;\n    const u = s(h(), c, _);\n    n(u, u);\n    const D = s(h(), f, _),\n          E = r(u, D),\n          b = p(m(), a, g(m(), this._left.direction, -E)),\n          I = x(t, b);\n\n    this._updateDistanceConstraint(I);\n  }\n\n  _pointInBasis2D(t, i, e, s) {\n    return t[0] = N(i, s), t[1] = N(e, s), t;\n  }\n\n  _offset(t, e) {\n    Number.isFinite(this._minDistance) && (e = Math.max(this._minDistance, e)), Number.isFinite(this._maxDistance) && (e = Math.min(this._maxDistance, e)), b(this._offsetPlane, this._plane), this._offsetPlane[3] -= e;\n\n    const s = (t, e, s) => i(e) && I(this._offsetPlane, t, p(m(), t, e), s),\n          n = m();\n\n    (t === this.edge.leftVertex ? s(this._left.start, this._left.direction, n) : s(this._right.start, this._right.direction, n)) && this.helper.copy(this.helper.fromXYZ(n, void 0, this.helper.getM(t.pos)), t.pos);\n  }\n\n  signedDistanceToPoint(t) {\n    return x(this.plane, this.helper.toXYZ(this.helper.pointToVector(t)));\n  }\n\n  apply(t) {\n    this._offset(t, this.distance);\n  }\n\n  undo(t) {\n    this._offset(t, 0);\n  }\n\n  canAccumulate(t) {\n    return t instanceof X && this.edge.leftVertex.index === t.edge.leftVertex.index && this.edge.rightVertex.index === t.edge.rightVertex.index && this.edge.component === t.edge.component && this._maybeEqualsVec3(this._left.direction, t._left.direction) && this._maybeEqualsVec3(this._right.direction, t._right.direction) && d(V(this._plane), V(t._plane));\n  }\n\n  accumulate(t, i) {\n    const e = this._plane[3] - i._plane[3] + i.distance;\n\n    this._offset(t, e);\n  }\n\n  accumulateParams(t) {\n    const i = t.distance - t._plane[3];\n    this.distance = i + this._plane[3];\n  }\n\n  clone() {\n    const t = new X(this.helper, this.planeType, this.edge, this.distance, Z.DEFERRED);\n    return b(t._plane, this._plane), b(t._offsetPlane, this._offsetPlane), t._maxDistance = this._maxDistance, t._minDistance = this._minDistance, t._left = this._cloneNeighbor(this._left), t._right = this._cloneNeighbor(this._right), t._edgeDirection = f(m(), this._edgeDirection), t;\n  }\n\n  _maybeEqualsVec3(t, s) {\n    return e(t) && e(s) || i(t) && i(s) && d(t, s);\n  }\n\n  _cloneNeighbor({\n    start: t,\n    end: e,\n    direction: s,\n    isOriginalDirection: n\n  }) {\n    return {\n      start: f(m(), t),\n      end: i(e) ? f(m(), e) : null,\n      direction: f(m(), s),\n      isOriginalDirection: n\n    };\n  }\n\n}\n\nconst Y = t(15);\nvar T, Z;\n!function (t) {\n  t[t.XYZ = 0] = \"XYZ\", t[t.XY = 1] = \"XY\";\n}(T || (T = {})), function (t) {\n  t[t.IMMEDIATE = 0] = \"IMMEDIATE\", t[t.DEFERRED = 1] = \"DEFERRED\";\n}(Z || (Z = {}));\nexport { X as OffsetEdgeVertex, T as PlaneType };","map":{"version":3,"names":["deg2rad","t","isSome","i","isNone","e","g","s","n","h","r","a","o","c","f","_","l","p","z","d","m","u","create","D","fromPositionAndNormal","E","signedDistance","x","copy","b","intersectLine","I","normal","V","angle","M","projectPointSignedLength","N","intersectLineAndRay","y","LineType","P","X","constructor","Z","IMMEDIATE","helper","planeType","edge","distance","_plane","_offsetPlane","_minDistance","_maxDistance","_initialize","plane","requiresSplitEdgeLeft","_left","isOriginalDirection","requiresSplitEdgeRight","_right","edgeDirection","_edgeDirection","_initializeNeighbors","_initializePlane","_initializeDistanceConstraints","_toXYZ","leftVertex","pos","leftEdge","rightVertex","rightEdge","_computeNeighbor","toXYZ","start","end","direction","_passesBisectingAngleThreshold","_bisectVectorsPerpendicular","Math","abs","Y","PI","_bisectDirection","_computeNormalDirection","T","XY","_updateDistanceConstraint","_updateIntersectDistanceConstraint","max","min","_pointInBasis2D","type","LINE","_offset","Number","isFinite","fromXYZ","getM","signedDistanceToPoint","pointToVector","apply","undo","canAccumulate","index","component","_maybeEqualsVec3","accumulate","accumulateParams","clone","DEFERRED","_cloneNeighbor","XYZ","OffsetEdgeVertex","PlaneType"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/interactive/editGeometry/operations/OffsetEdgeVertex.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{deg2rad as t}from\"../../../../core/mathUtils.js\";import{isSome as i,isNone as e}from\"../../../../core/maybe.js\";import{g as s,i as n,h as r}from\"../../../../chunks/vec2.js\";import{a as h}from\"../../../../chunks/vec2f64.js\";import{r as a,e as o,o as c,f as _,n as l,a as p,g,z as d,c as f}from\"../../../../chunks/vec3.js\";import{c as m,f as u}from\"../../../../chunks/vec3f64.js\";import{create as D,fromPositionAndNormal as E,signedDistance as x,copy as b,intersectLine as I,normal as V}from\"../../../../geometry/support/plane.js\";import{angle as M,projectPointSignedLength as N}from\"../../../../geometry/support/vector.js\";import{intersectLineAndRay as y,LineType as P}from\"../../../support/geometry2dUtils.js\";class X{constructor(t,i,e,s=0,n=Z.IMMEDIATE){this.helper=t,this.planeType=i,this.edge=e,this.distance=s,this._plane=D(),this._offsetPlane=D(),this._minDistance=-1/0,this._maxDistance=1/0,n===Z.IMMEDIATE&&this._initialize()}get plane(){return this._plane}get requiresSplitEdgeLeft(){return!this._left.isOriginalDirection}get requiresSplitEdgeRight(){return!this._right.isOriginalDirection}get edgeDirection(){return this._edgeDirection}_initialize(){this._initializeNeighbors(),this._initializePlane(),this._initializeDistanceConstraints()}_initializeNeighbors(){const t=this._toXYZ(this.edge.leftVertex.pos),i=this._toXYZ(this.edge.leftVertex.leftEdge?.leftVertex?.pos),e=this._toXYZ(this.edge.rightVertex.pos),s=this._toXYZ(this.edge.rightVertex.rightEdge?.rightVertex?.pos);this._edgeDirection=a(m(),t,e),this._left=this._computeNeighbor(t,i,this._edgeDirection),this._right=this._computeNeighbor(e,s,this._edgeDirection)}_toXYZ(t){return i(t)?this.helper.toXYZ(t):null}_computeNeighbor(t,i,s){if(e(i))return{start:t,end:i,direction:u(-s[1],s[0],0),isOriginalDirection:!0};const n=a(m(),t,i),r=!this._passesBisectingAngleThreshold(n,s);return{start:t,end:i,direction:r?this._bisectVectorsPerpendicular(s,n):n,isOriginalDirection:!r}}_passesBisectingAngleThreshold(t,i){const e=Math.abs(M(i,t));return e>=Y&&e<=Math.PI-Y}_bisectVectorsPerpendicular(t,i){const e=o(t,i)<0?t:c(m(),t),s=Math.abs(o(e,i));if(!(s<.001||s>.999))return this._bisectDirection(e,i);const n=_(m(),e,[0,0,1]);return l(n,n)}_bisectDirection(t,i){const e=p(m(),t,i);return l(e,e)}_initializePlane(){const t=this._computeNormalDirection(this._left),i=this._computeNormalDirection(this._right);o(t,i)<0&&c(i,i),E(this._left.start,this._bisectDirection(t,i),this._plane)}_computeNormalDirection(t){const i=_(m(),t.direction,this._edgeDirection);l(i,i);const e=_(m(),this._edgeDirection,i);return this.planeType===T.XY&&(e[2]=0),l(e,e)}_initializeDistanceConstraints(){i(this._left.end)&&!this.requiresSplitEdgeLeft&&this._updateDistanceConstraint(x(this._plane,this._left.end)),i(this._right.end)&&!this.requiresSplitEdgeRight&&this._updateDistanceConstraint(x(this._plane,this._right.end)),this._updateIntersectDistanceConstraint(this._plane)}_updateDistanceConstraint(t){t<=0&&(this._minDistance=Math.max(this._minDistance,t)),t>=0&&(this._maxDistance=Math.min(this._maxDistance,t))}_updateIntersectDistanceConstraint(t){const i=V(t),e=this._edgeDirection,a=p(m(),this._left.start,this._left.direction),o=p(m(),this._right.start,this._right.direction),c=this._pointInBasis2D(h(),i,e,this._left.start),_=this._pointInBasis2D(h(),i,e,a),l=this._pointInBasis2D(h(),i,e,this._right.start),d=this._pointInBasis2D(h(),i,e,o),[f]=y({start:_,end:c,type:P.LINE},{start:d,end:l,type:P.LINE});if(!f)return;const u=s(h(),c,_);n(u,u);const D=s(h(),f,_),E=r(u,D),b=p(m(),a,g(m(),this._left.direction,-E)),I=x(t,b);this._updateDistanceConstraint(I)}_pointInBasis2D(t,i,e,s){return t[0]=N(i,s),t[1]=N(e,s),t}_offset(t,e){Number.isFinite(this._minDistance)&&(e=Math.max(this._minDistance,e)),Number.isFinite(this._maxDistance)&&(e=Math.min(this._maxDistance,e)),b(this._offsetPlane,this._plane),this._offsetPlane[3]-=e;const s=(t,e,s)=>i(e)&&I(this._offsetPlane,t,p(m(),t,e),s),n=m();(t===this.edge.leftVertex?s(this._left.start,this._left.direction,n):s(this._right.start,this._right.direction,n))&&this.helper.copy(this.helper.fromXYZ(n,void 0,this.helper.getM(t.pos)),t.pos)}signedDistanceToPoint(t){return x(this.plane,this.helper.toXYZ(this.helper.pointToVector(t)))}apply(t){this._offset(t,this.distance)}undo(t){this._offset(t,0)}canAccumulate(t){return t instanceof X&&this.edge.leftVertex.index===t.edge.leftVertex.index&&this.edge.rightVertex.index===t.edge.rightVertex.index&&this.edge.component===t.edge.component&&this._maybeEqualsVec3(this._left.direction,t._left.direction)&&this._maybeEqualsVec3(this._right.direction,t._right.direction)&&d(V(this._plane),V(t._plane))}accumulate(t,i){const e=this._plane[3]-i._plane[3]+i.distance;this._offset(t,e)}accumulateParams(t){const i=t.distance-t._plane[3];this.distance=i+this._plane[3]}clone(){const t=new X(this.helper,this.planeType,this.edge,this.distance,Z.DEFERRED);return b(t._plane,this._plane),b(t._offsetPlane,this._offsetPlane),t._maxDistance=this._maxDistance,t._minDistance=this._minDistance,t._left=this._cloneNeighbor(this._left),t._right=this._cloneNeighbor(this._right),t._edgeDirection=f(m(),this._edgeDirection),t}_maybeEqualsVec3(t,s){return e(t)&&e(s)||i(t)&&i(s)&&d(t,s)}_cloneNeighbor({start:t,end:e,direction:s,isOriginalDirection:n}){return{start:f(m(),t),end:i(e)?f(m(),e):null,direction:f(m(),s),isOriginalDirection:n}}}const Y=t(15);var T,Z;!function(t){t[t.XYZ=0]=\"XYZ\",t[t.XY=1]=\"XY\"}(T||(T={})),function(t){t[t.IMMEDIATE=0]=\"IMMEDIATE\",t[t.DEFERRED=1]=\"DEFERRED\"}(Z||(Z={}));export{X as OffsetEdgeVertex,T as PlaneType};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}