{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { T as e } from \"../../../../chunks/TextureOnly.glsl.js\";\nimport { ReloadableShaderModule as r } from \"../core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as i } from \"../core/shaderTechnique/ShaderTechnique.js\";\nimport { Default3D as o } from \"./DefaultVertexAttributeLocations.js\";\nimport { Program as t } from \"./Program.js\";\nimport { BlendFactor as s } from \"../../../webgl/enums.js\";\nimport { makePipelineState as a, separateBlendingParams as l, defaultColorWriteParams as n } from \"../../../webgl/renderState.js\";\n\nclass m extends i {\n  initializeProgram(e) {\n    const r = m.shader.get().build();\n    return new t(e.rctx, r, o);\n  }\n\n  initializePipeline() {\n    return this.configuration.hasAlpha ? a({\n      blending: l(s.SRC_ALPHA, s.ONE, s.ONE_MINUS_SRC_ALPHA, s.ONE_MINUS_SRC_ALPHA),\n      colorWrite: n\n    }) : a({\n      colorWrite: n\n    });\n  }\n\n}\n\nm.shader = new r(e, () => import(\"../core/shaderLibrary/util/TextureOnly.glsl.js\"));\nexport { m as TextureTechnique };","map":{"version":3,"names":["T","e","ReloadableShaderModule","r","ShaderTechnique","i","Default3D","o","Program","t","BlendFactor","s","makePipelineState","a","separateBlendingParams","l","defaultColorWriteParams","n","m","initializeProgram","shader","get","build","rctx","initializePipeline","configuration","hasAlpha","blending","SRC_ALPHA","ONE","ONE_MINUS_SRC_ALPHA","colorWrite","TextureTechnique"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureTechnique.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{T as e}from\"../../../../chunks/TextureOnly.glsl.js\";import{ReloadableShaderModule as r}from\"../core/shaderTechnique/ReloadableShaderModule.js\";import{ShaderTechnique as i}from\"../core/shaderTechnique/ShaderTechnique.js\";import{Default3D as o}from\"./DefaultVertexAttributeLocations.js\";import{Program as t}from\"./Program.js\";import{BlendFactor as s}from\"../../../webgl/enums.js\";import{makePipelineState as a,separateBlendingParams as l,defaultColorWriteParams as n}from\"../../../webgl/renderState.js\";class m extends i{initializeProgram(e){const r=m.shader.get().build();return new t(e.rctx,r,o)}initializePipeline(){return this.configuration.hasAlpha?a({blending:l(s.SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA),colorWrite:n}):a({colorWrite:n})}}m.shader=new r(e,(()=>import(\"../core/shaderLibrary/util/TextureOnly.glsl.js\")));export{m as TextureTechnique};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,wCAAlB;AAA2D,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,mDAAvC;AAA2F,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,4CAAhC;AAA6E,SAAOC,SAAS,IAAIC,CAApB,QAA0B,sCAA1B;AAAiE,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,cAAxB;AAAuC,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,yBAA5B;AAAsD,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,sBAAsB,IAAIC,CAAxD,EAA0DC,uBAAuB,IAAIC,CAArF,QAA2F,+BAA3F;;AAA2H,MAAMC,CAAN,SAAgBb,CAAhB,CAAiB;EAACc,iBAAiB,CAAClB,CAAD,EAAG;IAAC,MAAME,CAAC,GAACe,CAAC,CAACE,MAAF,CAASC,GAAT,GAAeC,KAAf,EAAR;IAA+B,OAAO,IAAIb,CAAJ,CAAMR,CAAC,CAACsB,IAAR,EAAapB,CAAb,EAAeI,CAAf,CAAP;EAAyB;;EAAAiB,kBAAkB,GAAE;IAAC,OAAO,KAAKC,aAAL,CAAmBC,QAAnB,GAA4Bb,CAAC,CAAC;MAACc,QAAQ,EAACZ,CAAC,CAACJ,CAAC,CAACiB,SAAH,EAAajB,CAAC,CAACkB,GAAf,EAAmBlB,CAAC,CAACmB,mBAArB,EAAyCnB,CAAC,CAACmB,mBAA3C,CAAX;MAA2EC,UAAU,EAACd;IAAtF,CAAD,CAA7B,GAAwHJ,CAAC,CAAC;MAACkB,UAAU,EAACd;IAAZ,CAAD,CAAhI;EAAiJ;;AAApP;;AAAqPC,CAAC,CAACE,MAAF,GAAS,IAAIjB,CAAJ,CAAMF,CAAN,EAAS,MAAI,OAAO,gDAAP,CAAb,CAAT;AAAiF,SAAOiB,CAAC,IAAIc,gBAAZ"},"metadata":{},"sourceType":"module"}