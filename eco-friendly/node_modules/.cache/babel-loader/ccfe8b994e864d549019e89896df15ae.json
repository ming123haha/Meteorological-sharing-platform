{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { GeometricEffectOffsetMethod as t } from \"./enums.js\";\nconst e = .03;\n\nclass s {\n  constructor() {\n    this._path = [];\n  }\n\n  path() {\n    return this._path;\n  }\n\n  addPath(t, e) {\n    e || t.reverse(), Array.prototype.push.apply(this._path, t), e || t.reverse();\n  }\n\n  static mergePath(t, e) {\n    e && Array.prototype.push.apply(t, e);\n  }\n\n  startPath(t) {\n    this._path.push(t);\n  }\n\n  lineTo(t) {\n    this._path.push(t);\n  }\n\n  close() {\n    const t = this._path;\n    t.length > 1 && (t[0][0] === t[t.length - 1][0] && t[0][1] === t[t.length - 1][1] || t.push([t[0][0], t[0][1]]));\n  }\n\n}\n\nclass n {\n  constructor(t = 0, e = !1) {}\n\n  normalize(t) {\n    const e = Math.sqrt(t[0] * t[0] + t[1] * t[1]);\n    0 !== e && (t[0] /= e, t[1] /= e);\n  }\n\n  calculateLength(t, e) {\n    const s = e[0] - t[0],\n          n = e[1] - t[1];\n    return Math.sqrt(s * s + n * n);\n  }\n\n  calculateSegLength(t, e) {\n    return this.calculateLength(t[e], t[e + 1]);\n  }\n\n  calculatePathLength(t) {\n    let e = 0;\n    const s = t ? t.length : 0;\n\n    for (let n = 0; n < s - 1; ++n) e += this.calculateSegLength(t, n);\n\n    return e;\n  }\n\n  calculatePathArea(t) {\n    let e = 0;\n    const s = t ? t.length : 0;\n\n    for (let n = 0; n < s - 1; ++n) e += (t[n + 1][0] - t[n][0]) * (t[n + 1][1] + t[n][1]);\n\n    return e / 2;\n  }\n\n  getCoord2D(t, e, s) {\n    return [t[0] + (e[0] - t[0]) * s, t[1] + (e[1] - t[1]) * s];\n  }\n\n  getSegCoord2D(t, e, s) {\n    return this.getCoord2D(t[e], t[e + 1], s);\n  }\n\n  getAngle(t, e, s) {\n    const n = e[0] - t[0],\n          r = e[1] - t[1];\n    return Math.atan2(r, n);\n  }\n\n  getSegAngle(t, e, s) {\n    return this.getAngle(t[e], t[e + 1], s);\n  }\n\n  getAngleCS(t, e, s) {\n    const n = e[0] - t[0],\n          r = e[1] - t[1],\n          h = Math.sqrt(n * n + r * r);\n    return h > 0 ? [n / h, r / h] : [1, 0];\n  }\n\n  getSegAngleCS(t, e, s) {\n    return this.getAngleCS(t[e], t[e + 1], s);\n  }\n\n  cut(t, e, s, n) {\n    return [s <= 0 ? t[e] : this.getSegCoord2D(t, e, s), n >= 1 ? t[e + 1] : this.getSegCoord2D(t, e, n)];\n  }\n\n  addSegment(t, e, s) {\n    s && t.push(e[0]), t.push(e[1]);\n  }\n\n  getSubCurve(t, e, s) {\n    const n = [];\n    return this.appendSubCurve(n, t, e, s) ? n : null;\n  }\n\n  appendSubCurve(t, e, s, n) {\n    const r = e ? e.length - 1 : 0;\n    let h = 0,\n        l = !0,\n        o = 0;\n\n    for (; o < r;) {\n      const r = this.calculateSegLength(e, o);\n\n      if (0 !== r) {\n        if (l) {\n          if (h + r > s) {\n            const a = (s - h) / r;\n            let u = 1,\n                c = !1;\n            h + r >= n && (u = (n - h) / r, c = !0);\n            const i = this.cut(e, o, a, u);\n            if (i && this.addSegment(t, i, l), c) break;\n            l = !1;\n          }\n        } else {\n          if (h + r > n) {\n            const s = this.cut(e, o, 0, (n - h) / r);\n            s && this.addSegment(t, s, l);\n            break;\n          }\n\n          this.addSegment(t, [e[o], e[o + 1]], l);\n        }\n\n        h += r, ++o;\n      } else ++o;\n    }\n\n    return !0;\n  }\n\n  getCIMPointAlong(t, e) {\n    const s = t ? t.length - 1 : 0;\n    let n = 0,\n        r = -1;\n\n    for (; r < s;) {\n      ++r;\n      const s = this.calculateSegLength(t, r);\n\n      if (0 !== s) {\n        if (n + s > e) {\n          const h = (e - n) / s;\n          return this.getCoord2D(t[r], t[r + 1], h);\n        }\n\n        n += s;\n      }\n    }\n\n    return null;\n  }\n\n  isEmpty(t, e) {\n    if (!t || t.length <= 1) return !0;\n    const s = t ? t.length - 1 : 0;\n    let n = -1;\n\n    for (; n < s;) {\n      if (++n, t[n + 1][0] !== t[n][0] || t[n + 1][1] !== t[n][1]) return !1;\n      if (e && t[n + 1][2] !== t[n][2]) return !1;\n    }\n\n    return !0;\n  }\n\n  offset(e, s, n, r, h) {\n    if (!e || e.length < 2) return null;\n    let l = 0,\n        o = e[l++],\n        a = l;\n\n    for (; l < e.length;) {\n      const t = e[l];\n      t[0] === o[0] && t[1] === o[1] || (l !== a && (e[a] = e[l]), o = e[a++]), l++;\n    }\n\n    const u = e[0][0] === e[a - 1][0] && e[0][1] === e[a - 1][1];\n    if (u && --a, a < (u ? 3 : 2)) return null;\n    const c = [];\n    o = u ? e[a - 1] : null;\n    let i = e[0];\n\n    for (let g = 0; g < a; g++) {\n      const h = g === a - 1 ? u ? e[0] : null : e[g + 1];\n      if (o) {\n        if (h) {\n          const e = [h[0] - i[0], h[1] - i[1]];\n          this.normalize(e);\n          const l = [i[0] - o[0], i[1] - o[1]];\n          this.normalize(l);\n          const a = l[0] * e[1] - l[1] * e[0],\n                u = l[0] * e[0] + l[1] * e[1];\n\n          if (0 === a && 1 === u) {\n            i = h;\n            continue;\n          }\n\n          if (a >= 0 == s <= 0) {\n            if (u < 1) {\n              const t = [e[0] - l[0], e[1] - l[1]];\n              this.normalize(t);\n              const n = Math.sqrt((1 + u) / 2);\n\n              if (n > 1 / r) {\n                const e = -Math.abs(s) / n;\n                c.push([i[0] - t[0] * e, i[1] - t[1] * e]);\n              }\n            }\n          } else switch (n) {\n            case t.Mitered:\n              {\n                const t = Math.sqrt((1 + u) / 2);\n\n                if (t > 0 && 1 / t < r) {\n                  const n = [e[0] - l[0], e[1] - l[1]];\n                  this.normalize(n);\n                  const r = Math.abs(s) / t;\n                  c.push([i[0] - n[0] * r, i[1] - n[1] * r]);\n                  break;\n                }\n              }\n\n            case t.Bevelled:\n              c.push([i[0] + l[1] * s, i[1] - l[0] * s]), c.push([i[0] + e[1] * s, i[1] - e[0] * s]);\n              break;\n\n            case t.Rounded:\n              if (u < 1) {\n                c.push([i[0] + l[1] * s, i[1] - l[0] * s]);\n                const t = Math.floor(2.5 * (1 - u));\n\n                if (t > 0) {\n                  const n = 1 / t;\n                  let r = n;\n\n                  for (let h = 1; h < t; h++, r += n) {\n                    const t = [l[1] * (1 - r) + e[1] * r, -l[0] * (1 - r) - e[0] * r];\n                    this.normalize(t), c.push([i[0] + t[0] * s, i[1] + t[1] * s]);\n                  }\n                }\n\n                c.push([i[0] + e[1] * s, i[1] - e[0] * s]);\n              }\n\n              break;\n\n            case t.Square:\n            default:\n              if (a < 0) c.push([i[0] + (l[1] + l[0]) * s, i[1] + (l[1] - l[0]) * s]), c.push([i[0] + (e[1] - e[0]) * s, i[1] - (e[0] + e[1]) * s]);else {\n                const t = Math.sqrt((1 + Math.abs(u)) / 2),\n                      n = [e[0] - l[0], e[1] - l[1]];\n                this.normalize(n);\n                const r = s / t;\n                c.push([i[0] - n[0] * r, i[1] - n[1] * r]);\n              }\n          }\n        } else {\n          const t = [i[0] - o[0], i[1] - o[1]];\n          this.normalize(t), c.push([i[0] + t[1] * s, i[1] - t[0] * s]);\n        }\n      } else {\n        const t = [h[0] - i[0], h[1] - i[1]];\n        this.normalize(t), c.push([i[0] + t[1] * s, i[1] - t[0] * s]);\n      }\n      o = i, i = h;\n    }\n\n    return c.length < (u ? 3 : 2) ? null : (u && c.push([c[0][0], c[0][1]]), c);\n  }\n\n}\n\nexport { n as CurveHelper, e as PIXEL_TOLERANCE, s as PathHelper };","map":{"version":3,"names":["GeometricEffectOffsetMethod","t","e","s","constructor","_path","path","addPath","reverse","Array","prototype","push","apply","mergePath","startPath","lineTo","close","length","n","normalize","Math","sqrt","calculateLength","calculateSegLength","calculatePathLength","calculatePathArea","getCoord2D","getSegCoord2D","getAngle","r","atan2","getSegAngle","getAngleCS","h","getSegAngleCS","cut","addSegment","getSubCurve","appendSubCurve","l","o","a","u","c","i","getCIMPointAlong","isEmpty","offset","g","abs","Mitered","Bevelled","Rounded","floor","Square","CurveHelper","PIXEL_TOLERANCE","PathHelper"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/symbols/cim/CurveHelper.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{GeometricEffectOffsetMethod as t}from\"./enums.js\";const e=.03;class s{constructor(){this._path=[]}path(){return this._path}addPath(t,e){e||t.reverse(),Array.prototype.push.apply(this._path,t),e||t.reverse()}static mergePath(t,e){e&&Array.prototype.push.apply(t,e)}startPath(t){this._path.push(t)}lineTo(t){this._path.push(t)}close(){const t=this._path;t.length>1&&(t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]||t.push([t[0][0],t[0][1]]))}}class n{constructor(t=0,e=!1){}normalize(t){const e=Math.sqrt(t[0]*t[0]+t[1]*t[1]);0!==e&&(t[0]/=e,t[1]/=e)}calculateLength(t,e){const s=e[0]-t[0],n=e[1]-t[1];return Math.sqrt(s*s+n*n)}calculateSegLength(t,e){return this.calculateLength(t[e],t[e+1])}calculatePathLength(t){let e=0;const s=t?t.length:0;for(let n=0;n<s-1;++n)e+=this.calculateSegLength(t,n);return e}calculatePathArea(t){let e=0;const s=t?t.length:0;for(let n=0;n<s-1;++n)e+=(t[n+1][0]-t[n][0])*(t[n+1][1]+t[n][1]);return e/2}getCoord2D(t,e,s){return[t[0]+(e[0]-t[0])*s,t[1]+(e[1]-t[1])*s]}getSegCoord2D(t,e,s){return this.getCoord2D(t[e],t[e+1],s)}getAngle(t,e,s){const n=e[0]-t[0],r=e[1]-t[1];return Math.atan2(r,n)}getSegAngle(t,e,s){return this.getAngle(t[e],t[e+1],s)}getAngleCS(t,e,s){const n=e[0]-t[0],r=e[1]-t[1],h=Math.sqrt(n*n+r*r);return h>0?[n/h,r/h]:[1,0]}getSegAngleCS(t,e,s){return this.getAngleCS(t[e],t[e+1],s)}cut(t,e,s,n){return[s<=0?t[e]:this.getSegCoord2D(t,e,s),n>=1?t[e+1]:this.getSegCoord2D(t,e,n)]}addSegment(t,e,s){s&&t.push(e[0]),t.push(e[1])}getSubCurve(t,e,s){const n=[];return this.appendSubCurve(n,t,e,s)?n:null}appendSubCurve(t,e,s,n){const r=e?e.length-1:0;let h=0,l=!0,o=0;for(;o<r;){const r=this.calculateSegLength(e,o);if(0!==r){if(l){if(h+r>s){const a=(s-h)/r;let u=1,c=!1;h+r>=n&&(u=(n-h)/r,c=!0);const i=this.cut(e,o,a,u);if(i&&this.addSegment(t,i,l),c)break;l=!1}}else{if(h+r>n){const s=this.cut(e,o,0,(n-h)/r);s&&this.addSegment(t,s,l);break}this.addSegment(t,[e[o],e[o+1]],l)}h+=r,++o}else++o}return!0}getCIMPointAlong(t,e){const s=t?t.length-1:0;let n=0,r=-1;for(;r<s;){++r;const s=this.calculateSegLength(t,r);if(0!==s){if(n+s>e){const h=(e-n)/s;return this.getCoord2D(t[r],t[r+1],h)}n+=s}}return null}isEmpty(t,e){if(!t||t.length<=1)return!0;const s=t?t.length-1:0;let n=-1;for(;n<s;){if(++n,t[n+1][0]!==t[n][0]||t[n+1][1]!==t[n][1])return!1;if(e&&t[n+1][2]!==t[n][2])return!1}return!0}offset(e,s,n,r,h){if(!e||e.length<2)return null;let l=0,o=e[l++],a=l;for(;l<e.length;){const t=e[l];t[0]===o[0]&&t[1]===o[1]||(l!==a&&(e[a]=e[l]),o=e[a++]),l++}const u=e[0][0]===e[a-1][0]&&e[0][1]===e[a-1][1];if(u&&--a,a<(u?3:2))return null;const c=[];o=u?e[a-1]:null;let i=e[0];for(let g=0;g<a;g++){const h=g===a-1?u?e[0]:null:e[g+1];if(o)if(h){const e=[h[0]-i[0],h[1]-i[1]];this.normalize(e);const l=[i[0]-o[0],i[1]-o[1]];this.normalize(l);const a=l[0]*e[1]-l[1]*e[0],u=l[0]*e[0]+l[1]*e[1];if(0===a&&1===u){i=h;continue}if(a>=0==s<=0){if(u<1){const t=[e[0]-l[0],e[1]-l[1]];this.normalize(t);const n=Math.sqrt((1+u)/2);if(n>1/r){const e=-Math.abs(s)/n;c.push([i[0]-t[0]*e,i[1]-t[1]*e])}}}else switch(n){case t.Mitered:{const t=Math.sqrt((1+u)/2);if(t>0&&1/t<r){const n=[e[0]-l[0],e[1]-l[1]];this.normalize(n);const r=Math.abs(s)/t;c.push([i[0]-n[0]*r,i[1]-n[1]*r]);break}}case t.Bevelled:c.push([i[0]+l[1]*s,i[1]-l[0]*s]),c.push([i[0]+e[1]*s,i[1]-e[0]*s]);break;case t.Rounded:if(u<1){c.push([i[0]+l[1]*s,i[1]-l[0]*s]);const t=Math.floor(2.5*(1-u));if(t>0){const n=1/t;let r=n;for(let h=1;h<t;h++,r+=n){const t=[l[1]*(1-r)+e[1]*r,-l[0]*(1-r)-e[0]*r];this.normalize(t),c.push([i[0]+t[0]*s,i[1]+t[1]*s])}}c.push([i[0]+e[1]*s,i[1]-e[0]*s])}break;case t.Square:default:if(a<0)c.push([i[0]+(l[1]+l[0])*s,i[1]+(l[1]-l[0])*s]),c.push([i[0]+(e[1]-e[0])*s,i[1]-(e[0]+e[1])*s]);else{const t=Math.sqrt((1+Math.abs(u))/2),n=[e[0]-l[0],e[1]-l[1]];this.normalize(n);const r=s/t;c.push([i[0]-n[0]*r,i[1]-n[1]*r])}}}else{const t=[i[0]-o[0],i[1]-o[1]];this.normalize(t),c.push([i[0]+t[1]*s,i[1]-t[0]*s])}else{const t=[h[0]-i[0],h[1]-i[1]];this.normalize(t),c.push([i[0]+t[1]*s,i[1]-t[0]*s])}o=i,i=h}return c.length<(u?3:2)?null:(u&&c.push([c[0][0],c[0][1]]),c)}}export{n as CurveHelper,e as PIXEL_TOLERANCE,s as PathHelper};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}