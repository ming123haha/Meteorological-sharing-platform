{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global.BMapLib = global.BMapLib || {}, global.BMapLib.MarkerClusterer = factory());\n})(this, function () {\n  'use strict';\n\n  var __commonjs_global = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this;\n\n  function __commonjs(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports, __commonjs_global), module.exports;\n  }\n\n  var index$1 = __commonjs(function (module, exports, global) {\n    (function (root, factory) {\n      if (typeof exports === 'object') {\n        module.exports = factory();\n      } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n      } else {\n        root.BMapLib = root.BMapLib || {};\n        root.BMapLib.TextIconOverlay = root.BMapLib.TextIconOverlay || factory();\n      }\n    })(__commonjs_global, function () {\n      var T,\n          baidu = T = baidu || {\n        version: \"1.3.8\"\n      };\n      var context = {}; //提出guid，防止在与老版本Tangram混用时\n      //在下一行错误的修改context[undefined]\n\n      baidu.guid = \"$BAIDU$\"; //Tangram可能被放在闭包中\n      //一些页面级别唯一的属性，需要挂载在context[baidu.guid]上\n\n      context[baidu.guid] = context[baidu.guid] || {};\n      /**         \n      * @ignore\n      * @namespace baidu.dom 操作dom的方法。\n      */\n\n      baidu.dom = baidu.dom || {};\n      /**\n       * 从文档中获取指定的DOM元素\n       * @name baidu.dom.g\n       * @function\n       * @grammar baidu.dom.g(id)\n       * @param {string|HTMLElement} id 元素的id或DOM元素\n       * @shortcut g,T.G\n       * @meta standard\n       * @see baidu.dom.q\n       *             \n       * @returns {HTMLElement|null} 获取的元素，查找不到时返回null,如果参数不合法，直接返回参数\n       */\n\n      baidu.dom.g = function (id) {\n        if ('string' == typeof id || id instanceof String) {\n          return document.getElementById(id);\n        } else if (id && id.nodeName && (id.nodeType == 1 || id.nodeType == 9)) {\n          return id;\n        }\n\n        return null;\n      }; // 声明快捷方法\n\n\n      baidu.g = baidu.G = baidu.dom.g;\n      /**\n       * 获取目标元素所属的document对象\n       * @name baidu.dom.getDocument\n       * @function\n       * @grammar baidu.dom.getDocument(element)\n       * @param {HTMLElement|string} element 目标元素或目标元素的id\n       * @meta standard\n       * @see baidu.dom.getWindow\n       *             \n       * @returns {HTMLDocument} 目标元素所属的document对象\n       */\n\n      baidu.dom.getDocument = function (element) {\n        element = baidu.dom.g(element);\n        return element.nodeType == 9 ? element : element.ownerDocument || element.document;\n      };\n      /**\n           * @ignore\n       * @namespace baidu.lang 对语言层面的封装，包括类型判断、模块扩展、继承基类以及对象自定义事件的支持。\n      */\n\n\n      baidu.lang = baidu.lang || {};\n      /**\n       * 判断目标参数是否string类型或String对象\n       * @name baidu.lang.isString\n       * @function\n       * @grammar baidu.lang.isString(source)\n       * @param {Any} source 目标参数\n       * @shortcut isString\n       * @meta standard\n       * @see baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate\n       *             \n       * @returns {boolean} 类型判断结果\n       */\n\n      baidu.lang.isString = function (source) {\n        return '[object String]' == Object.prototype.toString.call(source);\n      }; // 声明快捷方法\n\n\n      baidu.isString = baidu.lang.isString;\n      /**\n       * 从文档中获取指定的DOM元素\n       * **内部方法**\n       * \n       * @param {string|HTMLElement} id 元素的id或DOM元素\n       * @meta standard\n       * @return {HTMLElement} DOM元素，如果不存在，返回null，如果参数不合法，直接返回参数\n       */\n\n      baidu.dom._g = function (id) {\n        if (baidu.lang.isString(id)) {\n          return document.getElementById(id);\n        }\n\n        return id;\n      }; // 声明快捷方法\n\n\n      baidu._g = baidu.dom._g;\n      /**\n       * @ignore\n       * @namespace baidu.browser 判断浏览器类型和特性的属性。\n       */\n\n      baidu.browser = baidu.browser || {};\n\n      if (/msie (\\d+\\.\\d)/i.test(navigator.userAgent)) {\n        //IE 8下，以documentMode为准\n        //在百度模板中，可能会有$，防止冲突，将$1 写成 \\x241\n\n        /**\n         * 判断是否为ie浏览器\n         * @property ie ie版本号\n         * @grammar baidu.browser.ie\n         * @meta standard\n         * @shortcut ie\n         * @see baidu.browser.firefox,baidu.browser.safari,baidu.browser.opera,baidu.browser.chrome,baidu.browser.maxthon \n         */\n        baidu.browser.ie = baidu.ie = document.documentMode || +RegExp['\\x241'];\n      }\n      /**\n       * 获取目标元素的computed style值。如果元素的样式值不能被浏览器计算，则会返回空字符串（IE）\n       *\n       * @author berg\n       * @name baidu.dom.getComputedStyle\n       * @function\n       * @grammar baidu.dom.getComputedStyle(element, key)\n       * @param {HTMLElement|string} element 目标元素或目标元素的id\n       * @param {string} key 要获取的样式名\n       *\n       * @see baidu.dom.getStyle\n       *             \n       * @returns {string} 目标元素的computed style值\n       */\n\n\n      baidu.dom.getComputedStyle = function (element, key) {\n        element = baidu.dom._g(element);\n        var doc = baidu.dom.getDocument(element),\n            styles;\n\n        if (doc.defaultView && doc.defaultView.getComputedStyle) {\n          styles = doc.defaultView.getComputedStyle(element, null);\n\n          if (styles) {\n            return styles[key] || styles.getPropertyValue(key);\n          }\n        }\n\n        return '';\n      };\n      /**\n       * 提供给setStyle与getStyle使用\n       */\n\n\n      baidu.dom._styleFixer = baidu.dom._styleFixer || {};\n      /**\n       * 提供给setStyle与getStyle使用\n       */\n\n      baidu.dom._styleFilter = baidu.dom._styleFilter || [];\n      /**\n       * 为获取和设置样式的过滤器\n       * @private\n       * @meta standard\n       */\n\n      baidu.dom._styleFilter.filter = function (key, value, method) {\n        for (var i = 0, filters = baidu.dom._styleFilter, filter; filter = filters[i]; i++) {\n          if (filter = filter[method]) {\n            value = filter(key, value);\n          }\n        }\n\n        return value;\n      };\n      /**\n           * @ignore\n       * @namespace baidu.string 操作字符串的方法。\n       */\n\n\n      baidu.string = baidu.string || {};\n      /**\n       * 将目标字符串进行驼峰化处理\n       * @name baidu.string.toCamelCase\n       * @function\n       * @grammar baidu.string.toCamelCase(source)\n       * @param {string} source 目标字符串\n       * @remark\n       * 支持单词以“-_”分隔\n       * @meta standard\n       *             \n       * @returns {string} 驼峰化处理后的字符串\n       */\n\n      baidu.string.toCamelCase = function (source) {\n        //提前判断，提高getStyle等的效率 thanks xianwei\n        if (source.indexOf('-') < 0 && source.indexOf('_') < 0) {\n          return source;\n        }\n\n        return source.replace(/[-_][^-_]/g, function (match) {\n          return match.charAt(1).toUpperCase();\n        });\n      };\n      /**\n       * 获取目标元素的样式值\n       * @name baidu.dom.getStyle\n       * @function\n       * @grammar baidu.dom.getStyle(element, key)\n       * @param {HTMLElement|string} element 目标元素或目标元素的id\n       * @param {string} key 要获取的样式名\n       * @remark\n       * \n       * 为了精简代码，本模块默认不对任何浏览器返回值进行归一化处理（如使用getStyle时，不同浏览器下可能返回rgb颜色或hex颜色），也不会修复浏览器的bug和差异性（如设置IE的float属性叫styleFloat，firefox则是cssFloat）。<br />\n       * baidu.dom._styleFixer和baidu.dom._styleFilter可以为本模块提供支持。<br />\n       * 其中_styleFilter能对颜色和px进行归一化处理，_styleFixer能对display，float，opacity，textOverflow的浏览器兼容性bug进行处理。\t\n       * @shortcut getStyle\n       * @meta standard\n       * @see baidu.dom.setStyle,baidu.dom.setStyles, baidu.dom.getComputedStyle\n       *             \n       * @returns {string} 目标元素的样式值\n       */\n\n\n      baidu.dom.getStyle = function (element, key) {\n        var dom = baidu.dom;\n        element = dom.g(element);\n        key = baidu.string.toCamelCase(key); //computed style, then cascaded style, then explicitly set style.\n\n        var value = element.style[key] || (element.currentStyle ? element.currentStyle[key] : \"\") || dom.getComputedStyle(element, key); // 在取不到值的时候，用fixer进行修正\n\n        if (!value) {\n          var fixer = dom._styleFixer[key];\n\n          if (fixer) {\n            value = fixer.get ? fixer.get(element) : baidu.dom.getStyle(element, fixer);\n          }\n        }\n        /* 检查结果过滤器 */\n\n\n        if (fixer = dom._styleFilter) {\n          value = fixer.filter(key, value, 'get');\n        }\n\n        return value;\n      }; // 声明快捷方法\n\n\n      baidu.getStyle = baidu.dom.getStyle;\n\n      if (/opera\\/(\\d+\\.\\d)/i.test(navigator.userAgent)) {\n        /**\n         * 判断是否为opera浏览器\n         * @property opera opera版本号\n         * @grammar baidu.browser.opera\n         * @meta standard\n         * @see baidu.browser.ie,baidu.browser.firefox,baidu.browser.safari,baidu.browser.chrome \n         */\n        baidu.browser.opera = +RegExp['\\x241'];\n      }\n      /**\n       * 判断是否为webkit内核\n       * @property isWebkit \n       * @grammar baidu.browser.isWebkit\n       * @meta standard\n       * @see baidu.browser.isGecko\n       */\n\n\n      baidu.browser.isWebkit = /webkit/i.test(navigator.userAgent);\n      /**\n       * 判断是否为gecko内核\n       * @property isGecko \n       * @grammar baidu.browser.isGecko\n       * @meta standard\n       * @see baidu.browser.isWebkit\n       */\n\n      baidu.browser.isGecko = /gecko/i.test(navigator.userAgent) && !/like gecko/i.test(navigator.userAgent);\n      /**\n       * 判断是否严格标准的渲染模式\n       * @property isStrict \n       * @grammar baidu.browser.isStrict\n       * @meta standard\n       */\n\n      baidu.browser.isStrict = document.compatMode == \"CSS1Compat\";\n      /**\n       * 获取目标元素相对于整个文档左上角的位置\n       * @name baidu.dom.getPosition\n       * @function\n       * @grammar baidu.dom.getPosition(element)\n       * @param {HTMLElement|string} element 目标元素或目标元素的id\n       * @meta standard\n       *             \n       * @returns {Object} 目标元素的位置，键值为top和left的Object。\n       */\n\n      baidu.dom.getPosition = function (element) {\n        element = baidu.dom.g(element);\n        var doc = baidu.dom.getDocument(element),\n            browser = baidu.browser,\n            getStyle = baidu.dom.getStyle,\n            // Gecko 1.9版本以下用getBoxObjectFor计算位置\n        // 但是某些情况下是有bug的\n        // 对于这些有bug的情况\n        // 使用递归查找的方式\n        BUGGY_GECKO_BOX_OBJECT = browser.isGecko > 0 && doc.getBoxObjectFor && getStyle(element, 'position') == 'absolute' && (element.style.top === '' || element.style.left === ''),\n            pos = {\n          \"left\": 0,\n          \"top\": 0\n        },\n            viewport = browser.ie && !browser.isStrict ? doc.body : doc.documentElement,\n            parent,\n            box;\n\n        if (element == viewport) {\n          return pos;\n        }\n\n        if (element.getBoundingClientRect) {\n          // IE and Gecko 1.9+\n          //当HTML或者BODY有border width时, 原生的getBoundingClientRect返回值是不符合预期的\n          //考虑到通常情况下 HTML和BODY的border只会设成0px,所以忽略该问题.\n          box = element.getBoundingClientRect();\n          pos.left = Math.floor(box.left) + Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft);\n          pos.top = Math.floor(box.top) + Math.max(doc.documentElement.scrollTop, doc.body.scrollTop); // IE会给HTML元素添加一个border，默认是medium（2px）\n          // 但是在IE 6 7 的怪异模式下，可以被html { border: 0; } 这条css规则覆盖\n          // 在IE7的标准模式下，border永远是2px，这个值通过clientLeft 和 clientTop取得\n          // 但是。。。在IE 6 7的怪异模式，如果用户使用css覆盖了默认的medium\n          // clientTop和clientLeft不会更新\n\n          pos.left -= doc.documentElement.clientLeft;\n          pos.top -= doc.documentElement.clientTop;\n          var htmlDom = doc.body,\n              // 在这里，不使用element.style.borderLeftWidth，只有computedStyle是可信的\n          htmlBorderLeftWidth = parseInt(getStyle(htmlDom, 'borderLeftWidth')),\n              htmlBorderTopWidth = parseInt(getStyle(htmlDom, 'borderTopWidth'));\n\n          if (browser.ie && !browser.isStrict) {\n            pos.left -= isNaN(htmlBorderLeftWidth) ? 2 : htmlBorderLeftWidth;\n            pos.top -= isNaN(htmlBorderTopWidth) ? 2 : htmlBorderTopWidth;\n          }\n        } else {\n          // safari/opera/firefox\n          parent = element;\n\n          do {\n            pos.left += parent.offsetLeft;\n            pos.top += parent.offsetTop; // safari里面，如果遍历到了一个fixed的元素，后面的offset都不准了\n\n            if (browser.isWebkit > 0 && getStyle(parent, 'position') == 'fixed') {\n              pos.left += doc.body.scrollLeft;\n              pos.top += doc.body.scrollTop;\n              break;\n            }\n\n            parent = parent.offsetParent;\n          } while (parent && parent != element); // 对body offsetTop的修正\n\n\n          if (browser.opera > 0 || browser.isWebkit > 0 && getStyle(element, 'position') == 'absolute') {\n            pos.top -= doc.body.offsetTop;\n          } // 计算除了body的scroll\n\n\n          parent = element.offsetParent;\n\n          while (parent && parent != doc.body) {\n            pos.left -= parent.scrollLeft; // see https://bugs.opera.com/show_bug.cgi?id=249965\n\n            if (!browser.opera || parent.tagName != 'TR') {\n              pos.top -= parent.scrollTop;\n            }\n\n            parent = parent.offsetParent;\n          }\n        }\n\n        return pos;\n      };\n      /**\n       * @ignore\n       * @namespace baidu.event 屏蔽浏览器差异性的事件封装。\n       * @property target \t事件的触发元素\n       * @property pageX \t\t鼠标事件的鼠标x坐标\n       * @property pageY \t\t鼠标事件的鼠标y坐标\n       * @property keyCode \t键盘事件的键值\n       */\n\n\n      baidu.event = baidu.event || {};\n      /**\n       * 事件监听器的存储表\n       * @private\n       * @meta standard\n       */\n\n      baidu.event._listeners = baidu.event._listeners || [];\n      /**\n       * 为目标元素添加事件监听器\n       * @name baidu.event.on\n       * @function\n       * @grammar baidu.event.on(element, type, listener)\n       * @param {HTMLElement|string|window} element 目标元素或目标元素id\n       * @param {string} type 事件类型\n       * @param {Function} listener 需要添加的监听器\n       * @remark\n       * \n      1. 不支持跨浏览器的鼠标滚轮事件监听器添加<br>\n      2. 改方法不为监听器灌入事件对象，以防止跨iframe事件挂载的事件对象获取失败\n           * @shortcut on\n          * @meta standard\n          * @see baidu.event.un\n          *             \n          * @returns {HTMLElement|window} 目标元素\n          */\n\n      baidu.event.on = function (element, type, listener) {\n        type = type.replace(/^on/i, '');\n        element = baidu.dom._g(element);\n\n        var realListener = function (ev) {\n          // 1. 这里不支持EventArgument,  原因是跨frame的事件挂载\n          // 2. element是为了修正this\n          listener.call(element, ev);\n        },\n            lis = baidu.event._listeners,\n            filter = baidu.event._eventFilter,\n            afterFilter,\n            realType = type;\n\n        type = type.toLowerCase(); // filter过滤\n\n        if (filter && filter[type]) {\n          afterFilter = filter[type](element, type, realListener);\n          realType = afterFilter.type;\n          realListener = afterFilter.listener;\n        } // 事件监听器挂载\n\n\n        if (element.addEventListener) {\n          element.addEventListener(realType, realListener, false);\n        } else if (element.attachEvent) {\n          element.attachEvent('on' + realType, realListener);\n        } // 将监听器存储到数组中\n\n\n        lis[lis.length] = [element, type, listener, realListener, realType];\n        return element;\n      }; // 声明快捷方法\n\n\n      baidu.on = baidu.event.on;\n      /**\n       * 返回一个当前页面的唯一标识字符串。\n       * @name baidu.lang.guid\n       * @function\n       * @grammar baidu.lang.guid()\n       * @version 1.1.1\n       * @meta standard\n       *             \n       * @returns {String} 当前页面的唯一标识字符串\n       */\n\n      (function () {\n        //不直接使用window，可以提高3倍左右性能\n        var guid = context[baidu.guid];\n\n        baidu.lang.guid = function () {\n          return \"TANGRAM__\" + (guid._counter++).toString(36);\n        };\n\n        guid._counter = guid._counter || 1;\n      })();\n      /**\n       * 所有类的实例的容器\n       * key为每个实例的guid\n       * @meta standard\n       */\n\n\n      context[baidu.guid]._instances = context[baidu.guid]._instances || {};\n      /**\n       * 判断目标参数是否为function或Function实例\n       * @name baidu.lang.isFunction\n       * @function\n       * @grammar baidu.lang.isFunction(source)\n       * @param {Any} source 目标参数\n       * @version 1.2\n       * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate\n       * @meta standard\n       * @returns {boolean} 类型判断结果\n       */\n\n      baidu.lang.isFunction = function (source) {\n        // chrome下,'function' == typeof /a/ 为true.\n        return '[object Function]' == Object.prototype.toString.call(source);\n      };\n      /**\n       *    \n       * @ignore\n       * @class  Tangram继承机制提供的一个基类，用户可以通过继承baidu.lang.Class来获取它的属性及方法。\n       * @name \tbaidu.lang.Class\n       * @grammar baidu.lang.Class(guid)\n       * @param \t{string}\tguid\t对象的唯一标识\n       * @meta standard\n       * @remark baidu.lang.Class和它的子类的实例均包含一个全局唯一的标识guid。guid是在构造函数中生成的，因此，继承自baidu.lang.Class的类应该直接或者间接调用它的构造函数。<br>baidu.lang.Class的构造函数中产生guid的方式可以保证guid的唯一性，及每个实例都有一个全局唯一的guid。\n       * @meta standard\n       * @see baidu.lang.inherits,baidu.lang.Event\n       */\n\n\n      baidu.lang.Class = function (guid) {\n        this.guid = guid || baidu.lang.guid();\n        context[baidu.guid]._instances[this.guid] = this;\n      };\n\n      context[baidu.guid]._instances = context[baidu.guid]._instances || {};\n      /**\n       * 释放对象所持有的资源，主要是自定义事件。\n       * @name dispose\n       * @grammar obj.dispose()\n       */\n\n      baidu.lang.Class.prototype.dispose = function () {\n        delete context[baidu.guid]._instances[this.guid];\n\n        for (var property in this) {\n          if (!baidu.lang.isFunction(this[property])) {\n            delete this[property];\n          }\n        }\n\n        this.disposed = true;\n      };\n      /**\n       * 重载了默认的toString方法，使得返回信息更加准确一些。\n       * @return {string} 对象的String表示形式\n       */\n\n\n      baidu.lang.Class.prototype.toString = function () {\n        return \"[object \" + (this._className || \"Object\") + \"]\";\n      };\n      /**\n       * @ignore\n       * @class   自定义的事件对象。\n       * @name \tbaidu.lang.Event\n       * @grammar baidu.lang.Event(type[, target])\n       * @param \t{string} type\t 事件类型名称。为了方便区分事件和一个普通的方法，事件类型名称必须以\"on\"(小写)开头。\n       * @param \t{Object} [target]触发事件的对象\n       * @meta standard\n       * @remark 引入该模块，会自动为Class引入3个事件扩展方法：addEventListener、removeEventListener和dispatchEvent。\n       * @meta standard\n       * @see baidu.lang.Class\n       */\n\n\n      baidu.lang.Event = function (type, target) {\n        this.type = type;\n        this.returnValue = true;\n        this.target = target || null;\n        this.currentTarget = null;\n      };\n      /**\n       * 注册对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n       * @grammar obj.addEventListener(type, handler[, key])\n       * @param \t{string}   type         自定义事件的名称\n       * @param \t{Function} handler      自定义事件被触发时应该调用的回调函数\n       * @param \t{string}   [key]\t\t为事件监听函数指定的名称，可在移除时使用。如果不提供，方法会默认为它生成一个全局唯一的key。\n       * @remark \t事件类型区分大小写。如果自定义事件名称不是以小写\"on\"开头，该方法会给它加上\"on\"再进行判断，即\"click\"和\"onclick\"会被认为是同一种事件。 \n       */\n\n\n      baidu.lang.Class.prototype.addEventListener = function (type, handler, key) {\n        if (!baidu.lang.isFunction(handler)) {\n          return;\n        }\n\n        !this.__listeners && (this.__listeners = {});\n        var t = this.__listeners,\n            id;\n\n        if (typeof key == \"string\" && key) {\n          if (/[^\\w\\-]/.test(key)) {\n            throw \"nonstandard key:\" + key;\n          } else {\n            handler.hashCode = key;\n            id = key;\n          }\n        }\n\n        type.indexOf(\"on\") != 0 && (type = \"on\" + type);\n        typeof t[type] != \"object\" && (t[type] = {});\n        id = id || baidu.lang.guid();\n        handler.hashCode = id;\n        t[type][id] = handler;\n      };\n      /**\n       * 移除对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n       * @grammar obj.removeEventListener(type, handler)\n       * @param {string}   type     事件类型\n       * @param {Function|string} handler  要移除的事件监听函数或者监听函数的key\n       * @remark \t如果第二个参数handler没有被绑定到对应的自定义事件中，什么也不做。\n       */\n\n\n      baidu.lang.Class.prototype.removeEventListener = function (type, handler) {\n        if (typeof handler != \"undefined\") {\n          if (baidu.lang.isFunction(handler) && !(handler = handler.hashCode) || !baidu.lang.isString(handler)) {\n            return;\n          }\n        }\n\n        !this.__listeners && (this.__listeners = {});\n        type.indexOf(\"on\") != 0 && (type = \"on\" + type);\n        var t = this.__listeners;\n\n        if (!t[type]) {\n          return;\n        }\n\n        if (typeof handler != \"undefined\") {\n          t[type][handler] && delete t[type][handler];\n        } else {\n          for (var guid in t[type]) {\n            delete t[type][guid];\n          }\n        }\n      };\n      /**\n       * 派发自定义事件，使得绑定到自定义事件上面的函数都会被执行。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n       * @grammar obj.dispatchEvent(event, options)\n       * @param {baidu.lang.Event|String} event \tEvent对象，或事件名称(1.1.1起支持)\n       * @param {Object} \t\t\t\t\toptions 扩展参数,所含属性键值会扩展到Event对象上(1.2起支持)\n       * @remark 处理会调用通过addEventListenr绑定的自定义事件回调函数之外，还会调用直接绑定到对象上面的自定义事件。例如：<br>\n      myobj.onMyEvent = function(){}<br>\n      myobj.addEventListener(\"onMyEvent\", function(){});\n          */\n\n\n      baidu.lang.Class.prototype.dispatchEvent = function (event, options) {\n        if (baidu.lang.isString(event)) {\n          event = new baidu.lang.Event(event);\n        }\n\n        !this.__listeners && (this.__listeners = {}); // 20100603 添加本方法的第二个参数，将 options extend到event中去传递\n\n        options = options || {};\n\n        for (var i in options) {\n          event[i] = options[i];\n        }\n\n        var i,\n            t = this.__listeners,\n            p = event.type;\n        event.target = event.target || this;\n        event.currentTarget = this;\n        p.indexOf(\"on\") != 0 && (p = \"on\" + p);\n        baidu.lang.isFunction(this[p]) && this[p].apply(this, arguments);\n\n        if (typeof t[p] == \"object\") {\n          for (i in t[p]) {\n            t[p][i].apply(this, arguments);\n          }\n        }\n\n        return event.returnValue;\n      };\n\n      baidu.lang.inherits = function (subClass, superClass, className) {\n        var key,\n            proto,\n            selfProps = subClass.prototype,\n            clazz = new Function();\n        clazz.prototype = superClass.prototype;\n        proto = subClass.prototype = new clazz();\n\n        for (key in selfProps) {\n          proto[key] = selfProps[key];\n        }\n\n        subClass.prototype.constructor = subClass;\n        subClass.superClass = superClass.prototype; // 类名标识，兼容Class的toString，基本没用\n\n        if (\"string\" == typeof className) {\n          proto._className = className;\n        }\n      }; // 声明快捷方法\n\n\n      baidu.inherits = baidu.lang.inherits;\n      /**\n      \n       * 图片的路径\n        * @private\n       * @type {String}\n      \n       */\n\n      var _IMAGE_PATH = 'http://api.map.baidu.com/library/TextIconOverlay/1.2/src/images/m';\n      /**\n      \n       * 图片的后缀名\n         * @private\n       * @type {String}\n      \n       */\n\n      var _IMAGE_EXTENSION = 'png';\n      /**\n       *@exports TextIconOverlay as BMapLib.TextIconOverlay\n       */\n\n      /**\n      * TextIconOverlay\n      * @class 此类表示地图上的一个覆盖物，该覆盖物由文字和图标组成，从Overlay继承。文字通常是数字（0-9）或字母（A-Z ），而文字与图标之间有一定的映射关系。\n      *该覆盖物适用于以下类似的场景：需要在地图上添加一系列覆盖物，这些覆盖物之间用不同的图标和文字来区分，文字可能表示了该覆盖物的某一属性值，根据该文字和一定的映射关系，自动匹配相应颜色和大小的图标。\n      *\n      *@constructor\n      *@param {Point} position 表示一个经纬度坐标位置。\n      *@param {String} text 表示该覆盖物显示的文字信息。\n      *@param {Json Object} options 可选参数，可选项包括：<br />\n      *\"<b>styles</b>\":{Array<IconStyle>} 一组图标风格。单个图表风格包括以下几个属性：<br />\n      *   url\t{String}\t 图片的url地址。(必选)<br />\n      *   size {Size}\t图片的大小。（必选）<br />\n      *   anchor {Size} 图标定位在地图上的位置相对于图标左上角的偏移值，默认偏移值为图标的中心位置。（可选）<br />\n      *   offset {Size} 图片相对于可视区域的偏移值，此功能的作用等同于CSS中的background-position属性。（可选）<br />\n      *   textSize {Number} 文字的大小。（可选，默认10）<br />\n      *   textColor {String} 文字的颜色。（可选，默认black）<br />\n      */\n\n      var TextIconOverlay = function (position, text, options) {\n        try {\n          BMap;\n        } catch (e) {\n          throw Error('Baidu Map JS API is not ready yet!');\n        }\n\n        T.lang.inherits(TextIconOverlay, BMap.Overlay, \"TextIconOverlay\");\n        this._position = position;\n        this._text = text;\n        this._options = options || {};\n        this._styles = this._options['styles'] || [];\n        !this._styles.length && this._setupDefaultStyles();\n      };\n\n      TextIconOverlay.prototype._setupDefaultStyles = function () {\n        var sizes = [53, 56, 66, 78, 90];\n\n        for (var i = 0, size; size = sizes[i]; i++) {\n          this._styles.push({\n            url: _IMAGE_PATH + i + '.' + _IMAGE_EXTENSION,\n            size: new BMap.Size(size, size)\n          });\n        } //for循环的简洁写法\n\n      };\n      /**\n      *继承Overlay的intialize方法，自定义覆盖物时必须。\n      *@param {Map} map BMap.Map的实例化对象。\n      *@return {HTMLElement} 返回覆盖物对应的HTML元素。\n      */\n\n\n      TextIconOverlay.prototype.initialize = function (map) {\n        this._map = map;\n        this._domElement = document.createElement('div');\n\n        this._updateCss();\n\n        this._updateText();\n\n        this._updatePosition();\n\n        this._bind();\n\n        this._map.getPanes().markerMouseTarget.appendChild(this._domElement);\n\n        return this._domElement;\n      };\n      /**\n      *继承Overlay的draw方法，自定义覆盖物时必须。\n      *@return 无返回值。\n      */\n\n\n      TextIconOverlay.prototype.draw = function () {\n        this._map && this._updatePosition();\n      };\n      /**\n      *获取该覆盖物上的文字。\n      *@return {String} 该覆盖物上的文字。\n      */\n\n\n      TextIconOverlay.prototype.getText = function () {\n        return this._text;\n      };\n      /**\n      *设置该覆盖物上的文字。\n      *@param {String} text 要设置的文字，通常是字母A-Z或数字0-9。\n      *@return 无返回值。\n      */\n\n\n      TextIconOverlay.prototype.setText = function (text) {\n        if (text && (!this._text || this._text.toString() != text.toString())) {\n          this._text = text;\n\n          this._updateText();\n\n          this._updateCss();\n\n          this._updatePosition();\n        }\n      };\n      /**\n      *获取该覆盖物的位置。\n      *@return {Point} 该覆盖物的经纬度坐标。\n      */\n\n\n      TextIconOverlay.prototype.getPosition = function () {\n        return this._position;\n      };\n      /**\n      *设置该覆盖物的位置。\n      *@param {Point}  position 要设置的经纬度坐标。\n      *@return 无返回值。\n      */\n\n\n      TextIconOverlay.prototype.setPosition = function (position) {\n        if (position && (!this._position || !this._position.equals(position))) {\n          this._position = position;\n\n          this._updatePosition();\n        }\n      };\n      /**\n      *由文字信息获取风格数组的对应索引值。\n      *内部默认的对应函数为文字转换为数字除以10的结果，比如文字8返回索引0，文字25返回索引2.\n      *如果需要自定义映射关系，请覆盖该函数。\n      *@param {String} text  文字。\n      *@param {Array<IconStyle>}  styles 一组图标风格。\n      *@return {Number} 对应的索引值。\n      */\n\n\n      TextIconOverlay.prototype.getStyleByText = function (text, styles) {\n        var count = parseInt(text);\n        var index = parseInt(count / 10);\n        index = Math.max(0, index);\n        index = Math.min(index, styles.length - 1);\n        return styles[index];\n      };\n      /**\n      *更新相应的CSS。\n      *@return 无返回值。\n      */\n\n\n      TextIconOverlay.prototype._updateCss = function () {\n        if (!this._domElement) {\n          return;\n        }\n\n        var style = this.getStyleByText(this._text, this._styles);\n        this._domElement.style.cssText = this._buildCssText(style);\n      };\n      /**\n      *更新覆盖物的显示文字。\n      *@return 无返回值。\n      */\n\n\n      TextIconOverlay.prototype._updateText = function () {\n        if (this._domElement) {\n          this._domElement.innerHTML = this._text;\n        }\n      };\n      /**\n      *调整覆盖物在地图上的位置更新覆盖物的显示文字。\n      *@return 无返回值。\n      */\n\n\n      TextIconOverlay.prototype._updatePosition = function () {\n        if (this._domElement && this._position) {\n          var style = this._domElement.style;\n\n          var pixelPosition = this._map.pointToOverlayPixel(this._position);\n\n          pixelPosition.x -= Math.ceil(parseInt(style.width) / 2);\n          pixelPosition.y -= Math.ceil(parseInt(style.height) / 2);\n          style.left = pixelPosition.x + \"px\";\n          style.top = pixelPosition.y + \"px\";\n        }\n      };\n      /**\n      * 为该覆盖物的HTML元素构建CSS\n      * @param {IconStyle}  一个图标的风格。\n      * @return {String} 构建完成的CSSTEXT。\n      */\n\n\n      TextIconOverlay.prototype._buildCssText = function (style) {\n        //根据style来确定一些默认值\n        var url = style['url'];\n        var size = style['size'];\n        var anchor = style['anchor'];\n        var offset = style['offset'];\n        var textColor = style['textColor'] || 'black';\n        var textSize = style['textSize'] || 10;\n        var csstext = [];\n\n        if (T.browser[\"ie\"] < 7) {\n          csstext.push('filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(' + 'sizingMethod=scale,src=\"' + url + '\");');\n        } else {\n          csstext.push('background-image:url(' + url + ');');\n          var backgroundPosition = '0 0';\n          offset instanceof BMap.Size && (backgroundPosition = offset.width + 'px' + ' ' + offset.height + 'px');\n          csstext.push('background-position:' + backgroundPosition + ';');\n        }\n\n        if (size instanceof BMap.Size) {\n          if (anchor instanceof BMap.Size) {\n            if (anchor.height > 0 && anchor.height < size.height) {\n              csstext.push('height:' + (size.height - anchor.height) + 'px; padding-top:' + anchor.height + 'px;');\n            }\n\n            if (anchor.width > 0 && anchor.width < size.width) {\n              csstext.push('width:' + (size.width - anchor.width) + 'px; padding-left:' + anchor.width + 'px;');\n            }\n          } else {\n            csstext.push('height:' + size.height + 'px; line-height:' + size.height + 'px;');\n            csstext.push('width:' + size.width + 'px; text-align:center;');\n          }\n        }\n\n        csstext.push('cursor:pointer; color:' + textColor + '; position:absolute; font-size:' + textSize + 'px; font-family:Arial,sans-serif; font-weight:bold');\n        return csstext.join('');\n      };\n      /**\n      \n       * 当鼠标点击该覆盖物时会触发该事件\n        * @name TextIconOverlay#click\n        * @event\n        * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：\n      \n       * <br />\"<b>type</b> : {String} 事件类型\n        * <br />\"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标\n        *\n        */\n\n      /**\n        * 当鼠标进入该覆盖物区域时会触发该事件\n        * @name TextIconOverlay#mouseover\n        * @event\n       * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：\n      \n       * <br />\"<b>type</b> : {String} 事件类型\n        * <br />\"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标\n        * <br />\"<b>point</b> : {BMap.Point} 最新添加上的节点BMap.Point对象\n        * <br />\"<b>pixel</b>：{BMap.pixel} 最新添加上的节点BMap.Pixel对象\n        *\n        * @example <b>参考示例：</b><br />\n        * myTextIconOverlay.addEventListener(\"mouseover\", function(e) {  alert(e.point);  });\n        */\n\n      /**\n        * 当鼠标离开该覆盖物区域时会触发该事件\n        * @name TextIconOverlay#mouseout\n        * @event\n        * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：\n        * <br />\"<b>type</b> : {String} 事件类型\n        * <br />\"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标\n        * <br />\"<b>point</b> : {BMap.Point} 最新添加上的节点BMap.Point对象\n        * <br />\"<b>pixel</b>：{BMap.pixel} 最新添加上的节点BMap.Pixel对象\n        *\n        * @example <b>参考示例：</b><br />\n        * myTextIconOverlay.addEventListener(\"mouseout\", function(e) {  alert(e.point);  });\n        */\n\n      /**\n      * 为该覆盖物绑定一系列事件\n      * 当前支持click mouseover mouseout\n      * @return 无返回值。\n      */\n\n\n      TextIconOverlay.prototype._bind = function () {\n        if (!this._domElement) {\n          return;\n        }\n\n        var me = this;\n        var map = this._map;\n        var BaseEvent = T.lang.Event;\n\n        function eventExtend(e, be) {\n          var elem = e.srcElement || e.target;\n          var x = e.clientX || e.pageX;\n          var y = e.clientY || e.pageY;\n\n          if (e && be && x && y && elem) {\n            var offset = T.dom.getPosition(map.getContainer());\n            be.pixel = new BMap.Pixel(x - offset.left, y - offset.top);\n            be.point = map.pixelToPoint(be.pixel);\n          }\n\n          return be;\n        } //给事件参数增加pixel和point两个值\n\n\n        T.event.on(this._domElement, \"mouseover\", function (e) {\n          me.dispatchEvent(eventExtend(e, new BaseEvent(\"onmouseover\")));\n        });\n        T.event.on(this._domElement, \"mouseout\", function (e) {\n          me.dispatchEvent(eventExtend(e, new BaseEvent(\"onmouseout\")));\n        });\n        T.event.on(this._domElement, \"click\", function (e) {\n          me.dispatchEvent(eventExtend(e, new BaseEvent(\"onclick\")));\n        });\n      };\n\n      return TextIconOverlay;\n    });\n  });\n\n  var TextIconOverlay = index$1 && typeof index$1 === 'object' && 'default' in index$1 ? index$1['default'] : index$1;\n  /**\n   * 获取一个扩展的视图范围，把上下左右都扩大一样的像素值。\n   * @param {Map} map BMap.Map的实例化对象\n   * @param {BMap.Bounds} bounds BMap.Bounds的实例化对象\n   * @param {Number} gridSize 要扩大的像素值\n   *\n   * @return {BMap.Bounds} 返回扩大后的视图范围。\n   */\n\n  var getExtendedBounds = function (map, bounds, gridSize) {\n    bounds = cutBoundsInRange(bounds);\n    var pixelNE = map.pointToPixel(bounds.getNorthEast());\n    var pixelSW = map.pointToPixel(bounds.getSouthWest());\n    pixelNE.x += gridSize;\n    pixelNE.y -= gridSize;\n    pixelSW.x -= gridSize;\n    pixelSW.y += gridSize;\n    var newNE = map.pixelToPoint(pixelNE);\n    var newSW = map.pixelToPoint(pixelSW);\n    return new BMap.Bounds(newSW, newNE);\n  };\n  /**\n   * 按照百度地图支持的世界范围对bounds进行边界处理\n   * @param {BMap.Bounds} bounds BMap.Bounds的实例化对象\n   *\n   * @return {BMap.Bounds} 返回不越界的视图范围\n   */\n\n\n  var cutBoundsInRange = function (bounds) {\n    var maxX = getRange(bounds.getNorthEast().lng, -180, 180);\n    var minX = getRange(bounds.getSouthWest().lng, -180, 180);\n    var maxY = getRange(bounds.getNorthEast().lat, -74, 74);\n    var minY = getRange(bounds.getSouthWest().lat, -74, 74);\n    return new BMap.Bounds(new BMap.Point(minX, minY), new BMap.Point(maxX, maxY));\n  };\n  /**\n   * 对单个值进行边界处理。\n   * @param {Number} i 要处理的数值\n   * @param {Number} min 下边界值\n   * @param {Number} max 上边界值\n   * \n   * @return {Number} 返回不越界的数值\n   */\n\n\n  var getRange = function (i, mix, max) {\n    mix && (i = Math.max(i, mix));\n    max && (i = Math.min(i, max));\n    return i;\n  };\n  /**\n   * 判断给定的对象是否为数组\n   * @param {Object} source 要测试的对象\n   *\n   * @return {Boolean} 如果是数组返回true，否则返回false\n   */\n\n\n  var isArray = function (source) {\n    return '[object Array]' === Object.prototype.toString.call(source);\n  };\n  /**\n   * 返回item在source中的索引位置\n   * @param {Object} item 要测试的对象\n   * @param {Array} source 数组\n   *\n   * @return {Number} 如果在数组内，返回索引，否则返回-1\n   */\n\n\n  var indexOf = function (item, source) {\n    var index = -1;\n\n    if (isArray(source)) {\n      if (source.indexOf) {\n        index = source.indexOf(item);\n      } else {\n        for (var i = 0, m; m = source[i]; i++) {\n          if (m === item) {\n            index = i;\n            break;\n          }\n        }\n      }\n    }\n\n    return index;\n  };\n  /**\n   *@exports MarkerClusterer as BMapLib.MarkerClusterer\n   */\n\n  /**\n   * MarkerClusterer\n   * @class 用来解决加载大量点要素到地图上产生覆盖现象的问题，并提高性能\n   * @constructor\n   * @param {Map} map 地图的一个实例。\n   * @param {Json Object} options 可选参数，可选项包括：<br />\n   *    markers {Array<Marker>} 要聚合的标记数组<br />\n   *    girdSize {Number} 聚合计算时网格的像素大小，默认60<br />\n   *    maxZoom {Number} 最大的聚合级别，大于该级别就不进行相应的聚合<br />\n   *    minClusterSize {Number} 最小的聚合数量，小于该数量的不能成为一个聚合，默认为2<br />\n   *    isAverangeCenter {Boolean} 聚合点的落脚位置是否是所有聚合在内点的平均值，默认为否，落脚在聚合内的第一个点<br />\n   *    styles {Array<IconStyle>} 自定义聚合后的图标风格，请参考TextIconOverlay类<br />\n   */\n\n\n  var MarkerClusterer = function (map, options) {\n    try {\n      BMap;\n    } catch (e) {\n      throw Error('Baidu Map JS API is not ready yet!');\n    }\n\n    if (!map) {\n      return;\n    }\n\n    this._map = map;\n    this._markers = [];\n    this._clusters = [];\n    var opts = options || {};\n    this._gridSize = opts[\"gridSize\"] || 60;\n    this._maxZoom = opts[\"maxZoom\"] || 18;\n    this._minClusterSize = opts[\"minClusterSize\"] || 2;\n    this._isAverageCenter = false;\n\n    if (opts['isAverageCenter'] != undefined) {\n      this._isAverageCenter = opts['isAverageCenter'];\n    }\n\n    this._styles = opts[\"styles\"] || [];\n    var that = this;\n\n    this._map.addEventListener(\"zoomend\", function () {\n      that._redraw();\n    });\n\n    this._map.addEventListener(\"moveend\", function () {\n      that._redraw();\n    });\n\n    var mkrs = opts[\"markers\"];\n    isArray(mkrs) && this.addMarkers(mkrs);\n  };\n  /**\n   * 添加要聚合的标记数组。\n   * @param {Array<Marker>} markers 要聚合的标记数组\n   *\n   * @return 无返回值。\n   */\n\n\n  MarkerClusterer.prototype.addMarkers = function (markers) {\n    if (!markers.length) {\n      return;\n    }\n\n    for (var i = 0, len = markers.length; i < len; i++) {\n      this._pushMarkerTo(markers[i]);\n    }\n\n    this._createClusters();\n  };\n  /**\n   * 把一个标记添加到要聚合的标记数组中\n   * @param {BMap.Marker} marker 要添加的标记\n   *\n   * @return 无返回值。\n   */\n\n\n  MarkerClusterer.prototype._pushMarkerTo = function (marker) {\n    var index = indexOf(marker, this._markers);\n\n    if (index === -1) {\n      marker.isInCluster = false;\n\n      this._markers.push(marker); //Marker拖放后enableDragging不做变化，忽略\n\n    }\n  };\n  /**\n   * 添加一个聚合的标记。\n   * @param {BMap.Marker} marker 要聚合的单个标记。\n   * @return 无返回值。\n   */\n\n\n  MarkerClusterer.prototype.addMarker = function (marker) {\n    this._pushMarkerTo(marker);\n\n    this._createClusters();\n  };\n  /**\n   * 根据所给定的标记，创建聚合点\n   * @return 无返回值\n   */\n\n\n  MarkerClusterer.prototype._createClusters = function () {\n    var mapBounds = this._map.getBounds();\n\n    if (!mapBounds.getCenter()) {\n      return;\n    }\n\n    var extendedBounds = getExtendedBounds(this._map, mapBounds, this._gridSize);\n\n    for (var i = 0, marker; marker = this._markers[i]; i++) {\n      if (!marker.isInCluster && extendedBounds.containsPoint(marker.getPosition())) {\n        this._addToClosestCluster(marker);\n      }\n    }\n  };\n  /**\n   * 根据标记的位置，把它添加到最近的聚合中\n   * @param {BMap.Marker} marker 要进行聚合的单个标记\n   *\n   * @return 无返回值。\n   */\n\n\n  MarkerClusterer.prototype._addToClosestCluster = function (marker) {\n    var distance = 4000000;\n    var clusterToAddTo = null;\n    var position = marker.getPosition();\n\n    for (var i = 0, cluster; cluster = this._clusters[i]; i++) {\n      var center = cluster.getCenter();\n\n      if (center) {\n        var d = this._map.getDistance(center, marker.getPosition());\n\n        if (d < distance) {\n          distance = d;\n          clusterToAddTo = cluster;\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker);\n    } else {\n      var cluster = new Cluster(this);\n      cluster.addMarker(marker);\n\n      this._clusters.push(cluster);\n    }\n  };\n  /**\n   * 清除上一次的聚合的结果\n   * @return 无返回值。\n   */\n\n\n  MarkerClusterer.prototype._clearLastClusters = function () {\n    for (var i = 0, cluster; cluster = this._clusters[i]; i++) {\n      cluster.remove();\n    }\n\n    this._clusters = []; //置空Cluster数组\n\n    this._removeMarkersFromCluster(); //把Marker的cluster标记设为false\n\n  };\n  /**\n   * 清除某个聚合中的所有标记\n   * @return 无返回值\n   */\n\n\n  MarkerClusterer.prototype._removeMarkersFromCluster = function () {\n    for (var i = 0, marker; marker = this._markers[i]; i++) {\n      marker.isInCluster = false;\n    }\n  };\n  /**\n   * 把所有的标记从地图上清除\n   * @return 无返回值\n   */\n\n\n  MarkerClusterer.prototype._removeMarkersFromMap = function () {\n    for (var i = 0, marker; marker = this._markers[i]; i++) {\n      marker.isInCluster = false;\n      var label = marker.getLabel();\n\n      this._map.removeOverlay(marker);\n\n      marker.setLabel(label);\n    }\n  };\n  /**\n   * 删除单个标记\n   * @param {BMap.Marker} marker 需要被删除的marker\n   *\n   * @return {Boolean} 删除成功返回true，否则返回false\n   */\n\n\n  MarkerClusterer.prototype._removeMarker = function (marker) {\n    var index = indexOf(marker, this._markers);\n\n    if (index === -1) {\n      return false;\n    }\n\n    this._map.removeOverlay(marker);\n\n    this._markers.splice(index, 1);\n\n    return true;\n  };\n  /**\n   * 删除单个标记\n   * @param {BMap.Marker} marker 需要被删除的marker\n   *\n   * @return {Boolean} 删除成功返回true，否则返回false\n   */\n\n\n  MarkerClusterer.prototype.removeMarker = function (marker) {\n    var success = this._removeMarker(marker);\n\n    if (success) {\n      this._clearLastClusters();\n\n      this._createClusters();\n    }\n\n    return success;\n  };\n  /**\n   * 删除一组标记\n   * @param {Array<BMap.Marker>} markers 需要被删除的marker数组\n   *\n   * @return {Boolean} 删除成功返回true，否则返回false\n   */\n\n\n  MarkerClusterer.prototype.removeMarkers = function (markers) {\n    var success = false;\n\n    for (var i = 0; i < markers.length; i++) {\n      var r = this._removeMarker(markers[i]);\n\n      success = success || r;\n    }\n\n    if (success) {\n      this._clearLastClusters();\n\n      this._createClusters();\n    }\n\n    return success;\n  };\n  /**\n   * 从地图上彻底清除所有的标记\n   * @return 无返回值\n   */\n\n\n  MarkerClusterer.prototype.clearMarkers = function () {\n    this._clearLastClusters();\n\n    this._removeMarkersFromMap();\n\n    this._markers = [];\n  };\n  /**\n   * 重新生成，比如改变了属性等\n   * @return 无返回值\n   */\n\n\n  MarkerClusterer.prototype._redraw = function () {\n    this._clearLastClusters();\n\n    this._createClusters();\n  };\n  /**\n   * 获取网格大小\n   * @return {Number} 网格大小\n   */\n\n\n  MarkerClusterer.prototype.getGridSize = function () {\n    return this._gridSize;\n  };\n  /**\n   * 设置网格大小\n   * @param {Number} size 网格大小\n   * @return 无返回值\n   */\n\n\n  MarkerClusterer.prototype.setGridSize = function (size) {\n    this._gridSize = size;\n\n    this._redraw();\n  };\n  /**\n   * 获取聚合的最大缩放级别。\n   * @return {Number} 聚合的最大缩放级别。\n   */\n\n\n  MarkerClusterer.prototype.getMaxZoom = function () {\n    return this._maxZoom;\n  };\n  /**\n   * 设置聚合的最大缩放级别\n   * @param {Number} maxZoom 聚合的最大缩放级别\n   * @return 无返回值\n   */\n\n\n  MarkerClusterer.prototype.setMaxZoom = function (maxZoom) {\n    this._maxZoom = maxZoom;\n\n    this._redraw();\n  };\n  /**\n   * 获取聚合的样式风格集合\n   * @return {Array<IconStyle>} 聚合的样式风格集合\n   */\n\n\n  MarkerClusterer.prototype.getStyles = function () {\n    return this._styles;\n  };\n  /**\n   * 设置聚合的样式风格集合\n   * @param {Array<IconStyle>} styles 样式风格数组\n   * @return 无返回值\n   */\n\n\n  MarkerClusterer.prototype.setStyles = function (styles) {\n    this._styles = styles;\n\n    this._redraw();\n  };\n  /**\n   * 获取单个聚合的最小数量。\n   * @return {Number} 单个聚合的最小数量。\n   */\n\n\n  MarkerClusterer.prototype.getMinClusterSize = function () {\n    return this._minClusterSize;\n  };\n  /**\n   * 设置单个聚合的最小数量。\n   * @param {Number} size 单个聚合的最小数量。\n   * @return 无返回值。\n   */\n\n\n  MarkerClusterer.prototype.setMinClusterSize = function (size) {\n    this._minClusterSize = size;\n\n    this._redraw();\n  };\n  /**\n   * 获取单个聚合的落脚点是否是聚合内所有标记的平均中心。\n   * @return {Boolean} true或false。\n   */\n\n\n  MarkerClusterer.prototype.isAverageCenter = function () {\n    return this._isAverageCenter;\n  };\n  /**\n   * 获取聚合的Map实例。\n   * @return {Map} Map的示例。\n   */\n\n\n  MarkerClusterer.prototype.getMap = function () {\n    return this._map;\n  };\n  /**\n   * 获取所有的标记数组。\n   * @return {Array<Marker>} 标记数组。\n   */\n\n\n  MarkerClusterer.prototype.getMarkers = function () {\n    return this._markers;\n  };\n  /**\n   * 获取聚合的总数量。\n   * @return {Number} 聚合的总数量。\n   */\n\n\n  MarkerClusterer.prototype.getClustersCount = function () {\n    var count = 0;\n\n    for (var i = 0, cluster; cluster = this._clusters[i]; i++) {\n      cluster.isReal() && count++;\n    }\n\n    return count;\n  };\n  /**\n   * @ignore\n   * Cluster\n   * @class 表示一个聚合对象，该聚合，包含有N个标记，这N个标记组成的范围，并有予以显示在Map上的TextIconOverlay等。\n   * @constructor\n   * @param {MarkerClusterer} markerClusterer 一个标记聚合器示例。\n   */\n\n\n  function Cluster(markerClusterer) {\n    this._markerClusterer = markerClusterer;\n    this._map = markerClusterer.getMap();\n    this._minClusterSize = markerClusterer.getMinClusterSize();\n    this._isAverageCenter = markerClusterer.isAverageCenter();\n    this._center = null; //落脚位置\n\n    this._markers = []; //这个Cluster中所包含的markers\n\n    this._gridBounds = null; //以中心点为准，向四边扩大gridSize个像素的范围，也即网格范围\n\n    this._isReal = false; //真的是个聚合\n\n    this._clusterMarker = new TextIconOverlay(this._center, this._markers.length, {\n      \"styles\": this._markerClusterer.getStyles()\n    }); //this._map.addOverlay(this._clusterMarker);\n  }\n  /**\n   * 向该聚合添加一个标记。\n   * @param {Marker} marker 要添加的标记。\n   * @return 无返回值。\n   */\n\n\n  Cluster.prototype.addMarker = function (marker) {\n    if (this.isMarkerInCluster(marker)) {\n      return false;\n    } //也可用marker.isInCluster判断,外面判断OK，这里基本不会命中\n\n\n    if (!this._center) {\n      this._center = marker.getPosition();\n      this.updateGridBounds(); //\n    } else {\n      if (this._isAverageCenter) {\n        var l = this._markers.length + 1;\n        var lat = (this._center.lat * (l - 1) + marker.getPosition().lat) / l;\n        var lng = (this._center.lng * (l - 1) + marker.getPosition().lng) / l;\n        this._center = new BMap.Point(lng, lat);\n        this.updateGridBounds();\n      } //计算新的Center\n\n    }\n\n    marker.isInCluster = true;\n\n    this._markers.push(marker);\n\n    var len = this._markers.length;\n\n    if (len < this._minClusterSize) {\n      this._map.addOverlay(marker); //this.updateClusterMarker();\n\n\n      return true;\n    } else if (len === this._minClusterSize) {\n      for (var i = 0; i < len; i++) {\n        var label = this._markers[i].getLabel();\n\n        this._markers[i].getMap() && this._map.removeOverlay(this._markers[i]);\n\n        this._markers[i].setLabel(label);\n      }\n    }\n\n    this._map.addOverlay(this._clusterMarker);\n\n    this._isReal = true;\n    this.updateClusterMarker();\n    return true;\n  };\n  /**\n   * 判断一个标记是否在该聚合中。\n   * @param {Marker} marker 要判断的标记。\n   * @return {Boolean} true或false。\n   */\n\n\n  Cluster.prototype.isMarkerInCluster = function (marker) {\n    if (this._markers.indexOf) {\n      return this._markers.indexOf(marker) != -1;\n    } else {\n      for (var i = 0, m; m = this._markers[i]; i++) {\n        if (m === marker) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * 判断一个标记是否在该聚合网格范围中。\n   * @param {Marker} marker 要判断的标记。\n   * @return {Boolean} true或false。\n   */\n\n\n  Cluster.prototype.isMarkerInClusterBounds = function (marker) {\n    return this._gridBounds.containsPoint(marker.getPosition());\n  };\n\n  Cluster.prototype.isReal = function (marker) {\n    return this._isReal;\n  };\n  /**\n   * 更新该聚合的网格范围。\n   * @return 无返回值。\n   */\n\n\n  Cluster.prototype.updateGridBounds = function () {\n    var bounds = new BMap.Bounds(this._center, this._center);\n    this._gridBounds = getExtendedBounds(this._map, bounds, this._markerClusterer.getGridSize());\n  };\n  /**\n   * 更新该聚合的显示样式，也即TextIconOverlay。\n   * @return 无返回值。\n   */\n\n\n  Cluster.prototype.updateClusterMarker = function () {\n    if (this._map.getZoom() > this._markerClusterer.getMaxZoom()) {\n      this._clusterMarker && this._map.removeOverlay(this._clusterMarker);\n\n      for (var i = 0, marker; marker = this._markers[i]; i++) {\n        this._map.addOverlay(marker);\n      }\n\n      return;\n    }\n\n    if (this._markers.length < this._minClusterSize) {\n      this._clusterMarker.hide();\n\n      return;\n    }\n\n    this._clusterMarker.setPosition(this._center);\n\n    this._clusterMarker.setText(this._markers.length);\n\n    this._clusterMarker.addEventListener && !this._clusterMarker._hasClickEvent && this._clusterMarker.addEventListener(\"click\", function (event) {\n      this._clusterMarker._hasClickEvent = true;\n      this._markers && this._map.setViewport(this.getBounds());\n    }.bind(this));\n  };\n  /**\n   * 删除该聚合。\n   * @return 无返回值。\n   */\n\n\n  Cluster.prototype.remove = function () {\n    for (var i = 0, m; m = this._markers[i]; i++) {\n      var label = this._markers[i].getLabel();\n\n      this._markers[i].getMap() && this._map.removeOverlay(this._markers[i]);\n\n      this._markers[i].setLabel(label);\n    } //清除散的标记点\n\n\n    this._map.removeOverlay(this._clusterMarker);\n\n    this._markers.length = 0;\n    delete this._markers;\n  };\n  /**\n   * 获取该聚合所包含的所有标记的最小外接矩形的范围。\n   * @return {BMap.Bounds} 计算出的范围。\n   */\n\n\n  Cluster.prototype.getBounds = function () {\n    var bounds = new BMap.Bounds(this._center, this._center);\n\n    for (var i = 0, marker; marker = this._markers[i]; i++) {\n      bounds.extend(marker.getPosition());\n    }\n\n    return bounds;\n  };\n  /**\n   * 获取该聚合的落脚点。\n   * @return {BMap.Point} 该聚合的落脚点。\n   */\n\n\n  Cluster.prototype.getCenter = function () {\n    return this._center;\n  };\n\n  return MarkerClusterer;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","BMapLib","MarkerClusterer","__commonjs_global","window","__commonjs","fn","index$1","root","TextIconOverlay","T","baidu","version","context","guid","dom","g","id","String","document","getElementById","nodeName","nodeType","G","getDocument","element","ownerDocument","lang","isString","source","Object","prototype","toString","call","_g","browser","test","navigator","userAgent","ie","documentMode","RegExp","getComputedStyle","key","doc","styles","defaultView","getPropertyValue","_styleFixer","_styleFilter","filter","value","method","i","filters","string","toCamelCase","indexOf","replace","match","charAt","toUpperCase","getStyle","style","currentStyle","fixer","get","opera","isWebkit","isGecko","isStrict","compatMode","getPosition","BUGGY_GECKO_BOX_OBJECT","getBoxObjectFor","top","left","pos","viewport","body","documentElement","parent","box","getBoundingClientRect","Math","floor","max","scrollLeft","scrollTop","clientLeft","clientTop","htmlDom","htmlBorderLeftWidth","parseInt","htmlBorderTopWidth","isNaN","offsetLeft","offsetTop","offsetParent","tagName","event","_listeners","on","type","listener","realListener","ev","lis","_eventFilter","afterFilter","realType","toLowerCase","addEventListener","attachEvent","length","_counter","_instances","isFunction","Class","dispose","property","disposed","_className","Event","target","returnValue","currentTarget","handler","__listeners","t","hashCode","removeEventListener","dispatchEvent","options","p","apply","arguments","inherits","subClass","superClass","className","proto","selfProps","clazz","Function","constructor","_IMAGE_PATH","_IMAGE_EXTENSION","position","text","BMap","e","Error","Overlay","_position","_text","_options","_styles","_setupDefaultStyles","sizes","size","push","url","Size","initialize","map","_map","_domElement","createElement","_updateCss","_updateText","_updatePosition","_bind","getPanes","markerMouseTarget","appendChild","draw","getText","setText","setPosition","equals","getStyleByText","count","index","min","cssText","_buildCssText","innerHTML","pixelPosition","pointToOverlayPixel","x","ceil","width","y","height","anchor","offset","textColor","textSize","csstext","backgroundPosition","join","me","BaseEvent","eventExtend","be","elem","srcElement","clientX","pageX","clientY","pageY","getContainer","pixel","Pixel","point","pixelToPoint","getExtendedBounds","bounds","gridSize","cutBoundsInRange","pixelNE","pointToPixel","getNorthEast","pixelSW","getSouthWest","newNE","newSW","Bounds","maxX","getRange","lng","minX","maxY","lat","minY","Point","mix","isArray","item","m","_markers","_clusters","opts","_gridSize","_maxZoom","_minClusterSize","_isAverageCenter","undefined","that","_redraw","mkrs","addMarkers","markers","len","_pushMarkerTo","_createClusters","marker","isInCluster","addMarker","mapBounds","getBounds","getCenter","extendedBounds","containsPoint","_addToClosestCluster","distance","clusterToAddTo","cluster","center","d","getDistance","isMarkerInClusterBounds","Cluster","_clearLastClusters","remove","_removeMarkersFromCluster","_removeMarkersFromMap","label","getLabel","removeOverlay","setLabel","_removeMarker","splice","removeMarker","success","removeMarkers","r","clearMarkers","getGridSize","setGridSize","getMaxZoom","setMaxZoom","maxZoom","getStyles","setStyles","getMinClusterSize","setMinClusterSize","isAverageCenter","getMap","getMarkers","getClustersCount","isReal","markerClusterer","_markerClusterer","_center","_gridBounds","_isReal","_clusterMarker","isMarkerInCluster","updateGridBounds","l","addOverlay","updateClusterMarker","getZoom","hide","_hasClickEvent","setViewport","bind","extend"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/bmaplib.markerclusterer/index.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BMapLib = global.BMapLib || {}, global.BMapLib.MarkerClusterer = factory());\n}(this, (function () { 'use strict';\n\nvar __commonjs_global = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this;\nfunction __commonjs(fn, module) { return module = { exports: {} }, fn(module, module.exports, __commonjs_global), module.exports; }\n\n\nvar index$1 = __commonjs(function (module, exports, global) {\n(function (root, factory) {  \n    if (typeof exports === 'object') {  \n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {  \n        define(factory);  \n    } else {\n        root.BMapLib = root.BMapLib || {};\n        root.BMapLib.TextIconOverlay = root.BMapLib.TextIconOverlay || factory();  \n    }  \n})(__commonjs_global, function() {\n    var T,\n    baidu = T = baidu || {version: \"1.3.8\"}; \n    var context = {};\n    //提出guid，防止在与老版本Tangram混用时\n    //在下一行错误的修改context[undefined]\n    baidu.guid = \"$BAIDU$\";\n\n    //Tangram可能被放在闭包中\n    //一些页面级别唯一的属性，需要挂载在context[baidu.guid]上\n    context[baidu.guid] = context[baidu.guid] || {};\n\n    /**         \n    * @ignore\n    * @namespace baidu.dom 操作dom的方法。\n    */\n    baidu.dom = baidu.dom || {};\n\n    \n    /**\n     * 从文档中获取指定的DOM元素\n     * @name baidu.dom.g\n     * @function\n     * @grammar baidu.dom.g(id)\n     * @param {string|HTMLElement} id 元素的id或DOM元素\n     * @shortcut g,T.G\n     * @meta standard\n     * @see baidu.dom.q\n     *             \n     * @returns {HTMLElement|null} 获取的元素，查找不到时返回null,如果参数不合法，直接返回参数\n     */\n    baidu.dom.g = function (id) {\n        if ('string' == typeof id || id instanceof String) {\n            return document.getElementById(id);\n        } else if (id && id.nodeName && (id.nodeType == 1 || id.nodeType == 9)) {\n            return id;\n        }\n        return null;\n    };\n\n    // 声明快捷方法\n    baidu.g = baidu.G = baidu.dom.g;\n\n    /**\n     * 获取目标元素所属的document对象\n     * @name baidu.dom.getDocument\n     * @function\n     * @grammar baidu.dom.getDocument(element)\n     * @param {HTMLElement|string} element 目标元素或目标元素的id\n     * @meta standard\n     * @see baidu.dom.getWindow\n     *             \n     * @returns {HTMLDocument} 目标元素所属的document对象\n     */\n    baidu.dom.getDocument = function (element) {\n        element = baidu.dom.g(element);\n        return element.nodeType == 9 ? element : element.ownerDocument || element.document;\n    };\n\n    /**\n         * @ignore\n     * @namespace baidu.lang 对语言层面的封装，包括类型判断、模块扩展、继承基类以及对象自定义事件的支持。\n    */\n    baidu.lang = baidu.lang || {};\n\n    /**\n     * 判断目标参数是否string类型或String对象\n     * @name baidu.lang.isString\n     * @function\n     * @grammar baidu.lang.isString(source)\n     * @param {Any} source 目标参数\n     * @shortcut isString\n     * @meta standard\n     * @see baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate\n     *             \n     * @returns {boolean} 类型判断结果\n     */\n    baidu.lang.isString = function (source) {\n        return '[object String]' == Object.prototype.toString.call(source);\n    };\n\n    // 声明快捷方法\n    baidu.isString = baidu.lang.isString;\n\n    /**\n     * 从文档中获取指定的DOM元素\n     * **内部方法**\n     * \n     * @param {string|HTMLElement} id 元素的id或DOM元素\n     * @meta standard\n     * @return {HTMLElement} DOM元素，如果不存在，返回null，如果参数不合法，直接返回参数\n     */\n    baidu.dom._g = function (id) {\n        if (baidu.lang.isString(id)) {\n            return document.getElementById(id);\n        }\n        return id;\n    };\n\n    // 声明快捷方法\n    baidu._g = baidu.dom._g;\n\n    /**\n     * @ignore\n     * @namespace baidu.browser 判断浏览器类型和特性的属性。\n     */\n    baidu.browser = baidu.browser || {};\n\n    if (/msie (\\d+\\.\\d)/i.test(navigator.userAgent)) {\n        //IE 8下，以documentMode为准\n        //在百度模板中，可能会有$，防止冲突，将$1 写成 \\x241\n        /**\n         * 判断是否为ie浏览器\n         * @property ie ie版本号\n         * @grammar baidu.browser.ie\n         * @meta standard\n         * @shortcut ie\n         * @see baidu.browser.firefox,baidu.browser.safari,baidu.browser.opera,baidu.browser.chrome,baidu.browser.maxthon \n         */\n        baidu.browser.ie = baidu.ie = document.documentMode || + RegExp['\\x241'];\n    }\n\n    /**\n     * 获取目标元素的computed style值。如果元素的样式值不能被浏览器计算，则会返回空字符串（IE）\n     *\n     * @author berg\n     * @name baidu.dom.getComputedStyle\n     * @function\n     * @grammar baidu.dom.getComputedStyle(element, key)\n     * @param {HTMLElement|string} element 目标元素或目标元素的id\n     * @param {string} key 要获取的样式名\n     *\n     * @see baidu.dom.getStyle\n     *             \n     * @returns {string} 目标元素的computed style值\n     */\n\n    baidu.dom.getComputedStyle = function(element, key){\n        element = baidu.dom._g(element);\n        var doc = baidu.dom.getDocument(element),\n            styles;\n        if (doc.defaultView && doc.defaultView.getComputedStyle) {\n            styles = doc.defaultView.getComputedStyle(element, null);\n            if (styles) {\n                return styles[key] || styles.getPropertyValue(key);\n            }\n        }\n        return ''; \n    };\n\n    /**\n     * 提供给setStyle与getStyle使用\n     */\n    baidu.dom._styleFixer = baidu.dom._styleFixer || {};\n\n    /**\n     * 提供给setStyle与getStyle使用\n     */\n    baidu.dom._styleFilter = baidu.dom._styleFilter || [];\n\n    /**\n     * 为获取和设置样式的过滤器\n     * @private\n     * @meta standard\n     */\n    baidu.dom._styleFilter.filter = function (key, value, method) {\n        for (var i = 0, filters = baidu.dom._styleFilter, filter; filter = filters[i]; i++) {\n            if (filter = filter[method]) {\n                value = filter(key, value);\n            }\n        }\n        return value;\n    };\n\n    /**\n         * @ignore\n     * @namespace baidu.string 操作字符串的方法。\n     */\n    baidu.string = baidu.string || {};\n\n    /**\n     * 将目标字符串进行驼峰化处理\n     * @name baidu.string.toCamelCase\n     * @function\n     * @grammar baidu.string.toCamelCase(source)\n     * @param {string} source 目标字符串\n     * @remark\n     * 支持单词以“-_”分隔\n     * @meta standard\n     *             \n     * @returns {string} 驼峰化处理后的字符串\n     */\n    baidu.string.toCamelCase = function (source) {\n        //提前判断，提高getStyle等的效率 thanks xianwei\n        if (source.indexOf('-') < 0 && source.indexOf('_') < 0) {\n            return source;\n        }\n        return source.replace(/[-_][^-_]/g, function (match) {\n            return match.charAt(1).toUpperCase();\n        });\n    };\n\n    /**\n     * 获取目标元素的样式值\n     * @name baidu.dom.getStyle\n     * @function\n     * @grammar baidu.dom.getStyle(element, key)\n     * @param {HTMLElement|string} element 目标元素或目标元素的id\n     * @param {string} key 要获取的样式名\n     * @remark\n     * \n     * 为了精简代码，本模块默认不对任何浏览器返回值进行归一化处理（如使用getStyle时，不同浏览器下可能返回rgb颜色或hex颜色），也不会修复浏览器的bug和差异性（如设置IE的float属性叫styleFloat，firefox则是cssFloat）。<br />\n     * baidu.dom._styleFixer和baidu.dom._styleFilter可以为本模块提供支持。<br />\n     * 其中_styleFilter能对颜色和px进行归一化处理，_styleFixer能对display，float，opacity，textOverflow的浏览器兼容性bug进行处理。\t\n     * @shortcut getStyle\n     * @meta standard\n     * @see baidu.dom.setStyle,baidu.dom.setStyles, baidu.dom.getComputedStyle\n     *             \n     * @returns {string} 目标元素的样式值\n     */\n    baidu.dom.getStyle = function (element, key) {\n        var dom = baidu.dom;\n\n        element = dom.g(element);\n        key = baidu.string.toCamelCase(key);\n        //computed style, then cascaded style, then explicitly set style.\n        var value = element.style[key] ||\n                    (element.currentStyle ? element.currentStyle[key] : \"\") || \n                    dom.getComputedStyle(element, key);\n\n        // 在取不到值的时候，用fixer进行修正\n        if (!value) {\n            var fixer = dom._styleFixer[key];\n            if(fixer){\n                value = fixer.get ? fixer.get(element) : baidu.dom.getStyle(element, fixer);\n            }\n        }\n\n        /* 检查结果过滤器 */\n        if (fixer = dom._styleFilter) {\n            value = fixer.filter(key, value, 'get');\n        }\n\n        return value;\n    };\n\n    // 声明快捷方法\n    baidu.getStyle = baidu.dom.getStyle;\n\n\n    if (/opera\\/(\\d+\\.\\d)/i.test(navigator.userAgent)) {\n    /**\n     * 判断是否为opera浏览器\n     * @property opera opera版本号\n     * @grammar baidu.browser.opera\n     * @meta standard\n     * @see baidu.browser.ie,baidu.browser.firefox,baidu.browser.safari,baidu.browser.chrome \n     */\n        baidu.browser.opera = + RegExp['\\x241'];\n    }\n\n    /**\n     * 判断是否为webkit内核\n     * @property isWebkit \n     * @grammar baidu.browser.isWebkit\n     * @meta standard\n     * @see baidu.browser.isGecko\n     */\n    baidu.browser.isWebkit = /webkit/i.test(navigator.userAgent);\n\n    /**\n     * 判断是否为gecko内核\n     * @property isGecko \n     * @grammar baidu.browser.isGecko\n     * @meta standard\n     * @see baidu.browser.isWebkit\n     */\n    baidu.browser.isGecko = /gecko/i.test(navigator.userAgent) && !/like gecko/i.test(navigator.userAgent);\n\n    /**\n     * 判断是否严格标准的渲染模式\n     * @property isStrict \n     * @grammar baidu.browser.isStrict\n     * @meta standard\n     */\n    baidu.browser.isStrict = document.compatMode == \"CSS1Compat\";\n\n    /**\n     * 获取目标元素相对于整个文档左上角的位置\n     * @name baidu.dom.getPosition\n     * @function\n     * @grammar baidu.dom.getPosition(element)\n     * @param {HTMLElement|string} element 目标元素或目标元素的id\n     * @meta standard\n     *             \n     * @returns {Object} 目标元素的位置，键值为top和left的Object。\n     */\n    baidu.dom.getPosition = function (element) {\n        element = baidu.dom.g(element);\n        var doc = baidu.dom.getDocument(element), \n            browser = baidu.browser,\n            getStyle = baidu.dom.getStyle,\n        // Gecko 1.9版本以下用getBoxObjectFor计算位置\n        // 但是某些情况下是有bug的\n        // 对于这些有bug的情况\n        // 使用递归查找的方式\n            BUGGY_GECKO_BOX_OBJECT = browser.isGecko > 0 && \n                                        doc.getBoxObjectFor &&\n                                        getStyle(element, 'position') == 'absolute' &&\n                                        (element.style.top === '' || element.style.left === ''),\n            pos = {\"left\":0,\"top\":0},\n            viewport = (browser.ie && !browser.isStrict) ? doc.body : doc.documentElement,\n            parent,\n            box;\n\n        if(element == viewport){\n            return pos;\n        }\n\n        if(element.getBoundingClientRect){ // IE and Gecko 1.9+\n    \n            //当HTML或者BODY有border width时, 原生的getBoundingClientRect返回值是不符合预期的\n            //考虑到通常情况下 HTML和BODY的border只会设成0px,所以忽略该问题.\n            box = element.getBoundingClientRect();\n\n            pos.left = Math.floor(box.left) + Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft);\n            pos.top  = Math.floor(box.top)  + Math.max(doc.documentElement.scrollTop,  doc.body.scrollTop);\n    \n            // IE会给HTML元素添加一个border，默认是medium（2px）\n            // 但是在IE 6 7 的怪异模式下，可以被html { border: 0; } 这条css规则覆盖\n            // 在IE7的标准模式下，border永远是2px，这个值通过clientLeft 和 clientTop取得\n            // 但是。。。在IE 6 7的怪异模式，如果用户使用css覆盖了默认的medium\n            // clientTop和clientLeft不会更新\n            pos.left -= doc.documentElement.clientLeft;\n            pos.top  -= doc.documentElement.clientTop;\n    \n            var htmlDom = doc.body,\n                // 在这里，不使用element.style.borderLeftWidth，只有computedStyle是可信的\n                htmlBorderLeftWidth = parseInt(getStyle(htmlDom, 'borderLeftWidth')),\n                htmlBorderTopWidth = parseInt(getStyle(htmlDom, 'borderTopWidth'));\n            if(browser.ie && !browser.isStrict){\n                pos.left -= isNaN(htmlBorderLeftWidth) ? 2 : htmlBorderLeftWidth;\n                pos.top  -= isNaN(htmlBorderTopWidth) ? 2 : htmlBorderTopWidth;\n            }\n        } else { \n            // safari/opera/firefox\n            parent = element;\n\n            do {\n                pos.left += parent.offsetLeft;\n                pos.top  += parent.offsetTop;\n    \n                // safari里面，如果遍历到了一个fixed的元素，后面的offset都不准了\n                if (browser.isWebkit > 0 && getStyle(parent, 'position') == 'fixed') {\n                    pos.left += doc.body.scrollLeft;\n                    pos.top  += doc.body.scrollTop;\n                    break;\n                }\n        \n                parent = parent.offsetParent;\n            } while (parent && parent != element);\n\n            // 对body offsetTop的修正\n            if(browser.opera > 0 || (browser.isWebkit > 0 && getStyle(element, 'position') == 'absolute')){\n                pos.top  -= doc.body.offsetTop;\n            }\n\n            // 计算除了body的scroll\n            parent = element.offsetParent;\n            while (parent && parent != doc.body) {\n                pos.left -= parent.scrollLeft;\n                // see https://bugs.opera.com/show_bug.cgi?id=249965\n                if (!browser.opera || parent.tagName != 'TR') {\n                    pos.top -= parent.scrollTop;\n                }\n                parent = parent.offsetParent;\n            }\n        }\n\n        return pos;\n    };\n\n    /**\n     * @ignore\n     * @namespace baidu.event 屏蔽浏览器差异性的事件封装。\n     * @property target \t事件的触发元素\n     * @property pageX \t\t鼠标事件的鼠标x坐标\n     * @property pageY \t\t鼠标事件的鼠标y坐标\n     * @property keyCode \t键盘事件的键值\n     */\n    baidu.event = baidu.event || {};\n\n    /**\n     * 事件监听器的存储表\n     * @private\n     * @meta standard\n     */\n    baidu.event._listeners = baidu.event._listeners || [];\n\n    /**\n     * 为目标元素添加事件监听器\n     * @name baidu.event.on\n     * @function\n     * @grammar baidu.event.on(element, type, listener)\n     * @param {HTMLElement|string|window} element 目标元素或目标元素id\n     * @param {string} type 事件类型\n     * @param {Function} listener 需要添加的监听器\n     * @remark\n     * \n    1. 不支持跨浏览器的鼠标滚轮事件监听器添加<br>\n    2. 改方法不为监听器灌入事件对象，以防止跨iframe事件挂载的事件对象获取失败\n\n        * @shortcut on\n        * @meta standard\n        * @see baidu.event.un\n        *             \n        * @returns {HTMLElement|window} 目标元素\n        */\n    baidu.event.on = function (element, type, listener) {\n        type = type.replace(/^on/i, '');\n        element = baidu.dom._g(element);\n\n        var realListener = function (ev) {\n                // 1. 这里不支持EventArgument,  原因是跨frame的事件挂载\n                // 2. element是为了修正this\n                listener.call(element, ev);\n            },\n            lis = baidu.event._listeners,\n            filter = baidu.event._eventFilter,\n            afterFilter,\n            realType = type;\n        type = type.toLowerCase();\n        // filter过滤\n        if(filter && filter[type]){\n            afterFilter = filter[type](element, type, realListener);\n            realType = afterFilter.type;\n            realListener = afterFilter.listener;\n        }\n\n        // 事件监听器挂载\n        if (element.addEventListener) {\n            element.addEventListener(realType, realListener, false);\n        } else if (element.attachEvent) {\n            element.attachEvent('on' + realType, realListener);\n        }\n\n        // 将监听器存储到数组中\n        lis[lis.length] = [element, type, listener, realListener, realType];\n        return element;\n    };\n\n    // 声明快捷方法\n    baidu.on = baidu.event.on;\n\n    /**\n     * 返回一个当前页面的唯一标识字符串。\n     * @name baidu.lang.guid\n     * @function\n     * @grammar baidu.lang.guid()\n     * @version 1.1.1\n     * @meta standard\n     *             \n     * @returns {String} 当前页面的唯一标识字符串\n     */\n\n    (function(){\n        //不直接使用window，可以提高3倍左右性能\n        var guid = context[baidu.guid];\n\n        baidu.lang.guid = function() {\n            return \"TANGRAM__\" + (guid._counter ++).toString(36);\n        };\n\n        guid._counter = guid._counter || 1;\n    })();\n\n    /**\n     * 所有类的实例的容器\n     * key为每个实例的guid\n     * @meta standard\n     */\n\n    context[baidu.guid]._instances = context[baidu.guid]._instances || {};\n\n    /**\n     * 判断目标参数是否为function或Function实例\n     * @name baidu.lang.isFunction\n     * @function\n     * @grammar baidu.lang.isFunction(source)\n     * @param {Any} source 目标参数\n     * @version 1.2\n     * @see baidu.lang.isString,baidu.lang.isObject,baidu.lang.isNumber,baidu.lang.isArray,baidu.lang.isElement,baidu.lang.isBoolean,baidu.lang.isDate\n     * @meta standard\n     * @returns {boolean} 类型判断结果\n     */\n    baidu.lang.isFunction = function (source) {\n        // chrome下,'function' == typeof /a/ 为true.\n        return '[object Function]' == Object.prototype.toString.call(source);\n    };\n\n    /**\n     *    \n     * @ignore\n     * @class  Tangram继承机制提供的一个基类，用户可以通过继承baidu.lang.Class来获取它的属性及方法。\n     * @name \tbaidu.lang.Class\n     * @grammar baidu.lang.Class(guid)\n     * @param \t{string}\tguid\t对象的唯一标识\n     * @meta standard\n     * @remark baidu.lang.Class和它的子类的实例均包含一个全局唯一的标识guid。guid是在构造函数中生成的，因此，继承自baidu.lang.Class的类应该直接或者间接调用它的构造函数。<br>baidu.lang.Class的构造函数中产生guid的方式可以保证guid的唯一性，及每个实例都有一个全局唯一的guid。\n     * @meta standard\n     * @see baidu.lang.inherits,baidu.lang.Event\n     */\n    baidu.lang.Class = function(guid) {\n        this.guid = guid || baidu.lang.guid();\n        context[baidu.guid]._instances[this.guid] = this;\n    };\n    context[baidu.guid]._instances = context[baidu.guid]._instances || {};\n\n    /**\n     * 释放对象所持有的资源，主要是自定义事件。\n     * @name dispose\n     * @grammar obj.dispose()\n     */\n    baidu.lang.Class.prototype.dispose = function(){\n        delete context[baidu.guid]._instances[this.guid];\n\n        for(var property in this){\n            if (!baidu.lang.isFunction(this[property])) {\n                delete this[property];\n            }\n        }\n        this.disposed = true;\n    };\n\n    /**\n     * 重载了默认的toString方法，使得返回信息更加准确一些。\n     * @return {string} 对象的String表示形式\n     */\n    baidu.lang.Class.prototype.toString = function(){\n        return \"[object \" + (this._className || \"Object\" ) + \"]\";\n    };\n\n    /**\n     * @ignore\n     * @class   自定义的事件对象。\n     * @name \tbaidu.lang.Event\n     * @grammar baidu.lang.Event(type[, target])\n     * @param \t{string} type\t 事件类型名称。为了方便区分事件和一个普通的方法，事件类型名称必须以\"on\"(小写)开头。\n     * @param \t{Object} [target]触发事件的对象\n     * @meta standard\n     * @remark 引入该模块，会自动为Class引入3个事件扩展方法：addEventListener、removeEventListener和dispatchEvent。\n     * @meta standard\n     * @see baidu.lang.Class\n     */\n    baidu.lang.Event = function (type, target) {\n        this.type = type;\n        this.returnValue = true;\n        this.target = target || null;\n        this.currentTarget = null;\n    };\n\n    /**\n     * 注册对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n     * @grammar obj.addEventListener(type, handler[, key])\n     * @param \t{string}   type         自定义事件的名称\n     * @param \t{Function} handler      自定义事件被触发时应该调用的回调函数\n     * @param \t{string}   [key]\t\t为事件监听函数指定的名称，可在移除时使用。如果不提供，方法会默认为它生成一个全局唯一的key。\n     * @remark \t事件类型区分大小写。如果自定义事件名称不是以小写\"on\"开头，该方法会给它加上\"on\"再进行判断，即\"click\"和\"onclick\"会被认为是同一种事件。 \n     */\n    baidu.lang.Class.prototype.addEventListener = function (type, handler, key) {\n        if (!baidu.lang.isFunction(handler)) {\n            return;\n        }\n\n        !this.__listeners && (this.__listeners = {});\n\n        var t = this.__listeners, id;\n        if (typeof key == \"string\" && key) {\n            if (/[^\\w\\-]/.test(key)) {\n                throw(\"nonstandard key:\" + key);\n            } else {\n                handler.hashCode = key; \n                id = key;\n            }\n        }\n        type.indexOf(\"on\") != 0 && (type = \"on\" + type);\n\n        typeof t[type] != \"object\" && (t[type] = {});\n        id = id || baidu.lang.guid();\n        handler.hashCode = id;\n        t[type][id] = handler;\n    };\n\n    /**\n     * 移除对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n     * @grammar obj.removeEventListener(type, handler)\n     * @param {string}   type     事件类型\n     * @param {Function|string} handler  要移除的事件监听函数或者监听函数的key\n     * @remark \t如果第二个参数handler没有被绑定到对应的自定义事件中，什么也不做。\n     */\n    baidu.lang.Class.prototype.removeEventListener = function (type, handler) {\n        if (typeof handler != \"undefined\") {\n            if ( (baidu.lang.isFunction(handler) && ! (handler = handler.hashCode))\n                || (! baidu.lang.isString(handler))\n            ){\n                return;\n            }\n        }\n\n        !this.__listeners && (this.__listeners = {});\n\n        type.indexOf(\"on\") != 0 && (type = \"on\" + type);\n\n        var t = this.__listeners;\n        if (!t[type]) {\n            return;\n        }\n        if (typeof handler != \"undefined\") {\n            t[type][handler] && delete t[type][handler];\n        } else {\n            for(var guid in t[type]){\n                delete t[type][guid];\n            }\n        }\n    };\n\n    /**\n     * 派发自定义事件，使得绑定到自定义事件上面的函数都会被执行。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n     * @grammar obj.dispatchEvent(event, options)\n     * @param {baidu.lang.Event|String} event \tEvent对象，或事件名称(1.1.1起支持)\n     * @param {Object} \t\t\t\t\toptions 扩展参数,所含属性键值会扩展到Event对象上(1.2起支持)\n     * @remark 处理会调用通过addEventListenr绑定的自定义事件回调函数之外，还会调用直接绑定到对象上面的自定义事件。例如：<br>\n    myobj.onMyEvent = function(){}<br>\n    myobj.addEventListener(\"onMyEvent\", function(){});\n        */\n    baidu.lang.Class.prototype.dispatchEvent = function (event, options) {\n        if (baidu.lang.isString(event)) {\n            event = new baidu.lang.Event(event);\n        }\n        !this.__listeners && (this.__listeners = {});\n\n        // 20100603 添加本方法的第二个参数，将 options extend到event中去传递\n        options = options || {};\n        for (var i in options) {\n            event[i] = options[i];\n        }\n\n        var i, t = this.__listeners, p = event.type;\n        event.target = event.target || this;\n        event.currentTarget = this;\n\n        p.indexOf(\"on\") != 0 && (p = \"on\" + p);\n\n        baidu.lang.isFunction(this[p]) && this[p].apply(this, arguments);\n\n        if (typeof t[p] == \"object\") {\n            for (i in t[p]) {\n                t[p][i].apply(this, arguments);\n            }\n        }\n        return event.returnValue;\n    };\n\n\n    baidu.lang.inherits = function (subClass, superClass, className) {\n        var key, proto,\n            selfProps = subClass.prototype,\n            clazz = new Function();\n\n        clazz.prototype = superClass.prototype;\n        proto = subClass.prototype = new clazz();\n        for (key in selfProps) {\n            proto[key] = selfProps[key];\n        }\n        subClass.prototype.constructor = subClass;\n        subClass.superClass = superClass.prototype;\n\n        // 类名标识，兼容Class的toString，基本没用\n        if (\"string\" == typeof className) {\n            proto._className = className;\n        }\n    };\n    // 声明快捷方法\n    baidu.inherits = baidu.lang.inherits;\n\n\n    /**\n    \n     * 图片的路径\n\n     * @private\n     * @type {String}\n    \n     */\n    var _IMAGE_PATH = 'http://api.map.baidu.com/library/TextIconOverlay/1.2/src/images/m';\n\n    /**\n    \n     * 图片的后缀名\n\n      * @private\n     * @type {String}\n    \n     */\n    var _IMAGE_EXTENSION  = 'png';\n\n    /**\n     *@exports TextIconOverlay as BMapLib.TextIconOverlay\n     */\n    \n    /**\n    * TextIconOverlay\n    * @class 此类表示地图上的一个覆盖物，该覆盖物由文字和图标组成，从Overlay继承。文字通常是数字（0-9）或字母（A-Z ），而文字与图标之间有一定的映射关系。\n    *该覆盖物适用于以下类似的场景：需要在地图上添加一系列覆盖物，这些覆盖物之间用不同的图标和文字来区分，文字可能表示了该覆盖物的某一属性值，根据该文字和一定的映射关系，自动匹配相应颜色和大小的图标。\n    *\n    *@constructor\n    *@param {Point} position 表示一个经纬度坐标位置。\n    *@param {String} text 表示该覆盖物显示的文字信息。\n    *@param {Json Object} options 可选参数，可选项包括：<br />\n    *\"<b>styles</b>\":{Array<IconStyle>} 一组图标风格。单个图表风格包括以下几个属性：<br />\n    *   url\t{String}\t 图片的url地址。(必选)<br />\n    *   size {Size}\t图片的大小。（必选）<br />\n    *   anchor {Size} 图标定位在地图上的位置相对于图标左上角的偏移值，默认偏移值为图标的中心位置。（可选）<br />\n    *   offset {Size} 图片相对于可视区域的偏移值，此功能的作用等同于CSS中的background-position属性。（可选）<br />\n    *   textSize {Number} 文字的大小。（可选，默认10）<br />\n    *   textColor {String} 文字的颜色。（可选，默认black）<br />\n    */\n    var TextIconOverlay = function(position, text, options){\n        try {\n            BMap;\n        } catch (e) {\n            throw Error('Baidu Map JS API is not ready yet!');\n        }\n        T.lang.inherits(TextIconOverlay, BMap.Overlay, \"TextIconOverlay\");\n        this._position = position;\n        this._text = text;\n        this._options = options || {};\n        this._styles = this._options['styles'] || [];\n        (!this._styles.length) && this._setupDefaultStyles();                  \n    };\n\n\n    TextIconOverlay.prototype._setupDefaultStyles = function(){  \n        var sizes = [53, 56, 66, 78, 90];\n        for(var i = 0, size; size = sizes[i]; i++){\n            this._styles.push({\n                url:_IMAGE_PATH + i + '.' + _IMAGE_EXTENSION,\n                size: new BMap.Size(size, size)\n            });\n        }//for循环的简洁写法\n    };\n\n    /**\n    *继承Overlay的intialize方法，自定义覆盖物时必须。\n    *@param {Map} map BMap.Map的实例化对象。\n    *@return {HTMLElement} 返回覆盖物对应的HTML元素。\n    */\n    TextIconOverlay.prototype.initialize = function(map){\n        this._map = map;\n    \n        this._domElement = document.createElement('div');     \n        this._updateCss();    \n        this._updateText();\n        this._updatePosition(); \n        \n        this._bind();\n\n        this._map.getPanes().markerMouseTarget.appendChild(this._domElement);\n        return this._domElement;   \n    };\n\n    /**\n    *继承Overlay的draw方法，自定义覆盖物时必须。\n    *@return 无返回值。\n    */\n    TextIconOverlay.prototype.draw = function(){\n        this._map && this._updatePosition();\n    };\n    \n    /**\n    *获取该覆盖物上的文字。\n    *@return {String} 该覆盖物上的文字。\n    */\n    TextIconOverlay.prototype.getText = function(){\n        return this._text;\n    };\n\n    /**\n    *设置该覆盖物上的文字。\n    *@param {String} text 要设置的文字，通常是字母A-Z或数字0-9。\n    *@return 无返回值。\n    */\n    TextIconOverlay.prototype.setText = function(text){\n        if(text && (!this._text || (this._text.toString() != text.toString()))){\n            this._text = text;\n            this._updateText();\n            this._updateCss();\n            this._updatePosition(); \n        }\n    };\n\n    /**\n    *获取该覆盖物的位置。\n    *@return {Point} 该覆盖物的经纬度坐标。\n    */\n    TextIconOverlay.prototype.getPosition = function () {\n        return this._position;\n    };\n   \n    /**\n    *设置该覆盖物的位置。\n    *@param {Point}  position 要设置的经纬度坐标。\n    *@return 无返回值。\n    */\n    TextIconOverlay.prototype.setPosition = function (position) {\n        if(position && (!this._position || !this._position.equals(position))){\n            this._position = position;  \n            this._updatePosition();\n        }\n    };\n\n    /**\n    *由文字信息获取风格数组的对应索引值。\n    *内部默认的对应函数为文字转换为数字除以10的结果，比如文字8返回索引0，文字25返回索引2.\n    *如果需要自定义映射关系，请覆盖该函数。\n    *@param {String} text  文字。\n    *@param {Array<IconStyle>}  styles 一组图标风格。\n    *@return {Number} 对应的索引值。\n    */\n    TextIconOverlay.prototype.getStyleByText = function(text, styles){\n        var count = parseInt(text);\n        var index = parseInt(count / 10);\n        index = Math.max(0, index);\n        index = Math.min(index, styles.length - 1);\n        return styles[index]; \n    };\n\n    /**\n    *更新相应的CSS。\n    *@return 无返回值。\n    */\n    TextIconOverlay.prototype._updateCss = function(){\n        if (!this._domElement) {\n            return\n        }\n        var style = this.getStyleByText(this._text, this._styles);\n        this._domElement.style.cssText = this._buildCssText(style);\n    };\n\n    /**\n    *更新覆盖物的显示文字。\n    *@return 无返回值。\n    */\n    TextIconOverlay.prototype._updateText = function(){\n        if (this._domElement) {\n            this._domElement.innerHTML = this._text;\n        }\n    };\n\n    /**\n    *调整覆盖物在地图上的位置更新覆盖物的显示文字。\n    *@return 无返回值。\n    */\n    TextIconOverlay.prototype._updatePosition = function(){\n        if (this._domElement && this._position) {\n            var style = this._domElement.style;\n            var pixelPosition= this._map.pointToOverlayPixel(this._position); \n            pixelPosition.x -= Math.ceil(parseInt(style.width) / 2);\n            pixelPosition.y -= Math.ceil(parseInt(style.height) / 2);       \n            style.left = pixelPosition.x + \"px\";\n            style.top = pixelPosition.y + \"px\";\n        }\n    };\n    \n    /**\n    * 为该覆盖物的HTML元素构建CSS\n    * @param {IconStyle}  一个图标的风格。\n    * @return {String} 构建完成的CSSTEXT。\n    */\n    TextIconOverlay.prototype._buildCssText = function(style) {    \n        //根据style来确定一些默认值\n        var url = style['url'];\n        var size = style['size'];\n        var anchor = style['anchor'];\n        var offset = style['offset'];\n        var textColor = style['textColor'] || 'black';\n        var textSize = style['textSize'] || 10;\n\n        var csstext = [];\n        if (T.browser[\"ie\"] < 7) {\n            csstext.push('filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(' +\n                'sizingMethod=scale,src=\"' + url + '\");');\n        } else {\n            csstext.push('background-image:url(' + url + ');');\n            var backgroundPosition = '0 0';\n            (offset instanceof BMap.Size) && (backgroundPosition = offset.width + 'px' + ' ' + offset.height + 'px');          \n            csstext.push('background-position:' + backgroundPosition + ';');\n        }\n\n        if (size instanceof BMap.Size){\n            if (anchor instanceof BMap.Size) {\n                if (anchor.height > 0 && anchor.height < size.height) {\n                      csstext.push('height:' + (size.height - anchor.height) + 'px; padding-top:' + anchor.height + 'px;');\n                }\n                if(anchor.width > 0 && anchor.width < size.width){\n                    csstext.push('width:' + (size.width - anchor.width) + 'px; padding-left:' + anchor.width + 'px;');                \n                }\n            } else {\n                csstext.push('height:' + size.height + 'px; line-height:' + size.height + 'px;');\n                csstext.push('width:' + size.width + 'px; text-align:center;');\n            }\n        }\n   \n        csstext.push('cursor:pointer; color:' + textColor + '; position:absolute; font-size:' +\n            textSize + 'px; font-family:Arial,sans-serif; font-weight:bold');\n        return csstext.join('');\n    };\n\n\n    /**\n    \n     * 当鼠标点击该覆盖物时会触发该事件\n\n     * @name TextIconOverlay#click\n\n     * @event\n\n     * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：\n    \n     * <br />\"<b>type</b> : {String} 事件类型\n\n     * <br />\"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标\n\n     *\n\n     */\n\n    /**\n\n     * 当鼠标进入该覆盖物区域时会触发该事件\n\n     * @name TextIconOverlay#mouseover\n\n     * @event\n     * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：\n    \n     * <br />\"<b>type</b> : {String} 事件类型\n\n     * <br />\"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标\n\n     * <br />\"<b>point</b> : {BMap.Point} 最新添加上的节点BMap.Point对象\n\n     * <br />\"<b>pixel</b>：{BMap.pixel} 最新添加上的节点BMap.Pixel对象\n\n     *\n\n     * @example <b>参考示例：</b><br />\n\n     * myTextIconOverlay.addEventListener(\"mouseover\", function(e) {  alert(e.point);  });\n\n     */\n\n    /**\n\n     * 当鼠标离开该覆盖物区域时会触发该事件\n\n     * @name TextIconOverlay#mouseout\n\n     * @event\n\n     * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：\n\n     * <br />\"<b>type</b> : {String} 事件类型\n\n     * <br />\"<b>target</b>：{BMapLib.TextIconOverlay} 事件目标\n\n     * <br />\"<b>point</b> : {BMap.Point} 最新添加上的节点BMap.Point对象\n\n     * <br />\"<b>pixel</b>：{BMap.pixel} 最新添加上的节点BMap.Pixel对象\n\n     *\n\n     * @example <b>参考示例：</b><br />\n\n     * myTextIconOverlay.addEventListener(\"mouseout\", function(e) {  alert(e.point);  });\n\n     */\n\n\n    /**\n    * 为该覆盖物绑定一系列事件\n    * 当前支持click mouseover mouseout\n    * @return 无返回值。\n    */\n    TextIconOverlay.prototype._bind = function(){\n        if (!this._domElement){\n            return;\n        }\n\n        var me = this;\n        var map = this._map;\n\n        var BaseEvent = T.lang.Event;\n        function eventExtend(e, be){\n            var elem = e.srcElement || e.target;\n            var x = e.clientX || e.pageX;\n            var y = e.clientY || e.pageY;\n            if (e && be && x && y && elem){\n                var offset = T.dom.getPosition(map.getContainer());\n                be.pixel = new BMap.Pixel(x - offset.left, y - offset.top);\n                be.point = map.pixelToPoint(be.pixel);\n            }\n            return be;\n        }//给事件参数增加pixel和point两个值\n\n        T.event.on(this._domElement,\"mouseover\", function(e){\n            me.dispatchEvent(eventExtend(e, new BaseEvent(\"onmouseover\")));\n        });\n        T.event.on(this._domElement,\"mouseout\", function(e){\n            me.dispatchEvent(eventExtend(e, new BaseEvent(\"onmouseout\")));\n        });\n        T.event.on(this._domElement,\"click\", function(e){\n            me.dispatchEvent(eventExtend(e, new BaseEvent(\"onclick\")));\n        });\n    };\n\n    return TextIconOverlay;\n});\n});\n\nvar TextIconOverlay = (index$1 && typeof index$1 === 'object' && 'default' in index$1 ? index$1['default'] : index$1);\n\n/**\n * 获取一个扩展的视图范围，把上下左右都扩大一样的像素值。\n * @param {Map} map BMap.Map的实例化对象\n * @param {BMap.Bounds} bounds BMap.Bounds的实例化对象\n * @param {Number} gridSize 要扩大的像素值\n *\n * @return {BMap.Bounds} 返回扩大后的视图范围。\n */\nvar getExtendedBounds = function(map, bounds, gridSize){\n    bounds = cutBoundsInRange(bounds);\n    var pixelNE = map.pointToPixel(bounds.getNorthEast());\n    var pixelSW = map.pointToPixel(bounds.getSouthWest()); \n    pixelNE.x += gridSize;\n    pixelNE.y -= gridSize;\n    pixelSW.x -= gridSize;\n    pixelSW.y += gridSize;\n    var newNE = map.pixelToPoint(pixelNE);\n    var newSW = map.pixelToPoint(pixelSW);\n    return new BMap.Bounds(newSW, newNE);\n};\n\n/**\n * 按照百度地图支持的世界范围对bounds进行边界处理\n * @param {BMap.Bounds} bounds BMap.Bounds的实例化对象\n *\n * @return {BMap.Bounds} 返回不越界的视图范围\n */\nvar cutBoundsInRange = function (bounds) {\n    var maxX = getRange(bounds.getNorthEast().lng, -180, 180);\n    var minX = getRange(bounds.getSouthWest().lng, -180, 180);\n    var maxY = getRange(bounds.getNorthEast().lat, -74, 74);\n    var minY = getRange(bounds.getSouthWest().lat, -74, 74);\n    return new BMap.Bounds(new BMap.Point(minX, minY), new BMap.Point(maxX, maxY));\n}; \n\n/**\n * 对单个值进行边界处理。\n * @param {Number} i 要处理的数值\n * @param {Number} min 下边界值\n * @param {Number} max 上边界值\n * \n * @return {Number} 返回不越界的数值\n */\nvar getRange = function (i, mix, max) {\n    mix && (i = Math.max(i, mix));\n    max && (i = Math.min(i, max));\n    return i;\n};\n\n/**\n * 判断给定的对象是否为数组\n * @param {Object} source 要测试的对象\n *\n * @return {Boolean} 如果是数组返回true，否则返回false\n */\nvar isArray = function (source) {\n    return '[object Array]' === Object.prototype.toString.call(source);\n};\n\n/**\n * 返回item在source中的索引位置\n * @param {Object} item 要测试的对象\n * @param {Array} source 数组\n *\n * @return {Number} 如果在数组内，返回索引，否则返回-1\n */\nvar indexOf = function(item, source){\n    var index = -1;\n    if(isArray(source)){\n        if (source.indexOf) {\n            index = source.indexOf(item);\n        } else {\n            for (var i = 0, m; m = source[i]; i++) {\n                if (m === item) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n    }        \n    return index;\n};\n\n/**\n *@exports MarkerClusterer as BMapLib.MarkerClusterer\n */\n\n    /**\n     * MarkerClusterer\n     * @class 用来解决加载大量点要素到地图上产生覆盖现象的问题，并提高性能\n     * @constructor\n     * @param {Map} map 地图的一个实例。\n     * @param {Json Object} options 可选参数，可选项包括：<br />\n     *    markers {Array<Marker>} 要聚合的标记数组<br />\n     *    girdSize {Number} 聚合计算时网格的像素大小，默认60<br />\n     *    maxZoom {Number} 最大的聚合级别，大于该级别就不进行相应的聚合<br />\n     *    minClusterSize {Number} 最小的聚合数量，小于该数量的不能成为一个聚合，默认为2<br />\n     *    isAverangeCenter {Boolean} 聚合点的落脚位置是否是所有聚合在内点的平均值，默认为否，落脚在聚合内的第一个点<br />\n     *    styles {Array<IconStyle>} 自定义聚合后的图标风格，请参考TextIconOverlay类<br />\n     */\nvar MarkerClusterer  = function(map, options){\n    try {\n        BMap;\n    } catch (e) {\n        throw Error('Baidu Map JS API is not ready yet!');\n    }\n    if (!map){\n        return;\n    }\n    this._map = map;\n    this._markers = [];\n    this._clusters = [];\n    \n    var opts = options || {};\n    this._gridSize = opts[\"gridSize\"] || 60;\n    this._maxZoom = opts[\"maxZoom\"] || 18;\n    this._minClusterSize = opts[\"minClusterSize\"] || 2;           \n    this._isAverageCenter = false;\n    if (opts['isAverageCenter'] != undefined) {\n        this._isAverageCenter = opts['isAverageCenter'];\n    }    \n    this._styles = opts[\"styles\"] || [];\n\n    var that = this;\n    this._map.addEventListener(\"zoomend\",function(){\n        that._redraw();     \n    });\n\n    this._map.addEventListener(\"moveend\",function(){\n        that._redraw();     \n    });\n\n    var mkrs = opts[\"markers\"];\n    isArray(mkrs) && this.addMarkers(mkrs);\n};\n\n/**\n * 添加要聚合的标记数组。\n * @param {Array<Marker>} markers 要聚合的标记数组\n *\n * @return 无返回值。\n */\nMarkerClusterer.prototype.addMarkers = function(markers){\n    if (!markers.length) {\n        return\n    }\n    for(var i = 0, len = markers.length; i <len ; i++){\n        this._pushMarkerTo(markers[i]);\n    }\n    this._createClusters();   \n};\n\n/**\n * 把一个标记添加到要聚合的标记数组中\n * @param {BMap.Marker} marker 要添加的标记\n *\n * @return 无返回值。\n */\nMarkerClusterer.prototype._pushMarkerTo = function(marker){\n    var index = indexOf(marker, this._markers);\n    if(index === -1){\n        marker.isInCluster = false;\n        this._markers.push(marker);//Marker拖放后enableDragging不做变化，忽略\n    }\n};\n\n/**\n * 添加一个聚合的标记。\n * @param {BMap.Marker} marker 要聚合的单个标记。\n * @return 无返回值。\n */\nMarkerClusterer.prototype.addMarker = function(marker) {\n    this._pushMarkerTo(marker);\n    this._createClusters();\n};\n\n/**\n * 根据所给定的标记，创建聚合点\n * @return 无返回值\n */\nMarkerClusterer.prototype._createClusters = function(){\n    var mapBounds = this._map.getBounds();\n    if (!mapBounds.getCenter()) {\n        return\n    }\n    var extendedBounds = getExtendedBounds(this._map, mapBounds, this._gridSize);\n    for(var i = 0, marker; marker = this._markers[i]; i++){\n        if(!marker.isInCluster && extendedBounds.containsPoint(marker.getPosition()) ){ \n            this._addToClosestCluster(marker);\n        }\n    }   \n};\n\n/**\n * 根据标记的位置，把它添加到最近的聚合中\n * @param {BMap.Marker} marker 要进行聚合的单个标记\n *\n * @return 无返回值。\n */\nMarkerClusterer.prototype._addToClosestCluster = function (marker){\n    var distance = 4000000;\n    var clusterToAddTo = null;\n    var position = marker.getPosition();\n    for(var i = 0, cluster; cluster = this._clusters[i]; i++){\n        var center = cluster.getCenter();\n        if(center){\n            var d = this._map.getDistance(center, marker.getPosition());\n            if(d < distance){\n                distance = d;\n                clusterToAddTo = cluster;\n            }\n        }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)){\n        clusterToAddTo.addMarker(marker);\n    } else {\n        var cluster = new Cluster(this);\n        cluster.addMarker(marker);            \n        this._clusters.push(cluster);\n    }    \n};\n\n/**\n * 清除上一次的聚合的结果\n * @return 无返回值。\n */\nMarkerClusterer.prototype._clearLastClusters = function(){\n    for(var i = 0, cluster; cluster = this._clusters[i]; i++){            \n        cluster.remove();\n    }\n    this._clusters = [];//置空Cluster数组\n    this._removeMarkersFromCluster();//把Marker的cluster标记设为false\n};\n\n/**\n * 清除某个聚合中的所有标记\n * @return 无返回值\n */\nMarkerClusterer.prototype._removeMarkersFromCluster = function(){\n    for(var i = 0, marker; marker = this._markers[i]; i++){\n        marker.isInCluster = false;\n    }\n};\n\n/**\n * 把所有的标记从地图上清除\n * @return 无返回值\n */\nMarkerClusterer.prototype._removeMarkersFromMap = function(){\n    for(var i = 0, marker; marker = this._markers[i]; i++){\n        marker.isInCluster = false;\n        var label = marker.getLabel();\n        this._map.removeOverlay(marker);\n        marker.setLabel(label);\n    }\n};\n\n/**\n * 删除单个标记\n * @param {BMap.Marker} marker 需要被删除的marker\n *\n * @return {Boolean} 删除成功返回true，否则返回false\n */\nMarkerClusterer.prototype._removeMarker = function(marker) {\n    var index = indexOf(marker, this._markers);\n    if (index === -1) {\n        return false;\n    }\n    this._map.removeOverlay(marker);\n    this._markers.splice(index, 1);\n    return true;\n};\n\n/**\n * 删除单个标记\n * @param {BMap.Marker} marker 需要被删除的marker\n *\n * @return {Boolean} 删除成功返回true，否则返回false\n */\nMarkerClusterer.prototype.removeMarker = function(marker) {\n    var success = this._removeMarker(marker);\n    if (success) {\n        this._clearLastClusters();\n        this._createClusters();\n    }\n    return success;\n};\n\n/**\n * 删除一组标记\n * @param {Array<BMap.Marker>} markers 需要被删除的marker数组\n *\n * @return {Boolean} 删除成功返回true，否则返回false\n */\nMarkerClusterer.prototype.removeMarkers = function(markers) {\n    var success = false;\n    for (var i = 0; i < markers.length; i++) {\n        var r = this._removeMarker(markers[i]);\n        success = success || r; \n    }\n\n    if (success) {\n        this._clearLastClusters();\n        this._createClusters();\n    }\n    return success;\n};\n\n/**\n * 从地图上彻底清除所有的标记\n * @return 无返回值\n */\nMarkerClusterer.prototype.clearMarkers = function() {\n    this._clearLastClusters();\n    this._removeMarkersFromMap();\n    this._markers = [];\n};\n\n/**\n * 重新生成，比如改变了属性等\n * @return 无返回值\n */\nMarkerClusterer.prototype._redraw = function () {\n    this._clearLastClusters();\n    this._createClusters();\n};\n\n/**\n * 获取网格大小\n * @return {Number} 网格大小\n */\nMarkerClusterer.prototype.getGridSize = function() {\n    return this._gridSize;\n};\n\n/**\n * 设置网格大小\n * @param {Number} size 网格大小\n * @return 无返回值\n */\nMarkerClusterer.prototype.setGridSize = function(size) {\n    this._gridSize = size;\n    this._redraw();\n};\n\n/**\n * 获取聚合的最大缩放级别。\n * @return {Number} 聚合的最大缩放级别。\n */\nMarkerClusterer.prototype.getMaxZoom = function() {\n    return this._maxZoom;       \n};\n\n/**\n * 设置聚合的最大缩放级别\n * @param {Number} maxZoom 聚合的最大缩放级别\n * @return 无返回值\n */\nMarkerClusterer.prototype.setMaxZoom = function(maxZoom) {\n    this._maxZoom = maxZoom;\n    this._redraw();\n};\n\n/**\n * 获取聚合的样式风格集合\n * @return {Array<IconStyle>} 聚合的样式风格集合\n */\nMarkerClusterer.prototype.getStyles = function() {\n    return this._styles;\n};\n\n/**\n * 设置聚合的样式风格集合\n * @param {Array<IconStyle>} styles 样式风格数组\n * @return 无返回值\n */\nMarkerClusterer.prototype.setStyles = function(styles) {\n    this._styles = styles;\n    this._redraw();\n};\n\n/**\n * 获取单个聚合的最小数量。\n * @return {Number} 单个聚合的最小数量。\n */\nMarkerClusterer.prototype.getMinClusterSize = function() {\n    return this._minClusterSize;\n};\n\n/**\n * 设置单个聚合的最小数量。\n * @param {Number} size 单个聚合的最小数量。\n * @return 无返回值。\n */\nMarkerClusterer.prototype.setMinClusterSize = function(size) {\n    this._minClusterSize = size;\n    this._redraw();\n};\n\n/**\n * 获取单个聚合的落脚点是否是聚合内所有标记的平均中心。\n * @return {Boolean} true或false。\n */\nMarkerClusterer.prototype.isAverageCenter = function() {\n    return this._isAverageCenter;\n};\n\n/**\n * 获取聚合的Map实例。\n * @return {Map} Map的示例。\n */\nMarkerClusterer.prototype.getMap = function() {\n    return this._map;\n};\n\n/**\n * 获取所有的标记数组。\n * @return {Array<Marker>} 标记数组。\n */\nMarkerClusterer.prototype.getMarkers = function() {\n    return this._markers;\n};\n\n/**\n * 获取聚合的总数量。\n * @return {Number} 聚合的总数量。\n */\nMarkerClusterer.prototype.getClustersCount = function() {\n    var count = 0;\n    for(var i = 0, cluster; cluster = this._clusters[i]; i++){\n        cluster.isReal() && count++;     \n    }\n    return count;\n};\n\n/**\n * @ignore\n * Cluster\n * @class 表示一个聚合对象，该聚合，包含有N个标记，这N个标记组成的范围，并有予以显示在Map上的TextIconOverlay等。\n * @constructor\n * @param {MarkerClusterer} markerClusterer 一个标记聚合器示例。\n */\nfunction Cluster(markerClusterer){\n    this._markerClusterer = markerClusterer;\n    this._map = markerClusterer.getMap();\n    this._minClusterSize = markerClusterer.getMinClusterSize();\n    this._isAverageCenter = markerClusterer.isAverageCenter();\n    this._center = null;//落脚位置\n    this._markers = [];//这个Cluster中所包含的markers\n    this._gridBounds = null;//以中心点为准，向四边扩大gridSize个像素的范围，也即网格范围\n    this._isReal = false; //真的是个聚合\n\n    this._clusterMarker = new TextIconOverlay(this._center, this._markers.length, {\"styles\":this._markerClusterer.getStyles()});\n    //this._map.addOverlay(this._clusterMarker);\n}\n\n/**\n * 向该聚合添加一个标记。\n * @param {Marker} marker 要添加的标记。\n * @return 无返回值。\n */\nCluster.prototype.addMarker = function(marker){\n    if(this.isMarkerInCluster(marker)){\n        return false;\n    }//也可用marker.isInCluster判断,外面判断OK，这里基本不会命中\n\n    if (!this._center){\n        this._center = marker.getPosition();\n        this.updateGridBounds();//\n    } else {\n        if(this._isAverageCenter){\n            var l = this._markers.length + 1;\n            var lat = (this._center.lat * (l - 1) + marker.getPosition().lat) / l;\n            var lng = (this._center.lng * (l - 1) + marker.getPosition().lng) / l;\n            this._center = new BMap.Point(lng, lat);\n            this.updateGridBounds();\n        }//计算新的Center\n    }\n\n    marker.isInCluster = true;\n    this._markers.push(marker);\n\n    var len = this._markers.length;\n    if(len < this._minClusterSize ){     \n        this._map.addOverlay(marker);\n        //this.updateClusterMarker();\n        return true;\n    } else if (len === this._minClusterSize) {\n        for (var i = 0; i < len; i++) {\n            var label = this._markers[i].getLabel();\n            this._markers[i].getMap() && this._map.removeOverlay(this._markers[i]);\n            this._markers[i].setLabel(label);\n        }\n        \n    } \n    this._map.addOverlay(this._clusterMarker);\n    this._isReal = true;\n    this.updateClusterMarker();\n    return true;\n};\n\n/**\n * 判断一个标记是否在该聚合中。\n * @param {Marker} marker 要判断的标记。\n * @return {Boolean} true或false。\n */\nCluster.prototype.isMarkerInCluster= function(marker){\n    if (this._markers.indexOf) {\n        return this._markers.indexOf(marker) != -1;\n    } else {\n        for (var i = 0, m; m = this._markers[i]; i++) {\n            if (m === marker) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n\n/**\n * 判断一个标记是否在该聚合网格范围中。\n * @param {Marker} marker 要判断的标记。\n * @return {Boolean} true或false。\n */\nCluster.prototype.isMarkerInClusterBounds = function(marker) {\n    return this._gridBounds.containsPoint(marker.getPosition());\n};\n\nCluster.prototype.isReal = function(marker) {\n    return this._isReal;\n};\n\n/**\n * 更新该聚合的网格范围。\n * @return 无返回值。\n */\nCluster.prototype.updateGridBounds = function() {\n    var bounds = new BMap.Bounds(this._center, this._center);\n    this._gridBounds = getExtendedBounds(this._map, bounds, this._markerClusterer.getGridSize());\n};\n\n/**\n * 更新该聚合的显示样式，也即TextIconOverlay。\n * @return 无返回值。\n */\nCluster.prototype.updateClusterMarker = function () {\n    if (this._map.getZoom() > this._markerClusterer.getMaxZoom()) {\n        this._clusterMarker && this._map.removeOverlay(this._clusterMarker);\n        for (var i = 0, marker; marker = this._markers[i]; i++) {\n            this._map.addOverlay(marker);\n        }\n        return;\n    }\n\n    if (this._markers.length < this._minClusterSize) {\n        this._clusterMarker.hide();\n        return;\n    }\n\n    this._clusterMarker.setPosition(this._center);\n    \n    this._clusterMarker.setText(this._markers.length);\n\n    this._clusterMarker.addEventListener && !this._clusterMarker._hasClickEvent && this._clusterMarker.addEventListener(\"click\", function(event){\n        this._clusterMarker._hasClickEvent = true;\n        this._markers && this._map.setViewport(this.getBounds());\n    }.bind(this));\n};\n\n/**\n * 删除该聚合。\n * @return 无返回值。\n */\nCluster.prototype.remove = function(){\n    for (var i = 0, m; m = this._markers[i]; i++) {\n        var label = this._markers[i].getLabel();\n        this._markers[i].getMap() && this._map.removeOverlay(this._markers[i]);\n        this._markers[i].setLabel(label);\n    }//清除散的标记点\n    this._map.removeOverlay(this._clusterMarker);\n    this._markers.length = 0;\n    delete this._markers;\n};\n\n/**\n * 获取该聚合所包含的所有标记的最小外接矩形的范围。\n * @return {BMap.Bounds} 计算出的范围。\n */\nCluster.prototype.getBounds = function() {\n    var bounds = new BMap.Bounds(this._center,this._center);\n    for (var i = 0, marker; marker = this._markers[i]; i++) {\n        bounds.extend(marker.getPosition());\n    }\n    return bounds;\n};\n\n/**\n * 获取该聚合的落脚点。\n * @return {BMap.Point} 该聚合的落脚点。\n */\nCluster.prototype.getCenter = function() {\n    return this._center;\n};\n\nreturn MarkerClusterer;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}