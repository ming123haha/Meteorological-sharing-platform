{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { a as e } from \"./mat4.js\";\nimport { c as r } from \"./mat4f64.js\";\nimport { TextureCoordinateAttribute as a, TextureCoordinateAttributeType as o } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { ReadLinearDepth as t } from \"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";\nimport { Gamma as i } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/Gamma.glsl.js\";\nimport { Float2PassUniform as n } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float3Uniform as d } from \"../views/3d/webgl-engine/core/shaderModules/Float3Uniform.js\";\nimport { FloatUniform as s } from \"../views/3d/webgl-engine/core/shaderModules/FloatUniform.js\";\nimport { glsl as m } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4PassUniform as c } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as l } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DUniform as f } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DUniform.js\";\nimport { VertexAttribute as p } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\n\nfunction g(r) {\n  const g = new l();\n  g.attributes.add(p.POSITION, \"vec2\"), g.include(a, {\n    textureCoordinateType: o.Default\n  }), g.varyings.add(\"worldRay\", \"vec3\"), g.varyings.add(\"eyeDir\", \"vec3\");\n  const {\n    vertex: u,\n    fragment: w\n  } = g;\n  return u.uniforms.add([new c(\"inverseProjectionMatrix\", (e, r) => r.camera.inverseProjectionMatrix), new c(\"inverseViewMatrix\", (r, a) => e(v, a.camera.viewMatrix))]), u.code.add(m`void main(void) {\nvec3 posViewNear = (inverseProjectionMatrix * vec4(position, -1, 1)).xyz;\neyeDir = posViewNear;\nworldRay = (inverseViewMatrix * vec4(posViewNear, 0)).xyz;\nforwardTextureCoordinates();\ngl_Position = vec4(position, 1, 1);\n}`), w.uniforms.add(new s(\"atmosphereC\")), w.uniforms.add(new d(\"cameraPosition\")), w.uniforms.add(new n(\"nearFar\", (e, r) => r.camera.nearFar)), w.uniforms.add(new f(\"depthTex\")), w.uniforms.add(new s(\"fogStrength\")), w.uniforms.add(new s(\"fogAmount\")), w.uniforms.add(new d(\"fogColor\")), g.include(i), w.include(t), w.code.add(m`vec2 sphereIntersect(vec3 start, vec3 dir) {\nfloat a = dot(dir, dir);\nfloat b = 2.0 * dot(dir, start);\nfloat d = (b * b) - 4.0 * a * atmosphereC;\nif (d < 0.0) {\nreturn vec2(1e5, -1e5);\n}\nreturn vec2((-b - sqrt(d)) / (2.0 * a), (-b + sqrt(d)) / (2.0 * a));\n}`), w.code.add(m`vec4 applyFog(float dist, vec3 rayDir){\nif(dist == -1.0){\nvec2 rayAtmosphereIntersect = sphereIntersect(cameraPosition, rayDir);\ndist = 0.055 * rayAtmosphereIntersect.y;\n}\nfloat fogAmount = fogAmount * (1.0 - exp(-dist * fogStrength));\nreturn vec4(fogAmount * fogColor, fogAmount);\n}`), w.code.add(m`\n    vec3 tonemapACES(vec3 x) {\n      return clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14), 0.0, 1.0);\n    }\n\n    void main() {\n      vec3 rayDir = normalize(worldRay);\n      float terrainDepth = -1.0;\n\n      float depthSample = texture2D(depthTex, vuv0).r;\n      float zNorm = 2.0 * depthSample - 1.0;\n      float linDepth = 2.0 * nearFar[0] * nearFar[1] / (nearFar[1] + nearFar[0] - zNorm * (nearFar[1] - nearFar[0]));\n      if(depthSample < 1.0 && depthSample > 0.0){\n        vec3 cameraSpaceRay = normalize(eyeDir);\n        cameraSpaceRay /= cameraSpaceRay.z;\n        cameraSpaceRay *= linDepth;\n        terrainDepth = max(0.0, length(cameraSpaceRay));\n      }\n\n      ${r.haze ? m`\n          if(terrainDepth == -1.0){\n            gl_FragColor = vec4(0);\n            return;\n          }` : \"\"}\n\n      vec4 fog = applyFog(terrainDepth, rayDir);\n\n      gl_FragColor = delinearizeGamma(vec4(tonemapACES(fog.rgb), fog.a));\n    }\n  `), g;\n}\n\nconst v = r(),\n      u = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: g\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { u as F, g as b };","map":{"version":3,"names":["a","e","c","r","TextureCoordinateAttribute","TextureCoordinateAttributeType","o","ReadLinearDepth","t","Gamma","i","Float2PassUniform","n","Float3Uniform","d","FloatUniform","s","glsl","m","Matrix4PassUniform","ShaderBuilder","l","Texture2DUniform","f","VertexAttribute","p","g","attributes","add","POSITION","include","textureCoordinateType","Default","varyings","vertex","u","fragment","w","uniforms","camera","inverseProjectionMatrix","v","viewMatrix","code","nearFar","haze","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value","F","b"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/chunks/Fog.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{a as e}from\"./mat4.js\";import{c as r}from\"./mat4f64.js\";import{TextureCoordinateAttribute as a,TextureCoordinateAttributeType as o}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{ReadLinearDepth as t}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{Gamma as i}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Gamma.glsl.js\";import{Float2PassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3Uniform as d}from\"../views/3d/webgl-engine/core/shaderModules/Float3Uniform.js\";import{FloatUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/FloatUniform.js\";import{glsl as m}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as c}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as l}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DUniform as f}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DUniform.js\";import{VertexAttribute as p}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function g(r){const g=new l;g.attributes.add(p.POSITION,\"vec2\"),g.include(a,{textureCoordinateType:o.Default}),g.varyings.add(\"worldRay\",\"vec3\"),g.varyings.add(\"eyeDir\",\"vec3\");const{vertex:u,fragment:w}=g;return u.uniforms.add([new c(\"inverseProjectionMatrix\",((e,r)=>r.camera.inverseProjectionMatrix)),new c(\"inverseViewMatrix\",((r,a)=>e(v,a.camera.viewMatrix)))]),u.code.add(m`void main(void) {\nvec3 posViewNear = (inverseProjectionMatrix * vec4(position, -1, 1)).xyz;\neyeDir = posViewNear;\nworldRay = (inverseViewMatrix * vec4(posViewNear, 0)).xyz;\nforwardTextureCoordinates();\ngl_Position = vec4(position, 1, 1);\n}`),w.uniforms.add(new s(\"atmosphereC\")),w.uniforms.add(new d(\"cameraPosition\")),w.uniforms.add(new n(\"nearFar\",((e,r)=>r.camera.nearFar))),w.uniforms.add(new f(\"depthTex\")),w.uniforms.add(new s(\"fogStrength\")),w.uniforms.add(new s(\"fogAmount\")),w.uniforms.add(new d(\"fogColor\")),g.include(i),w.include(t),w.code.add(m`vec2 sphereIntersect(vec3 start, vec3 dir) {\nfloat a = dot(dir, dir);\nfloat b = 2.0 * dot(dir, start);\nfloat d = (b * b) - 4.0 * a * atmosphereC;\nif (d < 0.0) {\nreturn vec2(1e5, -1e5);\n}\nreturn vec2((-b - sqrt(d)) / (2.0 * a), (-b + sqrt(d)) / (2.0 * a));\n}`),w.code.add(m`vec4 applyFog(float dist, vec3 rayDir){\nif(dist == -1.0){\nvec2 rayAtmosphereIntersect = sphereIntersect(cameraPosition, rayDir);\ndist = 0.055 * rayAtmosphereIntersect.y;\n}\nfloat fogAmount = fogAmount * (1.0 - exp(-dist * fogStrength));\nreturn vec4(fogAmount * fogColor, fogAmount);\n}`),w.code.add(m`\n    vec3 tonemapACES(vec3 x) {\n      return clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14), 0.0, 1.0);\n    }\n\n    void main() {\n      vec3 rayDir = normalize(worldRay);\n      float terrainDepth = -1.0;\n\n      float depthSample = texture2D(depthTex, vuv0).r;\n      float zNorm = 2.0 * depthSample - 1.0;\n      float linDepth = 2.0 * nearFar[0] * nearFar[1] / (nearFar[1] + nearFar[0] - zNorm * (nearFar[1] - nearFar[0]));\n      if(depthSample < 1.0 && depthSample > 0.0){\n        vec3 cameraSpaceRay = normalize(eyeDir);\n        cameraSpaceRay /= cameraSpaceRay.z;\n        cameraSpaceRay *= linDepth;\n        terrainDepth = max(0.0, length(cameraSpaceRay));\n      }\n\n      ${r.haze?m`\n          if(terrainDepth == -1.0){\n            gl_FragColor = vec4(0);\n            return;\n          }`:\"\"}\n\n      vec4 fog = applyFog(terrainDepth, rayDir);\n\n      gl_FragColor = delinearizeGamma(vec4(tonemapACES(fog.rgb), fog.a));\n    }\n  `),g}const v=r(),u=Object.freeze(Object.defineProperty({__proto__:null,build:g},Symbol.toStringTag,{value:\"Module\"}));export{u as F,g as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}