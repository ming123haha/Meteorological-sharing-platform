{"ast":null,"code":"import * as echarts from 'echarts';\nimport Map from \"@arcgis/core/Map\";\nimport MapView from \"@arcgis/core/views/MapView\";\nexport default {\n  name: \"Home\",\n\n  data() {\n    return {\n      scater_data: [[]],\n      year_data: [\"2020\", \"2019\", \"2018\", \"2017\", \"2016\", \"2015\", \"2014\", \"2013\", \"2012\", \"2011\"],\n      options: [{\n        value: '选项1',\n        label: '图层1'\n      }, {\n        value: '选项2',\n        label: '图层2'\n      }, {\n        value: '选项3',\n        label: '图层3'\n      }, {\n        value: '选项4',\n        label: '图层4'\n      }, {\n        value: '选项5',\n        label: '图层5'\n      }],\n      value: ''\n    };\n  },\n\n  created() {},\n\n  mounted() {\n    this.createEchartsline();\n    this.createEchartscategory();\n    this.createEchartsAccess();\n    this.createEchartsscater();\n    this.createEchartsPressure();\n    this.initMap();\n  },\n\n  //引入我的AQI仪表盘组件\n  components: {},\n  methods: {\n    createEchartsPressure() {\n      var chartDom = document.getElementById('echarts-pressure');\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        tooltip: {\n          formatter: '{a} <br/>{b} : {c}%'\n        },\n        series: [{\n          name: 'Pressure',\n          type: 'gauge',\n          progress: {\n            show: true\n          },\n          detail: {\n            valueAnimation: true,\n            formatter: '{value}'\n          },\n          data: [{\n            value: 50,\n            name: 'SCORE'\n          }]\n        }]\n      };\n      option && myChart.setOption(option);\n    },\n\n    createEchartsscater() {\n      this.request.get(\"/groundtemperature-merge/GetNearYearData\", {}).then(res => {\n        for (var i = 0; i < 12; i++) {\n          this.scater_data.push([i + 1, res[i]]);\n        }\n\n        var chartDom = document.getElementById('echarts-scatter');\n        var myChart = echarts.init(chartDom);\n        var option;\n        option = {\n          tooltip: {\n            show: true\n          },\n          title: {\n            text: '滁州市近1年平均地表气温时间变化图',\n            left: 240\n          },\n          xAxis: {\n            type: \"value\",\n            axisLabel: {\n              formatter: function (value, index) {\n                return value + \"月\";\n              }\n            }\n          },\n          yAxis: {\n            type: \"value\",\n            axisLabel: {\n              formatter: function (value, index) {\n                return value + \"°\";\n              }\n            }\n          },\n          series: [{\n            symbolSize: 20,\n            data: this.scater_data,\n            type: 'scatter'\n          }]\n        };\n        option && myChart.setOption(option);\n      });\n    },\n\n    createEchartsAccess() {\n      var chartDom = document.getElementById('echarts-access');\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        title: {\n          text: '安徽省各地区站点数量',\n          left: 120,\n          top: -4\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '5%',\n          left: 'center'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 40,\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: [{\n            value: 8,\n            name: '江淮地区'\n          }, {\n            value: 8,\n            name: '皖北地区'\n          }, {\n            value: 5,\n            name: '皖南地区'\n          }]\n        }]\n      };\n      option && myChart.setOption(option);\n    },\n\n    createEchartscategory() {\n      var chartDom = document.getElementById('echarts-category');\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        title: {\n          text: '安徽省各站点近1年平均地表气温排序图',\n          left: 80\n        },\n        dataset: [{\n          dimensions: ['name', 'age', 'profession', 'score', 'date'],\n          source: [['Hannah Krause', 41, 'Engineer', 314, '2011-02-12'], ['Zhao Qian', 20, 'Teacher', 351, '2011-03-01'], ['Jasmin Krause ', 52, 'Musician', 287, '2011-02-14'], ['Li Lei', 37, 'Teacher', 219, '2011-02-18'], ['Karle Neumann', 25, 'Engineer', 253, '2011-04-02'], ['Adrian Groß', 19, 'Teacher', '-', '2011-01-16'], ['Mia Neumann', 71, 'Engineer', 165, '2011-03-19'], ['Böhm Fuchs', 36, 'Musician', 318, '2011-02-24'], ['Han Meimei', 67, 'Engineer', 366, '2011-03-12']]\n        }, {\n          transform: {\n            type: 'sort',\n            config: {\n              dimension: 'score',\n              order: 'desc'\n            }\n          }\n        }],\n        xAxis: {\n          type: 'category',\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        yAxis: {},\n        series: {\n          type: 'bar',\n          encode: {\n            x: 'name',\n            y: 'score'\n          },\n          datasetIndex: 1\n        }\n      };\n      option && myChart.setOption(option);\n    },\n\n    createEchartsline() {\n      var _request = this.request;\n      var chartDom = document.getElementById('echarts-line');\n      var myChart = echarts.init(chartDom);\n      var option;\n\n      function randomData() {\n        now = new Date(+now + oneDay); // _request.get(\"/groundtemperature-merge/GetHistoryData\",{params:{now:now}}).then(res=> {\n        //   console.log(res[0])\n        //   temp=res[0].averageSurfaceTemperature\n        // })\n\n        value = temp;\n        return {\n          name: now.toString(),\n          value: [[now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'), Math.round(value)]\n        };\n      }\n\n      let temp = [];\n      let data = [];\n      let now = new Date(1965, 1, 1);\n      let oneDay = 24 * 3600 * 1000;\n      let value = 0;\n\n      for (var i = 0; i < 1000; i++) {// data.push(randomData());\n      }\n\n      option = {\n        title: {\n          text: '平均地表气温时间变化图',\n          left: 50\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            params = params[0];\n            var date = new Date(params.name);\n            return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n          },\n          axisPointer: {\n            animation: false\n          }\n        },\n        xAxis: {\n          type: 'time',\n          splitLine: {\n            show: false\n          }\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: [0, '100%'],\n          splitLine: {\n            show: false\n          },\n          axisLabel: {\n            fontSize: 10\n          }\n        },\n        series: [{\n          name: 'Fake Data',\n          type: 'line',\n          showSymbol: false,\n          data: data\n        }]\n      };\n      setInterval(function () {\n        for (var i = 0; i < 100; i++) {\n          //移除数组中第一项\n          data.shift();\n          data.push(randomData());\n        }\n\n        myChart.setOption({\n          series: [{\n            data: data\n          }]\n        });\n      }, 5000);\n      option && myChart.setOption(option);\n    },\n\n    selectinfo(res) {\n      console.log(res);\n\n      if (res === '选项5') {\n        alert(\"被点击了!\");\n      }\n    },\n\n    initMap() {\n      const m_Map = new Map({\n        basemap: \"topo-vector\"\n      });\n      const view = new MapView({\n        container: \"viewDiv\",\n        map: m_Map,\n        zoom: 6,\n        center: [115, 32]\n      }); //鹰眼地图定义\n\n      var overviewMap = new Map({\n        basemap: \"hybrid\"\n      });\n      view.ui.remove('attribution'); //这一句用于去除地图下方自带的esri官方的标志\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgDA;AACA;AACA;AACA;EACAA,YADA;;EAEAC;IACA;MACAC,iBADA;MAEAC,2FAFA;MAGAC;QACAC,YADA;QAEAC;MAFA,GAGA;QACAD,YADA;QAEAC;MAFA,CAHA,EAMA;QACAD,YADA;QAEAC;MAFA,CANA,EASA;QACAD,YADA;QAEAC;MAFA,CATA,EAYA;QACAD,YADA;QAEAC;MAFA,CAZA,CAHA;MAmBAD;IAnBA;EAqBA,CAxBA;;EAyBAE,WACA,CA1BA;;EA2BAC;IACA;IACA;IACA;IACA;IACA;IACA;EACA,CAlCA;;EAmCA;EACAC,cApCA;EAsCAC;IACAC;MACA;MACA;MACA;MACAC;QACAC;UACAC;QADA,CADA;QAIAC,SACA;UACAf,gBADA;UAEAgB,aAFA;UAGAC;YACAC;UADA,CAHA;UAMAC;YACAC,oBADA;YAEAN;UAFA,CANA;UAUAb,OACA;YACAI,SADA;YAEAL;UAFA,CADA;QAVA,CADA;MAJA;MAwBAY;IACA,CA9BA;;IA+BAS;MACA,iEACAC,IADA,CACAC;QACA;UACA;QACA;;QACA;QACA;QACA;QACAX;UACAC;YACAK;UADA,CADA;UAIAM;YACAC,yBADA;YAEAC;UAFA,CAJA;UAQAC;YACAX,aADA;YAEAY;cACAd;gBACA;cACA;YAHA;UAFA,CARA;UAgBAe;YACAb,aADA;YAEAY;cACAd;gBACA;cACA;YAHA;UAFA,CAhBA;UAwBAC,SACA;YACAe,cADA;YAEA7B,sBAFA;YAGAe;UAHA,CADA;QAxBA;QAgCAJ;MACA,CAzCA;IA0CA,CA1EA;;IA2EAmB;MACA;MACA;MACA;MACAnB;QACAY;UACAC,kBADA;UAEAC,SAFA;UAGAM;QAHA,CADA;QAMAnB;UACAoB;QADA,CANA;QASAC;UACAF,SADA;UAEAN;QAFA,CATA;QAaAX,SACA;UACAf,mBADA;UAEAgB,WAFA;UAGAmB,sBAHA;UAIAC,wBAJA;UAKA9B;YACAY,WADA;YAEAmB;UAFA,CALA;UASAC;YACAhC;cACAY,UADA;cAEAqB,YAFA;cAGAC;YAHA;UADA,CATA;UAgBAC;YACAvB;UADA,CAhBA;UAmBAjB,OACA;YAAAI;YAAAL;UAAA,CADA,EAEA;YAAAK;YAAAL;UAAA,CAFA,EAGA;YAAAK;YAAAL;UAAA,CAHA;QAnBA,CADA;MAbA;MAyCAY;IACA,CAzHA;;IA0HA8B;MACA;MACA;MACA;MACA9B;QACAY;UACAC,0BADA;UAEAC;QAFA,CADA;QAKAiB,UACA;UACAC,0DADA;UAEAC,SACA,oDADA,EAEA,+CAFA,EAGA,qDAHA,EAIA,4CAJA,EAKA,oDALA,EAMA,iDANA,EAOA,kDAPA,EAQA,iDARA,EASA,iDATA;QAFA,CADA,EAeA;UACAC;YACA9B,YADA;YAEA+B;cAAAC;cAAAC;YAAA;UAFA;QADA,CAfA,CALA;QA2BAtB;UACAX,gBADA;UAEAY;YAAAsB;YAAAC;UAAA;QAFA,CA3BA;QA+BAtB,SA/BA;QAgCAd;UACAC,WADA;UAEAoC;YAAAC;YAAAC;UAAA,CAFA;UAGAC;QAHA;MAhCA;MAsCA3C;IACA,CArKA;;IAsKA4C;MACA;MACA;MACA;MACA;;MACA;QACAC,8BADA,CAEA;QACA;QACA;QACA;;QACApD;QACA;UACAL,oBADA;UAEAK,QACA,gEADA,EAEAqD,iBAFA;QAFA;MAOA;;MACA;MACA;MACA;MACA;MACA;;MACA,gCACA;MACA;;MACA9C;QACAY;UACAC,mBADA;UAEAC;QAFA,CADA;QAKAb;UACAoB,eADA;UAEAnB;YACA6C;YACA;YACA,OACAC,iBACA,GADA,IAEAA,mBAFA,IAGA,GAHA,GAIAA,kBAJA,GAKA,KALA,GAMAD,eAPA;UASA,CAdA;UAeAE;YACAC;UADA;QAfA,CALA;QAwBAnC;UACAX,YADA;UAEA+C;YACA7C;UADA;QAFA,CAxBA;QA8BAW;UACAb,aADA;UAEAgD,wBAFA;UAGAD;YACA7C;UADA,CAHA;UAMAU;YACAW;UADA;QANA,CA9BA;QAwCAxB,SACA;UACAf,iBADA;UAEAgB,YAFA;UAGAiD,iBAHA;UAIAhE;QAJA,CADA;MAxCA;MAiDAiE;QACA;UACA;UACAjE;UACAA;QACA;;QACAkE;UACApD,SACA;YACAd;UADA,CADA;QADA;MAOA,CAbA,EAaA,IAbA;MAcAW;IACA,CAlQA;;IAmQAwD;MACAC;;MACA;QACAC;MACA;IACA,CAxQA;;IAyQAC;MACA;QACAC;MADA;MAGA;QACAC,oBADA;QAEAC,UAFA;QAGAC,OAHA;QAIAC;MAJA,GAJA,CAUA;;MACA;QACAJ;MADA;MAGAK,8BAdA,CAcA;IACA;;EAxRA;AAtCA","names":["name","data","scater_data","year_data","options","value","label","created","mounted","components","methods","createEchartsPressure","option","tooltip","formatter","series","type","progress","show","detail","valueAnimation","createEchartsscater","then","res","title","text","left","xAxis","axisLabel","yAxis","symbolSize","createEchartsAccess","top","trigger","legend","radius","avoidLabelOverlap","position","emphasis","fontSize","fontWeight","labelLine","createEchartscategory","dataset","dimensions","source","transform","config","dimension","order","interval","rotate","encode","x","y","datasetIndex","createEchartsline","now","Math","params","date","axisPointer","animation","splitLine","boundaryGap","showSymbol","setInterval","myChart","selectinfo","console","alert","initMap","basemap","container","map","zoom","center","view"],"sourceRoot":"src/views","sources":["DataAnalysis.vue"],"sourcesContent":["<template>\n  <div>\n    <el-row type=\"flex\" justify=\"space-around\">\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\">\n          <div id=\"echarts-line\"></div>\n        </el-card>\n\n      </el-col>\n      <el-col :span=\"10\">\n        <div style=\"position: relative;\" id=\"viewDiv\">\n          <el-select @change=\"selectinfo\" style=\"position: absolute;right:10%;top:5%\" v-model=\"value\" placeholder=\"请选择\">\n            <el-option\n                v-for=\"item in options\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\">\n          <div id=\"echarts-category\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row type=\"flex\"  justify=\"space-around\">\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\">\n          <div id=\"echarts-access\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-card shadow=\"hover\">\n          <div id=\"echarts-scatter\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\">\n          <div id=\"echarts-pressure\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport  * as echarts from 'echarts'\nimport Map from \"@arcgis/core/Map\";\nimport MapView from \"@arcgis/core/views/MapView\"\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      scater_data:[[]],\n      year_data:[\"2020\",\"2019\",\"2018\",\"2017\",\"2016\",\"2015\",\"2014\",\"2013\",\"2012\",\"2011\"],\n      options: [{\n        value: '选项1',\n        label: '图层1'\n      }, {\n        value: '选项2',\n        label: '图层2'\n      }, {\n        value: '选项3',\n        label: '图层3'\n      }, {\n        value: '选项4',\n        label: '图层4'\n      }, {\n        value: '选项5',\n        label: '图层5'\n      }],\n      value: '',\n    }\n  },\n  created() {\n  },\n  mounted() {\n    this.createEchartsline()\n    this.createEchartscategory()\n    this.createEchartsAccess()\n    this.createEchartsscater()\n    this.createEchartsPressure()\n    this.initMap()\n  },\n  //引入我的AQI仪表盘组件\n  components:{\n  },\n  methods: {\n    createEchartsPressure(){\n      var chartDom = document.getElementById('echarts-pressure');\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        tooltip: {\n          formatter: '{a} <br/>{b} : {c}%'\n        },\n        series: [\n          {\n            name: 'Pressure',\n            type: 'gauge',\n            progress: {\n              show: true\n            },\n            detail: {\n              valueAnimation: true,\n              formatter: '{value}'\n            },\n            data: [\n              {\n                value: 50,\n                name: 'SCORE'\n              }\n            ]\n          }\n        ]\n      };\n      option && myChart.setOption(option);\n    },\n    createEchartsscater(){\n      this.request.get(\"/groundtemperature-merge/GetNearYearData\",{\n      }).then(res =>{\n        for(var i=0;i<12;i++){\n          this.scater_data.push([i+1,res[i]])\n        }\n        var chartDom = document.getElementById('echarts-scatter');\n        var myChart = echarts.init(chartDom);\n        var option;\n        option = {\n          tooltip: {\n            show:true,\n          },\n          title: {\n            text: '滁州市近1年平均地表气温时间变化图',\n            left:240\n          },\n          xAxis: {\n            type: \"value\",\n            axisLabel: {\n              formatter: function (value, index) {\n                return value + \"月\";\n              },\n            },\n          },\n          yAxis: {\n            type: \"value\",\n            axisLabel: {\n              formatter: function (value, index) {\n                return value + \"°\";\n              },\n            },\n          },\n          series: [\n            {\n              symbolSize: 20,\n              data:this.scater_data,\n              type: 'scatter'\n            }\n          ]\n        };\n        option && myChart.setOption(option);\n      })\n    },\n    createEchartsAccess(){\n      var chartDom = document.getElementById('echarts-access');\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        title: {\n          text: '安徽省各地区站点数量',\n          left:120,\n          top:-4\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '5%',\n          left: 'center'\n        },\n        series: [\n          {\n            name: 'Access From',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: 40,\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: [\n              { value: 8, name: '江淮地区' },\n              { value: 8, name: '皖北地区' },\n              { value: 5, name: '皖南地区' },\n            ]\n          }\n        ]\n      };\n      option && myChart.setOption(option);\n    },\n    createEchartscategory(){\n      var chartDom = document.getElementById('echarts-category');\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        title: {\n          text: '安徽省各站点近1年平均地表气温排序图',\n          left:80\n        },\n        dataset: [\n          {\n            dimensions: ['name', 'age', 'profession', 'score', 'date'],\n            source: [\n              ['Hannah Krause', 41, 'Engineer', 314, '2011-02-12'],\n              ['Zhao Qian', 20, 'Teacher', 351, '2011-03-01'],\n              ['Jasmin Krause ', 52, 'Musician', 287, '2011-02-14'],\n              ['Li Lei', 37, 'Teacher', 219, '2011-02-18'],\n              ['Karle Neumann', 25, 'Engineer', 253, '2011-04-02'],\n              ['Adrian Groß', 19, 'Teacher', '-', '2011-01-16'],\n              ['Mia Neumann', 71, 'Engineer', 165, '2011-03-19'],\n              ['Böhm Fuchs', 36, 'Musician', 318, '2011-02-24'],\n              ['Han Meimei', 67, 'Engineer', 366, '2011-03-12']\n            ]\n          },\n          {\n            transform: {\n              type: 'sort',\n              config: { dimension: 'score', order: 'desc' }\n            }\n          }\n        ],\n        xAxis: {\n          type: 'category',\n          axisLabel: { interval: 0, rotate: 30 }\n        },\n        yAxis: {},\n        series: {\n          type: 'bar',\n          encode: { x: 'name', y: 'score' },\n          datasetIndex: 1\n        }\n      };\n      option && myChart.setOption(option);\n    },\n    createEchartsline(){\n      var _request=this.request\n      var chartDom = document.getElementById('echarts-line');\n      var myChart = echarts.init(chartDom);\n      var option;\n      function randomData() {\n        now = new Date(+now + oneDay);\n        // _request.get(\"/groundtemperature-merge/GetHistoryData\",{params:{now:now}}).then(res=> {\n        //   console.log(res[0])\n        //   temp=res[0].averageSurfaceTemperature\n        // })\n        value = temp\n        return {\n          name: now.toString(),\n          value: [\n            [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\n            Math.round(value)\n          ]\n        };\n      }\n      let temp = []\n      let data = [];\n      let now = new Date(1965, 1, 1);\n      let oneDay = 24 * 3600 * 1000;\n      let value = 0;\n      for (var i = 0; i < 1000; i++) {\n        // data.push(randomData());\n      }\n      option = {\n        title: {\n          text: '平均地表气温时间变化图',\n          left:50\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            params = params[0];\n            var date = new Date(params.name);\n            return (\n                date.getDate() +\n                '/' +\n                (date.getMonth() + 1) +\n                '/' +\n                date.getFullYear() +\n                ' : ' +\n                params.value[1]\n            );\n          },\n          axisPointer: {\n            animation: false\n          }\n        },\n        xAxis: {\n          type: 'time',\n          splitLine: {\n            show: false\n          },\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: [0, '100%'],\n          splitLine: {\n            show: false\n          },\n          axisLabel:{\n            fontSize:10\n          }\n        },\n        series: [\n          {\n            name: 'Fake Data',\n            type: 'line',\n            showSymbol: false,\n            data: data,\n          }\n        ]\n      };\n      setInterval(function () {\n        for (var i = 0; i < 100; i++) {\n          //移除数组中第一项\n          data.shift();\n          data.push(randomData());\n        }\n        myChart.setOption({\n          series: [\n            {\n              data: data\n            }\n          ]\n        });\n      }, 5000);\n      option && myChart.setOption(option);\n    },\n    selectinfo(res) {\n      console.log(res)\n      if(res === '选项5'){\n        alert(\"被点击了!\")\n      }\n    },\n    initMap(){\n      const m_Map = new Map({\n        basemap:\"topo-vector\"\n      })\n      const view = new MapView({\n        container:\"viewDiv\",\n        map:m_Map,\n        zoom:6,\n        center:[115,32]\n      })\n      //鹰眼地图定义\n      var overviewMap = new Map({\n        basemap:\"hybrid\"\n      })\n      view.ui.remove('attribution')//这一句用于去除地图下方自带的esri官方的标志\n    }\n  }\n}\n</script>\n\n<style scoped>\n#viewDiv {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n  width: 100%;\n}\n#echarts-line{\n  height: 400px;\n  width: 100%;\n}\n#echarts-category{\n  height: 400px;\n  width: 100%;\n}\n#echarts-access{\n  height: 350px;\n  width: 100%;\n}\n#echarts-scatter{\n  height: 350px;\n  width: 100%;\n}\n#echarts-pressure{\n  height: 350px;\n  width: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}