{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { JSONMap as e } from \"../../../core/jsonMap.js\";\nimport { isNone as t, isSome as i } from \"../../../core/maybe.js\";\nimport { getUnitString as r } from \"../../../core/unitUtils.js\";\nimport { canProjectWithoutEngine as n } from \"../../../geometry/projection.js\";\nimport { getGeometryExtent as o } from \"../../../geometry/support/extentUtils.js\";\nimport { fromJSON as s, isExtent as a, isPolygon as l, isPolyline as m } from \"../../../geometry/support/jsonUtils.js\";\nimport { normalizeCentralMeridian as f } from \"../../../geometry/support/normalizeUtils.js\";\nimport { equals as u, isGeographic as c, isWebMercator as p, WGS84 as y } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { quantizeOptimizedGeometry as g, convertToPoint as S, generalizeOptimizedGeometry as R, removeZMValues as w, convertToPolyline as j, convertToPolygon as h, convertToMultipoint as d } from \"../featureConversionUtils.js\";\nimport x from \"../OptimizedGeometry.js\";\nimport { checkProjectionSupport as U, project as M } from \"./projectionSupport.js\";\n\nconst O = new e({\n  esriSRUnit_Meter: \"meters\",\n  esriSRUnit_Kilometer: \"kilometers\",\n  esriSRUnit_Foot: \"feet\",\n  esriSRUnit_StatuteMile: \"miles\",\n  esriSRUnit_NauticalMile: \"nautical-miles\",\n  esriSRUnit_USNauticalMile: \"us-nautical-miles\"\n}),\n      F = Object.freeze({}),\n      N = new x(),\n      _ = new x(),\n      G = new x(),\n      P = {\n  esriGeometryPoint: S,\n  esriGeometryPolyline: j,\n  esriGeometryPolygon: h,\n  esriGeometryMultipoint: d\n};\n\nfunction b(e, i, r, n = e.hasZ, o = e.hasM) {\n  if (t(i)) return null;\n  const s = e.hasZ && n,\n        a = e.hasM && o;\n\n  if (r) {\n    const t = g(G, i, e.hasZ, e.hasM, \"esriGeometryPoint\", r, n, o);\n    return S(t, s, a);\n  }\n\n  return S(i, s, a);\n}\n\nfunction v(e, r, n, o, s, a, l = r, m = n) {\n  const f = r && l,\n        u = n && m,\n        c = i(o) ? \"coords\" in o ? o : o.geometry : null;\n  if (t(c)) return null;\n\n  if (s) {\n    let t = R(_, c, r, n, e, s, l, m);\n    return a && (t = g(G, t, f, u, e, a)), P[e]?.(t, f, u) ?? null;\n  }\n\n  if (a) {\n    const t = g(G, c, r, n, e, a, l, m);\n    return P[e]?.(t, f, u) ?? null;\n  }\n\n  return w(N, c, r, n, l, m), P[e]?.(N, f, u) ?? null;\n}\n\nasync function z(e, t, i) {\n  const {\n    outFields: r,\n    orderByFields: n,\n    groupByFieldsForStatistics: o,\n    outStatistics: s\n  } = e;\n  if (r) for (let a = 0; a < r.length; a++) r[a] = r[a].trim();\n  if (n) for (let a = 0; a < n.length; a++) n[a] = n[a].trim();\n  if (o) for (let a = 0; a < o.length; a++) o[a] = o[a].trim();\n  if (s) for (let a = 0; a < s.length; a++) s[a].onStatisticField && (s[a].onStatisticField = s[a].onStatisticField.trim());\n  return e.geometry && !e.outSR && (e.outSR = e.geometry.spatialReference), J(e, t, i);\n}\n\nasync function J(e, i, r) {\n  if (!e) return null;\n  let {\n    where: n\n  } = e;\n  if (e.where = n = n && n.trim(), (!n || /^1 *= *1$/.test(n) || i && i === n) && (e.where = null), !e.geometry) return e;\n  let a = await Z(e);\n\n  if (e.distance = 0, e.units = null, \"esriSpatialRelEnvelopeIntersects\" === e.spatialRel) {\n    const {\n      spatialReference: t\n    } = e.geometry;\n    a = o(a), a.spatialReference = t;\n  }\n\n  if (a) {\n    await U(a.spatialReference, r), a = B(a, r);\n    const i = (await f(s(a)))[0];\n    if (t(i)) throw F;\n    const n = \"quantizationParameters\" in e && e.quantizationParameters?.tolerance || \"maxAllowableOffset\" in e && e.maxAllowableOffset || 0,\n          o = n && A(a, r) ? {\n      densificationStep: 8 * n\n    } : void 0,\n          l = i.toJSON(),\n          m = await M(l, l.spatialReference, r, o);\n    if (!m) throw F;\n    m.spatialReference = r, e.geometry = m;\n  }\n\n  return e;\n}\n\nfunction A(e, t) {\n  if (!e) return !1;\n  const i = e.spatialReference;\n  return (a(e) || l(e) || m(e)) && !u(i, t) && !n(i, t);\n}\n\nfunction B(e, t) {\n  const i = e.spatialReference;\n  return A(e, t) && a(e) ? {\n    spatialReference: i,\n    rings: [[[e.xmin, e.ymin], [e.xmin, e.ymax], [e.xmax, e.ymax], [e.xmax, e.ymin], [e.xmin, e.ymin]]]\n  } : e;\n}\n\nasync function Z(e) {\n  const {\n    distance: t,\n    units: i\n  } = e,\n        n = e.geometry;\n  if (null == t || \"vertexAttributes\" in n) return n;\n  const o = n.spatialReference,\n        s = i ? O.fromJSON(i) : r(o),\n        a = o && (c(o) || p(o)) ? n : await U(o, y).then(() => M(n, y));\n  return (await q())(a.spatialReference, a, t, s);\n}\n\nasync function q() {\n  return (await import(\"../../../geometry/geometryEngineJSON.js\")).geodesicBuffer;\n}\n\nfunction E(e) {\n  return e && k in e ? JSON.parse(JSON.stringify(e, C)) : e;\n}\n\nconst k = \"_geVersion\",\n      C = (e, t) => e !== k ? t : void 0;\n\nexport { F as QUERY_ENGINE_EMPTY_RESULT, E as cleanFromGeometryEngine, v as getGeometry, z as normalizeQuery, J as normalizeQueryLike, b as transformCentroid };","map":{"version":3,"names":["JSONMap","e","isNone","t","isSome","i","getUnitString","r","canProjectWithoutEngine","n","getGeometryExtent","o","fromJSON","s","isExtent","a","isPolygon","l","isPolyline","m","normalizeCentralMeridian","f","equals","u","isGeographic","c","isWebMercator","p","WGS84","y","quantizeOptimizedGeometry","g","convertToPoint","S","generalizeOptimizedGeometry","R","removeZMValues","w","convertToPolyline","j","convertToPolygon","h","convertToMultipoint","d","x","checkProjectionSupport","U","project","M","O","esriSRUnit_Meter","esriSRUnit_Kilometer","esriSRUnit_Foot","esriSRUnit_StatuteMile","esriSRUnit_NauticalMile","esriSRUnit_USNauticalMile","F","Object","freeze","N","_","G","P","esriGeometryPoint","esriGeometryPolyline","esriGeometryPolygon","esriGeometryMultipoint","b","hasZ","hasM","v","geometry","z","outFields","orderByFields","groupByFieldsForStatistics","outStatistics","length","trim","onStatisticField","outSR","spatialReference","J","where","test","Z","distance","units","spatialRel","B","quantizationParameters","tolerance","maxAllowableOffset","A","densificationStep","toJSON","rings","xmin","ymin","ymax","xmax","then","q","geodesicBuffer","E","k","JSON","parse","stringify","C","QUERY_ENGINE_EMPTY_RESULT","cleanFromGeometryEngine","getGeometry","normalizeQuery","normalizeQueryLike","transformCentroid"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/graphics/data/utils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{JSONMap as e}from\"../../../core/jsonMap.js\";import{isNone as t,isSome as i}from\"../../../core/maybe.js\";import{getUnitString as r}from\"../../../core/unitUtils.js\";import{canProjectWithoutEngine as n}from\"../../../geometry/projection.js\";import{getGeometryExtent as o}from\"../../../geometry/support/extentUtils.js\";import{fromJSON as s,isExtent as a,isPolygon as l,isPolyline as m}from\"../../../geometry/support/jsonUtils.js\";import{normalizeCentralMeridian as f}from\"../../../geometry/support/normalizeUtils.js\";import{equals as u,isGeographic as c,isWebMercator as p,WGS84 as y}from\"../../../geometry/support/spatialReferenceUtils.js\";import{quantizeOptimizedGeometry as g,convertToPoint as S,generalizeOptimizedGeometry as R,removeZMValues as w,convertToPolyline as j,convertToPolygon as h,convertToMultipoint as d}from\"../featureConversionUtils.js\";import x from\"../OptimizedGeometry.js\";import{checkProjectionSupport as U,project as M}from\"./projectionSupport.js\";const O=new e({esriSRUnit_Meter:\"meters\",esriSRUnit_Kilometer:\"kilometers\",esriSRUnit_Foot:\"feet\",esriSRUnit_StatuteMile:\"miles\",esriSRUnit_NauticalMile:\"nautical-miles\",esriSRUnit_USNauticalMile:\"us-nautical-miles\"}),F=Object.freeze({}),N=new x,_=new x,G=new x,P={esriGeometryPoint:S,esriGeometryPolyline:j,esriGeometryPolygon:h,esriGeometryMultipoint:d};function b(e,i,r,n=e.hasZ,o=e.hasM){if(t(i))return null;const s=e.hasZ&&n,a=e.hasM&&o;if(r){const t=g(G,i,e.hasZ,e.hasM,\"esriGeometryPoint\",r,n,o);return S(t,s,a)}return S(i,s,a)}function v(e,r,n,o,s,a,l=r,m=n){const f=r&&l,u=n&&m,c=i(o)?\"coords\"in o?o:o.geometry:null;if(t(c))return null;if(s){let t=R(_,c,r,n,e,s,l,m);return a&&(t=g(G,t,f,u,e,a)),P[e]?.(t,f,u)??null}if(a){const t=g(G,c,r,n,e,a,l,m);return P[e]?.(t,f,u)??null}return w(N,c,r,n,l,m),P[e]?.(N,f,u)??null}async function z(e,t,i){const{outFields:r,orderByFields:n,groupByFieldsForStatistics:o,outStatistics:s}=e;if(r)for(let a=0;a<r.length;a++)r[a]=r[a].trim();if(n)for(let a=0;a<n.length;a++)n[a]=n[a].trim();if(o)for(let a=0;a<o.length;a++)o[a]=o[a].trim();if(s)for(let a=0;a<s.length;a++)s[a].onStatisticField&&(s[a].onStatisticField=s[a].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),J(e,t,i)}async function J(e,i,r){if(!e)return null;let{where:n}=e;if(e.where=n=n&&n.trim(),(!n||/^1 *= *1$/.test(n)||i&&i===n)&&(e.where=null),!e.geometry)return e;let a=await Z(e);if(e.distance=0,e.units=null,\"esriSpatialRelEnvelopeIntersects\"===e.spatialRel){const{spatialReference:t}=e.geometry;a=o(a),a.spatialReference=t}if(a){await U(a.spatialReference,r),a=B(a,r);const i=(await f(s(a)))[0];if(t(i))throw F;const n=\"quantizationParameters\"in e&&e.quantizationParameters?.tolerance||\"maxAllowableOffset\"in e&&e.maxAllowableOffset||0,o=n&&A(a,r)?{densificationStep:8*n}:void 0,l=i.toJSON(),m=await M(l,l.spatialReference,r,o);if(!m)throw F;m.spatialReference=r,e.geometry=m}return e}function A(e,t){if(!e)return!1;const i=e.spatialReference;return(a(e)||l(e)||m(e))&&!u(i,t)&&!n(i,t)}function B(e,t){const i=e.spatialReference;return A(e,t)&&a(e)?{spatialReference:i,rings:[[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]]}:e}async function Z(e){const{distance:t,units:i}=e,n=e.geometry;if(null==t||\"vertexAttributes\"in n)return n;const o=n.spatialReference,s=i?O.fromJSON(i):r(o),a=o&&(c(o)||p(o))?n:await U(o,y).then((()=>M(n,y)));return(await q())(a.spatialReference,a,t,s)}async function q(){return(await import(\"../../../geometry/geometryEngineJSON.js\")).geodesicBuffer}function E(e){return e&&k in e?JSON.parse(JSON.stringify(e,C)):e}const k=\"_geVersion\",C=(e,t)=>e!==k?t:void 0;export{F as QUERY_ENGINE_EMPTY_RESULT,E as cleanFromGeometryEngine,v as getGeometry,z as normalizeQuery,J as normalizeQueryLike,b as transformCentroid};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}