{"ast":null,"code":"import Map from \"@arcgis/core/Map\";\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer.js\";\nimport MapView from \"@arcgis/core/views/MapView\";\nimport SceneView from \"@arcgis/core/views/SceneView\";\nimport FeatureForm from \"@arcgis/core/widgets/FeatureForm\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nexport default {\n  name: \"Home\",\n\n  data() {\n    return {\n      //所有气象站点的经纬度\n      lngLat: [[117.1959, 31.7848], [117.3072, 31.8764], [117.2588, 31.8707], [117.1604, 31.9052], [117.25, 31.8571], [117.266, 31.9436], [117.336, 31.8586], [117.3027, 31.7964], [117.2776, 31.7385], [117.1318, 31.8403], [117.3803, 31.9147], [118.3714, 31.4134], [118.3673, 31.3131], [118.4022, 31.3839], [118.4209, 31.3707], [118.4781, 31.3225], [118.2746, 31.2326], [117.396, 32.939], [117.3605, 32.9427], [117.4185, 32.8911], [117.3533, 32.9673], [117.3145, 32.8977], [117.3092, 32.9314], [116.8305, 32.7727], [117.0067, 32.6524], [116.8569, 32.5951], [116.8281, 32.633], [116.6325, 32.6201], [117.0566, 32.6531], [117.0108, 32.5893], [118.5092, 31.6837], [118.5024, 31.6449], [118.5228, 31.7231], [118.48, 31.6928], [118.6245, 31.7241], [118.4918, 31.6809], [116.8004, 33.975], [116.8091, 33.9007], [116.7856, 33.9477], [116.8873, 33.9836], [117.8177, 30.9412], [117.8059, 30.9273], [117.7807, 30.9413], [117.7439, 30.8792], [117.846, 30.9413], [117.8483, 30.97], [117.0809, 30.5177], [117.0331, 30.5119], [116.9896, 30.6145], [117.0598, 30.5351], [118.2903, 29.6963], [118.327, 29.7178], [118.1371, 30.2756], [118.3093, 32.3153], [118.3244, 32.2786], [118.3118, 32.3038], [115.8277, 32.8929], [115.8554, 32.8605], [115.784, 32.8892], [115.7901, 32.8631], [115.836, 32.9183], [116.989, 33.6306], [116.9509, 33.666], [116.9708, 33.591], [116.9884, 33.6305], [116.9648, 33.6252], [116.5079, 31.737], [118.4738, 31.7643], [116.4996, 31.7905], [116.5567, 31.7886], [115.8072, 33.8399], [115.7789, 33.8518], [115.7633, 33.8034], [117.47, 30.6618], [117.4974, 30.6539], [117.4918, 30.6617], [117.5627, 30.695], [117.5038, 30.6243], [118.7581, 30.9454], [118.7385, 30.9743], [118.7173, 30.9427], [118.7724, 30.9141]],\n      areaName: \"\",\n      isvisble: true,\n      //高德地图默认显示\n      isvisble1: false,\n      //arcgisapi不默认显示\n      visible: false,\n      result: {},\n      items: [],\n      aqi: \"\",\n      quality: \"\",\n      PM2_5: \"\",\n      PM10: \"\",\n      SO2: \"\",\n      NO2: \"\",\n      O3: \"\",\n      CO: \"\",\n      value1: false,\n      m_longitudes: [],\n      length: \"\" //经度对象数组\n\n    };\n  },\n\n  mounted() {\n    this.initCount();\n    this.initGapdeMap();\n  },\n\n  methods: {\n    changValue() {\n      if (this.value1) {\n        this.isvisble = false;\n        this.isvisble1 = true;\n        this.initMap();\n      } else {\n        this.isvisble = true;\n        this.isvisble1 = false;\n        this.initGapdeMap();\n      }\n    },\n\n    initCount() {\n      this.request.get(\"/nowatmospheredata/GetAllStation\").then(res => {\n        for (var i = 0; i < res.length; i++) {\n          this.m_longitudes[i] = res[i].longitude;\n        } //console.log(this.m_longitudes.length)\n\n\n        this.length = this.m_longitudes.length;\n      });\n    },\n\n    initGapdeMap() {\n      AMapLoader.load({\n        key: \"0e5904b2829e2e25ffcdecc5685b2209\",\n        // 申请好的Web端开发者Key，首次调用 load 时必填\n        version: \"2.0\",\n        // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n        plugins: ['AMap.MoveAnimation', 'AMap.ToolBar', 'AMap.Scale', 'AMap.MapType', 'AMap.Geolocation', 'AMap.HawkEye', 'AMap.HeatMap'] // 需要使用的的插件列表，如比例尺'AMap.Scale'等\n\n      }).then(AMap => {\n        var _this = this;\n\n        this.map = new AMap.Map(\"viewDiv\", {\n          //设置地图容器id\n          resizeEnable: true,\n          //mapStyle: 'amap://styles/normal',\n          viewMode: \"3D\",\n          //是否为3D地图模式\n          zoom: 10,\n          //初始化地图级别\n          center: [118.3093, 32.3153],\n          //初始化地图中心点位置\n          doubleClickZoom: true,\n          // 是否允许鼠标拖拽\n          dragEnable: true,\n          keyboardEnable: false\n        });\n        let marker;\n\n        for (var i = 0; i < this.lngLat.length; i++) {\n          marker = new AMap.Marker({\n            position: this.lngLat[i],\n            map: this.map\n          }); // marker.content = \"我是第\" + (i + 1) + \"个Marker\";\n\n          marker.content = [];\n          marker.content.push(\"地址 :北京市朝阳区望京阜荣街10号首开广场4层</div></div><br/>\");\n          marker.on(\"click\", markerClick);\n          marker.emit(\"click\", {\n            target: marker\n          });\n        }\n\n        marker.content.push('<div><div><img style=\"float:left;\" src=\" https://webapi.amap.com/images/autonavi.png \"/></div>');\n        marker.content.push('<div style=\"padding:0px 0px 0px 4px;\"><b>高德软件</b><br/>');\n\n        function markerClick(e) {\n          marker.content.push(\"电话 : 010-84107000   邮编 : 100102<br/>\"); //offset用来偏移，第一个参数是左右，第一个参数是上下。左和上是负的，右和下是正的\n\n          var infoWindow = new AMap.InfoWindow({\n            offset: new AMap.Pixel(0, -30)\n          });\n          infoWindow.setContent(e.target.content);\n          infoWindow.open(this.map, e.target.getPosition());\n        }\n\n        this.map.setFitView(); // 在图面添加工具条控件，工具条控件集成了缩放、平移、定位等功能按钮在内的组合控件\n\n        this.map.addControl(new AMap.ToolBar()); // 在图面添加比例尺控件，展示地图在当前层级和纬度下的比例尺\n\n        this.map.addControl(new AMap.Scale()); // 在图面添加鹰眼控件，在地图右下角显示地图的缩略图\n\n        this.map.addControl(new AMap.HawkEye({\n          isOpen: true\n        })); // 在图面添加定位控件，用来获取和展示用户主机所在的经纬度位置\n\n        this.map.addControl(new AMap.Geolocation());\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    initMap() {\n      const template = {\n        //titie:\"站点信息\",\n        content: [{\n          type: \"fields\",\n          fieldInfos: [{\n            fieldName: \"city\",\n            label: \"地区名称\"\n          }, {\n            fieldName: \"station\",\n            label: \"站点名称\"\n          }]\n        }]\n      };\n      const featurelayer = new FeatureLayer({\n        outFields: [\"city\", \"station\"],\n        url: \"http://localhost:6080/arcgis/rest/services/2000坐标/FeatureServer\",\n        popupTemplate: template\n      });\n      const map = new Map({\n        basemap: \"satellite\",\n        ground: \"world-elevation\",\n        layers: [featurelayer]\n      }); //这个view相当于地图视图容器，指定了div等等属性\n\n      const view = new SceneView({\n        container: \"viewDiv1\",\n        map: map,\n        center: [117, 32],\n        zoom: 14\n      }); //监听地图点击事件\n\n      view.on('click', event => {\n        view.hitTest(event).then(response => {\n          if ( //如果点击的是目标矢量图层 并且图层图形数量大于1 完成对目标矢量图层的筛选\n          response.results.length > 0 && response.results[0].graphic && response.results[0].graphic.layer === featurelayer) {\n            //console.log(response.results[0].graphic.attributes.city)\n            this.areaName = response.results[0].graphic.attributes.city + \"(\" + response.results[0].graphic.attributes.station + \")\"; //数据双向绑定 获取点击图块的名称\n            //调用selecFeature方法\n\n            selectFeature(response.results[0].graphic.attributes[featurelayer.objectIdField]);\n            console.log(response.results[0].graphic.attributes.station);\n            this.request.get(\"/nowatmospheredata/data?stationName=\" + response.results[0].graphic.attributes.station).then(res => {\n              //console.log(res)\n              //console.log(res.aqi)\n              this.aqi = res.aqi;\n              this.quality = res.quality;\n              this.PM2_5 = res.pm2_5;\n              this.SO2 = res.so2;\n              this.NO2 = res.no2;\n              this.O3 = res.o3;\n              this.PM10 = res.pm10;\n            }); //console.log(this.items)\n\n            this.items = [\"AQI指数:\" + this.aqi, \"空气质量:\" + this.quality];\n            this.visible = true; //let lat = Math.round(event.mapPoint.latitude * 1000000) / 1000000;\n            //let lon = Math.round(event.mapPoint.longitude * 1000000) / 1000000;\n            //alert(lon + \", \" + lat);\n          } else {\n            this.visible = false;\n          }\n        });\n      });\n\n      function selectFeature(objectId) {\n        featurelayer.queryFeatures({\n          objectIds: [objectId]\n        }).then(results => {\n          if (results.features.length > 0) {\n            //console.log(results.features[0])\n            console.log(results.fields.length);\n          }\n        });\n      }\n\n      view.ui.components = [];\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;EACAA,YADA;;EAEAC;IACA;MACA;MACAC,oIACA,kBADA,EACA,mBADA,EACA,mBADA,EACA,mBADA,EACA,mBADA,EACA,mBADA,EACA,mBADA,EAEA,mBAFA,EAEA,mBAFA,EAEA,mBAFA,EAEA,mBAFA,EAEA,iBAFA,EAEA,mBAFA,EAEA,mBAFA,EAGA,mBAHA,EAGA,mBAHA,EAGA,mBAHA,EAGA,mBAHA,EAGA,mBAHA,EAGA,mBAHA,EAGA,kBAHA,EAIA,mBAJA,EAIA,mBAJA,EAIA,mBAJA,EAIA,mBAJA,EAIA,mBAJA,EAIA,mBAJA,EAIA,iBAJA,EAKA,mBALA,EAKA,mBALA,EAKA,kBALA,EAKA,mBALA,EAKA,mBALA,EAKA,mBALA,EAKA,mBALA,EAMA,mBANA,EAMA,mBANA,EAMA,mBANA,EAMA,kBANA,EAMA,iBANA,EAMA,mBANA,EAMA,mBANA,EAOA,mBAPA,EAOA,mBAPA,EAOA,mBAPA,EAOA,kBAPA,EAOA,mBAPA,EAOA,mBAPA,EAOA,mBAPA,EAQA,mBARA,EAQA,mBARA,EAQA,mBARA,EAQA,kBARA,EAQA,mBARA,EAQA,kBARA,EAQA,kBARA,EASA,kBATA,EASA,kBATA,EASA,mBATA,EASA,mBATA,EASA,kBATA,EASA,mBATA,EASA,mBATA,EAUA,mBAVA,EAUA,mBAVA,EAUA,mBAVA,EAUA,mBAVA,EAUA,iBAVA,EAUA,mBAVA,EAUA,mBAVA,EAWA,kBAXA,EAWA,mBAXA,EAWA,mBAXA,EAWA,mBAXA,EAWA,mBAXA,EAWA,mBAXA,CAFA;MAeAC,YAfA;MAgBAC,cAhBA;MAgBA;MACAC,gBAjBA;MAiBA;MACAC,cAlBA;MAmBAC,UAnBA;MAoBAC,SApBA;MAqBAC,OArBA;MAsBAC,WAtBA;MAuBAC,SAvBA;MAwBAC,QAxBA;MAyBAC,OAzBA;MA0BAC,OA1BA;MA2BAC,MA3BA;MA4BAC,MA5BA;MA6BAC,aA7BA;MA8BAC,gBA9BA;MA+BAC,UA/BA,CA+BA;;IA/BA;EAiCA,CApCA;;EAqCAC;IACA;IACA;EACA,CAxCA;;EA2CAC;IACAC;MACA;QACA;QACA;QACA;MAGA,CANA,MAMA;QACA;QACA;QACA;MACA;IACA,CAbA;;IAcAC;MACA;QACA;UACA;QACA,CAHA,CAIA;;;QACA;MACA,CANA;IAOA,CAtBA;;IAuBAC;MACAC;QACAC,uCADA;QACA;QACAC,cAFA;QAEA;QACAC,iIAHA,CAGA;;MAHA,GAIAC,IAJA,CAIAC;QACA;;QACA;UAAA;UACAC,kBADA;UAEA;UACAC,cAHA;UAGA;UACAC,QAJA;UAIA;UACAC,2BALA;UAKA;UACAC,qBANA;UAOA;UACAC,gBARA;UASAC;QATA;QAYA;;QACA;UACAC;YACAC,wBADA;YAEAC;UAFA,GADA,CAKA;;UACAF;UACAA;UACAA;UACAA;YAAAG;UAAA;QACA;;QAIAH;QACAA;;QAMA;UACAA,4DADA,CAEA;;UACA;YAAAI;UAAA;UACAC;UACAA;QACA;;QAEA,sBA5CA,CA8CA;;QACA,wCA/CA,CAiDA;;QACA,sCAlDA,CAoDA;;QACA;UAAAC;QAAA,IArDA,CAwDA;;QACA;MAGA,CAhEA,EAgEAC,KAhEA,CAgEAC;QACAC;MACA,CAlEA;IAmEA,CA3FA;;IAgGAC;MACA;QACA;QACAC,UACA;UACAC,cADA;UAEAC,aACA;YACAC,iBADA;YAEAC;UAFA,CADA,EAKA;YACAD,oBADA;YAEAC;UAFA,CALA;QAFA,CADA;MAFA;MAmBA;QACAC,8BADA;QAEAC,sEAFA;QAGAC;MAHA;MAKA;QACAC,oBADA;QAEAC,yBAFA;QAGAC;MAHA,GAzBA,CA8BA;;MACA;QACAC,qBADA;QAEApB,QAFA;QAGAN,iBAHA;QAIAD;MAJA,GA/BA,CAuCA;;MACA4B;QACAA;UACA;UACAC,+BACAA,2BADA,IAEAA,kDAHA,EAIA;YACA;YACA,yHAFA,CAEA;YACA;;YACAC;YAEAhB;YACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YACA,CAVA,EAPA,CAkBA;;YACA;YACA,oBApBA,CAuBA;YACA;YACA;UACA,CA9BA,MA+BA;YACA;UACA;QACA,CAnCA;MAoCA,CArCA;;MAwCA;QAEAiB;UACAC;QADA,GAEApC,IAFA,CAEAqC;UACA;YACA;YACAnB;UACA;QACA,CAPA;MAQA;;MACAc;IACA;;EA5LA;AA3CA","names":["name","data","lngLat","areaName","isvisble","isvisble1","visible","result","items","aqi","quality","PM2_5","PM10","SO2","NO2","O3","CO","value1","m_longitudes","length","mounted","methods","changValue","initCount","initGapdeMap","AMapLoader","key","version","plugins","then","AMap","resizeEnable","viewMode","zoom","center","doubleClickZoom","dragEnable","keyboardEnable","marker","position","map","target","offset","infoWindow","isOpen","catch","e","console","initMap","content","type","fieldInfos","fieldName","label","outFields","url","popupTemplate","basemap","ground","layers","container","view","response","selectFeature","featurelayer","objectIds","results"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\r\n  <div  class=\"home_div\">\r\n    <div  class=\"map_title\">\r\n      <el-switch\r\n          v-model=\"value1\"\r\n          active-text=\"显示三维实景图\"\r\n          @change=\"changValue()\">\r\n      </el-switch>\r\n    </div>\r\n    <div v-show=\"isvisble\" id=\"viewDiv\" style=\"width: 100%;height: 100%;position:absolute;\"></div>\r\n    <div v-show=\"isvisble1\" id=\"viewDiv1\" style=\"width: 100%;height: 100%;position:absolute;\"></div>\r\n<!--    <div class=\"father\">-->\r\n\r\n<!--&lt;!&ndash;      <div class=\"son\">&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <h1>当前城市</h1>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <h2>AQI指数</h2>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </div>&ndash;&gt;-->\r\n<!--    </div>-->\r\n\r\n    <div v-show=\"visible\" style=\"position: absolute;right: 20px; bottom:400px\">\r\n      <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>{{ areaName }}</span>\r\n        </div>\r\n        <div v-for=\"item in items\" :key=\"item\" class=\"text item\">\r\n          {{item}}\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n\r\n    <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://js.arcgis.com/4.24/esri/themes/dark/main.css\"\r\n    />\r\n\r\n</div>\r\n\r\n<!-- arcgisapi样式  -->\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport Map from \"@arcgis/core/Map\";\r\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer.js\"\r\nimport MapView from \"@arcgis/core/views/MapView\";\r\nimport SceneView from \"@arcgis/core/views/SceneView\";\r\nimport FeatureForm from \"@arcgis/core/widgets/FeatureForm\";\r\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\r\nexport default {\r\n  name: \"Home\",\r\n  data() {\r\n    return {\r\n      //所有气象站点的经纬度\r\n      lngLat:[[117.1959,31.7848],[117.3072,31.8764],[117.2588,31.8707],[117.1604,31.9052],[117.25,31.8571],[117.266,31.9436],\r\n          [117.336,31.8586],[117.3027,31.7964],[117.2776,31.7385],[117.1318,31.8403],[117.3803,31.9147],[118.3714,31.4134],[118.3673,31.3131],\r\n          [118.4022,31.3839],[118.4209,31.3707],[118.4781,31.3225],[118.2746,31.2326],[117.396,32.939],[117.3605,32.9427],[117.4185,32.8911],\r\n          [117.3533,32.9673],[117.3145,32.8977],[117.3092,32.9314],[116.8305,32.7727],[117.0067,32.6524],[116.8569,32.5951],[116.8281,32.633],\r\n          [116.6325,32.6201],[117.0566,32.6531],[117.0108,32.5893],[118.5092,31.6837],[118.5024,31.6449],[118.5228,31.7231],[118.48,31.6928],\r\n          [118.6245,31.7241],[118.4918,31.6809],[116.8004,33.975],[116.8091,33.9007],[116.7856,33.9477],[116.8873,33.9836],[117.8177,30.9412],\r\n          [117.8059,30.9273],[117.7807,30.9413],[117.7439,30.8792],[117.846,30.9413],[117.8483,30.97],[117.0809,30.5177],[117.0331,30.5119],\r\n          [116.9896,30.6145],[117.0598,30.5351],[118.2903,29.6963],[118.327,29.7178],[118.1371,30.2756],[118.3093,32.3153],[118.3244,32.2786],\r\n          [118.3118,32.3038],[115.8277,32.8929],[115.8554,32.8605],[115.784,32.8892],[115.7901,32.8631],[115.836,32.9183],[116.989,33.6306],\r\n          [116.9509,33.666],[116.9708,33.591],[116.9884,33.6305],[116.9648,33.6252],[116.5079,31.737],[118.4738,31.7643],[116.4996,31.7905],\r\n          [116.5567,31.7886],[115.8072,33.8399],[115.7789,33.8518],[115.7633,33.8034],[117.47,30.6618],[117.4974,30.6539],[117.4918,30.6617],\r\n          [117.5627,30.695],[117.5038,30.6243],[118.7581,30.9454],[118.7385,30.9743],[118.7173,30.9427],[118.7724,30.9141]\r\n      ],\r\n      areaName:\"\",\r\n      isvisble:true,  //高德地图默认显示\r\n      isvisble1:false, //arcgisapi不默认显示\r\n      visible:false,\r\n      result:{},\r\n      items:[],\r\n      aqi:\"\",\r\n      quality:\"\",\r\n      PM2_5:\"\",\r\n      PM10:\"\",\r\n      SO2:\"\",\r\n      NO2:\"\",\r\n      O3:\"\",\r\n      CO:\"\",\r\n      value1:false,\r\n      m_longitudes:[],\r\n      length:\"\"//经度对象数组\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initCount();\r\n    this.initGapdeMap();\r\n  },\r\n\r\n\r\n  methods: {\r\n    changValue(){\r\n      if(this.value1) {\r\n        this.isvisble=false\r\n        this.isvisble1=true\r\n        this.initMap();\r\n\r\n\r\n      }else {\r\n        this.isvisble=true\r\n        this.isvisble1=false\r\n        this.initGapdeMap();\r\n      }\r\n    },\r\n    initCount(){\r\n      this.request.get(\"/nowatmospheredata/GetAllStation\").then(res=> {\r\n        for(var i=0;i<res.length;i++){\r\n          this.m_longitudes[i]=res[i].longitude\r\n        }\r\n        //console.log(this.m_longitudes.length)\r\n        this.length=this.m_longitudes.length\r\n      })\r\n    },\r\n    initGapdeMap(){\r\n      AMapLoader.load({\r\n        key: \"0e5904b2829e2e25ffcdecc5685b2209\",             // 申请好的Web端开发者Key，首次调用 load 时必填\r\n        version: \"2.0\",      // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\r\n        plugins: ['AMap.MoveAnimation', 'AMap.ToolBar', 'AMap.Scale', 'AMap.MapType', 'AMap.Geolocation', 'AMap.HawkEye', 'AMap.HeatMap'],       // 需要使用的的插件列表，如比例尺'AMap.Scale'等\r\n      }).then((AMap) => {\r\n        var _this = this;\r\n        this.map = new AMap.Map(\"viewDiv\", {  //设置地图容器id\r\n          resizeEnable: true,\r\n          //mapStyle: 'amap://styles/normal',\r\n          viewMode: \"3D\",    //是否为3D地图模式\r\n          zoom: 10,           //初始化地图级别\r\n          center: [118.3093, 32.3153], //初始化地图中心点位置\r\n          doubleClickZoom: true,\r\n          // 是否允许鼠标拖拽\r\n          dragEnable: true,\r\n          keyboardEnable: false,\r\n        });\r\n\r\n        let marker;\r\n        for (var i = 0; i < this.lngLat.length; i++) {\r\n          marker = new AMap.Marker({\r\n            position: this.lngLat[i],\r\n            map: this.map,\r\n          });\r\n          // marker.content = \"我是第\" + (i + 1) + \"个Marker\";\r\n          marker.content = [];\r\n          marker.content.push(\"地址 :北京市朝阳区望京阜荣街10号首开广场4层</div></div><br/>\")\r\n          marker.on(\"click\", markerClick);\r\n          marker.emit(\"click\", { target: marker });\r\n        }\r\n\r\n\r\n\r\n        marker.content.push('<div><div><img style=\"float:left;\" src=\" https://webapi.amap.com/images/autonavi.png \"/></div>')\r\n        marker.content.push('<div style=\"padding:0px 0px 0px 4px;\"><b>高德软件</b><br/>')\r\n\r\n\r\n\r\n\r\n\r\n        function markerClick(e){\r\n          marker.content.push(\"电话 : 010-84107000   邮编 : 100102<br/>\")\r\n          //offset用来偏移，第一个参数是左右，第一个参数是上下。左和上是负的，右和下是正的\r\n          var infoWindow = new AMap.InfoWindow({offset: new AMap.Pixel(0, -30)});\r\n          infoWindow.setContent(e.target.content);\r\n          infoWindow.open(this.map, e.target.getPosition());\r\n        }\r\n\r\n        this.map.setFitView();\r\n\r\n        // 在图面添加工具条控件，工具条控件集成了缩放、平移、定位等功能按钮在内的组合控件\r\n        this.map.addControl(new AMap.ToolBar());\r\n\r\n        // 在图面添加比例尺控件，展示地图在当前层级和纬度下的比例尺\r\n        this.map.addControl(new AMap.Scale());\r\n\r\n        // 在图面添加鹰眼控件，在地图右下角显示地图的缩略图\r\n        this.map.addControl(new AMap.HawkEye({isOpen: true}));\r\n\r\n\r\n        // 在图面添加定位控件，用来获取和展示用户主机所在的经纬度位置\r\n        this.map.addControl(new AMap.Geolocation());\r\n\r\n\r\n      }).catch(e => {\r\n        console.log(e);\r\n      })\r\n    },\r\n\r\n\r\n\r\n\r\n    initMap(){\r\n      const template={\r\n        //titie:\"站点信息\",\r\n        content:[\r\n          {\r\n            type:\"fields\",\r\n            fieldInfos:[\r\n              {\r\n                fieldName:\"city\",\r\n                label:\"地区名称\"\r\n              },\r\n              {\r\n                fieldName:\"station\",\r\n                label:\"站点名称\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n\r\n      const featurelayer=new FeatureLayer({\r\n        outFields:[\"city\",\"station\"],\r\n        url:\"http://localhost:6080/arcgis/rest/services/2000坐标/FeatureServer\",\r\n        popupTemplate:template\r\n      });\r\n      const map=new Map({\r\n        basemap: \"satellite\",\r\n        ground:\"world-elevation\",\r\n        layers: [featurelayer]\r\n      })\r\n      //这个view相当于地图视图容器，指定了div等等属性\r\n      const view=new  SceneView({\r\n        container: \"viewDiv1\",\r\n        map: map,\r\n        center: [117, 32],\r\n        zoom: 14,\r\n\r\n      });\r\n\r\n      //监听地图点击事件\r\n      view.on('click', event => {\r\n        view.hitTest(event).then((response) => {\r\n          if (    //如果点击的是目标矢量图层 并且图层图形数量大于1 完成对目标矢量图层的筛选\r\n              response.results.length > 0 &&\r\n              response.results[0].graphic &&\r\n              response.results[0].graphic.layer === featurelayer\r\n          ){\r\n            //console.log(response.results[0].graphic.attributes.city)\r\n            this.areaName=response.results[0].graphic.attributes.city+\"(\"+response.results[0].graphic.attributes.station+\")\"   //数据双向绑定 获取点击图块的名称\r\n            //调用selecFeature方法\r\n            selectFeature(response.results[0].graphic.attributes[featurelayer.objectIdField])\r\n\r\n            console.log(response.results[0].graphic.attributes.station)\r\n            this.request.get(\"/nowatmospheredata/data?stationName=\"+response.results[0].graphic.attributes.station).then(res => {\r\n              //console.log(res)\r\n              //console.log(res.aqi)\r\n              this.aqi=res.aqi\r\n              this.quality=res.quality\r\n              this.PM2_5=res.pm2_5\r\n              this.SO2=res.so2\r\n              this.NO2=res.no2\r\n              this.O3=res.o3\r\n              this.PM10=res.pm10\r\n            })\r\n            //console.log(this.items)\r\n            this.items=[\"AQI指数:\"+this.aqi,\"空气质量:\"+this.quality]\r\n            this.visible=true\r\n\r\n\r\n            //let lat = Math.round(event.mapPoint.latitude * 1000000) / 1000000;\r\n            //let lon = Math.round(event.mapPoint.longitude * 1000000) / 1000000;\r\n            //alert(lon + \", \" + lat);\r\n          }\r\n          else{\r\n            this.visible=false\r\n          }\r\n        });\r\n      });\r\n\r\n\r\n      function selectFeature(objectId){\r\n\r\n        featurelayer.queryFeatures({\r\n          objectIds:[objectId],\r\n        }).then((results=>{\r\n          if(results.features.length>0){\r\n            //console.log(results.features[0])\r\n            console.log(results.fields.length)\r\n          }\r\n        }))\r\n      }\r\n      view.ui.components=[];\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n\r\n\r\n.box-card {\r\n  width: 240px;\r\n}\r\n\r\n.home_div{\r\n  padding:0px;\r\n  margin: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n\r\n\r\n.map_title{\r\n  position:absolute;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 50px;\r\n\r\n}\r\n\r\n\r\n.content-window-card {\r\n  position: relative;\r\n  box-shadow: none;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: auto;\r\n  padding: 0;\r\n}\r\n\r\n.content-window-card p {\r\n  height: 2rem;\r\n}\r\n\r\n.custom-info {\r\n  border: solid 1px silver;\r\n}\r\n\r\ndiv.info-top {\r\n  position: relative;\r\n  background: none repeat scroll 0 0 #F9F9F9;\r\n  border-bottom: 1px solid #CCC;\r\n  border-radius: 5px 5px 0 0;\r\n}\r\n\r\ndiv.info-top div {\r\n  display: inline-block;\r\n  color: #333333;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  line-height: 31px;\r\n  padding: 0 10px;\r\n}\r\n\r\ndiv.info-top img {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  transition-duration: 0.25s;\r\n}\r\n\r\ndiv.info-top img:hover {\r\n  box-shadow: 0px 0px 5px #000;\r\n}\r\n\r\ndiv.info-middle {\r\n  font-size: 12px;\r\n  padding: 10px 6px;\r\n  line-height: 20px;\r\n}\r\n\r\ndiv.info-bottom {\r\n  height: 0px;\r\n  width: 100%;\r\n  clear: both;\r\n  text-align: center;\r\n}\r\n\r\ndiv.info-bottom img {\r\n  position: relative;\r\n  z-index: 104;\r\n}\r\n\r\nspan {\r\n  margin-left: 5px;\r\n  font-size: 11px;\r\n}\r\n\r\n.info-middle img {\r\n  float: left;\r\n  margin-right: 6px;\r\n}\r\n.home_div{\r\n  padding:0px;\r\n  margin: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n#container{\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n}\r\n.map_title{\r\n  position:absolute;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 50px;\r\n\r\n}\r\n.amap-logo{\r\n  display: none;\r\n}\r\n.amap-copyright {\r\n  opacity:0;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}