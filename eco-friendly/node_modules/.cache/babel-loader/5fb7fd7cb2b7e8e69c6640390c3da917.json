{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport n from \"../rest/support/ClassBreaksDefinition.js\";\nimport { createGenerateRendererClassBreaks as e } from \"../rest/support/generateRendererUtils.js\";\nconst t = \"<Null>\",\n      i = \"equal-interval\",\n      l = 1,\n      a = 5,\n      o = 10,\n      r = /\\s*(\\+|-)?((\\d+(\\.\\d+)?)|(\\.\\d+))\\s*/gi,\n      u = new Set([\"esriFieldTypeInteger\", \"esriFieldTypeSmallInteger\", \"esriFieldTypeSingle\", \"esriFieldTypeDouble\"]),\n      s = [\"min\", \"max\", \"avg\", \"stddev\", \"count\", \"sum\", \"variance\", \"nullcount\", \"median\"];\n\nfunction c(n) {\n  return null == n || \"string\" == typeof n && !n ? t : n;\n}\n\nfunction m(n) {\n  const e = null != n.normalizationField || null != n.normalizationType,\n        t = null != n.minValue || null != n.maxValue,\n        i = !!n.sqlExpression && n.supportsSQLExpression;\n  return !e && !t && !i;\n}\n\nfunction f(n) {\n  const e = n.returnDistinct ? [...new Set(n.values)] : n.values,\n        t = e.filter(n => null != n).length,\n        i = {\n    count: t\n  };\n  return n.supportsNullCount && (i.nullcount = e.length - t), n.percentileParams && (i.median = p(e, n.percentileParams)), i;\n}\n\nfunction d(n) {\n  const {\n    values: e,\n    useSampleStdDev: t,\n    supportsNullCount: i\n  } = n;\n  let l = Number.POSITIVE_INFINITY,\n      a = Number.NEGATIVE_INFINITY,\n      o = null,\n      r = null,\n      u = null,\n      s = null,\n      c = 0;\n  const m = null == n.minValue ? -1 / 0 : n.minValue,\n        f = null == n.maxValue ? 1 / 0 : n.maxValue;\n\n  for (const p of e) Number.isFinite(p) ? p >= m && p <= f && (o += p, l = Math.min(l, p), a = Math.max(a, p), c++) : \"string\" == typeof p && c++;\n\n  if (c && null != o) {\n    r = o / c;\n    let n = 0;\n\n    for (const t of e) Number.isFinite(t) && t >= m && t <= f && (n += (t - r) ** 2);\n\n    s = t ? c > 1 ? n / (c - 1) : 0 : c > 0 ? n / c : 0, u = Math.sqrt(s);\n  } else l = null, a = null;\n\n  const d = {\n    avg: r,\n    count: c,\n    max: a,\n    min: l,\n    stddev: u,\n    sum: o,\n    variance: s\n  };\n  return i && (d.nullcount = e.length - c), n.percentileParams && (d.median = p(e, n.percentileParams)), d;\n}\n\nfunction p(n, e) {\n  const {\n    fieldType: t,\n    value: i,\n    orderBy: l,\n    isDiscrete: a\n  } = e,\n        o = v(t, \"desc\" === l);\n  if (0 === (n = [...n].filter(n => null != n).sort((n, e) => o(n, e))).length) return null;\n  if (i <= 0) return n[0];\n  if (i >= 1) return n[n.length - 1];\n  const r = (n.length - 1) * i,\n        u = Math.floor(r),\n        s = u + 1,\n        c = r % 1,\n        m = n[u],\n        f = n[s];\n  return s >= n.length || a || \"string\" == typeof m || \"string\" == typeof f ? m : m * (1 - c) + f * c;\n}\n\nfunction v(n, e) {\n  const t = e ? 1 : -1,\n        i = h(e),\n        l = b(e);\n  if (!(!!n && [\"esriFieldTypeDate\", \"esriFieldTypeString\", \"esriFieldTypeGUID\", \"esriFieldTypeGlobalID\", ...u].includes(n))) return (n, e) => \"number\" == typeof n && \"number\" == typeof e ? i(n, e) : \"string\" == typeof n && \"string\" == typeof e ? l(n, e) : t;\n  if (\"esriFieldTypeDate\" === n) return (n, e) => {\n    const l = new Date(n).getTime(),\n          a = new Date(e).getTime();\n    return isNaN(l) || isNaN(a) ? t : i(l, a);\n  };\n  if (u.has(n)) return (n, e) => i(n, e);\n  if (\"esriFieldTypeString\" === n) return (n, e) => l(n, e);\n\n  if (\"esriFieldTypeGUID\" === n || \"esriFieldTypeGlobalID\" === n) {\n    const n = b(e);\n    return (e, t) => n(g(e), g(t));\n  }\n\n  return e ? (n, e) => 1 : (n, e) => -1;\n}\n\nfunction b(n) {\n  return n ? (n, e) => (n = n?.toUpperCase(), e = e?.toUpperCase(), n > e ? -1 : n < e ? 1 : 0) : (n, e) => (n = n?.toUpperCase(), e = e?.toUpperCase(), n < e ? -1 : n > e ? 1 : 0);\n}\n\nfunction h(n) {\n  return n ? (n, e) => e - n : (n, e) => n - e;\n}\n\nfunction g(n) {\n  return n.substr(24, 12) + n.substr(19, 4) + n.substr(16, 2) + n.substr(14, 2) + n.substr(11, 2) + n.substr(9, 2) + n.substr(6, 2) + n.substr(4, 2) + n.substr(2, 2) + n.substr(0, 2);\n}\n\nfunction V(n, e) {\n  let t;\n\n  for (t in n) s.includes(t) && (Number.isFinite(n[t]) || (n[t] = null));\n\n  return e ? ([\"avg\", \"stddev\", \"variance\"].forEach(e => {\n    null != n[e] && (n[e] = Math.ceil(n[e]));\n  }), n) : n;\n}\n\nfunction T(n) {\n  const e = {};\n\n  for (let t of n) (null == t || \"string\" == typeof t && \"\" === t.trim()) && (t = null), null == e[t] ? e[t] = {\n    count: 1,\n    data: t\n  } : e[t].count++;\n\n  return {\n    count: e\n  };\n}\n\nfunction y(n) {\n  return \"coded-value\" !== n?.type ? [] : n.codedValues.map(n => n.code);\n}\n\nfunction F(n, e, t, i) {\n  const l = n.count,\n        a = [];\n\n  if (t && e) {\n    const n = [],\n          t = y(e[0]);\n\n    for (const l of t) if (e[1]) {\n      const t = y(e[1]);\n\n      for (const a of t) if (e[2]) {\n        const t = y(e[2]);\n\n        for (const e of t) n.push(`${c(l)}${i}${c(a)}${i}${c(e)}`);\n      } else n.push(`${c(l)}${i}${c(a)}`);\n    } else n.push(l);\n\n    for (const e of n) l.hasOwnProperty(e) || (l[e] = {\n      data: e,\n      count: 0\n    });\n  }\n\n  for (const o in l) {\n    const n = l[o];\n    a.push({\n      value: n.data,\n      count: n.count,\n      label: n.label\n    });\n  }\n\n  return {\n    uniqueValueInfos: a\n  };\n}\n\nfunction x(n, e, t, i) {\n  let l = null;\n\n  switch (e) {\n    case \"log\":\n      0 !== n && (l = Math.log(n) * Math.LOG10E);\n      break;\n\n    case \"percent-of-total\":\n      Number.isFinite(i) && 0 !== i && (l = n / i * 100);\n      break;\n\n    case \"field\":\n      Number.isFinite(t) && 0 !== t && (l = n / t);\n      break;\n\n    case \"natural-log\":\n      n > 0 && (l = Math.log(n));\n      break;\n\n    case \"square-root\":\n      n > 0 && (l = n ** .5);\n  }\n\n  return l;\n}\n\nfunction D(n, t) {\n  const i = I({\n    field: t.field,\n    normalizationType: t.normalizationType,\n    normalizationField: t.normalizationField,\n    classificationMethod: t.classificationMethod,\n    standardDeviationInterval: t.standardDeviationInterval,\n    breakCount: t.numClasses || a\n  });\n  return n = z(n, t.minValue, t.maxValue), e({\n    definition: i,\n    values: n,\n    normalizationTotal: t.normalizationTotal\n  });\n}\n\nfunction z(n, e, t) {\n  return e = e ?? -1 / 0, t = t ?? 1 / 0, n.filter(n => Number.isFinite(n) && n >= e && n <= t);\n}\n\nfunction I(e) {\n  const t = e.field,\n        a = e.classificationMethod || i,\n        o = e.normalizationType,\n        r = e.normalizationField,\n        u = new n();\n  return u.classificationField = t, u.breakCount = e.breakCount, u.classificationMethod = a, u.standardDeviationInterval = \"standard-deviation\" === a ? e.standardDeviationInterval || l : void 0, u.normalizationType = o, u.normalizationField = \"field\" === o ? r : void 0, u;\n}\n\nfunction N(n, e) {\n  let t = n.classBreaks;\n  const i = t.length,\n        l = t[0].minValue,\n        a = t[i - 1].maxValue,\n        o = \"standard-deviation\" === e,\n        u = r;\n  return t = t.map(n => {\n    const e = n.label,\n          t = {\n      minValue: n.minValue,\n      maxValue: n.maxValue,\n      label: e\n    };\n\n    if (o && e) {\n      const n = e.match(u).map(n => +n.trim());\n      2 === n.length ? (t.minStdDev = n[0], t.maxStdDev = n[1], n[0] < 0 && n[1] > 0 && (t.hasAvg = !0)) : 1 === n.length && (e.includes(\"<\") ? (t.minStdDev = null, t.maxStdDev = n[0]) : e.includes(\">\") && (t.minStdDev = n[0], t.maxStdDev = null));\n    }\n\n    return t;\n  }), {\n    minValue: l,\n    maxValue: a,\n    classBreakInfos: t,\n    normalizationTotal: n.normalizationTotal\n  };\n}\n\nfunction S(n, e) {\n  const {\n    min: t,\n    max: i,\n    intervals: l\n  } = M(n, e),\n        a = l.map((n, e) => ({\n    minValue: l[e][0],\n    maxValue: l[e][1],\n    count: 0\n  }));\n\n  for (const o of n) if (null != o && o >= t && o <= i) {\n    const n = C(l, o);\n    n > -1 && a[n].count++;\n  }\n\n  return {\n    bins: a,\n    minValue: t,\n    maxValue: i,\n    normalizationTotal: e.normalizationTotal\n  };\n}\n\nfunction M(n, e) {\n  const {\n    field: t,\n    classificationMethod: i,\n    standardDeviationInterval: l,\n    normalizationType: a,\n    normalizationField: r,\n    normalizationTotal: u,\n    minValue: s,\n    maxValue: c\n  } = e,\n        f = e.numBins || o;\n  let p = null,\n      v = null,\n      b = null;\n\n  if ((!i || \"equal-interval\" === i) && !a) {\n    if (null != s && null != c) p = s, v = c;else {\n      const e = d({\n        values: n,\n        minValue: s,\n        maxValue: c,\n        useSampleStdDev: !a,\n        supportsNullCount: m({\n          normalizationType: a,\n          normalizationField: r,\n          minValue: s,\n          maxValue: c\n        })\n      });\n      p = e.min, v = e.max;\n    }\n    b = k(p, v, f);\n  } else {\n    const {\n      classBreaks: e\n    } = D(n, {\n      field: t,\n      normalizationType: a,\n      normalizationField: r,\n      normalizationTotal: u,\n      classificationMethod: i,\n      standardDeviationInterval: l,\n      minValue: s,\n      maxValue: c,\n      numClasses: f\n    });\n    p = e[0].minValue, v = e[e.length - 1].maxValue, b = e.map(n => [n.minValue, n.maxValue]);\n  }\n\n  return {\n    min: p,\n    max: v,\n    intervals: b\n  };\n}\n\nfunction C(n, e) {\n  let t = -1;\n\n  for (let i = n.length - 1; i >= 0; i--) {\n    if (e >= n[i][0]) {\n      t = i;\n      break;\n    }\n  }\n\n  return t;\n}\n\nfunction k(n, e, t) {\n  const i = (e - n) / t,\n        l = [];\n  let a,\n      o = n;\n\n  for (let r = 1; r <= t; r++) a = o + i, a = Number(a.toFixed(16)), l.push([o, r === t ? e : a]), o = a;\n\n  return l;\n}\n\nexport { D as calculateClassBreaks, S as calculateHistogram, p as calculatePercentile, d as calculateStatistics, f as calculateStringStatistics, T as calculateUniqueValuesCount, I as createClassBreaksDefinition, F as createUVResult, v as getAttributeComparator, k as getEqualIntervalBins, x as getNormalizedValue, m as isNullCountSupported, c as processNullValue, V as processSummaryStatisticsResult, N as resolveCBResult, s as statisticTypes };","map":{"version":3,"names":["n","createGenerateRendererClassBreaks","e","t","i","l","a","o","r","u","Set","s","c","m","normalizationField","normalizationType","minValue","maxValue","sqlExpression","supportsSQLExpression","f","returnDistinct","values","filter","length","count","supportsNullCount","nullcount","percentileParams","median","p","d","useSampleStdDev","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","isFinite","Math","min","max","sqrt","avg","stddev","sum","variance","fieldType","value","orderBy","isDiscrete","v","sort","floor","h","b","includes","Date","getTime","isNaN","has","g","toUpperCase","substr","V","forEach","ceil","T","trim","data","y","type","codedValues","map","code","F","push","hasOwnProperty","label","uniqueValueInfos","x","log","LOG10E","D","I","field","classificationMethod","standardDeviationInterval","breakCount","numClasses","z","definition","normalizationTotal","classificationField","N","classBreaks","match","minStdDev","maxStdDev","hasAvg","classBreakInfos","S","intervals","M","C","bins","numBins","k","toFixed","calculateClassBreaks","calculateHistogram","calculatePercentile","calculateStatistics","calculateStringStatistics","calculateUniqueValuesCount","createClassBreaksDefinition","createUVResult","getAttributeComparator","getEqualIntervalBins","getNormalizedValue","isNullCountSupported","processNullValue","processSummaryStatisticsResult","resolveCBResult","statisticTypes"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/statistics/utils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport n from\"../rest/support/ClassBreaksDefinition.js\";import{createGenerateRendererClassBreaks as e}from\"../rest/support/generateRendererUtils.js\";const t=\"<Null>\",i=\"equal-interval\",l=1,a=5,o=10,r=/\\s*(\\+|-)?((\\d+(\\.\\d+)?)|(\\.\\d+))\\s*/gi,u=new Set([\"esriFieldTypeInteger\",\"esriFieldTypeSmallInteger\",\"esriFieldTypeSingle\",\"esriFieldTypeDouble\"]),s=[\"min\",\"max\",\"avg\",\"stddev\",\"count\",\"sum\",\"variance\",\"nullcount\",\"median\"];function c(n){return null==n||\"string\"==typeof n&&!n?t:n}function m(n){const e=null!=n.normalizationField||null!=n.normalizationType,t=null!=n.minValue||null!=n.maxValue,i=!!n.sqlExpression&&n.supportsSQLExpression;return!e&&!t&&!i}function f(n){const e=n.returnDistinct?[...new Set(n.values)]:n.values,t=e.filter((n=>null!=n)).length,i={count:t};return n.supportsNullCount&&(i.nullcount=e.length-t),n.percentileParams&&(i.median=p(e,n.percentileParams)),i}function d(n){const{values:e,useSampleStdDev:t,supportsNullCount:i}=n;let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,o=null,r=null,u=null,s=null,c=0;const m=null==n.minValue?-1/0:n.minValue,f=null==n.maxValue?1/0:n.maxValue;for(const p of e)Number.isFinite(p)?p>=m&&p<=f&&(o+=p,l=Math.min(l,p),a=Math.max(a,p),c++):\"string\"==typeof p&&c++;if(c&&null!=o){r=o/c;let n=0;for(const t of e)Number.isFinite(t)&&t>=m&&t<=f&&(n+=(t-r)**2);s=t?c>1?n/(c-1):0:c>0?n/c:0,u=Math.sqrt(s)}else l=null,a=null;const d={avg:r,count:c,max:a,min:l,stddev:u,sum:o,variance:s};return i&&(d.nullcount=e.length-c),n.percentileParams&&(d.median=p(e,n.percentileParams)),d}function p(n,e){const{fieldType:t,value:i,orderBy:l,isDiscrete:a}=e,o=v(t,\"desc\"===l);if(0===(n=[...n].filter((n=>null!=n)).sort(((n,e)=>o(n,e)))).length)return null;if(i<=0)return n[0];if(i>=1)return n[n.length-1];const r=(n.length-1)*i,u=Math.floor(r),s=u+1,c=r%1,m=n[u],f=n[s];return s>=n.length||a||\"string\"==typeof m||\"string\"==typeof f?m:m*(1-c)+f*c}function v(n,e){const t=e?1:-1,i=h(e),l=b(e);if(!(!!n&&[\"esriFieldTypeDate\",\"esriFieldTypeString\",\"esriFieldTypeGUID\",\"esriFieldTypeGlobalID\",...u].includes(n)))return(n,e)=>\"number\"==typeof n&&\"number\"==typeof e?i(n,e):\"string\"==typeof n&&\"string\"==typeof e?l(n,e):t;if(\"esriFieldTypeDate\"===n)return(n,e)=>{const l=new Date(n).getTime(),a=new Date(e).getTime();return isNaN(l)||isNaN(a)?t:i(l,a)};if(u.has(n))return(n,e)=>i(n,e);if(\"esriFieldTypeString\"===n)return(n,e)=>l(n,e);if(\"esriFieldTypeGUID\"===n||\"esriFieldTypeGlobalID\"===n){const n=b(e);return(e,t)=>n(g(e),g(t))}return e?(n,e)=>1:(n,e)=>-1}function b(n){return n?(n,e)=>(n=n?.toUpperCase(),e=e?.toUpperCase(),n>e?-1:n<e?1:0):(n,e)=>(n=n?.toUpperCase(),e=e?.toUpperCase(),n<e?-1:n>e?1:0)}function h(n){return n?(n,e)=>e-n:(n,e)=>n-e}function g(n){return n.substr(24,12)+n.substr(19,4)+n.substr(16,2)+n.substr(14,2)+n.substr(11,2)+n.substr(9,2)+n.substr(6,2)+n.substr(4,2)+n.substr(2,2)+n.substr(0,2)}function V(n,e){let t;for(t in n)s.includes(t)&&(Number.isFinite(n[t])||(n[t]=null));return e?([\"avg\",\"stddev\",\"variance\"].forEach((e=>{null!=n[e]&&(n[e]=Math.ceil(n[e]))})),n):n}function T(n){const e={};for(let t of n)(null==t||\"string\"==typeof t&&\"\"===t.trim())&&(t=null),null==e[t]?e[t]={count:1,data:t}:e[t].count++;return{count:e}}function y(n){return\"coded-value\"!==n?.type?[]:n.codedValues.map((n=>n.code))}function F(n,e,t,i){const l=n.count,a=[];if(t&&e){const n=[],t=y(e[0]);for(const l of t)if(e[1]){const t=y(e[1]);for(const a of t)if(e[2]){const t=y(e[2]);for(const e of t)n.push(`${c(l)}${i}${c(a)}${i}${c(e)}`)}else n.push(`${c(l)}${i}${c(a)}`)}else n.push(l);for(const e of n)l.hasOwnProperty(e)||(l[e]={data:e,count:0})}for(const o in l){const n=l[o];a.push({value:n.data,count:n.count,label:n.label})}return{uniqueValueInfos:a}}function x(n,e,t,i){let l=null;switch(e){case\"log\":0!==n&&(l=Math.log(n)*Math.LOG10E);break;case\"percent-of-total\":Number.isFinite(i)&&0!==i&&(l=n/i*100);break;case\"field\":Number.isFinite(t)&&0!==t&&(l=n/t);break;case\"natural-log\":n>0&&(l=Math.log(n));break;case\"square-root\":n>0&&(l=n**.5)}return l}function D(n,t){const i=I({field:t.field,normalizationType:t.normalizationType,normalizationField:t.normalizationField,classificationMethod:t.classificationMethod,standardDeviationInterval:t.standardDeviationInterval,breakCount:t.numClasses||a});return n=z(n,t.minValue,t.maxValue),e({definition:i,values:n,normalizationTotal:t.normalizationTotal})}function z(n,e,t){return e=e??-1/0,t=t??1/0,n.filter((n=>Number.isFinite(n)&&n>=e&&n<=t))}function I(e){const t=e.field,a=e.classificationMethod||i,o=e.normalizationType,r=e.normalizationField,u=new n;return u.classificationField=t,u.breakCount=e.breakCount,u.classificationMethod=a,u.standardDeviationInterval=\"standard-deviation\"===a?e.standardDeviationInterval||l:void 0,u.normalizationType=o,u.normalizationField=\"field\"===o?r:void 0,u}function N(n,e){let t=n.classBreaks;const i=t.length,l=t[0].minValue,a=t[i-1].maxValue,o=\"standard-deviation\"===e,u=r;return t=t.map((n=>{const e=n.label,t={minValue:n.minValue,maxValue:n.maxValue,label:e};if(o&&e){const n=e.match(u).map((n=>+n.trim()));2===n.length?(t.minStdDev=n[0],t.maxStdDev=n[1],n[0]<0&&n[1]>0&&(t.hasAvg=!0)):1===n.length&&(e.includes(\"<\")?(t.minStdDev=null,t.maxStdDev=n[0]):e.includes(\">\")&&(t.minStdDev=n[0],t.maxStdDev=null))}return t})),{minValue:l,maxValue:a,classBreakInfos:t,normalizationTotal:n.normalizationTotal}}function S(n,e){const{min:t,max:i,intervals:l}=M(n,e),a=l.map(((n,e)=>({minValue:l[e][0],maxValue:l[e][1],count:0})));for(const o of n)if(null!=o&&o>=t&&o<=i){const n=C(l,o);n>-1&&a[n].count++}return{bins:a,minValue:t,maxValue:i,normalizationTotal:e.normalizationTotal}}function M(n,e){const{field:t,classificationMethod:i,standardDeviationInterval:l,normalizationType:a,normalizationField:r,normalizationTotal:u,minValue:s,maxValue:c}=e,f=e.numBins||o;let p=null,v=null,b=null;if((!i||\"equal-interval\"===i)&&!a){if(null!=s&&null!=c)p=s,v=c;else{const e=d({values:n,minValue:s,maxValue:c,useSampleStdDev:!a,supportsNullCount:m({normalizationType:a,normalizationField:r,minValue:s,maxValue:c})});p=e.min,v=e.max}b=k(p,v,f)}else{const{classBreaks:e}=D(n,{field:t,normalizationType:a,normalizationField:r,normalizationTotal:u,classificationMethod:i,standardDeviationInterval:l,minValue:s,maxValue:c,numClasses:f});p=e[0].minValue,v=e[e.length-1].maxValue,b=e.map((n=>[n.minValue,n.maxValue]))}return{min:p,max:v,intervals:b}}function C(n,e){let t=-1;for(let i=n.length-1;i>=0;i--){if(e>=n[i][0]){t=i;break}}return t}function k(n,e,t){const i=(e-n)/t,l=[];let a,o=n;for(let r=1;r<=t;r++)a=o+i,a=Number(a.toFixed(16)),l.push([o,r===t?e:a]),o=a;return l}export{D as calculateClassBreaks,S as calculateHistogram,p as calculatePercentile,d as calculateStatistics,f as calculateStringStatistics,T as calculateUniqueValuesCount,I as createClassBreaksDefinition,F as createUVResult,v as getAttributeComparator,k as getEqualIntervalBins,x as getNormalizedValue,m as isNullCountSupported,c as processNullValue,V as processSummaryStatisticsResult,N as resolveCBResult,s as statisticTypes};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}