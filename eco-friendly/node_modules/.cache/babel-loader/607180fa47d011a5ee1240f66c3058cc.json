{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { equals as e } from \"../../../core/arrayUtils.js\";\nimport { lerp as t } from \"../../../core/mathUtils.js\";\nimport { isSome as r, isNone as i, mapOr as s } from \"../../../core/maybe.js\";\nimport { empty as a } from \"../../../geometry/support/aaBoundingBox.js\";\nimport \"../../../core/has.js\";\nimport \"../../../geometry/Extent.js\";\nimport \"../../../geometry/support/Ellipsoid.js\";\nimport { glLayout as o } from \"../support/buffer/glUtil.js\";\nimport { sampleElevationOrZero as n } from \"./ElevationData.js\";\nimport { GeometryState as l } from \"./GeometryState.js\";\nimport \"./interfaces.js\";\nimport { LayerClass as h } from \"./LayerClass.js\";\nimport { PatchGeometry as d, releaseGeometry as u } from \"./PatchGeometry.js\";\nimport { neighborEdgeIndices as g, internalAssert as m, oppositeEdge as c, eps as p, neighborCornerIndices as f, oppositeCorner as y } from \"./terrainUtils.js\";\nimport { TextureFader as _, ActivationTime as x } from \"./TextureFader.js\";\nexport { ActivationTime } from \"./TextureFader.js\";\nimport \"./Tile.js\";\nimport v from \"./TileOverlayData.js\";\nimport { fallsWithinLayer as b } from \"./tileUtils.js\";\nimport { Default3D as D } from \"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";\nimport { BufferObject as C } from \"../../webgl/BufferObject.js\";\nimport { VertexArrayObject as S } from \"../../webgl/VertexArrayObject.js\";\n\nclass T {\n  constructor() {\n    this.geometryInfo = new d(), this.intersectionData = null, this.geometryState = null, this._textureRef = new _(() => this.tile.surface.textureFadeDuration), this.overlay = new v(), this._geometryStateChangedSinceLastUpdate = !0, this._hasGeometry = !1, this._numVerticesPerSideChanged = !1, this._samplerDataChanged = !1, this._edgeResolutionChanged = !1, this._edgeNeighborChanged = !1, this._cornerElevationChanged = !1, this._clippingAreaChanged = !1, this._wireframeChanged = !1;\n  }\n\n  get tile() {\n    return this._tile;\n  }\n\n  init(e) {\n    this._tile = e, this.clear();\n    const t = this.geometryInfo;\n    t.indices = null, t.vertexAttributes = null, a(t.boundingBox), t.indexCount = 0, t.numVerticesPerSide = 0, this.intersectionData = null, this.geometryState = new l(), this.localOrigin = null, this.overlay.clear();\n  }\n\n  clear() {\n    this._releaseGeometry(), this.releaseTexture(), this._textureRef.clear();\n  }\n\n  updateGeometryIfChanged(e, t) {\n    const r = this.updateGeometryStateAndPrepareForGeometryGeneration(t);\n    this._hasGeometry = !0;\n    return this.updateNeighborDataAndGeometryIfNeeded(r, e);\n  }\n\n  updateNeighborDataAndGeometryIfNeeded(e = !1, t = this.vao.context) {\n    const r = this._updateNeighborData(),\n          i = e || this._geometryStateChangedSinceLastUpdate || r;\n\n    return i && (this._updateGeometry(t), this._geometryStateChangedSinceLastUpdate = !1), i;\n  }\n\n  _calculateEdgeResolution(e, t) {\n    const s = this.tile,\n          a = this.geometryState.numVerticesPerSide - 1;\n\n    if (!s.surface.isGlobal) {\n      const t = s.surface.extent;\n      if (r(t) && (0 === e && s.extent[3] > t[3] || 1 === e && s.extent[2] > t[2] || 2 === e && s.extent[1] < t[1] || 3 === e && s.extent[0] < t[0])) return a;\n    }\n\n    const o = s.level,\n          n = g[e],\n          l = t || s.findNeighborTile(n, e => e.isLoaded || e.level === o);\n    if (!l || l.isLeaf && !l.isLoaded) return m(i(s.surface?.rootTiles) || s.surface.updatingRootTiles || !s.shouldHaveNeighbor(n)), a;\n\n    if (l.isLoaded) {\n      const t = l,\n            r = t.renderData.geometryState,\n            i = o - t.level;\n\n      if (0 === i) {\n        const e = r.numVerticesPerSide - 1;\n        return Math.max(e, a);\n      }\n\n      const s = 2 ** i,\n            n = r.neighborData.edgeResolutions[(e + 2) % 4] / s;\n      return Math.max(1, n);\n    }\n\n    m(!l.isLeaf);\n    let h = a;\n    return l.forAllSubtreeOnSide(c(n), e => e === s || (e.isLoaded ? (h = Math.max(h, 2 ** (e.level - o)), !0) : (m(!e.isLeaf), !1))), h;\n  }\n\n  _updateNeighborData() {\n    const e = this.tile,\n          r = t => t.isLoaded || t.level === e.level,\n          i = e => e.isLoaded,\n          s = [null, null, null, null],\n          a = [null, null, null, null];\n\n    (() => {\n      for (let t = 0; t < 4; ++t) {\n        const i = e.findNeighborTile(g[t], r);\n        s[t] = i, a[t] = i?.isLoaded ? i : null;\n      }\n    })();\n\n    const o = [null, null, null, null];\n\n    (() => {\n      for (let t = 0; t < 4; ++t) o[t] = e.findNeighborTile(f[t], i);\n    })();\n\n    const l = this.geometryState.neighborData;\n    let h = !1;\n\n    (() => {\n      for (let t = 0; t < 4; ++t) {\n        const r = l.edgeResolutions[t],\n              i = s[t],\n              a = this._calculateEdgeResolution(t, i);\n\n        l.edgeResolutions[t] = a, r !== a && (h = !0, this._edgeResolutionChanged = !0, i && i !== e && !i.isLoaded && i.level === e.level && (l.modifiedEdgeResolutions[t] = !0));\n      }\n    })();\n\n    (() => {\n      const r = (r, i) => {\n        const s = r.reduce((e, t) => Math.min(e, t?.level ?? 1 / 0), 1 / 0);\n\n        for (let l = 0; l < 4; ++l) {\n          const s = r[(l + 3) % 4],\n                a = r[l];\n\n          if (s && s.level < e.level && s === a) {\n            const r = s,\n                  a = 1 == (1 & l),\n                  o = (e.getNeighborEdgeStartVertexIndex(l, r) + (0 === i || 1 === i && !a || 3 === i && a ? 1 : 0)) / 2 ** (e.level - r.level),\n                  h = a ? 0 === i || 1 === i ? r.extent[0] : r.extent[2] : t(r.extent[0], r.extent[2], o),\n                  d = a ? t(r.extent[1], r.extent[3], o) : 0 === i || 3 === i ? r.extent[1] : r.extent[3];\n            return n(h, d, r.renderData.geometryState.samplerData);\n          }\n        }\n\n        let a = 0,\n            o = 0;\n\n        for (let e = 0; e < 4; ++e) {\n          const t = r[e];\n\n          if (t && t.level === s) {\n            const r = 0 === e || 1 === e,\n                  i = 0 === e || 3 === e,\n                  s = t.extent;\n            o += n(s[r ? 0 : 2], s[i ? 1 : 3], t.renderData?.geometryState?.samplerData), a++;\n          }\n        }\n\n        return a ? o / a : 0;\n      },\n            i = l.cornerNeighborData,\n            s = (t, s) => {\n        const a = i[t],\n              o = a.cornerTiles;\n\n        for (let r = 0; r < 4; ++r) {\n          const t = f[r],\n                i = s[r]?.findCorner(y(t), t => t?.isLoaded || t === e);\n          o[r] = i;\n        }\n\n        const n = r(o, t);\n        return a.elevation !== n && (a.elevation = n, !0);\n      };\n\n      for (let t = 0; t < 4; ++t) {\n        const r = o[t],\n              i = a[t],\n              n = [r, a[(t + 1) % 4], e, i],\n              l = n.map((e, r) => n[(r + 4 - t) % 4]);\n        s(t, l) && (this._cornerElevationChanged = !0, h = !0);\n      }\n    })();\n\n    return (() => {\n      const t = (t, r) => {\n        if (!t?.isLoaded || t.lij[0] > e.lij[0]) return null;\n        const i = t.renderData.geometryState;\n        return {\n          neighborSamplerData: i.samplerData,\n          neighborEdgeOverlapResolution: i.neighborData.edgeResolutions[r + 2],\n          version: i.samplerDataVersion,\n          neighborVerticesPerSide: i.numVerticesPerSide,\n          neighborTile: t\n        };\n      },\n            r = l.edgeNeighbours;\n\n      for (let i = 0; i < 4; ++i) {\n        const s = a[i];\n        s && (m(s?.isLoaded), m(s?.lij[0] <= e.lij[0]));\n        const o = r[i],\n              n = o?.version,\n              l = t(s, i),\n              d = l?.version ?? null,\n              u = null != o != (null != l),\n              g = o && l && n !== d,\n              c = o && l && o?.neighborTile !== l?.neighborTile,\n              p = u || g || c;\n        this._edgeNeighborChanged || (this._edgeNeighborChanged = p), h || (h = p), !p && n || (r[i] = l);\n      }\n    })(), h;\n  }\n\n  updateEdgeAfterResolutionChange(e) {\n    const t = this._calculateEdgeResolution(e),\n          r = this.geometryState.neighborData.edgeResolutions,\n          i = r[e];\n\n    m((this.geometryState.neighborData.edgeNeighbours[e]?.neighborTile.level ?? 0) <= this.tile.level), t !== i && (r[e] = t, this._edgeResolutionChanged = !0, T.deferTileNeighborUpdate ? T.neighborTilesToUpdate.add(this.tile) : this._updateGeometry(this.vao.context));\n  }\n\n  _updateGeometry(e) {\n    this.intersectionData = null;\n    const t = this.tile,\n          r = t.lij,\n          i = T.updatedGeometryTiles.get(r) || 0;\n    T.updatedGeometryTiles.set(r, i + 1);\n    const s = this._vao,\n          a = this.geometryInfo.vertexAttributes,\n          o = !s || !a || this._wireframeChanged || this._numVerticesPerSideChanged || this._samplerDataChanged || this._clippingAreaChanged || this._edgeResolutionChanged,\n          n = !o && this._edgeNeighborChanged,\n          l = !n && this._cornerElevationChanged;\n    this._numVerticesPerSideChanged = !1, this._samplerDataChanged = !1, this._edgeResolutionChanged = !1, this._edgeNeighborChanged = !1, this._cornerElevationChanged = !1, this._clippingAreaChanged = !1, this._wireframeChanged = !1, o ? (this._releaseGeometry(), this._createGeometry(e)) : n ? t.updateEdgeElevations() : l ? t.updateCornerElevations() : console.warn(\"Update for no reason?\");\n  }\n\n  releaseGeometry() {\n    return this._releaseGeometry();\n  }\n\n  get hasGeometry() {\n    return this._hasGeometry;\n  }\n\n  ensureTexture(e, t) {\n    return r(this._texture) && this._texture.descriptor.width !== e && this.releaseTexture(), i(this._texture) && (this._texture = t(), this.tile.setMemoryDirty()), this._texture;\n  }\n\n  releaseTexture() {\n    r(this._texture) && (this._texture.release(), this._texture = null, this.tile.setMemoryDirty());\n  }\n\n  updateGeometryStateAndPrepareForGeometryGeneration(t) {\n    const r = this._getElevationInfo(),\n          i = r.samplerData ? this.tile.getElevationBasedVerticesPerSide(r.maxTileLevel) : this.tile.getDefaultVerticesPerRowOnLevel(),\n          s = Math.max(i, 5);\n\n    let a = this.tile.clippingArea;\n    this.tile.intersectsClippingArea && !this.tile.isWithinClippingArea || (a = null);\n    const o = this.geometryState;\n    let n = !1;\n    return o.numVerticesPerSide !== s && (this._numVerticesPerSideChanged = !0, o.numVerticesPerSide = s, o.samplerDataVersion++, n = !0), r.changed && (this._samplerDataChanged = !0, o.samplerData = r.samplerData, o.samplerDataVersion++, n = !0), e(o.clippingArea, a) || (this._clippingAreaChanged = !0, o.clippingArea = a, n = !0), o.wireframe !== t && (this._wireframeChanged = !0, o.wireframe = t, n = !0), this._geometryStateChangedSinceLastUpdate || (this._geometryStateChangedSinceLastUpdate = n), this._hasGeometry = !0, n;\n  }\n\n  _createGeometry(e) {\n    this.tile.createGeometry();\n    const t = this.geometryInfo.vertexAttributes,\n          r = this.geometryInfo.indices,\n          i = e.gl;\n    this._vao = new S(e, D, {\n      geometry: o(t.layout)\n    }, {\n      geometry: C.createVertex(e, i.STATIC_DRAW, t.buffer)\n    }, C.createIndex(e, i.STATIC_DRAW, r)), this._hasGeometry = !0;\n  }\n\n  _releaseGeometry() {\n    return this._hasGeometry = !1, !!this._vao && (this._vao.dispose(), this._vao = null, u(this.geometryInfo), !0);\n  }\n\n  get vao() {\n    return this._vao;\n  }\n\n  setTextureReference(e, t = x.Immediate) {\n    r(e) && e.texture !== this._texture && this.releaseTexture(), this._textureRef.push(e, t);\n  }\n\n  get textureReference() {\n    return this._textureRef.current;\n  }\n\n  get nextTextureReference() {\n    return this._textureRef.next;\n  }\n\n  get textureFadeFactor() {\n    return this._textureRef.fadeFactor;\n  }\n\n  get textureIsFading() {\n    return this._textureRef.isFading;\n  }\n\n  _getElevationInfo() {\n    const e = this.geometryState.samplerData,\n          t = this.tile.layerInfo[h.ELEVATION],\n          i = t.length;\n    let s = new Array(i),\n        a = 0,\n        o = 0,\n        n = !1;\n\n    for (let l = 0; l < i; l++) {\n      const i = t[l];\n\n      if (r(i.upsampleInfo)) {\n        const t = i.upsampleInfo.tile,\n              r = t.layerInfo[h.ELEVATION][l].data,\n              d = r && r.samplerData;\n        e && e[a] === d || (n = !0), s[a++] = d, o = Math.max(o, t.lij[0]);\n      } else if (i.data) {\n        const t = this.tile.surface.layerViewByIndex(l, h.ELEVATION);\n\n        if (b(this.tile, t.layer, !1)) {\n          const t = i.data;\n          e && e[a] === t.samplerData || (n = !0), s[a++] = t.samplerData, o = this.tile.level;\n        }\n      }\n    }\n\n    return r(e) && e.length !== a && (n = !0), a > 0 ? s.length = a : s = null, {\n      changed: n,\n      samplerData: s,\n      maxTileLevel: o\n    };\n  }\n\n  get estimatedGeometryMemoryUsage() {\n    const e = s(this.intersectionData, 0, e => e.estimatedMemoryUsage);\n    return this.geometryInfo.indices.byteLength + this.geometryInfo.vertexAttributes.byteLength + e;\n  }\n\n  get textureDescriptor() {\n    return r(this._texture) ? this._texture.descriptor : null;\n  }\n\n  get test() {\n    return {\n      hasTexture: null != this._texture\n    };\n  }\n\n  checkGeometryWaterproofness() {}\n\n}\n\nfunction G(e, t, i) {\n  if (r(i)) for (const r of i) if (r) {\n    const i = r.x0,\n          s = r.width,\n          a = i + (s - 1) / r.dx,\n          o = r.y1,\n          n = o - (s - 1) / r.dy;\n    if (e >= i - p && e <= a + p && n - p <= t && t <= o + p) return !0;\n  }\n  return !1;\n}\n\nT.updatedGeometryTiles = new Map(), T.deferTileNeighborUpdate = !1, T.neighborTilesToUpdate = new Set();\nexport { T as PatchRenderData, G as isElevationSampleIn };","map":{"version":3,"names":["equals","e","lerp","t","isSome","r","isNone","i","mapOr","s","empty","a","glLayout","o","sampleElevationOrZero","n","GeometryState","l","LayerClass","h","PatchGeometry","d","releaseGeometry","u","neighborEdgeIndices","g","internalAssert","m","oppositeEdge","c","eps","p","neighborCornerIndices","f","oppositeCorner","y","TextureFader","_","ActivationTime","x","v","fallsWithinLayer","b","Default3D","D","BufferObject","C","VertexArrayObject","S","T","constructor","geometryInfo","intersectionData","geometryState","_textureRef","tile","surface","textureFadeDuration","overlay","_geometryStateChangedSinceLastUpdate","_hasGeometry","_numVerticesPerSideChanged","_samplerDataChanged","_edgeResolutionChanged","_edgeNeighborChanged","_cornerElevationChanged","_clippingAreaChanged","_wireframeChanged","_tile","init","clear","indices","vertexAttributes","boundingBox","indexCount","numVerticesPerSide","localOrigin","_releaseGeometry","releaseTexture","updateGeometryIfChanged","updateGeometryStateAndPrepareForGeometryGeneration","updateNeighborDataAndGeometryIfNeeded","vao","context","_updateNeighborData","_updateGeometry","_calculateEdgeResolution","isGlobal","extent","level","findNeighborTile","isLoaded","isLeaf","rootTiles","updatingRootTiles","shouldHaveNeighbor","renderData","Math","max","neighborData","edgeResolutions","forAllSubtreeOnSide","modifiedEdgeResolutions","reduce","min","getNeighborEdgeStartVertexIndex","samplerData","cornerNeighborData","cornerTiles","findCorner","elevation","map","lij","neighborSamplerData","neighborEdgeOverlapResolution","version","samplerDataVersion","neighborVerticesPerSide","neighborTile","edgeNeighbours","updateEdgeAfterResolutionChange","deferTileNeighborUpdate","neighborTilesToUpdate","add","updatedGeometryTiles","get","set","_vao","_createGeometry","updateEdgeElevations","updateCornerElevations","console","warn","hasGeometry","ensureTexture","_texture","descriptor","width","setMemoryDirty","release","_getElevationInfo","getElevationBasedVerticesPerSide","maxTileLevel","getDefaultVerticesPerRowOnLevel","clippingArea","intersectsClippingArea","isWithinClippingArea","changed","wireframe","createGeometry","gl","geometry","layout","createVertex","STATIC_DRAW","buffer","createIndex","dispose","setTextureReference","Immediate","texture","push","textureReference","current","nextTextureReference","next","textureFadeFactor","fadeFactor","textureIsFading","isFading","layerInfo","ELEVATION","length","Array","upsampleInfo","data","layerViewByIndex","layer","estimatedGeometryMemoryUsage","estimatedMemoryUsage","byteLength","textureDescriptor","test","hasTexture","checkGeometryWaterproofness","G","x0","dx","y1","dy","Map","Set","PatchRenderData","isElevationSampleIn"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/terrain/PatchRenderData.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{equals as e}from\"../../../core/arrayUtils.js\";import{lerp as t}from\"../../../core/mathUtils.js\";import{isSome as r,isNone as i,mapOr as s}from\"../../../core/maybe.js\";import{empty as a}from\"../../../geometry/support/aaBoundingBox.js\";import\"../../../core/has.js\";import\"../../../geometry/Extent.js\";import\"../../../geometry/support/Ellipsoid.js\";import{glLayout as o}from\"../support/buffer/glUtil.js\";import{sampleElevationOrZero as n}from\"./ElevationData.js\";import{GeometryState as l}from\"./GeometryState.js\";import\"./interfaces.js\";import{LayerClass as h}from\"./LayerClass.js\";import{PatchGeometry as d,releaseGeometry as u}from\"./PatchGeometry.js\";import{neighborEdgeIndices as g,internalAssert as m,oppositeEdge as c,eps as p,neighborCornerIndices as f,oppositeCorner as y}from\"./terrainUtils.js\";import{TextureFader as _,ActivationTime as x}from\"./TextureFader.js\";export{ActivationTime}from\"./TextureFader.js\";import\"./Tile.js\";import v from\"./TileOverlayData.js\";import{fallsWithinLayer as b}from\"./tileUtils.js\";import{Default3D as D}from\"../webgl-engine/lib/DefaultVertexAttributeLocations.js\";import{BufferObject as C}from\"../../webgl/BufferObject.js\";import{VertexArrayObject as S}from\"../../webgl/VertexArrayObject.js\";class T{constructor(){this.geometryInfo=new d,this.intersectionData=null,this.geometryState=null,this._textureRef=new _((()=>this.tile.surface.textureFadeDuration)),this.overlay=new v,this._geometryStateChangedSinceLastUpdate=!0,this._hasGeometry=!1,this._numVerticesPerSideChanged=!1,this._samplerDataChanged=!1,this._edgeResolutionChanged=!1,this._edgeNeighborChanged=!1,this._cornerElevationChanged=!1,this._clippingAreaChanged=!1,this._wireframeChanged=!1}get tile(){return this._tile}init(e){this._tile=e,this.clear();const t=this.geometryInfo;t.indices=null,t.vertexAttributes=null,a(t.boundingBox),t.indexCount=0,t.numVerticesPerSide=0,this.intersectionData=null,this.geometryState=new l,this.localOrigin=null,this.overlay.clear()}clear(){this._releaseGeometry(),this.releaseTexture(),this._textureRef.clear()}updateGeometryIfChanged(e,t){const r=this.updateGeometryStateAndPrepareForGeometryGeneration(t);this._hasGeometry=!0;return this.updateNeighborDataAndGeometryIfNeeded(r,e)}updateNeighborDataAndGeometryIfNeeded(e=!1,t=this.vao.context){const r=this._updateNeighborData(),i=e||this._geometryStateChangedSinceLastUpdate||r;return i&&(this._updateGeometry(t),this._geometryStateChangedSinceLastUpdate=!1),i}_calculateEdgeResolution(e,t){const s=this.tile,a=this.geometryState.numVerticesPerSide-1;if(!s.surface.isGlobal){const t=s.surface.extent;if(r(t)&&(0===e&&s.extent[3]>t[3]||1===e&&s.extent[2]>t[2]||2===e&&s.extent[1]<t[1]||3===e&&s.extent[0]<t[0]))return a}const o=s.level,n=g[e],l=t||s.findNeighborTile(n,(e=>e.isLoaded||e.level===o));if(!l||l.isLeaf&&!l.isLoaded)return m(i(s.surface?.rootTiles)||s.surface.updatingRootTiles||!s.shouldHaveNeighbor(n)),a;if(l.isLoaded){const t=l,r=t.renderData.geometryState,i=o-t.level;if(0===i){const e=r.numVerticesPerSide-1;return Math.max(e,a)}const s=2**i,n=r.neighborData.edgeResolutions[(e+2)%4]/s;return Math.max(1,n)}m(!l.isLeaf);let h=a;return l.forAllSubtreeOnSide(c(n),(e=>e===s||(e.isLoaded?(h=Math.max(h,2**(e.level-o)),!0):(m(!e.isLeaf),!1)))),h}_updateNeighborData(){const e=this.tile,r=t=>t.isLoaded||t.level===e.level,i=e=>e.isLoaded,s=[null,null,null,null],a=[null,null,null,null];(()=>{for(let t=0;t<4;++t){const i=e.findNeighborTile(g[t],r);s[t]=i,a[t]=i?.isLoaded?i:null}})();const o=[null,null,null,null];(()=>{for(let t=0;t<4;++t)o[t]=e.findNeighborTile(f[t],i)})();const l=this.geometryState.neighborData;let h=!1;(()=>{for(let t=0;t<4;++t){const r=l.edgeResolutions[t],i=s[t],a=this._calculateEdgeResolution(t,i);l.edgeResolutions[t]=a,r!==a&&(h=!0,this._edgeResolutionChanged=!0,i&&i!==e&&!i.isLoaded&&i.level===e.level&&(l.modifiedEdgeResolutions[t]=!0))}})();(()=>{const r=(r,i)=>{const s=r.reduce(((e,t)=>Math.min(e,t?.level??1/0)),1/0);for(let l=0;l<4;++l){const s=r[(l+3)%4],a=r[l];if(s&&s.level<e.level&&s===a){const r=s,a=1==(1&l),o=(e.getNeighborEdgeStartVertexIndex(l,r)+(0===i||1===i&&!a||3===i&&a?1:0))/2**(e.level-r.level),h=a?0===i||1===i?r.extent[0]:r.extent[2]:t(r.extent[0],r.extent[2],o),d=a?t(r.extent[1],r.extent[3],o):0===i||3===i?r.extent[1]:r.extent[3];return n(h,d,r.renderData.geometryState.samplerData)}}let a=0,o=0;for(let e=0;e<4;++e){const t=r[e];if(t&&t.level===s){const r=0===e||1===e,i=0===e||3===e,s=t.extent;o+=n(s[r?0:2],s[i?1:3],t.renderData?.geometryState?.samplerData),a++}}return a?o/a:0},i=l.cornerNeighborData,s=(t,s)=>{const a=i[t],o=a.cornerTiles;for(let r=0;r<4;++r){const t=f[r],i=s[r]?.findCorner(y(t),(t=>t?.isLoaded||t===e));o[r]=i}const n=r(o,t);return a.elevation!==n&&(a.elevation=n,!0)};for(let t=0;t<4;++t){const r=o[t],i=a[t],n=[r,a[(t+1)%4],e,i],l=n.map(((e,r)=>n[(r+4-t)%4]));s(t,l)&&(this._cornerElevationChanged=!0,h=!0)}})();return(()=>{const t=(t,r)=>{if(!t?.isLoaded||t.lij[0]>e.lij[0])return null;const i=t.renderData.geometryState;return{neighborSamplerData:i.samplerData,neighborEdgeOverlapResolution:i.neighborData.edgeResolutions[r+2],version:i.samplerDataVersion,neighborVerticesPerSide:i.numVerticesPerSide,neighborTile:t}},r=l.edgeNeighbours;for(let i=0;i<4;++i){const s=a[i];s&&(m(s?.isLoaded),m(s?.lij[0]<=e.lij[0]));const o=r[i],n=o?.version,l=t(s,i),d=l?.version??null,u=null!=o!=(null!=l),g=o&&l&&n!==d,c=o&&l&&o?.neighborTile!==l?.neighborTile,p=u||g||c;this._edgeNeighborChanged||(this._edgeNeighborChanged=p),h||(h=p),!p&&n||(r[i]=l)}})(),h}updateEdgeAfterResolutionChange(e){const t=this._calculateEdgeResolution(e),r=this.geometryState.neighborData.edgeResolutions,i=r[e];m((this.geometryState.neighborData.edgeNeighbours[e]?.neighborTile.level??0)<=this.tile.level),t!==i&&(r[e]=t,this._edgeResolutionChanged=!0,T.deferTileNeighborUpdate?T.neighborTilesToUpdate.add(this.tile):this._updateGeometry(this.vao.context))}_updateGeometry(e){this.intersectionData=null;const t=this.tile,r=t.lij,i=T.updatedGeometryTiles.get(r)||0;T.updatedGeometryTiles.set(r,i+1);const s=this._vao,a=this.geometryInfo.vertexAttributes,o=!s||!a||this._wireframeChanged||this._numVerticesPerSideChanged||this._samplerDataChanged||this._clippingAreaChanged||this._edgeResolutionChanged,n=!o&&this._edgeNeighborChanged,l=!n&&this._cornerElevationChanged;this._numVerticesPerSideChanged=!1,this._samplerDataChanged=!1,this._edgeResolutionChanged=!1,this._edgeNeighborChanged=!1,this._cornerElevationChanged=!1,this._clippingAreaChanged=!1,this._wireframeChanged=!1,o?(this._releaseGeometry(),this._createGeometry(e)):n?t.updateEdgeElevations():l?t.updateCornerElevations():console.warn(\"Update for no reason?\")}releaseGeometry(){return this._releaseGeometry()}get hasGeometry(){return this._hasGeometry}ensureTexture(e,t){return r(this._texture)&&this._texture.descriptor.width!==e&&this.releaseTexture(),i(this._texture)&&(this._texture=t(),this.tile.setMemoryDirty()),this._texture}releaseTexture(){r(this._texture)&&(this._texture.release(),this._texture=null,this.tile.setMemoryDirty())}updateGeometryStateAndPrepareForGeometryGeneration(t){const r=this._getElevationInfo(),i=r.samplerData?this.tile.getElevationBasedVerticesPerSide(r.maxTileLevel):this.tile.getDefaultVerticesPerRowOnLevel(),s=Math.max(i,5);let a=this.tile.clippingArea;this.tile.intersectsClippingArea&&!this.tile.isWithinClippingArea||(a=null);const o=this.geometryState;let n=!1;return o.numVerticesPerSide!==s&&(this._numVerticesPerSideChanged=!0,o.numVerticesPerSide=s,o.samplerDataVersion++,n=!0),r.changed&&(this._samplerDataChanged=!0,o.samplerData=r.samplerData,o.samplerDataVersion++,n=!0),e(o.clippingArea,a)||(this._clippingAreaChanged=!0,o.clippingArea=a,n=!0),o.wireframe!==t&&(this._wireframeChanged=!0,o.wireframe=t,n=!0),this._geometryStateChangedSinceLastUpdate||(this._geometryStateChangedSinceLastUpdate=n),this._hasGeometry=!0,n}_createGeometry(e){this.tile.createGeometry();const t=this.geometryInfo.vertexAttributes,r=this.geometryInfo.indices,i=e.gl;this._vao=new S(e,D,{geometry:o(t.layout)},{geometry:C.createVertex(e,i.STATIC_DRAW,t.buffer)},C.createIndex(e,i.STATIC_DRAW,r)),this._hasGeometry=!0}_releaseGeometry(){return this._hasGeometry=!1,!!this._vao&&(this._vao.dispose(),this._vao=null,u(this.geometryInfo),!0)}get vao(){return this._vao}setTextureReference(e,t=x.Immediate){r(e)&&e.texture!==this._texture&&this.releaseTexture(),this._textureRef.push(e,t)}get textureReference(){return this._textureRef.current}get nextTextureReference(){return this._textureRef.next}get textureFadeFactor(){return this._textureRef.fadeFactor}get textureIsFading(){return this._textureRef.isFading}_getElevationInfo(){const e=this.geometryState.samplerData,t=this.tile.layerInfo[h.ELEVATION],i=t.length;let s=new Array(i),a=0,o=0,n=!1;for(let l=0;l<i;l++){const i=t[l];if(r(i.upsampleInfo)){const t=i.upsampleInfo.tile,r=t.layerInfo[h.ELEVATION][l].data,d=r&&r.samplerData;e&&e[a]===d||(n=!0),s[a++]=d,o=Math.max(o,t.lij[0])}else if(i.data){const t=this.tile.surface.layerViewByIndex(l,h.ELEVATION);if(b(this.tile,t.layer,!1)){const t=i.data;e&&e[a]===t.samplerData||(n=!0),s[a++]=t.samplerData,o=this.tile.level}}}return r(e)&&e.length!==a&&(n=!0),a>0?s.length=a:s=null,{changed:n,samplerData:s,maxTileLevel:o}}get estimatedGeometryMemoryUsage(){const e=s(this.intersectionData,0,(e=>e.estimatedMemoryUsage));return this.geometryInfo.indices.byteLength+this.geometryInfo.vertexAttributes.byteLength+e}get textureDescriptor(){return r(this._texture)?this._texture.descriptor:null}get test(){return{hasTexture:null!=this._texture}}checkGeometryWaterproofness(){}}function G(e,t,i){if(r(i))for(const r of i)if(r){const i=r.x0,s=r.width,a=i+(s-1)/r.dx,o=r.y1,n=o-(s-1)/r.dy;if(e>=i-p&&e<=a+p&&n-p<=t&&t<=o+p)return!0}return!1}T.updatedGeometryTiles=new Map,T.deferTileNeighborUpdate=!1,T.neighborTilesToUpdate=new Set;export{T as PatchRenderData,G as isElevationSampleIn};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}