{"ast":null,"code":"export default {\n  data() {\n    return {\n      // 地址信息\n      address: null,\n      center: {\n        lng: 0,\n        lat: 0\n      },\n      //地图展示级别\n      zoom: 11\n    };\n  },\n\n  methods: {\n    //这个函数是地图加载时触发\n    handler({\n      BMap,\n      map\n    }) {\n      this.center.lng = 118.316264;\n      this.center.lat = 32.303627;\n      this.zoom = this.zoom;\n    },\n\n    //鼠标点击时可以获取地图信息\n    getClickInfo(e) {\n      // 创建地理编码实例\n      const myGeo = new BMap.Geocoder(); // 根据坐标逆解析地址\n\n      myGeo.getLocation(new BMap.Point(e.point.lng, e.point.lat), result => {\n        console.log(result, \"result-->>>>\");\n\n        if (result) {\n          this.address = result.address;\n        }\n      });\n      this.center.lng = e.point.lng;\n      this.center.lat = e.point.lat;\n    },\n\n    //地图缩放时可以获取地图信息\n    syncCenterAndZoom(e) {\n      console.log(e.target, 'e.target-->>>>');\n      const {\n        lng,\n        lat\n      } = e.target.getCenter();\n      this.zoom = e.target.getZoom();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyBA;EACAA;IACA;MACA;MACAC,aAFA;MAGAC;QAAAC;QAAAC;MAAA,CAHA;MAIA;MACAC;IALA;EAOA,CATA;;EAUAC;IACA;IACAC;MAAAC;MAAAC;IAAA;MACA;MACA;MACA;IACA,CANA;;IAOA;IACAC;MACA;MACA,kCAFA,CAGA;;MACAC;QACAC;;QACA;UACA;QACA;MACA,CALA;MAMA;MACA;IACA,CApBA;;IAqBA;IACAC;MACAD;MACA;QAAAT;QAAAC;MAAA;MACA;IACA;;EA1BA;AAVA","names":["data","address","center","lng","lat","zoom","methods","handler","BMap","map","getClickInfo","myGeo","console","syncCenterAndZoom"],"sourceRoot":"src/views","sources":["TrackingOfPollutants.vue"],"sourcesContent":["<template>\r\n  <div class=\"BaiDuMap\">\r\n    <baidu-map\r\n        :center=\"center\"\r\n        :zoom=\"zoom\"\r\n        :scroll-wheel-zoom=\"true\"\r\n        style=\"width: 100%; height: 100%\"\r\n        @ready=\"handler\"\r\n        @click=\"getClickInfo\"\r\n        @moving=\"syncCenterAndZoom\"\r\n        @moveend=\"syncCenterAndZoom\"\r\n        @zoomend=\"syncCenterAndZoom\"\r\n    >\r\n      <!-- 必须给容器指高度，不然地图将显示在一个高度为0的容器中，看不到 -->\r\n      <bm-navigation anchor=\"BMAP_ANCHOR_TOP_RIGHT\"></bm-navigation>\r\n      <bm-geolocation\r\n          anchor=\"BMAP_ANCHOR_BOTTOM_RIGHT\"\r\n          :showAddressBar=\"true\"\r\n          :autoLocation=\"true\"\r\n      ></bm-geolocation>\r\n      <bm-city-list anchor=\"BMAP_ANCHOR_TOP_LEFT\"></bm-city-list>\r\n    </baidu-map>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 地址信息\r\n      address: null,\r\n      center: { lng: 0, lat: 0 },\r\n      //地图展示级别\r\n      zoom: 11,\r\n    };\r\n  },\r\n  methods: {\r\n    //这个函数是地图加载时触发\r\n    handler({ BMap, map }) {\r\n      this.center.lng = 118.316264;\r\n      this.center.lat = 32.303627;\r\n      this.zoom = this.zoom;\r\n    },\r\n    //鼠标点击时可以获取地图信息\r\n    getClickInfo(e) {\r\n      // 创建地理编码实例\r\n      const myGeo = new BMap.Geocoder();\r\n      // 根据坐标逆解析地址\r\n      myGeo.getLocation(new BMap.Point(e.point.lng, e.point.lat), (result) => {\r\n        console.log(result, \"result-->>>>\");\r\n        if (result) {\r\n          this.address = result.address;\r\n        }\r\n      });\r\n      this.center.lng = e.point.lng;\r\n      this.center.lat = e.point.lat;\r\n    },\r\n    //地图缩放时可以获取地图信息\r\n    syncCenterAndZoom(e) {\r\n      console.log(e.target, 'e.target-->>>>')\r\n      const { lng, lat } = e.target.getCenter();\r\n      this.zoom = e.target.getZoom();\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.BaiDuMap {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.BMap_cpyCtrl {\r\n  display: none;\r\n}\r\n.anchorBL {\r\n  display: none!important;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}