{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { result as e } from \"../../core/asyncUtils.js\";\nimport t from \"../../core/Error.js\";\nimport { assertIsSome as i, isNone as s, isSome as n } from \"../../core/maybe.js\";\nimport { whenOrAbort as o, throwIfAbortError as l, eachAlways as a } from \"../../core/promiseUtils.js\";\nimport { getMetersPerUnitForSR as r } from \"../../core/unitUtils.js\";\nimport c from \"../../geometry/Multipoint.js\";\nimport u from \"../../geometry/Point.js\";\nimport h from \"../../geometry/Polyline.js\";\nimport { initializeProjection as p, project as m } from \"../../geometry/projection.js\";\nimport { fromExtent as f, create as d, contains as y } from \"../../geometry/support/aaBoundingRect.js\";\nimport { MultiTileElevationSampler as T } from \"./ElevationSampler.js\";\nimport { ElevationTile as v } from \"./ElevationTile.js\";\nimport { TileKey as w } from \"./TileKey.js\";\n\nclass g {\n  async queryAll(e, i, s) {\n    if (!(e = s && s.ignoreInvisibleLayers ? e.filter(e => e.visible) : e.slice()).length) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require at least one elevation layer to fetch tiles from\");\n    const n = x.fromGeometry(i);\n    let o = !1;\n    s && s.returnSampleInfo || (o = !0);\n    const l = { ...A,\n      ...s,\n      returnSampleInfo: !0\n    },\n          a = await this.query(e[e.length - 1], n, l),\n          r = await this._queryAllContinue(e, a, l);\n    return r.geometry = r.geometry.export(), o && delete r.sampleInfo, r;\n  }\n\n  async query(e, i, s) {\n    if (!e) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require an elevation layer to fetch tiles from\");\n    if (!i || !(i instanceof x) && \"point\" !== i.type && \"multipoint\" !== i.type && \"polyline\" !== i.type) throw new t(\"elevation-query:invalid-geometry\", \"Only point, polyline and multipoint geometries can be used to query elevation\");\n    const n = { ...A,\n      ...s\n    },\n          o = new R(e, i.spatialReference, n),\n          l = n.signal;\n    return await e.load({\n      signal: l\n    }), await this._createGeometryDescriptor(o, i, l), await this._selectTiles(o, l), await this._populateElevationTiles(o, l), this._sampleGeometryWithElevation(o), this._createQueryResult(o, l);\n  }\n\n  async createSampler(e, i, s) {\n    if (!e) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require an elevation layer to fetch tiles from\");\n    if (!i || \"extent\" !== i.type) throw new t(\"elevation-query:invalid-extent\", \"Invalid or undefined extent\");\n    const n = { ...A,\n      ...s\n    };\n    return this._createSampler(e, i, n);\n  }\n\n  async createSamplerAll(e, i, s) {\n    if (!(e = s && s.ignoreInvisibleLayers ? e.filter(e => e.visible) : e.slice()).length) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require at least one elevation layer to fetch tiles from\");\n    if (!i || \"extent\" !== i.type) throw new t(\"elevation-query:invalid-extent\", \"Invalid or undefined extent\");\n    const n = { ...A,\n      ...s,\n      returnSampleInfo: !0\n    },\n          o = await this._createSampler(e[e.length - 1], i, n);\n    return this._createSamplerAllContinue(e, i, o, n);\n  }\n\n  async _createSampler(e, t, i, s) {\n    const n = i.signal;\n    await e.load({\n      signal: n\n    });\n    const o = t.spatialReference,\n          l = e.tileInfo.spatialReference;\n    o.equals(l) || (await p([{\n      source: o,\n      dest: l\n    }], {\n      signal: n\n    }), t = m(t, l));\n    const a = new q(e, t, i, s);\n    return await this._selectTiles(a, n), await this._populateElevationTiles(a, n), new T(a.elevationTiles, a.layer.tileInfo, a.options.noDataValue);\n  }\n\n  async _createSamplerAllContinue(e, t, i, s) {\n    if (e.pop(), !e.length) return i;\n    const n = i.samplers.map(e => f(e.extent)),\n          o = await this._createSampler(e[e.length - 1], t, s, n);\n    if (0 === o.samplers.length) return i;\n    const l = i.samplers.concat(o.samplers),\n          a = new T(l, s.noDataValue);\n    return this._createSamplerAllContinue(e, t, a, s);\n  }\n\n  async _queryAllContinue(e, t, s) {\n    const n = e.pop(),\n          o = t.geometry.coordinates,\n          l = t.sampleInfo;\n    i(l);\n    const a = [],\n          r = [];\n\n    for (let i = 0; i < o.length; i++) {\n      const t = l[i];\n      t.demResolution >= 0 ? t.source || (t.source = n) : e.length && (a.push(o[i]), r.push(i));\n    }\n\n    if (!e.length || 0 === a.length) return t;\n    const c = t.geometry.clone(a),\n          u = await this.query(e[e.length - 1], c, s),\n          h = u.sampleInfo;\n    if (!h) throw new Error(\"no sampleInfo\");\n    return r.forEach((e, t) => {\n      o[e].z = u.geometry.coordinates[t].z, l[e].demResolution = h[t].demResolution;\n    }), this._queryAllContinue(e, t, s);\n  }\n\n  async _createQueryResult(e, t) {\n    const s = await e.geometry.project(e.outSpatialReference, t);\n    i(s);\n    const n = {\n      geometry: s.export(),\n      noDataValue: e.options.noDataValue\n    };\n    return e.options.returnSampleInfo && (n.sampleInfo = this._extractSampleInfo(e)), e.geometry.coordinates.forEach(e => {\n      e.tile = null, e.elevationTile = null;\n    }), n;\n  }\n\n  async _createGeometryDescriptor(e, i, s) {\n    let n;\n    const o = e.layer.tileInfo.spatialReference;\n    if (i instanceof x ? n = await i.project(o, s) : (await p([{\n      source: i.spatialReference,\n      dest: o\n    }], {\n      signal: s\n    }), n = m(i, o)), !n) throw new t(\"elevation-query:spatial-reference-mismatch\", `Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);\n    e.geometry = x.fromGeometry(n);\n  }\n\n  async _selectTiles(e, i) {\n    const s = e.options.demResolution;\n    if (\"geometry\" === e.type && this._preselectOutsideLayerExtent(e), \"number\" == typeof s) this._selectTilesClosestResolution(e);else if (\"finest-contiguous\" === s) await this._selectTilesFinestContiguous(e, i);else {\n      if (\"auto\" !== s) throw new t(\"elevation-query:invalid-dem-resolution\", `Invalid dem resolution value '${s}', expected a number, \"finest-contiguous\" or \"auto\"`);\n      await this._selectTilesAuto(e, i);\n    }\n  }\n\n  _preselectOutsideLayerExtent(e) {\n    if (s(e.layer.fullExtent)) return;\n    const t = new v(null);\n    t.sample = () => e.options.noDataValue, e.outsideExtentTile = t;\n    const i = e.layer.fullExtent;\n    e.geometry.coordinates.forEach(e => {\n      const s = e.x,\n            n = e.y;\n      (s < i.xmin || s > i.xmax || n < i.ymin || n > i.ymax) && (e.elevationTile = t);\n    });\n  }\n\n  _selectTilesClosestResolution(e) {\n    const t = e.layer.tileInfo,\n          i = this._findNearestDemResolutionLODIndex(t, e.options.demResolution);\n\n    e.selectTilesAtLOD(i);\n  }\n\n  _findNearestDemResolutionLODIndex(e, t) {\n    const i = t / r(e.spatialReference);\n    let s = e.lods[0],\n        n = 0;\n\n    for (let o = 1; o < e.lods.length; o++) {\n      const t = e.lods[o];\n      Math.abs(t.resolution - i) < Math.abs(s.resolution - i) && (s = t, n = o);\n    }\n\n    return n;\n  }\n\n  async _selectTilesFinestContiguous(e, t) {\n    const i = I(e.layer.tileInfo, e.options.minDemResolution);\n    await this._selectTilesFinestContiguousAt(e, i, t);\n  }\n\n  async _selectTilesFinestContiguousAt(e, i, s) {\n    const n = e.layer;\n    if (e.selectTilesAtLOD(i), i < 0) return;\n    const a = n.tilemapCache,\n          r = e.getTilesToFetch();\n\n    try {\n      if (a) await o(Promise.all(r.map(e => a.fetchAvailability(e.level, e.row, e.col, {\n        signal: s\n      }))), s);else if (await this._populateElevationTiles(e, s), !e.allElevationTilesFetched()) throw e.clearElevationTiles(), new t(\"elevation-query:has-unavailable-tiles\");\n    } catch (c) {\n      l(c), await this._selectTilesFinestContiguousAt(e, i - 1, s);\n    }\n  }\n\n  async _populateElevationTiles(e, t) {\n    const i = e.getTilesToFetch(),\n          s = {},\n          l = e.options.cache,\n          r = e.options.noDataValue,\n          c = i.map(async i => {\n      if (null == i.id) return;\n      const o = `${e.layer.uid}:${i.id}:${r}`,\n            a = n(l) ? l.get(o) : null,\n            c = n(a) ? a : await e.layer.fetchTile(i.level, i.row, i.col, {\n        noDataValue: r,\n        signal: t\n      });\n      n(l) && l.put(o, c), s[i.id] = new v(i, c);\n    });\n    await o(a(c), t), e.populateElevationTiles(s);\n  }\n\n  async _selectTilesAuto(t, i) {\n    this._selectTilesAutoFinest(t), this._reduceTilesForMaximumRequests(t);\n    const s = t.layer.tilemapCache;\n    if (!s) return this._selectTilesAutoPrefetchUpsample(t, i);\n    const n = t.getTilesToFetch(),\n          a = {},\n          r = n.map(async t => {\n      const n = new w(null, 0, 0, 0, d()),\n            o = await e(s.fetchAvailabilityUpsample(t.level, t.row, t.col, n, {\n        signal: i\n      }));\n      !1 !== o.ok ? null != t.id && (a[t.id] = n) : l(o.error);\n    });\n    await o(Promise.all(r), i), t.remapTiles(a);\n  }\n\n  _reduceTilesForMaximumRequests(e) {\n    const t = e.layer.tileInfo;\n    let i = 0;\n\n    const s = {},\n          n = e => {\n      null != e.id && (e.id in s ? s[e.id]++ : (s[e.id] = 1, i++));\n    },\n          o = e => {\n      if (null == e.id) return;\n      const t = s[e.id];\n      1 === t ? (delete s[e.id], i--) : s[e.id] = t - 1;\n    };\n\n    e.forEachTileToFetch(n, o);\n    let l = !0;\n\n    for (; l && (l = !1, e.forEachTileToFetch(s => {\n      i <= e.options.maximumAutoTileRequests || (o(s), t.upsampleTile(s) && (l = !0), n(s));\n    }, o), l););\n  }\n\n  _selectTilesAutoFinest(e) {\n    const t = I(e.layer.tileInfo, e.options.minDemResolution);\n    e.selectTilesAtLOD(t, e.options.maximumAutoTileRequests);\n  }\n\n  async _selectTilesAutoPrefetchUpsample(e, t) {\n    const i = e.layer.tileInfo;\n    await this._populateElevationTiles(e, t);\n    let s = !1;\n    e.forEachTileToFetch((e, t) => {\n      i.upsampleTile(e) ? s = !0 : t();\n    }), s && (await this._selectTilesAutoPrefetchUpsample(e, t));\n  }\n\n  _sampleGeometryWithElevation(e) {\n    e.geometry.coordinates.forEach(t => {\n      const i = t.elevationTile;\n      let s = e.options.noDataValue;\n\n      if (i) {\n        const e = i.sample(t.x, t.y);\n        n(e) ? s = e : t.elevationTile = null;\n      }\n\n      t.z = s;\n    });\n  }\n\n  _extractSampleInfo(e) {\n    const t = e.layer.tileInfo,\n          i = r(t.spatialReference);\n    return e.geometry.coordinates.map(s => {\n      let n = -1;\n\n      if (s.elevationTile && s.elevationTile !== e.outsideExtentTile) {\n        n = t.lodAt(s.elevationTile.tile.level).resolution * i;\n      }\n\n      return {\n        demResolution: n\n      };\n    });\n  }\n\n}\n\nclass x {\n  export() {\n    return this._exporter(this.coordinates, this.spatialReference);\n  }\n\n  clone(e) {\n    const t = new x();\n    return t.geometry = this.geometry, t.spatialReference = this.spatialReference, t.coordinates = e || this.coordinates.map(e => e.clone()), t._exporter = this._exporter, t;\n  }\n\n  async project(e, t) {\n    if (this.spatialReference.equals(e)) return this.clone();\n    await p([{\n      source: this.spatialReference,\n      dest: e\n    }], {\n      signal: t\n    });\n    const i = new c({\n      spatialReference: this.spatialReference,\n      points: this.coordinates.map(e => [e.x, e.y])\n    }),\n          s = m(i, e);\n    if (!s) return null;\n    const n = this.coordinates.map((e, t) => {\n      const i = e.clone(),\n            n = s.points[t];\n      return i.x = n[0], i.y = n[1], i;\n    }),\n          o = this.clone(n);\n    return o.spatialReference = e, o;\n  }\n\n  static fromGeometry(e) {\n    const t = new x();\n    if (t.geometry = e, t.spatialReference = e.spatialReference, e instanceof x) t.coordinates = e.coordinates.map(e => e.clone()), t._exporter = (t, i) => {\n      const s = e.clone(t);\n      return s.spatialReference = i, s;\n    };else switch (e.type) {\n      case \"point\":\n        {\n          const i = e,\n                {\n            hasZ: s,\n            hasM: n\n          } = i;\n          t.coordinates = s && n ? [new _(i.x, i.y, i.z, i.m)] : s ? [new _(i.x, i.y, i.z)] : n ? [new _(i.x, i.y, null, i.m)] : [new _(i.x, i.y)], t._exporter = (t, i) => e.hasM ? new u(t[0].x, t[0].y, t[0].z, t[0].m, i) : new u(t[0].x, t[0].y, t[0].z, i);\n          break;\n        }\n\n      case \"multipoint\":\n        {\n          const i = e,\n                {\n            hasZ: s,\n            hasM: n\n          } = i;\n          t.coordinates = s && n ? i.points.map(e => new _(e[0], e[1], e[2], e[3])) : s ? i.points.map(e => new _(e[0], e[1], e[2])) : n ? i.points.map(e => new _(e[0], e[1], null, e[2])) : i.points.map(e => new _(e[0], e[1])), t._exporter = (t, i) => e.hasM ? new c({\n            points: t.map(e => [e.x, e.y, e.z, e.m]),\n            hasZ: !0,\n            hasM: !0,\n            spatiaReference: i\n          }) : new c(t.map(e => [e.x, e.y, e.z]), i);\n          break;\n        }\n\n      case \"polyline\":\n        {\n          const i = e,\n                s = [],\n                n = [],\n                {\n            hasZ: o,\n            hasM: l\n          } = e;\n          let a = 0;\n\n          for (const e of i.paths) if (n.push([a, a + e.length]), a += e.length, o && l) for (const t of e) s.push(new _(t[0], t[1], t[2], t[3]));else if (o) for (const t of e) s.push(new _(t[0], t[1], t[2]));else if (l) for (const t of e) s.push(new _(t[0], t[1], null, t[2]));else for (const t of e) s.push(new _(t[0], t[1]));\n\n          t.coordinates = s, t._exporter = (t, i) => {\n            const s = e.hasM ? t.map(e => [e.x, e.y, e.z, e.m]) : t.map(e => [e.x, e.y, e.z]),\n                  o = n.map(e => s.slice(e[0], e[1]));\n            return new h({\n              paths: o,\n              hasM: e.hasM,\n              hasZ: !0,\n              spatialReference: i\n            });\n          };\n          break;\n        }\n    }\n    return t;\n  }\n\n}\n\nclass _ {\n  constructor(e, t, i = null, s = null, n = null, o = null) {\n    this.x = e, this.y = t, this.z = i, this.m = s, this.tile = n, this.elevationTile = o;\n  }\n\n  clone() {\n    return new _(this.x, this.y, this.z, this.m);\n  }\n\n}\n\nclass E {\n  constructor(e, t) {\n    this.layer = e, this.options = t;\n  }\n\n}\n\nclass R extends E {\n  constructor(e, t, i) {\n    super(e, i), this.outSpatialReference = t, this.type = \"geometry\";\n  }\n\n  selectTilesAtLOD(e) {\n    if (e < 0) this.geometry.coordinates.forEach(e => {\n      e.tile = null;\n    });else {\n      const t = this.layer.tileInfo,\n            i = t.lods[e].level;\n      this.geometry.coordinates.forEach(e => {\n        e.tile = t.tileAt(i, e.x, e.y);\n      });\n    }\n  }\n\n  allElevationTilesFetched() {\n    return !this.geometry.coordinates.some(e => !e.elevationTile);\n  }\n\n  clearElevationTiles() {\n    for (const e of this.geometry.coordinates) e.elevationTile !== this.outsideExtentTile && (e.elevationTile = null);\n  }\n\n  populateElevationTiles(e) {\n    for (const t of this.geometry.coordinates) !t.elevationTile && t.tile?.id && (t.elevationTile = e[t.tile.id]);\n  }\n\n  remapTiles(e) {\n    for (const t of this.geometry.coordinates) {\n      const i = t.tile?.id;\n      t.tile = i ? e[i] : null;\n    }\n  }\n\n  getTilesToFetch() {\n    const e = {},\n          t = [];\n\n    for (const i of this.geometry.coordinates) {\n      const s = i.tile;\n      if (!s) continue;\n      const n = i.tile?.id;\n      i.elevationTile || !n || e[n] || (e[n] = s, t.push(s));\n    }\n\n    return t;\n  }\n\n  forEachTileToFetch(e) {\n    for (const t of this.geometry.coordinates) t.tile && !t.elevationTile && e(t.tile, () => {\n      t.tile = null;\n    });\n  }\n\n}\n\nclass q extends E {\n  constructor(e, t, i, s) {\n    super(e, i), this.type = \"extent\", this.elevationTiles = [], this._candidateTiles = [], this._fetchedCandidates = new Set(), this.extent = t.intersection(e.fullExtent), this.maskExtents = s;\n  }\n\n  selectTilesAtLOD(e, t) {\n    const i = this._maximumLodForRequests(t),\n          s = Math.min(i, e);\n\n    s < 0 ? this._candidateTiles.length = 0 : this._selectCandidateTilesCoveringExtentAt(s);\n  }\n\n  _maximumLodForRequests(e) {\n    const t = this.layer.tileInfo;\n    if (!e) return t.lods.length - 1;\n    const i = this.extent;\n    if (s(i)) return -1;\n\n    for (let s = t.lods.length - 1; s >= 0; s--) {\n      const n = t.lods[s],\n            o = n.resolution * t.size[0],\n            l = n.resolution * t.size[1];\n      if (Math.ceil(i.width / o) * Math.ceil(i.height / l) <= e) return s;\n    }\n\n    return -1;\n  }\n\n  allElevationTilesFetched() {\n    return this._candidateTiles.length === this.elevationTiles.length;\n  }\n\n  clearElevationTiles() {\n    this.elevationTiles.length = 0, this._fetchedCandidates.clear();\n  }\n\n  populateElevationTiles(e) {\n    for (const t of this._candidateTiles) {\n      const i = t.id && e[t.id];\n      i && (this._fetchedCandidates.add(t), this.elevationTiles.push(i));\n    }\n  }\n\n  remapTiles(e) {\n    this._candidateTiles = this._uniqueNonOverlappingTiles(this._candidateTiles.map(t => e[t.id]));\n  }\n\n  getTilesToFetch() {\n    return this._candidateTiles;\n  }\n\n  forEachTileToFetch(e, t) {\n    const i = this._candidateTiles;\n    this._candidateTiles = [], i.forEach(i => {\n      if (this._fetchedCandidates.has(i)) return void (t && t(i));\n      let s = !1;\n      e(i, () => s = !0), s ? t && t(i) : this._candidateTiles.push(i);\n    }), this._candidateTiles = this._uniqueNonOverlappingTiles(this._candidateTiles, t);\n  }\n\n  _uniqueNonOverlappingTiles(e, t) {\n    const i = {},\n          s = [];\n\n    for (const o of e) {\n      const e = o.id;\n      e && !i[e] ? (i[e] = o, s.push(o)) : t && t(o);\n    }\n\n    const n = s.sort((e, t) => e.level - t.level);\n    return n.filter((e, i) => {\n      for (let s = 0; s < i; s++) {\n        const i = n[s].extent;\n        if (i && e.extent && y(i, e.extent)) return t && t(e), !1;\n      }\n\n      return !0;\n    });\n  }\n\n  _selectCandidateTilesCoveringExtentAt(e) {\n    this._candidateTiles.length = 0;\n    const t = this.extent;\n    if (s(t)) return;\n    const i = this.layer.tileInfo,\n          n = i.lods[e],\n          o = i.tileAt(n.level, t.xmin, t.ymin),\n          l = o.extent;\n    if (s(l)) return;\n    const a = n.resolution * i.size[0],\n          r = n.resolution * i.size[1],\n          c = Math.ceil((t.xmax - l[0]) / a),\n          u = Math.ceil((t.ymax - l[1]) / r);\n\n    for (let s = 0; s < u; s++) for (let e = 0; e < c; e++) {\n      const t = new w(null, o.level, o.row - s, o.col + e);\n      i.updateTileInfo(t), this._tileIsMasked(t) || this._candidateTiles.push(t);\n    }\n  }\n\n  _tileIsMasked(e) {\n    return !!this.maskExtents && this.maskExtents.some(t => e.extent && y(t, e.extent));\n  }\n\n}\n\nfunction I(e, t = 0) {\n  let i = e.lods.length - 1;\n\n  if (t > 0) {\n    const s = t / r(e.spatialReference),\n          n = e.lods.findIndex(e => e.resolution < s);\n    0 === n ? i = 0 : n > 0 && (i = n - 1);\n  }\n\n  return i;\n}\n\nconst A = {\n  maximumAutoTileRequests: 20,\n  noDataValue: 0,\n  returnSampleInfo: !1,\n  demResolution: \"auto\",\n  minDemResolution: 0\n};\nexport { g as ElevationQuery, x as GeometryDescriptor, I as getFinestLodIndex };","map":{"version":3,"names":["result","e","t","assertIsSome","i","isNone","s","isSome","n","whenOrAbort","o","throwIfAbortError","l","eachAlways","a","getMetersPerUnitForSR","r","c","u","h","initializeProjection","p","project","m","fromExtent","f","create","d","contains","y","MultiTileElevationSampler","T","ElevationTile","v","TileKey","w","g","queryAll","ignoreInvisibleLayers","filter","visible","slice","length","x","fromGeometry","returnSampleInfo","A","query","_queryAllContinue","geometry","export","sampleInfo","type","R","spatialReference","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","createSampler","_createSampler","createSamplerAll","_createSamplerAllContinue","tileInfo","equals","source","dest","q","elevationTiles","layer","options","noDataValue","pop","samplers","map","extent","concat","coordinates","demResolution","push","clone","Error","forEach","z","outSpatialReference","_extractSampleInfo","tile","elevationTile","wkid","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","fullExtent","sample","outsideExtentTile","xmin","xmax","ymin","ymax","_findNearestDemResolutionLODIndex","selectTilesAtLOD","lods","Math","abs","resolution","I","minDemResolution","_selectTilesFinestContiguousAt","tilemapCache","getTilesToFetch","Promise","all","fetchAvailability","level","row","col","allElevationTilesFetched","clearElevationTiles","cache","id","uid","get","fetchTile","put","populateElevationTiles","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","fetchAvailabilityUpsample","ok","error","remapTiles","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","lodAt","_exporter","points","hasZ","hasM","_","spatiaReference","paths","constructor","E","tileAt","some","_candidateTiles","_fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","min","_selectCandidateTilesCoveringExtentAt","size","ceil","width","height","clear","add","_uniqueNonOverlappingTiles","has","sort","updateTileInfo","_tileIsMasked","findIndex","ElevationQuery","GeometryDescriptor","getFinestLodIndex"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i,isNone as s,isSome as n}from\"../../core/maybe.js\";import{whenOrAbort as o,throwIfAbortError as l,eachAlways as a}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as r}from\"../../core/unitUtils.js\";import c from\"../../geometry/Multipoint.js\";import u from\"../../geometry/Point.js\";import h from\"../../geometry/Polyline.js\";import{initializeProjection as p,project as m}from\"../../geometry/projection.js\";import{fromExtent as f,create as d,contains as y}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as T}from\"./ElevationSampler.js\";import{ElevationTile as v}from\"./ElevationTile.js\";import{TileKey as w}from\"./TileKey.js\";class g{async queryAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const n=x.fromGeometry(i);let o=!1;s&&s.returnSampleInfo||(o=!0);const l={...A,...s,returnSampleInfo:!0},a=await this.query(e[e.length-1],n,l),r=await this._queryAllContinue(e,a,l);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,i,s){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const n={...A,...s},o=new R(e,i.spatialReference,n),l=n.signal;return await e.load({signal:l}),await this._createGeometryDescriptor(o,i,l),await this._selectTiles(o,l),await this._populateElevationTiles(o,l),this._sampleGeometryWithElevation(o),this._createQueryResult(o,l)}async createSampler(e,i,s){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const n={...A,...s};return this._createSampler(e,i,n)}async createSamplerAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const n={...A,...s,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],i,n);return this._createSamplerAllContinue(e,i,o,n)}async _createSampler(e,t,i,s){const n=i.signal;await e.load({signal:n});const o=t.spatialReference,l=e.tileInfo.spatialReference;o.equals(l)||(await p([{source:o,dest:l}],{signal:n}),t=m(t,l));const a=new q(e,t,i,s);return await this._selectTiles(a,n),await this._populateElevationTiles(a,n),new T(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,s){if(e.pop(),!e.length)return i;const n=i.samplers.map((e=>f(e.extent))),o=await this._createSampler(e[e.length-1],t,s,n);if(0===o.samplers.length)return i;const l=i.samplers.concat(o.samplers),a=new T(l,s.noDataValue);return this._createSamplerAllContinue(e,t,a,s)}async _queryAllContinue(e,t,s){const n=e.pop(),o=t.geometry.coordinates,l=t.sampleInfo;i(l);const a=[],r=[];for(let i=0;i<o.length;i++){const t=l[i];t.demResolution>=0?t.source||(t.source=n):e.length&&(a.push(o[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,s),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{o[e].z=u.geometry.coordinates[t].z,l[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,s)}async _createQueryResult(e,t){const s=await e.geometry.project(e.outSpatialReference,t);i(s);const n={geometry:s.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),n}async _createGeometryDescriptor(e,i,s){let n;const o=e.layer.tileInfo.spatialReference;if(i instanceof x?n=await i.project(o,s):(await p([{source:i.spatialReference,dest:o}],{signal:s}),n=m(i,o)),!n)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=x.fromGeometry(n)}async _selectTiles(e,i){const s=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof s)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===s)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==s)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${s}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(s(e.layer.fullExtent))return;const t=new v(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const s=e.x,n=e.y;(s<i.xmin||s>i.xmax||n<i.ymin||n>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/r(e.spatialReference);let s=e.lods[0],n=0;for(let o=1;o<e.lods.length;o++){const t=e.lods[o];Math.abs(t.resolution-i)<Math.abs(s.resolution-i)&&(s=t,n=o)}return n}async _selectTilesFinestContiguous(e,t){const i=I(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,s){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await o(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,s)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),s={},l=e.options.cache,r=e.options.noDataValue,c=i.map((async i=>{if(null==i.id)return;const o=`${e.layer.uid}:${i.id}:${r}`,a=n(l)?l.get(o):null,c=n(a)?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:t});n(l)&&l.put(o,c),s[i.id]=new v(i,c)}));await o(a(c),t),e.populateElevationTiles(s)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const n=new w(null,0,0,0,d()),o=await e(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):l(o.error)}));await o(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const s={},n=e=>{null!=e.id&&(e.id in s?s[e.id]++:(s[e.id]=1,i++))},o=e=>{if(null==e.id)return;const t=s[e.id];1===t?(delete s[e.id],i--):s[e.id]=t-1};e.forEachTileToFetch(n,o);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch((s=>{i<=e.options.maximumAutoTileRequests||(o(s),t.upsampleTile(s)&&(l=!0),n(s))}),o),l););}_selectTilesAutoFinest(e){const t=I(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let s=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?s=!0:t()})),s&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);n(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=r(t.spatialReference);return e.geometry.coordinates.map((s=>{let n=-1;if(s.elevationTile&&s.elevationTile!==e.outsideExtentTile){n=t.lodAt(s.elevationTile.tile.level).resolution*i}return{demResolution:n}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await p([{source:this.spatialReference,dest:e}],{signal:t});const i=new c({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),s=m(i,e);if(!s)return null;const n=this.coordinates.map(((e,t)=>{const i=e.clone(),n=s.points[t];return i.x=n[0],i.y=n[1],i})),o=this.clone(n);return o.spatialReference=e,o}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const s=e.clone(t);return s.spatialReference=i,s};else switch(e.type){case\"point\":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?[new _(i.x,i.y,i.z,i.m)]:s?[new _(i.x,i.y,i.z)]:n?[new _(i.x,i.y,null,i.m)]:[new _(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new u(t[0].x,t[0].y,t[0].z,t[0].m,i):new u(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?i.points.map((e=>new _(e[0],e[1],e[2],e[3]))):s?i.points.map((e=>new _(e[0],e[1],e[2]))):n?i.points.map((e=>new _(e[0],e[1],null,e[2]))):i.points.map((e=>new _(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new c({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new c(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,s=[],n=[],{hasZ:o,hasM:l}=e;let a=0;for(const e of i.paths)if(n.push([a,a+e.length]),a+=e.length,o&&l)for(const t of e)s.push(new _(t[0],t[1],t[2],t[3]));else if(o)for(const t of e)s.push(new _(t[0],t[1],t[2]));else if(l)for(const t of e)s.push(new _(t[0],t[1],null,t[2]));else for(const t of e)s.push(new _(t[0],t[1]));t.coordinates=s,t._exporter=(t,i)=>{const s=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),o=n.map((e=>s.slice(e[0],e[1])));return new h({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class _{constructor(e,t,i=null,s=null,n=null,o=null){this.x=e,this.y=t,this.z=i,this.m=s,this.tile=n,this.elevationTile=o}clone(){return new _(this.x,this.y,this.z,this.m)}}class E{constructor(e,t){this.layer=e,this.options=t}}class R extends E{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>{e.tile=null}));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const s=i.tile;if(!s)continue;const n=i.tile?.id;i.elevationTile||!n||e[n]||(e[n]=s,t.push(s))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class q extends E{constructor(e,t,i,s){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=s}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),s=Math.min(i,e);s<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if(s(i))return-1;for(let s=t.lods.length-1;s>=0;s--){const n=t.lods[s],o=n.resolution*t.size[0],l=n.resolution*t.size[1];if(Math.ceil(i.width/o)*Math.ceil(i.height/l)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let s=!1;e(i,(()=>s=!0)),s?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},s=[];for(const o of e){const e=o.id;e&&!i[e]?(i[e]=o,s.push(o)):t&&t(o)}const n=s.sort(((e,t)=>e.level-t.level));return n.filter(((e,i)=>{for(let s=0;s<i;s++){const i=n[s].extent;if(i&&e.extent&&y(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(s(t))return;const i=this.layer.tileInfo,n=i.lods[e],o=i.tileAt(n.level,t.xmin,t.ymin),l=o.extent;if(s(l))return;const a=n.resolution*i.size[0],r=n.resolution*i.size[1],c=Math.ceil((t.xmax-l[0])/a),u=Math.ceil((t.ymax-l[1])/r);for(let s=0;s<u;s++)for(let e=0;e<c;e++){const t=new w(null,o.level,o.row-s,o.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&y(t,e.extent)))}}function I(e,t=0){let i=e.lods.length-1;if(t>0){const s=t/r(e.spatialReference),n=e.lods.findIndex((e=>e.resolution<s));0===n?i=0:n>0&&(i=n-1)}return i}const A={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{g as ElevationQuery,x as GeometryDescriptor,I as getFinestLodIndex};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}