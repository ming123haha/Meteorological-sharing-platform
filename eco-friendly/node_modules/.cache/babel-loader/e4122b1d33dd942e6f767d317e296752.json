{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport { c as r } from \"../../../../../../chunks/mat3f64.js\";\nimport { c as o } from \"../../../../../../chunks/mat4f64.js\";\nimport { c as e } from \"../../../../../../chunks/vec3f32.js\";\nimport { c as t } from \"../../../../../../chunks/vec3f64.js\";\nimport { PositionAttribute as a } from \"./PositionAttribute.glsl.js\";\nimport { DoublePrecision as s } from \"../util/DoublePrecision.glsl.js\";\nimport { Float3DrawUniform as i } from \"../../shaderModules/Float3DrawUniform.js\";\nimport { Float3PassUniform as m } from \"../../shaderModules/Float3PassUniform.js\";\nimport { glsl as d, NoParameters as n } from \"../../shaderModules/interfaces.js\";\nimport { Matrix3DrawUniform as l } from \"../../shaderModules/Matrix3DrawUniform.js\";\nimport { Matrix3PassUniform as f } from \"../../shaderModules/Matrix3PassUniform.js\";\nimport { Matrix4PassUniform as v } from \"../../shaderModules/Matrix4PassUniform.js\";\n\nfunction F(r, o) {\n  r.include(a);\n  const e = r.vertex;\n  e.include(s, o), r.varyings.add(\"vPositionWorldCameraRelative\", \"vec3\"), r.varyings.add(\"vPosition_view\", \"vec3\"), e.uniforms.add([new m(\"transformWorldFromViewTH\", r => r.transformWorldFromViewTH), new m(\"transformWorldFromViewTL\", r => r.transformWorldFromViewTL), new f(\"transformViewFromCameraRelativeRS\", r => r.transformViewFromCameraRelativeRS), new v(\"transformProjFromView\", r => r.transformProjFromView), new l(\"transformWorldFromModelRS\", r => r.transformWorldFromModelRS), new i(\"transformWorldFromModelTH\", r => r.transformWorldFromModelTH), new i(\"transformWorldFromModelTL\", r => r.transformWorldFromModelTL)]), e.code.add(d`vec3 positionWorldCameraRelative() {\nvec3 rotatedModelPosition = transformWorldFromModelRS * positionModel();\nvec3 transform_CameraRelativeFromModel = dpAdd(\ntransformWorldFromModelTL,\ntransformWorldFromModelTH,\n-transformWorldFromViewTL,\n-transformWorldFromViewTH\n);\nreturn transform_CameraRelativeFromModel + rotatedModelPosition;\n}`), e.code.add(d`\n    void forwardPosition(float fOffset) {\n      vPositionWorldCameraRelative = positionWorldCameraRelative();\n      if (fOffset != 0.0) {\n        vPositionWorldCameraRelative += fOffset * ${o.spherical ? d`normalize(transformWorldFromViewTL + vPositionWorldCameraRelative)` : d`vec3(0.0, 0.0, 1.0)`};\n      }\n\n      vPosition_view = transformViewFromCameraRelativeRS * vPositionWorldCameraRelative;\n      gl_Position = transformProjFromView * vec4(vPosition_view, 1.0);\n    }\n  `), r.fragment.uniforms.add(new m(\"transformWorldFromViewTL\", r => r.transformWorldFromViewTL)), e.code.add(d`vec3 positionWorld() {\nreturn transformWorldFromViewTL + vPositionWorldCameraRelative;\n}`), r.fragment.code.add(d`vec3 positionWorld() {\nreturn transformWorldFromViewTL + vPositionWorldCameraRelative;\n}`);\n}\n\nclass c extends n {\n  constructor() {\n    super(...arguments), this.transformWorldFromViewTH = t(), this.transformWorldFromViewTL = t(), this.transformViewFromCameraRelativeRS = r(), this.transformProjFromView = o();\n  }\n\n}\n\nclass W extends n {\n  constructor() {\n    super(...arguments), this.transformWorldFromModelRS = r(), this.transformWorldFromModelTH = e(), this.transformWorldFromModelTL = e();\n  }\n\n}\n\nexport { F as VertexPosition, W as VertexPositionDrawParameters, c as VertexPositionPassParameters };","map":{"version":3,"names":["c","r","o","e","t","PositionAttribute","a","DoublePrecision","s","Float3DrawUniform","i","Float3PassUniform","m","glsl","d","NoParameters","n","Matrix3DrawUniform","l","Matrix3PassUniform","f","Matrix4PassUniform","v","F","include","vertex","varyings","add","uniforms","transformWorldFromViewTH","transformWorldFromViewTL","transformViewFromCameraRelativeRS","transformProjFromView","transformWorldFromModelRS","transformWorldFromModelTH","transformWorldFromModelTL","code","spherical","fragment","constructor","arguments","W","VertexPosition","VertexPositionDrawParameters","VertexPositionPassParameters"],"sources":["E:/各个学科/论文/毕业论文/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexPosition.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{c as r}from\"../../../../../../chunks/mat3f64.js\";import{c as o}from\"../../../../../../chunks/mat4f64.js\";import{c as e}from\"../../../../../../chunks/vec3f32.js\";import{c as t}from\"../../../../../../chunks/vec3f64.js\";import{PositionAttribute as a}from\"./PositionAttribute.glsl.js\";import{DoublePrecision as s}from\"../util/DoublePrecision.glsl.js\";import{Float3DrawUniform as i}from\"../../shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as m}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as d,NoParameters as n}from\"../../shaderModules/interfaces.js\";import{Matrix3DrawUniform as l}from\"../../shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as f}from\"../../shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as v}from\"../../shaderModules/Matrix4PassUniform.js\";function F(r,o){r.include(a);const e=r.vertex;e.include(s,o),r.varyings.add(\"vPositionWorldCameraRelative\",\"vec3\"),r.varyings.add(\"vPosition_view\",\"vec3\"),e.uniforms.add([new m(\"transformWorldFromViewTH\",(r=>r.transformWorldFromViewTH)),new m(\"transformWorldFromViewTL\",(r=>r.transformWorldFromViewTL)),new f(\"transformViewFromCameraRelativeRS\",(r=>r.transformViewFromCameraRelativeRS)),new v(\"transformProjFromView\",(r=>r.transformProjFromView)),new l(\"transformWorldFromModelRS\",(r=>r.transformWorldFromModelRS)),new i(\"transformWorldFromModelTH\",(r=>r.transformWorldFromModelTH)),new i(\"transformWorldFromModelTL\",(r=>r.transformWorldFromModelTL))]),e.code.add(d`vec3 positionWorldCameraRelative() {\nvec3 rotatedModelPosition = transformWorldFromModelRS * positionModel();\nvec3 transform_CameraRelativeFromModel = dpAdd(\ntransformWorldFromModelTL,\ntransformWorldFromModelTH,\n-transformWorldFromViewTL,\n-transformWorldFromViewTH\n);\nreturn transform_CameraRelativeFromModel + rotatedModelPosition;\n}`),e.code.add(d`\n    void forwardPosition(float fOffset) {\n      vPositionWorldCameraRelative = positionWorldCameraRelative();\n      if (fOffset != 0.0) {\n        vPositionWorldCameraRelative += fOffset * ${o.spherical?d`normalize(transformWorldFromViewTL + vPositionWorldCameraRelative)`:d`vec3(0.0, 0.0, 1.0)`};\n      }\n\n      vPosition_view = transformViewFromCameraRelativeRS * vPositionWorldCameraRelative;\n      gl_Position = transformProjFromView * vec4(vPosition_view, 1.0);\n    }\n  `),r.fragment.uniforms.add(new m(\"transformWorldFromViewTL\",(r=>r.transformWorldFromViewTL))),e.code.add(d`vec3 positionWorld() {\nreturn transformWorldFromViewTL + vPositionWorldCameraRelative;\n}`),r.fragment.code.add(d`vec3 positionWorld() {\nreturn transformWorldFromViewTL + vPositionWorldCameraRelative;\n}`)}class c extends n{constructor(){super(...arguments),this.transformWorldFromViewTH=t(),this.transformWorldFromViewTL=t(),this.transformViewFromCameraRelativeRS=r(),this.transformProjFromView=o()}}class W extends n{constructor(){super(...arguments),this.transformWorldFromModelRS=r(),this.transformWorldFromModelTH=e(),this.transformWorldFromModelTL=e()}}export{F as VertexPosition,W as VertexPositionDrawParameters,c as VertexPositionPassParameters};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}