{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport { lerp as t } from \"../../../core/mathUtils.js\";\nimport { n as e, s as i, d as s } from \"../../../chunks/vec3.js\";\nimport { c as r, d as o } from \"../../../chunks/vec3f64.js\";\nimport { lonLatToSphericalPCPF as a } from \"../../../geometry/projection.js\";\nimport { getReferenceEllipsoid as n } from \"../../../geometry/projectionEllipsoid.js\";\nimport { intersectsSphere as h, NumPlanes as l, PlaneIndex as d } from \"../../../geometry/support/frustum.js\";\nimport { create as c } from \"../../../geometry/support/plane.js\";\nimport { PatchType as u } from \"./interfaces.js\";\nimport { createSphericalGlobePatch as p, updateCornerElevationsSpherical as m, updateEdgesElevationsSpherical as _ } from \"./PatchGeometryFactory.js\";\nimport { Tile as f } from \"./Tile.js\";\n\nclass D extends f {\n  constructor(t, e, i) {\n    super(), this.obb = new Array(8);\n\n    for (let s = 0; s < 8; s++) this.obb[s] = r();\n\n    void 0 !== t && this.init(t, e, i);\n  }\n\n  init(i, s, r) {\n    super.init(i, s, r);\n\n    const n = this.ellipsoid.radius,\n          h = this.extentInRadians[0],\n          l = this.extentInRadians[1],\n          d = this.extentInRadians[2],\n          c = this.extentInRadians[3],\n          u = i[0],\n          p = t(l, c, .5),\n          m = t(h, d, .5),\n          _ = 0 === u ? 0 : Math.min(Math.abs(l), Math.abs(c));\n\n    this._edgeLen = (d - h) * Math.cos(_) * n, this._edgeLen2 = this._edgeLen * this._edgeLen, this._curvatureHeight = n - Math.sqrt(n * n - this._edgeLen2 / 4), a(this.centerAtSeaLevel, m, p, this.ellipsoid.radius);\n    const f = o(this.centerAtSeaLevel);\n    e(f, f), this.up = f, this._updateOBB(), this.updateRadiusAndCenter();\n  }\n\n  updateRadiusAndCenter() {\n    if (0 === this.lij[0]) i(this._center[E.MIDDLE], 0, 0, 0), i(this._center[E.TOP], 0, 0, 0), i(this._center[E.BOTTOM], 0, 0, 0), this.ellipsoid || (this.ellipsoid = n(this.surface.spatialReference)), this._center[E.MIDDLE][3] = this.ellipsoid.radius + this.elevationBounds[1];else {\n      this._updateCenter();\n\n      const t = Math.max(s(this._center[E.MIDDLE], this.obb[0]), s(this._center[E.MIDDLE], this.obb[1]));\n      this._center[E.MIDDLE][3] = Math.sqrt(t);\n    }\n  }\n\n  _isVisible(t) {\n    if (!h(t, this._center[E.MIDDLE])) return !1;\n    if (this.lij[0] < 10) return !0;\n    const e = this.obb;\n\n    for (let i = 0; i < l.NUM; i++) {\n      const s = i === d.NEAR,\n            r = t[i];\n      s && (O[0] = r[0], O[1] = r[1], O[2] = r[2], O[3] = r[3] - this.surface.view.state.camera.near);\n      const o = s ? O : r;\n      let a;\n\n      for (a = 0; a < 8; a++) {\n        const t = e[a];\n        if (o[0] * t[0] + o[1] * t[1] + o[2] * t[2] + o[3] < 0) break;\n      }\n\n      if (8 === a) return !1;\n    }\n\n    return !0;\n  }\n\n  computeElevationBounds() {\n    super.computeElevationBounds(), this._updateOBB();\n  }\n\n  createGeometry() {\n    const t = this._getPatchType(this.lij[1], this.lij[0]);\n\n    p(this.renderData, t), this.setMemoryDirty();\n  }\n\n  _updateOBB() {\n    const t = this.extentInRadians,\n          e = this.obb;\n\n    for (let i = 0; i < 2; i++) {\n      const s = this.elevationBounds[i];\n      let r = 4 * i;\n      a(e[r++], t[0], t[1], this.ellipsoid.radius + s), a(e[r++], t[0], t[3], this.ellipsoid.radius + s), a(e[r++], t[2], t[3], this.ellipsoid.radius + s), a(e[r++], t[2], t[1], this.ellipsoid.radius + s);\n    }\n\n    if (this.surface.isWebMercator) switch (this._getPatchType(this.lij[1], this.lij[0])) {\n      case u.HAS_NORTH_POLE:\n        i(e[1], 0, 0, this.ellipsoid.radius), i(e[2], 0, 0, this.ellipsoid.radius), i(e[5], 0, 0, this.ellipsoid.radius), i(e[6], 0, 0, this.ellipsoid.radius);\n        break;\n\n      case u.HAS_SOUTH_POLE:\n        i(e[0], 0, 0, -this.ellipsoid.radius), i(e[3], 0, 0, -this.ellipsoid.radius), i(e[4], 0, 0, -this.ellipsoid.radius), i(e[7], 0, 0, -this.ellipsoid.radius);\n    }\n  }\n\n  _getPatchType(t, e) {\n    return t === (1 << e) - 1 ? 0 === t ? u.HAS_BOTH_POLES : u.HAS_SOUTH_POLE : 0 === t ? u.HAS_NORTH_POLE : u.REGULAR;\n  }\n\n  intersectsRay(t, e, i, s) {\n    const r = this._center[E.MIDDLE],\n          o = r[3] + i,\n          a = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],\n          n = r[0] - t[0],\n          h = r[1] - t[1],\n          l = r[2] - t[2],\n          d = (n * e[0] + h * e[1] + l * e[2]) / a,\n          c = e[0] * d - n,\n          u = e[1] * d - h,\n          p = e[2] * d - l;\n    return c * c + u * u + p * p < o * o;\n  }\n\n  getDefaultVerticesPerRowOnLevel() {\n    return this.level < L.length ? L[this.level] + 1 : 2;\n  }\n\n  updateCornerElevations() {\n    m(this.renderData);\n  }\n\n  updateEdgeElevations() {\n    _(this.renderData);\n  }\n\n}\n\nconst L = [128, 64, 32, 16, 16, 8, 8, 4],\n      O = c();\nvar E;\n!function (t) {\n  t[t.TOP = 0] = \"TOP\", t[t.MIDDLE = 1] = \"MIDDLE\", t[t.BOTTOM = 2] = \"BOTTOM\";\n}(E || (E = {}));\nexport { E as CenterPosition, D as SphericalPatch };","map":{"version":3,"names":["lerp","t","n","e","s","i","d","c","r","o","lonLatToSphericalPCPF","a","getReferenceEllipsoid","intersectsSphere","h","NumPlanes","l","PlaneIndex","create","PatchType","u","createSphericalGlobePatch","p","updateCornerElevationsSpherical","m","updateEdgesElevationsSpherical","_","Tile","f","D","constructor","obb","Array","init","ellipsoid","radius","extentInRadians","Math","min","abs","_edgeLen","cos","_edgeLen2","_curvatureHeight","sqrt","centerAtSeaLevel","up","_updateOBB","updateRadiusAndCenter","lij","_center","E","MIDDLE","TOP","BOTTOM","surface","spatialReference","elevationBounds","_updateCenter","max","_isVisible","NUM","NEAR","O","view","state","camera","near","computeElevationBounds","createGeometry","_getPatchType","renderData","setMemoryDirty","isWebMercator","HAS_NORTH_POLE","HAS_SOUTH_POLE","HAS_BOTH_POLES","REGULAR","intersectsRay","getDefaultVerticesPerRowOnLevel","level","L","length","updateCornerElevations","updateEdgeElevations","CenterPosition","SphericalPatch"],"sources":["C:/Users/hp/Desktop/eco-friendly atmosphere/Atmosphere/eco-friendly/node_modules/@arcgis/core/views/3d/terrain/SphericalPatch.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{lerp as t}from\"../../../core/mathUtils.js\";import{n as e,s as i,d as s}from\"../../../chunks/vec3.js\";import{c as r,d as o}from\"../../../chunks/vec3f64.js\";import{lonLatToSphericalPCPF as a}from\"../../../geometry/projection.js\";import{getReferenceEllipsoid as n}from\"../../../geometry/projectionEllipsoid.js\";import{intersectsSphere as h,NumPlanes as l,PlaneIndex as d}from\"../../../geometry/support/frustum.js\";import{create as c}from\"../../../geometry/support/plane.js\";import{PatchType as u}from\"./interfaces.js\";import{createSphericalGlobePatch as p,updateCornerElevationsSpherical as m,updateEdgesElevationsSpherical as _}from\"./PatchGeometryFactory.js\";import{Tile as f}from\"./Tile.js\";class D extends f{constructor(t,e,i){super(),this.obb=new Array(8);for(let s=0;s<8;s++)this.obb[s]=r();void 0!==t&&this.init(t,e,i)}init(i,s,r){super.init(i,s,r);const n=this.ellipsoid.radius,h=this.extentInRadians[0],l=this.extentInRadians[1],d=this.extentInRadians[2],c=this.extentInRadians[3],u=i[0],p=t(l,c,.5),m=t(h,d,.5),_=0===u?0:Math.min(Math.abs(l),Math.abs(c));this._edgeLen=(d-h)*Math.cos(_)*n,this._edgeLen2=this._edgeLen*this._edgeLen,this._curvatureHeight=n-Math.sqrt(n*n-this._edgeLen2/4),a(this.centerAtSeaLevel,m,p,this.ellipsoid.radius);const f=o(this.centerAtSeaLevel);e(f,f),this.up=f,this._updateOBB(),this.updateRadiusAndCenter()}updateRadiusAndCenter(){if(0===this.lij[0])i(this._center[E.MIDDLE],0,0,0),i(this._center[E.TOP],0,0,0),i(this._center[E.BOTTOM],0,0,0),this.ellipsoid||(this.ellipsoid=n(this.surface.spatialReference)),this._center[E.MIDDLE][3]=this.ellipsoid.radius+this.elevationBounds[1];else{this._updateCenter();const t=Math.max(s(this._center[E.MIDDLE],this.obb[0]),s(this._center[E.MIDDLE],this.obb[1]));this._center[E.MIDDLE][3]=Math.sqrt(t)}}_isVisible(t){if(!h(t,this._center[E.MIDDLE]))return!1;if(this.lij[0]<10)return!0;const e=this.obb;for(let i=0;i<l.NUM;i++){const s=i===d.NEAR,r=t[i];s&&(O[0]=r[0],O[1]=r[1],O[2]=r[2],O[3]=r[3]-this.surface.view.state.camera.near);const o=s?O:r;let a;for(a=0;a<8;a++){const t=e[a];if(o[0]*t[0]+o[1]*t[1]+o[2]*t[2]+o[3]<0)break}if(8===a)return!1}return!0}computeElevationBounds(){super.computeElevationBounds(),this._updateOBB()}createGeometry(){const t=this._getPatchType(this.lij[1],this.lij[0]);p(this.renderData,t),this.setMemoryDirty()}_updateOBB(){const t=this.extentInRadians,e=this.obb;for(let i=0;i<2;i++){const s=this.elevationBounds[i];let r=4*i;a(e[r++],t[0],t[1],this.ellipsoid.radius+s),a(e[r++],t[0],t[3],this.ellipsoid.radius+s),a(e[r++],t[2],t[3],this.ellipsoid.radius+s),a(e[r++],t[2],t[1],this.ellipsoid.radius+s)}if(this.surface.isWebMercator)switch(this._getPatchType(this.lij[1],this.lij[0])){case u.HAS_NORTH_POLE:i(e[1],0,0,this.ellipsoid.radius),i(e[2],0,0,this.ellipsoid.radius),i(e[5],0,0,this.ellipsoid.radius),i(e[6],0,0,this.ellipsoid.radius);break;case u.HAS_SOUTH_POLE:i(e[0],0,0,-this.ellipsoid.radius),i(e[3],0,0,-this.ellipsoid.radius),i(e[4],0,0,-this.ellipsoid.radius),i(e[7],0,0,-this.ellipsoid.radius)}}_getPatchType(t,e){return t===(1<<e)-1?0===t?u.HAS_BOTH_POLES:u.HAS_SOUTH_POLE:0===t?u.HAS_NORTH_POLE:u.REGULAR}intersectsRay(t,e,i,s){const r=this._center[E.MIDDLE],o=r[3]+i,a=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=r[0]-t[0],h=r[1]-t[1],l=r[2]-t[2],d=(n*e[0]+h*e[1]+l*e[2])/a,c=e[0]*d-n,u=e[1]*d-h,p=e[2]*d-l;return c*c+u*u+p*p<o*o}getDefaultVerticesPerRowOnLevel(){return this.level<L.length?L[this.level]+1:2}updateCornerElevations(){m(this.renderData)}updateEdgeElevations(){_(this.renderData)}}const L=[128,64,32,16,16,8,8,4],O=c();var E;!function(t){t[t.TOP=0]=\"TOP\",t[t.MIDDLE=1]=\"MIDDLE\",t[t.BOTTOM=2]=\"BOTTOM\"}(E||(E={}));export{E as CenterPosition,D as SphericalPatch};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}