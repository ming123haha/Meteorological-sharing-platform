{"version":3,"file":"esri-loader.min.js","sources":["../esm/utils/index.js","../esm/utils/url.js","../esm/utils/css.js","../esm/script.js","../esm/modules.js"],"sourcesContent":["/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nvar isBrowser = typeof window !== 'undefined';\n// allow consuming libraries to provide their own Promise implementations\nexport default {\n    Promise: isBrowser ? window['Promise'] : undefined\n};\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nvar DEFAULT_VERSION = '4.24';\nvar NEXT = 'next';\nexport function parseVersion(version) {\n    if (version.toLowerCase() === NEXT) {\n        return NEXT;\n    }\n    var match = version && version.match(/^(\\d)\\.(\\d+)/);\n    return match && {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10)\n    };\n}\n/**\n * Get the CDN url for a given version\n *\n * @param version Ex: '4.24' or '3.41'. Defaults to the latest 4.x version.\n */\nexport function getCdnUrl(version) {\n    if (version === void 0) { version = DEFAULT_VERSION; }\n    return \"https://js.arcgis.com/\".concat(version, \"/\");\n}\n/**\n * Get the CDN url for a the CSS for a given version and/or theme\n *\n * @param version Ex: '4.24', '3.41', or 'next'. Defaults to the latest 4.x version.\n */\nexport function getCdnCssUrl(version) {\n    if (version === void 0) { version = DEFAULT_VERSION; }\n    var baseUrl = getCdnUrl(version);\n    var parsedVersion = parseVersion(version);\n    if (parsedVersion !== NEXT && parsedVersion.major === 3) {\n        // NOTE: at 3.11 the CSS moved from the /js folder to the root\n        var path = parsedVersion.minor <= 10 ? 'js/' : '';\n        return \"\".concat(baseUrl).concat(path, \"esri/css/esri.css\");\n    }\n    else {\n        // assume 4.x\n        return \"\".concat(baseUrl, \"esri/themes/light/main.css\");\n    }\n}\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { getCdnCssUrl, parseVersion } from './url';\nfunction createStylesheetLink(href) {\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = href;\n    return link;\n}\nfunction insertLink(link, before) {\n    if (before) {\n        // the link should be inserted before a specific node\n        var beforeNode = document.querySelector(before);\n        beforeNode.parentNode.insertBefore(link, beforeNode);\n    }\n    else {\n        // append the link to then end of the head tag\n        document.head.appendChild(link);\n    }\n}\n// check if the css url has been injected or added manually\nfunction getCss(url) {\n    return document.querySelector(\"link[href*=\\\"\".concat(url, \"\\\"]\"));\n}\nfunction getCssUrl(urlOrVersion) {\n    return !urlOrVersion || parseVersion(urlOrVersion)\n        // if it's a valid version string return the CDN URL\n        ? getCdnCssUrl(urlOrVersion)\n        // otherwise assume it's a URL and return that\n        : urlOrVersion;\n}\n// lazy load the CSS needed for the ArcGIS API\nexport function loadCss(urlOrVersion, before) {\n    var url = getCssUrl(urlOrVersion);\n    var link = getCss(url);\n    if (!link) {\n        // create & load the css link\n        link = createStylesheetLink(url);\n        insertLink(link, before);\n    }\n    return link;\n}\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { loadCss } from './utils/css';\nimport utils from './utils/index';\nimport { getCdnUrl } from './utils/url';\nvar defaultOptions = {};\nfunction createScript(url) {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.setAttribute('data-esri-loader', 'loading');\n    return script;\n}\n// add a one-time load handler to script\n// and optionally add a one time error handler as well\nfunction handleScriptLoad(script, callback, errback) {\n    var onScriptError;\n    if (errback) {\n        // set up an error handler as well\n        onScriptError = handleScriptError(script, errback);\n    }\n    var onScriptLoad = function () {\n        // pass the script to the callback\n        callback(script);\n        // remove this event listener\n        script.removeEventListener('load', onScriptLoad, false);\n        if (onScriptError) {\n            // remove the error listener as well\n            script.removeEventListener('error', onScriptError, false);\n        }\n    };\n    script.addEventListener('load', onScriptLoad, false);\n}\n// add a one-time error handler to the script\nfunction handleScriptError(script, callback) {\n    var onScriptError = function (e) {\n        // reject the promise and remove this event listener\n        callback(e.error || new Error(\"There was an error attempting to load \".concat(script.src)));\n        // remove this event listener\n        script.removeEventListener('error', onScriptError, false);\n    };\n    script.addEventListener('error', onScriptError, false);\n    return onScriptError;\n}\n// allow the user to configure default script options rather than passing options to `loadModules` each time\nexport function setDefaultOptions(options) {\n    if (options === void 0) { options = {}; }\n    defaultOptions = options;\n}\n// get the script injected by this library\nexport function getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n    var globalRequire = window['require'];\n    // .on() ensures that it's Dojo's AMD loader\n    return globalRequire && globalRequire.on;\n}\n// load the ArcGIS API on the page\nexport function loadScript(options) {\n    if (options === void 0) { options = {}; }\n    // we would have liked to use spread like { ...defaultOptions, ...options }\n    // but TS would inject a polyfill that would require use to configure rollup w content: 'window'\n    // if we have another occasion to use spread, let's do that and replace this for...in\n    var opts = {};\n    [defaultOptions, options].forEach(function (obj) {\n        for (var prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                opts[prop] = obj[prop];\n            }\n        }\n    });\n    // URL to load\n    var version = opts.version;\n    var url = opts.url || getCdnUrl(version);\n    return new utils.Promise(function (resolve, reject) {\n        var script = getScript();\n        if (script) {\n            // the API is already loaded or in the process of loading...\n            // NOTE: have to test against scr attribute value, not script.src\n            // b/c the latter will return the full url for relative paths\n            var src = script.getAttribute('src');\n            if (src !== url) {\n                // potentially trying to load a different version of the API\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded (\".concat(src, \").\")));\n            }\n            else {\n                if (isLoaded()) {\n                    // the script has already successfully loaded\n                    resolve(script);\n                }\n                else {\n                    // wait for the script to load and then resolve\n                    handleScriptLoad(script, resolve, reject);\n                }\n            }\n        }\n        else {\n            if (isLoaded()) {\n                // the API has been loaded by some other means\n                // potentially trying to load a different version of the API\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded.\"));\n            }\n            else {\n                // this is the first time attempting to load the API\n                var css = opts.css;\n                if (css) {\n                    var useVersion = css === true;\n                    // load the css before loading the script\n                    loadCss(useVersion ? version : css, opts.insertCssBefore);\n                }\n                // create a script object whose source points to the API\n                script = createScript(url);\n                // _currentUrl = url;\n                // once the script is loaded...\n                handleScriptLoad(script, function () {\n                    // update the status of the script\n                    script.setAttribute('data-esri-loader', 'loaded');\n                    // return the script\n                    resolve(script);\n                }, reject);\n                // load the script\n                document.body.appendChild(script);\n            }\n        }\n    });\n}\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { getScript, isLoaded, loadScript } from './script';\nimport utils from './utils/index';\n// wrap Dojo's require() in a promise\nfunction requireModules(modules) {\n    return new utils.Promise(function (resolve, reject) {\n        // If something goes wrong loading the esri/dojo scripts, reject with the error.\n        var errorHandler = window['require'].on('error', reject);\n        window['require'](modules, function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // remove error handler\n            errorHandler.remove();\n            // Resolve with the parameters from dojo require as an array.\n            resolve(args);\n        });\n    });\n}\n// returns a promise that resolves with an array of the required modules\n// also will attempt to lazy load the ArcGIS API if it has not already been loaded\nexport function loadModules(modules, loadScriptOptions) {\n    if (loadScriptOptions === void 0) { loadScriptOptions = {}; }\n    if (!isLoaded()) {\n        // script is not yet loaded, is it in the process of loading?\n        var script = getScript();\n        var src = script && script.getAttribute('src');\n        if (!loadScriptOptions.url && src) {\n            // script is still loading and user did not specify a URL\n            // in this case we want to default to the URL that's being loaded\n            // instead of defaulting to the latest 4.x URL\n            loadScriptOptions.url = src;\n        }\n        // attempt to load the script then load the modules\n        return loadScript(loadScriptOptions).then(function () { return requireModules(modules); });\n    }\n    else {\n        // script is already loaded, just load the modules\n        return requireModules(modules);\n    }\n}\n"],"names":["Promise","window","undefined","DEFAULT_VERSION","NEXT","parseVersion","version","toLowerCase","match","major","parseInt","minor","getCdnUrl","concat","getCssUrl","urlOrVersion","baseUrl","parsedVersion","path","loadCss","before","href","url","link","document","querySelector","createElement","rel","beforeNode","parentNode","insertBefore","head","appendChild","defaultOptions","handleScriptLoad","script","callback","errback","onScriptError","e","error","Error","src","removeEventListener","addEventListener","onScriptLoad","getScript","isLoaded","globalRequire","on","loadScript","options","opts","forEach","obj","prop","Object","prototype","hasOwnProperty","call","utils","resolve","reject","getAttribute","css","insertCssBefore","type","setAttribute","body","requireModules","modules","errorHandler","args","_i","arguments","length","remove","loadScriptOptions","then"],"mappings":"2MAEA,MAEe,CACXA,QAH8B,oBAAXC,OAGEA,OAAgB,aAAIC,GCHzCC,EAAkB,OAClBC,EAAO,OACX,SAAgBC,EAAaC,GACzB,GAAIA,EAAQC,gBAAkBH,EAC1B,OAAOA,EAEPI,EAAQF,GAAWA,EAAQE,MAAM,gBACrC,OAAOA,GAAS,CACZC,MAAOC,SAASF,EAAM,GAAI,IAC1BG,MAAOD,SAASF,EAAM,GAAI,KAQlC,SAAgBI,EAAUN,GAEtB,MAAO,yBAAyBO,OADNP,OAAV,IAAZA,EAAgCH,EACGG,EAAS,KCGpD,SAASQ,EAAUC,GACf,OAAQA,GAAgBV,EAAaU,IDKjCC,EAAUJ,EADYN,OAAV,KADSA,ECDNS,GDEiBZ,EACZG,IACpBW,EAAgBZ,EAAaC,MACXF,GAAgC,IAAxBa,EAAcR,MAOjC,GAAGI,OAAOG,EAAS,+BALtBE,EAAOD,EAAcN,OAAS,GAAK,MAAQ,GACxC,GAAGE,OAAOG,GAASH,OAAOK,EAAM,uBCNrCH,EDDV,IAA6BT,EAErBU,ECER,SAAgBG,EAAQJ,EAAcK,GAClC,IA9B0BC,EA8BtBC,EAAMR,EAAUC,GAChBQ,GAbQD,EAaMA,EAZXE,SAASC,cAAc,eAAgBZ,OAAOS,EAAK,QAkB1D,OALKC,IAhCqBF,EAkCMC,GAjC5BC,EAAOC,SAASE,cAAc,SAC7BC,IAAM,aACXJ,EAAKF,KAAOA,EAGIE,EA4BZA,EA9BGA,GAEeH,EA6BDA,IA1BbQ,EAAaJ,SAASC,cAAcL,IAC7BS,WAAWC,aAAaP,EAAMK,GAIzCJ,SAASO,KAAKC,YAAYT,IAuBvBA,ECtCX,IAGIU,EAAiB,GAUrB,SAASC,EAAiBC,EAAQC,EAAUC,GACxC,IAAIC,EAkBmBH,EAAQC,EAC3BE,EAlBAD,IAiB2BD,EAfeC,EAgB1CC,EAAgB,SAAUC,GAE1BH,EAASG,EAAEC,OAAS,IAAIC,MAAM,yCAAyC5B,OAAOsB,EAAOO,OAErFP,EAAOQ,oBAAoB,QAASL,GAAe,KALhCH,EAfeA,GAsB/BS,iBAAiB,QAASN,GAAe,GAtB5CA,EAuBGA,GArBP,IAAIO,EAAe,WAEfT,EAASD,GAETA,EAAOQ,oBAAoB,OAAQE,GAAc,GAC7CP,GAEAH,EAAOQ,oBAAoB,QAASL,GAAe,IAG3DH,EAAOS,iBAAiB,OAAQC,GAAc,GAmBlD,SAAgBC,IACZ,OAAOtB,SAASC,cAAc,4BAGlC,SAAgBsB,IACZ,IAAIC,EAAgB/C,OAAgB,QAEpC,OAAO+C,GAAiBA,EAAcC,GAG1C,SAAgBC,EAAWC,GAKvB,IAAIC,EAAO,GACX,CAACnB,EALyBkB,OAAV,IAAZA,EAAgC,GAKnBA,GAASE,QAAQ,SAAUC,GACxC,IAAK,IAAIC,KAAQD,EACTE,OAAOC,UAAUC,eAAeC,KAAKL,EAAKC,KAC1CH,EAAKG,GAAQD,EAAIC,MAK7B,IAAIjD,EAAU8C,EAAK9C,QACfgB,EAAM8B,EAAK9B,KAAOV,EAAUN,GAChC,OAAO,IAAIsD,EAAM5D,QAAQ,SAAU6D,EAASC,GACxC,IAvEcxC,EACda,EAsEIA,EAASW,IACTX,GAIIO,EAAMP,EAAO4B,aAAa,UAClBzC,EAERwC,EAAO,IAAIrB,MAAM,oDAAoD5B,OAAO6B,EAAK,QAG7EK,IAEAc,EAAQ1B,GAIRD,EAAiBC,EAAQ0B,EAASC,GAKtCf,IAGAe,EAAO,IAAIrB,MAAM,uDAIbuB,EAAMZ,EAAKY,MAIX7C,GAFyB,IAAR6C,EAEI1D,EAAU0D,EAAKZ,EAAKa,iBAxGvC3C,EA2GgBA,GA1G9Ba,EAASX,SAASE,cAAc,WAC7BwC,KAAO,kBACd/B,EAAOO,IAAMpB,EACba,EAAOgC,aAAa,mBAAoB,WA0G5BjC,EAHAC,EAtGLA,EAyG8B,WAErBA,EAAOgC,aAAa,mBAAoB,UAExCN,EAAQ1B,IACT2B,GAEHtC,SAAS4C,KAAKpC,YAAYG,MCtH1C,SAASkC,EAAeC,GACpB,OAAO,IAAIV,EAAM5D,QAAQ,SAAU6D,EAASC,GAExC,IAAIS,EAAetE,OAAgB,QAAEgD,GAAG,QAASa,GACjD7D,OAAgB,QAAEqE,EAAS,WAEvB,IADA,IAAIE,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAKC,GAAMC,UAAUD,GAGzBF,EAAaK,SAEbf,EAAQW,+BAMpB,SAA4BF,EAASO,GAEjC,QAD0B,IAAtBA,IAAgCA,EAAoB,IACnD9B,IAeD,OAAOsB,EAAeC,GAbtB,IACI5B,GADAP,EAASW,MACOX,EAAO4B,aAAa,OAQxC,OAPKc,EAAkBvD,KAAOoB,IAI1BmC,EAAkBvD,IAAMoB,GAGrBQ,EAAW2B,GAAmBC,KAAK,WAAc,OAAOT,EAAeC,oEDStF,SAAkCnB,GAE9BlB,EAD0BkB,OAAV,IAAZA,EAAgC,GACnBA"}