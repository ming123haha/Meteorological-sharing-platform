"use strict";(self["webpackChunkeco_friendly"]=self["webpackChunkeco_friendly"]||[]).push([[6078],{96078:function(e,t,i){i.r(t),i.d(t,{FeatureServiceSnappingSource:function(){return V}});var r=i(61445),n=i(92698),s=i(30374),o=i(2323),a=i(8693),l=i(18105),d=i(58006),u=(i(15055),i(81653),i(94315),i(77623)),h=i(65554),c=i(85381),p=i(92786);function f(e,t){return(0,p.g)(t.extent,y),(0,p.h)(y,(0,h.s)(g,e.x,e.y,0))}const y=(0,p.c)(),g=(0,c.c)();var v=i(12160);let w=class extends n.Z{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=(0,a.pC)(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort(((e,i)=>f(t,e)-f(t,i))),e}_scaleEnabled(){return(0,v.rs)(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||(0,a.Wi)(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,r=[];for(const{row:n,colFrom:s,colTo:o}of e)for(let e=s;e<=o;e++){const s={id:null,level:i,row:n,col:t.normalizeCol(e)};this.tileInfo.updateTileInfo(s),r.push(s)}return r}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return(0,a.pC)(this.tileInfo)?this.tileInfo.size[0]:256}initialize(){this.own((0,l.YP)((()=>this.view?.state?.viewpoint),(()=>this.notifyChange("tilesCoveringView")),l.Z_))}};(0,r._)([(0,d.Cb)({readOnly:!0})],w.prototype,"tiles",null),(0,r._)([(0,d.Cb)({readOnly:!0})],w.prototype,"_scaleEnabled",null),(0,r._)([(0,d.Cb)({readOnly:!0})],w.prototype,"tilesCoveringView",null),(0,r._)([(0,d.Cb)({readOnly:!0})],w.prototype,"tileInfo",null),(0,r._)([(0,d.Cb)({readOnly:!0})],w.prototype,"tileSize",null),(0,r._)([(0,d.Cb)({constructOnly:!0})],w.prototype,"view",void 0),(0,r._)([(0,d.Cb)({constructOnly:!0})],w.prototype,"layer",void 0),(0,r._)([(0,d.Cb)()],w.prototype,"pointOfInterest",void 0),w=(0,r._)([(0,u.j)("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],w);var b=i(21121);let _=class extends s.r{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=this.effectivePointOfInterest;if((0,a.pC)(t)){const i=e.map((e=>f(t,e)));for(let r=1;r<i.length;r++)if(i[r-1]>i[r])return e.sort(((e,i)=>f(t,e)-f(t,i))),e.slice()}return e}get tilesCoveringView(){return this._filterTiles(this.view.featureTiles?.tiles?.toArray()).map(I)}get tileInfo(){return this.view.featureTiles?.tilingScheme.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get effectivePointOfInterest(){const e=this.pointOfInterest;return(0,a.pC)(e)?e:this.view.pointsOfInterest?.focus.location}initialize(){this.handles.add((0,l.YP)((()=>this.view.featureTiles),(e=>{this.handles.remove(C),e&&this.handles.add(e.addClient(),C)}),l.nn))}_filterTiles(e){return(0,a.Wi)(e)?[]:e.filter((e=>Math.abs(e.measures.screenRect[3]-e.measures.screenRect[1])>m&&e.measures.visibility===b.E.VISIBLE_ON_SURFACE))}};function I({lij:[e,t,i],extent:r}){return{id:`${e}/${t}/${i}`,level:e,row:t,col:i,extent:r}}(0,r._)([(0,d.Cb)({readOnly:!0})],_.prototype,"tiles",null),(0,r._)([(0,d.Cb)({readOnly:!0})],_.prototype,"tilesCoveringView",null),(0,r._)([(0,d.Cb)({readOnly:!0})],_.prototype,"tileInfo",null),(0,r._)([(0,d.Cb)({readOnly:!0})],_.prototype,"tileSize",null),(0,r._)([(0,d.Cb)({constructOnly:!0})],_.prototype,"view",void 0),(0,r._)([(0,d.Cb)()],_.prototype,"pointOfInterest",void 0),(0,r._)([(0,d.Cb)()],_.prototype,"effectivePointOfInterest",null),_=(0,r._)([(0,u.j)("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],_);const m=50,C="feature-tiles";var S=i(68490),O=i(50816),k=i(91407),H=i(74440),T=i(10973);let P=class extends T.q{constructor(e){super(e),this.handles=new O.Z}initialize(){const e=setInterval((()=>this._fetchDebugInfo()),2e3);this.handles.add((0,o.kB)((()=>clearInterval(e))))}destroy(){this.handles.destroy()}getTiles(){if(!this.debugInfo)return[];const e=new Map,t=new Map;this.debugInfo.storedTiles.forEach((t=>{e.set(t.data.id,t.featureCount)})),this.debugInfo.pendingTiles.forEach((i=>{e.set(i.data.id,i.featureCount),t.set(i.data.id,i.state)}));const i=i=>{const r=t.get(i),n=e.get(i)??"?";return r?`${r}:${n}\n${i}`:`store:${n}\n${i}`},r=new Map;return this.debugInfo.storedTiles.forEach((e=>{r.set(e.data.id,e.data)})),this.debugInfo.pendingTiles.forEach((e=>{r.set(e.data.id,e.data)})),Array.from(r.values()).map((e=>({lij:[e.level,e.row,e.col],geometry:k.Z.fromExtent((0,H.HH)(e.extent,this.view.spatialReference)),label:i(e.id)})))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then((e=>{this.debugInfo=e,this.update()}))}};(0,r._)([(0,d.Cb)({constructOnly:!0})],P.prototype,"handle",void 0),P=(0,r._)([(0,u.j)("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],P);var E=i(92454),z=i(83161),M=i(56009);let j=class extends s.r{constructor(e){super(e),this.availability=0,this.workerHandleUpdating=!0,this.editId=0}get updating(){return this.updatingHandles.updating||this.workerHandleUpdating}destroy(){this.workerHandle.destroy()}initialize(){this.workerHandle=new x(this.schedule),this.handles.add([this.workerHandle.on("notify-updating",(({updating:e})=>this.workerHandleUpdating=e)),this.workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))])}async setup(e,t){const i=this._serviceInfoFromLayer(e.layer);if((0,a.Wi)(i))return;const r={configuration:this._convertConfiguration(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON()};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("setup",r,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=this._convertConfiguration(e);await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("configure",i,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const i={distance:e.distance,point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),types:e.types,filter:(0,a.pC)(e.filter)?e.filter.createQuery().toJSON():null};return this.workerHandle.invoke(i,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:(0,a.pC)(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("updateTiles",i,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){const i=this.editId++,r={id:i};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("beginApplyEdits",r,t));const n=await this.updatingHandles.addPromise((0,E.Hl)(e.result,t)),s={id:i,edits:{addedFeatures:n.addedFeatures?.map((({objectId:e})=>e))??[],deletedFeatures:n.deletedFeatures?.map((({objectId:e,globalId:t})=>({objectId:e,globalId:t})))??[],updatedFeatures:n.updatedFeatures?.map((({objectId:e})=>e))??[]}};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("endApplyEdits",s,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this.workerHandle.invokeMethod("getDebugInfo",{},e)}_convertConfiguration(e){return{filter:(0,a.pC)(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters}}_serviceInfoFromLayer(e){return"multipatch"===e.geometryType||"mesh"===e.geometryType?null:{url:e.parsedUrl.path,fields:e.fields.map((e=>e.toJSON())),geometryType:M.Mk.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}};(0,r._)([(0,d.Cb)({constructOnly:!0})],j.prototype,"schedule",void 0),(0,r._)([(0,d.Cb)({readOnly:!0})],j.prototype,"updating",null),(0,r._)([(0,d.Cb)({readOnly:!0})],j.prototype,"availability",void 0),(0,r._)([(0,d.Cb)()],j.prototype,"workerHandleUpdating",void 0),j=(0,r._)([(0,u.j)("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],j);class x extends z.q{constructor(e){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated"})}}var F=i(49304),N=i(44435),R=i(86052);let Z=class extends n.Z{constructor(e){super(e),this.pointOfInterest=null}get tiles(){return[{id:"0/0/0",level:0,row:0,col:0,extent:(0,H.al)(-1e8,-1e8,1e8,1e8)}]}get tileInfo(){return new R.Z({origin:new F.Z({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new N.Z({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}};(0,r._)([(0,d.Cb)({readOnly:!0})],Z.prototype,"tiles",null),(0,r._)([(0,d.Cb)({readOnly:!0})],Z.prototype,"tileInfo",null),(0,r._)([(0,d.Cb)({readOnly:!0})],Z.prototype,"tileSize",null),(0,r._)([(0,d.Cb)({constructOnly:!0})],Z.prototype,"layer",void 0),(0,r._)([(0,d.Cb)()],Z.prototype,"pointOfInterest",void 0),Z=(0,r._)([(0,u.j)("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],Z);var U=i(98274);let V=class extends((0,s.p)(n.Z)){constructor(e){super(e)}get updateTilesParameters(){return{tiles:this.tilesOfInterest.tiles,tileInfo:this.tilesOfInterest.tileInfo,tileSize:this.tilesOfInterest.tileSize}}get updating(){return this.workerHandle.updating||this.updatingHandles.updating}get configuration(){return{filter:this.layer.createQuery(),customParameters:this.layer.customParameters}}get availability(){return this.workerHandle.availability}get layer(){return this.layerSource.layer}initialize(){const e=this.view;if((0,a.pC)(e))switch(e.type){case"2d":this.tilesOfInterest=new w({view:e,layer:this.layer}),this.workerHandle=new j;break;case"3d":{const t=e.resourceController;this.tilesOfInterest=new _({view:e}),this.workerHandle=new j({schedule:e=>t.schedule(e)});break}}else this.tilesOfInterest=new Z({layer:this.layer}),this.workerHandle=new j;this.handles.add([(0,o.ed)(this.workerHandle)]),this.workerHandle.setup({layer:this.layer,spatialReference:this.spatialReference,configuration:this.configuration},null),this.updatingHandles.add((()=>this.updateTilesParameters),(()=>this.workerHandle.updateTiles(this.updateTilesParameters,null)),l.nn),this.handles.add([(0,l.YP)((()=>this.configuration),(e=>this.workerHandle.configure(e,null)),l.Z_)]),(0,a.pC)(e)&&this.handles.add((0,l.YP)((()=>U.Z.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES),(t=>{t&&!this.debug?(this.debug=new P({view:e,handle:this.workerHandle}),this.handles.add((0,o.ed)(this.debug),"debug")):!t&&this.debug&&this.handles.remove("debug")}),l.nn)),this.handles.add(this.layerSource.layer.on("apply-edits",(e=>{this.workerHandle.applyEdits(e,null)})))}refresh(){this.workerHandle.refresh(null)}async fetchCandidates(e,t){return this.tilesOfInterest.pointOfInterest=e.coordinateHelper.vectorToPoint(e.point),(await this.workerHandle.fetchCandidates({...e,filter:null},t)).candidates.map((t=>(0,S.X)(t,e.coordinateHelper,e.elevationInfo)))}getDebugInfo(e){return this.workerHandle.getDebugInfo(e)}};(0,r._)([(0,d.Cb)({constructOnly:!0})],V.prototype,"spatialReference",void 0),(0,r._)([(0,d.Cb)({constructOnly:!0})],V.prototype,"layerSource",void 0),(0,r._)([(0,d.Cb)({constructOnly:!0})],V.prototype,"view",void 0),(0,r._)([(0,d.Cb)()],V.prototype,"tilesOfInterest",void 0),(0,r._)([(0,d.Cb)({readOnly:!0})],V.prototype,"updateTilesParameters",null),(0,r._)([(0,d.Cb)({readOnly:!0})],V.prototype,"updating",null),(0,r._)([(0,d.Cb)({readOnly:!0})],V.prototype,"configuration",null),(0,r._)([(0,d.Cb)({readOnly:!0})],V.prototype,"availability",null),V=(0,r._)([(0,u.j)("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],V)},68490:function(e,t,i){i.d(t,{X:function(){return s}});var r=i(23007),n=i(83186);function s(e,t,i){switch(e.type){case"edge":return new r.L({coordinateHelper:t,edgeStart:t.pointToVector(e.start),edgeEnd:t.pointToVector(e.end),targetPoint:t.pointToVector(e.target),objectId:e.objectId,elevationInfo:i});case"vertex":return new n.x({coordinateHelper:t,targetPoint:t.pointToVector(e.target),objectId:e.objectId,elevationInfo:i})}}},10973:function(e,t,i){i.d(t,{q:function(){return g}});var r=i(61445),n=i(36945),s=i(39264),o=i(92698),a=i(67752),l=i(8693),d=i(58006),u=(i(15055),i(81653),i(94315),i(77623)),h=i(84692),c=i(46078),p=i(27800),f=i(98444);const y=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let g=class extends o.Z{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=y.map((e=>new c.Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=e=>{if((0,l.pC)(e.label))return e.label;let t=e.lij.toString();return(0,l.pC)(e.loadPriority)&&(t+=` (${e.loadPriority})`),t},t=this.getTiles(),i=new Array,r=new Set((this._labels.size,this._labels.keys()));t.forEach(((o,d)=>{const u=o.lij.toString();r.delete(u);const c=o.lij[0],y=o.geometry;if(this.enablePolygons&&!this._polygons.has(u)){const e=new s.Z({geometry:y,symbol:this._symbols[c%this._symbols.length]});this._polygons.set(u,e),i.push(e)}if(this.enableLabels){const r=e(o),c=d/(t.length-1),g=(0,a.t7)(0,200,c),v=(0,a.t7)(20,6,c)/.75,w=(0,l.pC)(o.loadPriority)&&o.loadPriority>=t.length,b=new n.Z([g,w?0:g,w?0:g]),_="3d"===this.view.type?()=>new h.Z({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new f.Z({text:r,halo:{color:"white",size:1/.75},material:{color:b},size:v})]}):()=>new p.Z({text:r,haloColor:"white",haloSize:1/.75,color:b,size:v});if(this._labels.has(u)){const e=this._labels.get(u),t=_();((0,l.Wi)(e.symbol)||JSON.stringify(t)!==JSON.stringify(e.symbol))&&(e.symbol=t)}else{const e=new s.Z({geometry:y.extent.center,symbol:_()});this._labels.set(u,e),i.push(e)}}}));const o=new Array;r.forEach((e=>{this._polygons.has(e)&&(o.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(o.push(this._labels.get(e)),this._labels.delete(e))})),this.view.graphics.removeMany(o),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,r._)([(0,d.Cb)({constructOnly:!0})],g.prototype,"view",void 0),(0,r._)([(0,d.Cb)({readOnly:!0})],g.prototype,"updating",void 0),(0,r._)([(0,d.Cb)()],g.prototype,"enabled",null),g=(0,r._)([(0,u.j)("esri.views.support.TileTreeDebugger")],g)}}]);
//# sourceMappingURL=6078.77e88297.js.map