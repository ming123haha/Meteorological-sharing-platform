"use strict";(self["webpackChunkeco_friendly"]=self["webpackChunkeco_friendly"]||[]).push([[2800],{32800:function(e,t,i){i.r(t),i.d(t,{default:function(){return T}});var a=i(61445),l=i(94848),r=i(22130),n=i(93622),s=i(8693),o=i(74823),c=i(92454),h=i(99659),p=i(58006),u=(i(15055),i(81653),i(94315),i(62269)),d=i(77623),m=i(3407),v=i(36421),y=i(76791),f=i(20694),_=i(35894),b=i(44283),w=i(12799),g=i(6277);const S=n.Z.getLogger("esri.layers.ElevationLayer");let C=class extends((0,y.Z)((0,f.Y)((0,_.q)((0,b.I)((0,o.R)(v.Z)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=(0,g.w)()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=(0,s.RY)(this._lercDecoder)}set minScale(e){this.constructed&&S.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&S.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=(0,s.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new r.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(c.r9).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,i,a){const r=(0,s.pC)((a=a||{signal:null}).signal)?a.signal:a.signal=(new AbortController).signal,n={responseType:"array-buffer",signal:r},o={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,i,a))).then((()=>(0,l["default"])(this.getTileUrl(e,t,i),n))).then((e=>this._lercDecoder.decode(e.data,o,r))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,i){const a=!this.tilemapCache&&this.supportsBlankTile,l=(0,h.B7)({...this.parsedUrl.query,blankTile:!a&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${i}${l?"?"+l:""}`}async queryElevation(e,t){const{ElevationQuery:a}=await i.e(2489).then(i.bind(i,22489));return(0,c.k_)(t),(new a).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:a}=await i.e(2489).then(i.bind(i,22489));return(0,c.k_)(t),(new a).createSampler(this,e,t)}_fetchTileAvailability(e,t,i,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,a):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},i=await(0,l["default"])(this.parsedUrl.path,t);i.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i.data,this.read(i.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,a._)([(0,p.Cb)({json:{read:{source:"copyrightText"}}})],C.prototype,"copyright",void 0),(0,a._)([(0,p.Cb)({readOnly:!0,type:m.Z})],C.prototype,"heightModelInfo",void 0),(0,a._)([(0,p.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],C.prototype,"path",void 0),(0,a._)([(0,p.Cb)({type:["show","hide"]})],C.prototype,"listMode",void 0),(0,a._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],C.prototype,"minScale",null),(0,a._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],C.prototype,"maxScale",null),(0,a._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],C.prototype,"opacity",void 0),(0,a._)([(0,p.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],C.prototype,"operationalLayerType",void 0),(0,a._)([(0,p.Cb)()],C.prototype,"sourceJSON",void 0),(0,a._)([(0,p.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],C.prototype,"type",void 0),(0,a._)([(0,p.Cb)(w.HQ)],C.prototype,"url",void 0),(0,a._)([(0,p.Cb)()],C.prototype,"version",void 0),(0,a._)([(0,u.r)("version",["currentVersion"])],C.prototype,"readVersion",null),C=(0,a._)([(0,d.j)("esri.layers.ElevationLayer")],C),C.prototype.fetchTile.__isDefault__=!0;const T=C},76791:function(e,t,i){i.d(t,{Z:function(){return h}});i(26699);var a=i(61445),l=(i(80388),i(58006)),r=(i(15055),i(81653),i(94315),i(62269)),n=i(77623),s=i(22674),o=i(7534),c=i(87429);const h=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.includes("Tilemap")?new o.y({layer:this}):null}};return(0,a._)([(0,l.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,a._)([(0,l.Cb)()],t.prototype,"minScale",void 0),(0,a._)([(0,r.r)("service","minScale")],t.prototype,"readMinScale",null),(0,a._)([(0,l.Cb)()],t.prototype,"maxScale",void 0),(0,a._)([(0,r.r)("service","maxScale")],t.prototype,"readMaxScale",null),(0,a._)([(0,l.Cb)({type:c.Z})],t.prototype,"spatialReference",void 0),(0,a._)([(0,l.Cb)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,a._)([(0,l.Cb)(s.h)],t.prototype,"tileInfo",void 0),(0,a._)([(0,l.Cb)()],t.prototype,"tilemapCache",void 0),(0,a._)([(0,r.r)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),(0,a._)([(0,l.Cb)()],t.prototype,"version",void 0),t=(0,a._)([(0,n.j)("esri.layers.mixins.ArcGISCachedService")],t),t}},7534:function(e,t,i){i.d(t,{y:function(){return A}});var a,l=i(61445),r=i(94848),n=i(92698),s=i(37484),o=i(22130),c=i(30374),h=i(93622),p=i(4860),u=i(88071),d=i(92454),m=i(18105),v=i(3047),y=i(99659),f=i(58006),_=i(15055),b=(i(81653),i(4524)),w=i(77623),g=(i(48675),i(3462),i(37380),i(1118),i(86232));class S{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,l=i>>3,r=this._tileAvailabilityBitSet;return l<0||l>r.length?"unknown":r[l]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,l=!0;const r=Math.ceil(t*i/8),n=new Uint8Array(r);let s=0;for(let o=0;o<e.length;o++){const t=o%8;e[o]?(l=!1,n[s]|=1<<t):a=!1,7===t&&++s}l?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(e,t){const i=e.service.request||r["default"],{row:a,col:l,width:n,height:s}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(T(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:l,width:n,height:s},valid:!0,data:(0,_.a9)(n*s,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==a||e.location.left!==l||e.location.width!==n||e.location.height!==s))throw new o.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:l,width:n,height:s}});return S.fromJSON(e)}))}static fromJSON(e){S._validateJSON(e);const t=new S;return t.location=Object.freeze((0,g.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new o.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function C(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}function T(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}const D=h.Z.getLogger("esri.layers.support.TilemapCache");let A=a=class extends((0,c.p)(n.Z)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*s.Y8.MEGABYTES,this.request=r["default"],this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new p.Z(this.cacheByteSize),this.own([(0,m.YP)((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition())),(0,m.YP)((()=>this.layer?.tileInfo?.lods),(e=>this._initializeAvailableLevels(e)),m.tX)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(D.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Promise.reject(new o.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const l=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,l);if(r)return Promise.resolve(r);const n=a&&a.signal;return a={...a,signal:null},new Promise(((e,t)=>{(0,d.fu)(n,(()=>t((0,d.zE)())));const i=C(l);let r=this._pendingTilemapRequests[i];if(!r){r=S.fromDefinition(l,a).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch((e=>e)).then((a=>{if(a instanceof S){const l=a.getAvailability(t,i);if("unavailable"===l)throw new o.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return l}if((0,d.D_)(a))throw a;return"unknown"})):Promise.reject(new o.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,a,l){a.level=e,a.row=t,a.col=i;const r=this.layer.tileInfo;r.updateTileInfo(a);const n=this.fetchAvailability(e,t,i,l).catch((e=>{if((0,d.D_)(e))throw e;if(r.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e}));return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,l,n),n}async _fetchAvailabilityUpsamplePrefetch(e,t,i,l,r,n){if(!this._prefetchingEnabled)return;const s=`prefetch-${e}`;if(this.handles.has(s))return;const o=new AbortController;n.then((()=>o.abort()),(()=>o.abort()));let c=!1;const h={remove(){c||(c=!0,o.abort())}};if(this.handles.add(h,s),await(0,v.MU)(10,o.signal).catch((()=>{})),c||(c=!0,this.handles.remove(s)),(0,d.Hc)(o))return;const p={id:e,level:t,row:i,col:l},u={...r,signal:o.signal},m=this.layer.tileInfo;for(let d=0;a._prefetches.length<a._maxPrefetch&&m.upsampleTile(p);++d){const e=this.fetchAvailability(p.level,p.row,p.col,u);a._prefetches.push(e);const t=()=>{a._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,y.B7)({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const l=C(a);return this._tilemapCache.get(l)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};A._maxPrefetch=4,A._prefetches=new u.Z({initialSize:a._maxPrefetch}),(0,l._)([(0,f.Cb)({constructOnly:!0,type:Number})],A.prototype,"levels",void 0),(0,l._)([(0,b.p)("levels")],A.prototype,"castLevels",null),(0,l._)([(0,f.Cb)({readOnly:!0,type:Number})],A.prototype,"size",null),(0,l._)([(0,f.Cb)({constructOnly:!0,type:Number})],A.prototype,"cacheByteSize",void 0),(0,l._)([(0,f.Cb)({constructOnly:!0})],A.prototype,"layer",void 0),(0,l._)([(0,f.Cb)({constructOnly:!0})],A.prototype,"request",void 0),A=a=(0,l._)([(0,w.j)("esri.layers.support.TilemapCache")],A)},22674:function(e,t,i){i.d(t,{d:function(){return r},h:function(){return l}});var a=i(86052);const l={type:a.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,l){if(!e)return null;const{minScale:r,maxScale:n,minLOD:s,maxLOD:o}=t;if(null!=s&&null!=o)return l&&l.ignoreMinMaxLOD?a.Z.fromJSON(e):a.Z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=s&&e<=o))});if(0!==r&&0!==n){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,l=n?t(n):-1/0;return a.Z.fromJSON({...e,lods:e.lods.filter((e=>{const a=t(e.scale);return a<=i&&a>=l}))})}return a.Z.fromJSON(e)}}}]);
//# sourceMappingURL=2800.518cf972.js.map