"use strict";(self["webpackChunkeco_friendly"]=self["webpackChunkeco_friendly"]||[]).push([[7092],{17092:function(e,t,s){s.r(t),s.d(t,{TerrainTileTree3DDebugger:function(){return h}});var i=s(61445),l=(s(80388),s(18105)),r=(s(93622),s(94315),s(15055),s(81653),s(10771),s(77623)),o=s(74440),n=s(10973),a=s(91407);let h=class extends n.q{constructor(e){super(e),this.enablePolygons=!1}initialize(){(0,l.YP)((()=>this.enabled),(e=>this.view.basemapTerrain.renderPatchBorders=e),l.nn)}getTiles(){return this.view.basemapTerrain.test.getRenderedTiles().map((e=>({...e,geometry:a.Z.fromExtent((0,o.HH)(e.extent,this.view.basemapTerrain.spatialReference))})))}};h=(0,i._)([(0,r.j)("esri.views.3d.layers.support.TerrainTileTree3DDebugger")],h)},10973:function(e,t,s){s.d(t,{q:function(){return u}});var i=s(61445),l=s(36945),r=s(39264),o=s(92698),n=s(67752),a=s(8693),h=s(58006),b=(s(15055),s(81653),s(94315),s(77623)),c=s(84692),y=s(46078),p=s(27800),d=s(98444);const g=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let u=class extends o.Z{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=g.map((e=>new y.Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=e=>{if((0,a.pC)(e.label))return e.label;let t=e.lij.toString();return(0,a.pC)(e.loadPriority)&&(t+=` (${e.loadPriority})`),t},t=this.getTiles(),s=new Array,i=new Set((this._labels.size,this._labels.keys()));t.forEach(((o,h)=>{const b=o.lij.toString();i.delete(b);const y=o.lij[0],g=o.geometry;if(this.enablePolygons&&!this._polygons.has(b)){const e=new r.Z({geometry:g,symbol:this._symbols[y%this._symbols.length]});this._polygons.set(b,e),s.push(e)}if(this.enableLabels){const i=e(o),y=h/(t.length-1),u=(0,n.t7)(0,200,y),_=(0,n.t7)(20,6,y)/.75,w=(0,a.pC)(o.loadPriority)&&o.loadPriority>=t.length,m=new l.Z([u,w?0:u,w?0:u]),f="3d"===this.view.type?()=>new c.Z({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new d.Z({text:i,halo:{color:"white",size:1/.75},material:{color:m},size:_})]}):()=>new p.Z({text:i,haloColor:"white",haloSize:1/.75,color:m,size:_});if(this._labels.has(b)){const e=this._labels.get(b),t=f();((0,a.Wi)(e.symbol)||JSON.stringify(t)!==JSON.stringify(e.symbol))&&(e.symbol=t)}else{const e=new r.Z({geometry:g.extent.center,symbol:f()});this._labels.set(b,e),s.push(e)}}}));const o=new Array;i.forEach((e=>{this._polygons.has(e)&&(o.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(o.push(this._labels.get(e)),this._labels.delete(e))})),this.view.graphics.removeMany(o),this.view.graphics.addMany(s)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,i._)([(0,h.Cb)({constructOnly:!0})],u.prototype,"view",void 0),(0,i._)([(0,h.Cb)({readOnly:!0})],u.prototype,"updating",void 0),(0,i._)([(0,h.Cb)()],u.prototype,"enabled",null),u=(0,i._)([(0,b.j)("esri.views.support.TileTreeDebugger")],u)}}]);
//# sourceMappingURL=7092.eff24d39.js.map