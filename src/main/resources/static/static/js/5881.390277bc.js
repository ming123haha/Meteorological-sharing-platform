"use strict";(self["webpackChunkeco_friendly"]=self["webpackChunkeco_friendly"]||[]).push([[5881],{85881:function(e,r,t){t.r(r),t.d(r,{default:function(){return a}});var s=t(61445),o=t(22130),n=t(74823),i=t(3047),u=t(58006),l=(t(15055),t(81653),t(94315),t(77623)),p=t(36421),d=t(44283);let y=class extends((0,d.I)((0,n.R)(p.Z))){constructor(e){super(e),this.resourceInfo=null,this.type="unsupported"}initialize(){this.addResolvingPromise(new Promise(((e,r)=>{(0,i.Os)((()=>{const e=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let t="Unsupported layer type";e&&(t+=" "+e),r(new o.Z("layer:unsupported-layer-type",t,{layerType:e}))}))})))}read(e,r){const t={resourceInfo:e};null!=e.id&&(t.id=e.id),null!=e.title&&(t.title=e.title),super.read(t,r)}write(e){return Object.assign(e||{},this.resourceInfo,{id:this.id})}};(0,s._)([(0,u.Cb)({readOnly:!0})],y.prototype,"resourceInfo",void 0),(0,s._)([(0,u.Cb)({type:["show","hide"]})],y.prototype,"listMode",void 0),(0,s._)([(0,u.Cb)({json:{read:!1},readOnly:!0,value:"unsupported"})],y.prototype,"type",void 0),y=(0,s._)([(0,l.j)("esri.layers.UnsupportedLayer")],y);const a=y}}]);
//# sourceMappingURL=5881.390277bc.js.map