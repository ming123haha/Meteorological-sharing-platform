"use strict";(self["webpackChunkeco_friendly"]=self["webpackChunkeco_friendly"]||[]).push([[5161],{55161:function(e,s,t){t.r(s),t.d(s,{I3STreeDebugger:function(){return y}});var l=t(61445),i=(t(80388),t(8693)),o=t(58006),n=(t(15055),t(81653),t(94315),t(77623)),r=t(51802),a=t(94370),h=t(65554),c=t(74674),p=t(47608),u=t(10973),b=t(91407);let y=class extends u.q{constructor(e){super(e)}getTiles(){const e=this.lv.getVisibleNodes(),s=this.view.renderSpatialReference,t=this.nodeSR;return e.map((e=>d(e,s,t))).sort(((e,s)=>e.lij[0]===s.lij[0]?e.label>s.label?-1:1:e.lij[0]-s.lij[0]))}};function d(e,s,t){const l=e.serviceObb;if((0,i.Wi)(l)||(0,i.Wi)(s))return null;(0,r.k)(g,l.quaternion),(0,h.c)(_,l.center),(0,p.CM)(_,t,0,_,s,0,1),g[12]=_[0],g[13]=_[1],g[14]=_[2];const o=[[],[],[]];(0,h.c)(_,l.halfSize),(0,h.m)(_,_,g),(0,p.CM)(_,s,0,_,t,0,1),o[0].push([_[0],_[1]]),(0,h.c)(_,l.halfSize),_[0]=-_[0],(0,h.m)(_,_,g),(0,p.CM)(_,s,0,_,t,0,1),o[0].push([_[0],_[1]]),(0,h.c)(_,l.halfSize),_[0]=-_[0],_[1]=-_[1],(0,h.m)(_,_,g),(0,p.CM)(_,s,0,_,t,0,1),o[0].push([_[0],_[1]]),(0,h.c)(_,l.halfSize),_[1]=-_[1],(0,h.m)(_,_,g),(0,p.CM)(_,s,0,_,t,0,1),o[0].push([_[0],_[1]]),o[1].push(o[0][0]),o[1].push(o[0][1]),(0,h.c)(_,l.halfSize),_[0]=-_[0],_[2]=-_[2],(0,h.m)(_,_,g),(0,p.CM)(_,s,0,_,t,0,1),o[1].push([_[0],_[1]]),(0,h.c)(_,l.halfSize),_[2]=-_[2],(0,h.m)(_,_,g),(0,p.CM)(_,s,0,_,t,0,1),o[1].push([_[0],_[1]]),o[2].push(o[0][0]),o[2].push(o[0][3]),(0,h.c)(_,l.halfSize),_[1]=-_[1],_[2]=-_[2],(0,h.m)(_,_,g),(0,p.CM)(_,s,0,_,t,0,1),o[2].push([_[0],_[1]]),o[2].push(o[1][3]);const n=new b.Z({rings:o,spatialReference:t});return{lij:[e.level,e.childCount,0],label:e.id,geometry:n}}(0,l._)([(0,o.Cb)({constructOnly:!0})],y.prototype,"lv",void 0),(0,l._)([(0,o.Cb)({constructOnly:!0})],y.prototype,"nodeSR",void 0),y=(0,l._)([(0,n.j)("esri.views.3d.layers.support.I3STreeDebugger")],y);const g=(0,a.c)(),_=(0,c.c)()},10973:function(e,s,t){t.d(s,{q:function(){return g}});var l=t(61445),i=t(36945),o=t(39264),n=t(92698),r=t(67752),a=t(8693),h=t(58006),c=(t(15055),t(81653),t(94315),t(77623)),p=t(84692),u=t(46078),b=t(27800),y=t(98444);const d=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let g=class extends n.Z{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=d.map((e=>new u.Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=e=>{if((0,a.pC)(e.label))return e.label;let s=e.lij.toString();return(0,a.pC)(e.loadPriority)&&(s+=` (${e.loadPriority})`),s},s=this.getTiles(),t=new Array,l=new Set((this._labels.size,this._labels.keys()));s.forEach(((n,h)=>{const c=n.lij.toString();l.delete(c);const u=n.lij[0],d=n.geometry;if(this.enablePolygons&&!this._polygons.has(c)){const e=new o.Z({geometry:d,symbol:this._symbols[u%this._symbols.length]});this._polygons.set(c,e),t.push(e)}if(this.enableLabels){const l=e(n),u=h/(s.length-1),g=(0,r.t7)(0,200,u),_=(0,r.t7)(20,6,u)/.75,f=(0,a.pC)(n.loadPriority)&&n.loadPriority>=s.length,m=new i.Z([g,f?0:g,f?0:g]),w="3d"===this.view.type?()=>new p.Z({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new y.Z({text:l,halo:{color:"white",size:1/.75},material:{color:m},size:_})]}):()=>new b.Z({text:l,haloColor:"white",haloSize:1/.75,color:m,size:_});if(this._labels.has(c)){const e=this._labels.get(c),s=w();((0,a.Wi)(e.symbol)||JSON.stringify(s)!==JSON.stringify(e.symbol))&&(e.symbol=s)}else{const e=new o.Z({geometry:d.extent.center,symbol:w()});this._labels.set(c,e),t.push(e)}}}));const n=new Array;l.forEach((e=>{this._polygons.has(e)&&(n.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(n.push(this._labels.get(e)),this._labels.delete(e))})),this.view.graphics.removeMany(n),this.view.graphics.addMany(t)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,l._)([(0,h.Cb)({constructOnly:!0})],g.prototype,"view",void 0),(0,l._)([(0,h.Cb)({readOnly:!0})],g.prototype,"updating",void 0),(0,l._)([(0,h.Cb)()],g.prototype,"enabled",null),g=(0,l._)([(0,c.j)("esri.views.support.TileTreeDebugger")],g)}}]);
//# sourceMappingURL=5161.ab338f02.js.map